

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Feb 23 18:29:32 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.05
    19                           ; Generated 20/12/2018 GMT
    20                           ; 
    21                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0005                     _PORTA	set	5
   209  0006                     _PORTB	set	6
   210  001E                     _ADRESH	set	30
   211  0014                     _SSPCONbits	set	20
   212  000C                     _PIR1bits	set	12
   213  0013                     _SSPBUF	set	19
   214  0014                     _SSPCON	set	20
   215  001F                     _ADCON0bits	set	31
   216  0063                     _SSPIF	set	99
   217  005E                     _PEIE	set	94
   218  005F                     _GIE	set	95
   219  0086                     _TRISB	set	134
   220  0085                     _TRISA	set	133
   221  0094                     _SSPSTATbits	set	148
   222  008F                     _OSCCONbits	set	143
   223  0091                     _SSPCON2bits	set	145
   224  0094                     _SSPSTAT	set	148
   225  0093                     _SSPADD	set	147
   226  0091                     _SSPCON2	set	145
   227  009F                     _ADCON1bits	set	159
   228  0086                     _TRISBbits	set	134
   229  0089                     _TRISEbits	set	137
   230  0085                     _TRISAbits	set	133
   231  04A0                     _BF	set	1184
   232  0463                     _SSPIE	set	1123
   233  048B                     _RCEN	set	1163
   234  043C                     _TRISC4	set	1084
   235  043B                     _TRISC3	set	1083
   236  0189                     _ANSELH	set	393
   237  0188                     _ANSEL	set	392
   238  0189                     _ANSELHbits	set	393
   239  0188                     _ANSELbits	set	392
   240                           
   241                           ; #config settings
   242  0000                     
   243                           	psect	cinit
   244  000F                     start_initialization:	
   245  000F                     __initialization:	
   246                           
   247                           ; Clear objects allocated to COMMON
   248  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   249  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   250  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   251  0012                     end_of_initialization:	
   252                           ;End of C runtime variable initialization code
   253                           
   254  0012                     __end_of__initialization:	
   255  0012  0183               	clrf	3
   256  0013  120A  118A  2968   	ljmp	_main	;jump to C main() function
   257                           
   258                           	psect	bssCOMMON
   259  0076                     __pbssCOMMON:	
   260  0076                     _ADC:	
   261  0076                     	ds	1
   262  0077                     _key:	
   263  0077                     	ds	1
   264  0078                     _z:	
   265  0078                     	ds	1
   266                           
   267                           	psect	cstackCOMMON
   268  0070                     __pcstackCOMMON:	
   269  0070                     ?_setup:	
   270  0070                     ?_ADC_channel:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?_initADC:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ?_initOscilador:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?_isr:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ??_isr:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_main:	
   286                           ; 1 bytes @ 0x0
   287                           
   288                           
   289                           ; 1 bytes @ 0x0
   290  0070                     	ds	3
   291  0073                     ??_ADC_channel:	
   292  0073                     ??_initADC:	
   293                           ; 1 bytes @ 0x3
   294                           
   295  0073                     ?_I2C_Slave_Init:	
   296                           ; 1 bytes @ 0x3
   297                           
   298  0073                     ??_initOscilador:	
   299                           ; 1 bytes @ 0x3
   300                           
   301  0073                     I2C_Slave_Init@address:	
   302                           ; 1 bytes @ 0x3
   303                           
   304                           
   305                           ; 2 bytes @ 0x3
   306  0073                     	ds	1
   307  0074                     initADC@a:	
   308                           
   309                           ; 1 bytes @ 0x4
   310  0074                     	ds	1
   311  0075                     ??_I2C_Slave_Init:	
   312  0075                     ADC_channel@a:	
   313                           ; 1 bytes @ 0x5
   314                           
   315  0075                     initOscilador@option:	
   316                           ; 1 bytes @ 0x5
   317                           
   318                           
   319                           ; 1 bytes @ 0x5
   320  0075                     	ds	1
   321  0076                     ??_setup:	
   322                           
   323                           	psect	cstackBANK0
   324  0020                     __pcstackBANK0:	
   325                           ; 1 bytes @ 0x6
   326                           
   327  0020                     ??_main:	
   328                           
   329                           ; 1 bytes @ 0x0
   330  0020                     	ds	3
   331                           
   332                           	psect	maintext
   333  0168                     __pmaintext:	
   334 ;;
   335 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   336 ;;
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 70 in file "MainHall.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;		None
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : B00/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   353 ;;      Params:         0       0       0       0       0
   354 ;;      Locals:         0       0       0       0       0
   355 ;;      Temps:          0       3       0       0       0
   356 ;;      Totals:         0       3       0       0       0
   357 ;;Total ram usage:        3 bytes
   358 ;; Hardware stack levels required when called:    3
   359 ;; This function calls:
   360 ;;		_setup
   361 ;; This function is called by:
   362 ;;		Startup code after reset
   363 ;; This function uses a non-reentrant model
   364 ;;
   365                           
   366                           
   367                           ;psect for function _main
   368  0168                     _main:	
   369                           
   370                           ;MainHall.c: 71:     setup();
   371                           
   372                           ;incstack = 0
   373                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   374  0168  120A  118A  2198  120A  118A  	fcall	_setup
   375  016D                     l1056:	
   376                           
   377                           ;MainHall.c: 73:         ADCON0bits.GO = 1;
   378  016D  1283               	bcf	3,5	;RP0=0, select bank0
   379  016E  1303               	bcf	3,6	;RP1=0, select bank0
   380  016F  149F               	bsf	31,1	;volatile
   381  0170                     l164:	
   382                           ;MainHall.c: 76:         }
   383                           
   384                           ;MainHall.c: 74:         while(ADCON0bits.GO == 1){
   385                           
   386                           
   387                           ;MainHall.c: 74:         while(ADCON0bits.GO == 1){
   388  0170  1283               	bcf	3,5	;RP0=0, select bank0
   389  0171  1303               	bcf	3,6	;RP1=0, select bank0
   390  0172  1C9F               	btfss	31,1	;volatile
   391  0173  2976               	goto	l1058
   392  0174  0000               	nop	;# 
   393  0175  2970               	goto	l164
   394  0176                     l1058:	
   395                           
   396                           ;MainHall.c: 77:         ADC = ADRESH;
   397  0176  081E               	movf	30,w	;volatile
   398  0177  00A0               	movwf	??_main
   399  0178  0820               	movf	??_main,w
   400  0179  00F6               	movwf	_ADC
   401                           
   402                           ;MainHall.c: 78:         PORTB = key;
   403  017A  0877               	movf	_key,w
   404  017B  0086               	movwf	6	;volatile
   405                           
   406                           ;MainHall.c: 79:         _delay((unsigned long)((200)*(8000000/4000.0)));
   407  017C  3003               	movlw	3
   408  017D  1283               	bcf	3,5	;RP0=0, select bank0
   409  017E  1303               	bcf	3,6	;RP1=0, select bank0
   410  017F  00A2               	movwf	??_main+2
   411  0180  3008               	movlw	8
   412  0181  00A1               	movwf	??_main+1
   413  0182  3076               	movlw	118
   414  0183  00A0               	movwf	??_main
   415  0184                     u237:	
   416  0184  0BA0               	decfsz	??_main,f
   417  0185  2984               	goto	u237
   418  0186  0BA1               	decfsz	??_main+1,f
   419  0187  2984               	goto	u237
   420  0188  0BA2               	decfsz	??_main+2,f
   421  0189  2984               	goto	u237
   422  018A  0000               	nop
   423                           
   424                           ;MainHall.c: 80:         if (ADC > 134 | ADC < 120){
   425  018B  3087               	movlw	135
   426  018C  0276               	subwf	_ADC,w
   427  018D  1803               	skipnc
   428  018E  2993               	goto	l169
   429  018F  3078               	movlw	120
   430  0190  0276               	subwf	_ADC,w
   431  0191  1803               	skipnc
   432  0192  2996               	goto	l1062
   433  0193                     l169:	
   434                           
   435                           ;MainHall.c: 81:             key = 1;
   436  0193  01F7               	clrf	_key
   437  0194  0AF7               	incf	_key,f
   438                           
   439                           ;MainHall.c: 82:         } else {
   440  0195  296D               	goto	l1056
   441  0196                     l1062:	
   442                           
   443                           ;MainHall.c: 83:             key = 0;
   444  0196  01F7               	clrf	_key
   445  0197  296D               	goto	l1056
   446  0198                     __end_of_main:	
   447                           
   448                           	psect	text1
   449  0198                     __ptext1:	
   450 ;; *************** function _setup *****************
   451 ;; Defined at:
   452 ;;		line 88 in file "MainHall.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      void 
   459 ;; Registers used:
   460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   466 ;;      Params:         0       0       0       0       0
   467 ;;      Locals:         0       0       0       0       0
   468 ;;      Temps:          0       0       0       0       0
   469 ;;      Totals:         0       0       0       0       0
   470 ;;Total ram usage:        0 bytes
   471 ;; Hardware stack levels used:    1
   472 ;; Hardware stack levels required when called:    2
   473 ;; This function calls:
   474 ;;		_ADC_channel
   475 ;;		_I2C_Slave_Init
   476 ;;		_initADC
   477 ;;		_initOscilador
   478 ;; This function is called by:
   479 ;;		_main
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           
   484                           ;psect for function _setup
   485  0198                     _setup:	
   486                           
   487                           ;MainHall.c: 89:     initOscilador(7);
   488                           
   489                           ;incstack = 0
   490                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   491  0198  3007               	movlw	7
   492  0199  120A  118A  20C2  120A  118A  	fcall	_initOscilador
   493                           
   494                           ;MainHall.c: 90:     ANSEL = 0;
   495  019E  1683               	bsf	3,5	;RP0=1, select bank3
   496  019F  1703               	bsf	3,6	;RP1=1, select bank3
   497  01A0  0188               	clrf	8	;volatile
   498                           
   499                           ;MainHall.c: 91:     ANSELH = 0;
   500  01A1  0189               	clrf	9	;volatile
   501                           
   502                           ;MainHall.c: 92:     TRISA = 0;
   503  01A2  1683               	bsf	3,5	;RP0=1, select bank1
   504  01A3  1303               	bcf	3,6	;RP1=0, select bank1
   505  01A4  0185               	clrf	5	;volatile
   506                           
   507                           ;MainHall.c: 93:     TRISB = 0;
   508  01A5  0186               	clrf	6	;volatile
   509                           
   510                           ;MainHall.c: 94:     PORTA = 0;
   511  01A6  1283               	bcf	3,5	;RP0=0, select bank0
   512  01A7  1303               	bcf	3,6	;RP1=0, select bank0
   513  01A8  0185               	clrf	5	;volatile
   514                           
   515                           ;MainHall.c: 95:     PORTB = 0;
   516  01A9  0186               	clrf	6	;volatile
   517                           
   518                           ;MainHall.c: 96:     ADC_channel(0);
   519  01AA  3000               	movlw	0
   520  01AB  120A  118A  2016  120A  118A  	fcall	_ADC_channel
   521                           
   522                           ;MainHall.c: 97:     initADC(2);
   523  01B0  3002               	movlw	2
   524  01B1  120A  118A  21D7  120A  118A  	fcall	_initADC
   525                           
   526                           ;MainHall.c: 98:     I2C_Slave_Init(0x10);
   527  01B6  3010               	movlw	16
   528  01B7  00F3               	movwf	I2C_Slave_Init@address
   529  01B8  3000               	movlw	0
   530  01B9  00F4               	movwf	I2C_Slave_Init@address+1
   531  01BA  120A  118A  21BE   	fcall	_I2C_Slave_Init
   532  01BD  0008               	return
   533  01BE                     __end_of_setup:	
   534                           
   535                           	psect	text2
   536  00C2                     __ptext2:	
   537 ;; *************** function _initOscilador *****************
   538 ;; Defined at:
   539 ;;		line 11 in file "./Oscilador.h"
   540 ;; Parameters:    Size  Location     Type
   541 ;;  option          1    wreg     unsigned char 
   542 ;; Auto vars:     Size  Location     Type
   543 ;;  option          1    5[COMMON] unsigned char 
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         0       0       0       0       0
   554 ;;      Locals:         1       0       0       0       0
   555 ;;      Temps:          2       0       0       0       0
   556 ;;      Totals:         3       0       0       0       0
   557 ;;Total ram usage:        3 bytes
   558 ;; Hardware stack levels used:    1
   559 ;; Hardware stack levels required when called:    1
   560 ;; This function calls:
   561 ;;		Nothing
   562 ;; This function is called by:
   563 ;;		_setup
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           
   568                           ;psect for function _initOscilador
   569  00C2                     _initOscilador:	
   570                           
   571                           ;incstack = 0
   572                           ; Regs used in _initOscilador: [wreg-fsr0h+status,2+status,0]
   573                           ;initOscilador@option stored from wreg
   574  00C2  00F5               	movwf	initOscilador@option
   575                           
   576                           ;./Oscilador.h: 13: 
   577  00C3  28F3               	goto	l820
   578  00C4                     l800:	
   579                           
   580                           ;./Oscilador.h: 16:         case 3:
   581  00C4  308F               	movlw	-113
   582  00C5  1683               	bsf	3,5	;RP0=1, select bank1
   583  00C6  1303               	bcf	3,6	;RP1=0, select bank1
   584  00C7  058F               	andwf	15,f	;volatile
   585                           
   586                           ;./Oscilador.h: 17: 
   587  00C8  2915               	goto	l125
   588  00C9                     l802:	
   589                           
   590                           ;./Oscilador.h: 20:         case 4:
   591  00C9  1683               	bsf	3,5	;RP0=1, select bank1
   592  00CA  1303               	bcf	3,6	;RP1=0, select bank1
   593  00CB  080F               	movf	15,w	;volatile
   594  00CC  398F               	andlw	-113
   595  00CD  3810               	iorlw	16
   596  00CE  28EC               	goto	L5
   597  00CF                     l804:	
   598                           ;./Oscilador.h: 21: 
   599                           
   600                           
   601                           ;./Oscilador.h: 24:         case 5:
   602  00CF  1683               	bsf	3,5	;RP0=1, select bank1
   603  00D0  1303               	bcf	3,6	;RP1=0, select bank1
   604  00D1  080F               	movf	15,w	;volatile
   605  00D2  398F               	andlw	-113
   606  00D3  3820               	iorlw	32
   607  00D4  28EC               	goto	L5
   608  00D5                     l806:	
   609                           ;./Oscilador.h: 25: 
   610                           
   611                           
   612                           ;./Oscilador.h: 28:         case 6:
   613  00D5  1683               	bsf	3,5	;RP0=1, select bank1
   614  00D6  1303               	bcf	3,6	;RP1=0, select bank1
   615  00D7  080F               	movf	15,w	;volatile
   616  00D8  398F               	andlw	-113
   617  00D9  3830               	iorlw	48
   618  00DA  28EC               	goto	L5
   619  00DB                     l808:	
   620                           ;./Oscilador.h: 29: 
   621                           
   622                           
   623                           ;./Oscilador.h: 32:         case 7:
   624  00DB  1683               	bsf	3,5	;RP0=1, select bank1
   625  00DC  1303               	bcf	3,6	;RP1=0, select bank1
   626  00DD  080F               	movf	15,w	;volatile
   627  00DE  398F               	andlw	-113
   628  00DF  3840               	iorlw	64
   629  00E0  28EC               	goto	L5
   630  00E1                     l810:	
   631                           ;./Oscilador.h: 33: 
   632                           
   633                           
   634                           ;./Oscilador.h: 36:         default:
   635  00E1  1683               	bsf	3,5	;RP0=1, select bank1
   636  00E2  1303               	bcf	3,6	;RP1=0, select bank1
   637  00E3  080F               	movf	15,w	;volatile
   638  00E4  398F               	andlw	-113
   639  00E5  3850               	iorlw	80
   640  00E6  28EC               	goto	L5
   641  00E7                     l812:	
   642                           ;./Oscilador.h: 37: 
   643                           
   644                           
   645                           ;./Oscilador.h: 40:     }
   646  00E7  1683               	bsf	3,5	;RP0=1, select bank1
   647  00E8  1303               	bcf	3,6	;RP1=0, select bank1
   648  00E9  080F               	movf	15,w	;volatile
   649  00EA  398F               	andlw	-113
   650  00EB  3860               	iorlw	96
   651  00EC                     L5:	
   652  00EC  008F               	movwf	15	;volatile
   653                           
   654                           ;./Oscilador.h: 41:     OSCCONbits.SCS = 1;
   655  00ED  2915               	goto	l125
   656  00EE                     l814:	
   657  00EE                     l816:	
   658  00EE  3070               	movlw	112
   659  00EF  1683               	bsf	3,5	;RP0=1, select bank1
   660  00F0  1303               	bcf	3,6	;RP1=0, select bank1
   661  00F1  048F               	iorwf	15,f	;volatile
   662  00F2  2915               	goto	l125
   663  00F3                     l820:	
   664  00F3  0875               	movf	initOscilador@option,w
   665  00F4  00F3               	movwf	??_initOscilador
   666  00F5  01F4               	clrf	??_initOscilador+1
   667                           
   668                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   669                           ; Switch size 1, requested type "simple"
   670                           ; Number of cases is 1, Range of values is 0 to 0
   671                           ; switch strategies available:
   672                           ; Name         Instructions Cycles
   673                           ; simple_byte            4     3 (average)
   674                           ; direct_byte           11     8 (fixed)
   675                           ; jumptable            260     6 (fixed)
   676                           ;	Chosen strategy is simple_byte
   677  00F6  0874               	movf	??_initOscilador+1,w
   678  00F7  3A00               	xorlw	0	; case 0
   679  00F8  1903               	skipnz
   680  00F9  28FB               	goto	l1104
   681  00FA  28EE               	goto	l816
   682  00FB                     l1104:	
   683                           
   684                           ; Switch size 1, requested type "simple"
   685                           ; Number of cases is 8, Range of values is 0 to 7
   686                           ; switch strategies available:
   687                           ; Name         Instructions Cycles
   688                           ; simple_byte           25    13 (average)
   689                           ; direct_byte           32     8 (fixed)
   690                           ; jumptable            260     6 (fixed)
   691                           ;	Chosen strategy is simple_byte
   692  00FB  0873               	movf	??_initOscilador,w
   693  00FC  3A00               	xorlw	0	; case 0
   694  00FD  1903               	skipnz
   695  00FE  28C4               	goto	l800
   696  00FF  3A01               	xorlw	1	; case 1
   697  0100  1903               	skipnz
   698  0101  28C9               	goto	l802
   699  0102  3A03               	xorlw	3	; case 2
   700  0103  1903               	skipnz
   701  0104  28CF               	goto	l804
   702  0105  3A01               	xorlw	1	; case 3
   703  0106  1903               	skipnz
   704  0107  28D5               	goto	l806
   705  0108  3A07               	xorlw	7	; case 4
   706  0109  1903               	skipnz
   707  010A  28DB               	goto	l808
   708  010B  3A01               	xorlw	1	; case 5
   709  010C  1903               	skipnz
   710  010D  28E1               	goto	l810
   711  010E  3A03               	xorlw	3	; case 6
   712  010F  1903               	skipnz
   713  0110  28E7               	goto	l812
   714  0111  3A01               	xorlw	1	; case 7
   715  0112  1903               	skipnz
   716  0113  28EE               	goto	l814
   717  0114  28EE               	goto	l816
   718  0115                     l125:	
   719  0115  140F               	bsf	15,0	;volatile
   720  0116  0008               	return
   721  0117                     __end_of_initOscilador:	
   722                           
   723                           	psect	text3
   724  01D7                     __ptext3:	
   725 ;; *************** function _initADC *****************
   726 ;; Defined at:
   727 ;;		line 68 in file "./ADC.h"
   728 ;; Parameters:    Size  Location     Type
   729 ;;  a               1    wreg     unsigned char 
   730 ;; Auto vars:     Size  Location     Type
   731 ;;  a               1    4[COMMON] unsigned char 
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, status,2, status,0
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   741 ;;      Params:         0       0       0       0       0
   742 ;;      Locals:         1       0       0       0       0
   743 ;;      Temps:          1       0       0       0       0
   744 ;;      Totals:         2       0       0       0       0
   745 ;;Total ram usage:        2 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; Hardware stack levels required when called:    1
   748 ;; This function calls:
   749 ;;		Nothing
   750 ;; This function is called by:
   751 ;;		_setup
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           
   756                           ;psect for function _initADC
   757  01D7                     _initADC:	
   758                           
   759                           ;incstack = 0
   760                           ; Regs used in _initADC: [wreg+status,2+status,0]
   761                           ;initADC@a stored from wreg
   762  01D7  00F4               	movwf	initADC@a
   763                           
   764                           ;./ADC.h: 69:     ADCON1bits.ADFM = 0;
   765  01D8  1683               	bsf	3,5	;RP0=1, select bank1
   766  01D9  1303               	bcf	3,6	;RP1=0, select bank1
   767  01DA  139F               	bcf	31,7	;volatile
   768                           
   769                           ;./ADC.h: 70:     ADCON1bits.VCFG0 = 0;
   770  01DB  121F               	bcf	31,4	;volatile
   771                           
   772                           ;./ADC.h: 71:     ADCON1bits.VCFG1 = 0;
   773  01DC  129F               	bcf	31,5	;volatile
   774                           
   775                           ;./ADC.h: 72:     ADCON0bits.ADCS = a;
   776  01DD  0874               	movf	initADC@a,w
   777  01DE  00F3               	movwf	??_initADC
   778  01DF  0EF3               	swapf	??_initADC,f
   779  01E0  0DF3               	rlf	??_initADC,f
   780  01E1  0DF3               	rlf	??_initADC,f
   781  01E2  1283               	bcf	3,5	;RP0=0, select bank0
   782  01E3  1303               	bcf	3,6	;RP1=0, select bank0
   783  01E4  081F               	movf	31,w	;volatile
   784  01E5  0673               	xorwf	??_initADC,w
   785  01E6  393F               	andlw	-193
   786  01E7  0673               	xorwf	??_initADC,w
   787  01E8  009F               	movwf	31	;volatile
   788                           
   789                           ;./ADC.h: 73:     ADCON0bits.ADON = 1;
   790  01E9  141F               	bsf	31,0	;volatile
   791  01EA  0008               	return
   792  01EB                     __end_of_initADC:	
   793                           
   794                           	psect	text4
   795  01BE                     __ptext4:	
   796 ;; *************** function _I2C_Slave_Init *****************
   797 ;; Defined at:
   798 ;;		line 94 in file "./I2C.h"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  address         2    3[COMMON] short 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;		None
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		wreg
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   812 ;;      Params:         2       0       0       0       0
   813 ;;      Locals:         0       0       0       0       0
   814 ;;      Temps:          0       0       0       0       0
   815 ;;      Totals:         2       0       0       0       0
   816 ;;Total ram usage:        2 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; Hardware stack levels required when called:    1
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_setup
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           
   827                           ;psect for function _I2C_Slave_Init
   828  01BE                     _I2C_Slave_Init:	
   829                           
   830                           ;./I2C.h: 94: void I2C_Slave_Init(short address);./I2C.h: 95: {;./I2C.h: 96:     SSPADD 
      +                          = address;
   831                           
   832                           ;incstack = 0
   833                           ; Regs used in _I2C_Slave_Init: [wreg]
   834  01BE  0873               	movf	I2C_Slave_Init@address,w
   835  01BF  1683               	bsf	3,5	;RP0=1, select bank1
   836  01C0  1303               	bcf	3,6	;RP1=0, select bank1
   837  01C1  0093               	movwf	19	;volatile
   838                           
   839                           ;./I2C.h: 97:     SSPCON = 0x36;
   840  01C2  3036               	movlw	54
   841  01C3  1283               	bcf	3,5	;RP0=0, select bank0
   842  01C4  1303               	bcf	3,6	;RP1=0, select bank0
   843  01C5  0094               	movwf	20	;volatile
   844                           
   845                           ;./I2C.h: 98:     SSPSTAT = 0x80;
   846  01C6  3080               	movlw	128
   847  01C7  1683               	bsf	3,5	;RP0=1, select bank1
   848  01C8  1303               	bcf	3,6	;RP1=0, select bank1
   849  01C9  0094               	movwf	20	;volatile
   850                           
   851                           ;./I2C.h: 99:     SSPCON2 = 0x01;
   852  01CA  3001               	movlw	1
   853  01CB  0091               	movwf	17	;volatile
   854                           
   855                           ;./I2C.h: 100:     TRISC3 = 1;
   856  01CC  1587               	bsf	7,3	;volatile
   857                           
   858                           ;./I2C.h: 101:     TRISC4 = 1;
   859  01CD  1607               	bsf	7,4	;volatile
   860                           
   861                           ;./I2C.h: 102:     GIE = 1;
   862  01CE  178B               	bsf	11,7	;volatile
   863                           
   864                           ;./I2C.h: 103:     PEIE = 1;
   865  01CF  170B               	bsf	11,6	;volatile
   866                           
   867                           ;./I2C.h: 104:     SSPIF = 0;
   868  01D0  1283               	bcf	3,5	;RP0=0, select bank0
   869  01D1  1303               	bcf	3,6	;RP1=0, select bank0
   870  01D2  118C               	bcf	12,3	;volatile
   871                           
   872                           ;./I2C.h: 105:     SSPIE = 1;
   873  01D3  1683               	bsf	3,5	;RP0=1, select bank1
   874  01D4  1303               	bcf	3,6	;RP1=0, select bank1
   875  01D5  158C               	bsf	12,3	;volatile
   876  01D6  0008               	return
   877  01D7                     __end_of_I2C_Slave_Init:	
   878                           
   879                           	psect	text5
   880  0016                     __ptext5:	
   881 ;; *************** function _ADC_channel *****************
   882 ;; Defined at:
   883 ;;		line 1 in file "./ADC.h"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  a               1    wreg     unsigned char 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  a               1    5[COMMON] unsigned char 
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   897 ;;      Params:         0       0       0       0       0
   898 ;;      Locals:         1       0       0       0       0
   899 ;;      Temps:          2       0       0       0       0
   900 ;;      Totals:         3       0       0       0       0
   901 ;;Total ram usage:        3 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; Hardware stack levels required when called:    1
   904 ;; This function calls:
   905 ;;		Nothing
   906 ;; This function is called by:
   907 ;;		_setup
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           
   912                           ;psect for function _ADC_channel
   913  0016                     _ADC_channel:	
   914                           
   915                           ;incstack = 0
   916                           ; Regs used in _ADC_channel: [wreg-fsr0h+status,2+status,0]
   917                           ;ADC_channel@a stored from wreg
   918  0016  00F5               	movwf	ADC_channel@a
   919                           
   920                           ;./ADC.h: 3:     ADCON0bits.ADCS = a;
   921  0017  0875               	movf	ADC_channel@a,w
   922  0018  00F3               	movwf	??_ADC_channel
   923  0019  0EF3               	swapf	??_ADC_channel,f
   924  001A  0DF3               	rlf	??_ADC_channel,f
   925  001B  0DF3               	rlf	??_ADC_channel,f
   926  001C  1283               	bcf	3,5	;RP0=0, select bank0
   927  001D  1303               	bcf	3,6	;RP1=0, select bank0
   928  001E  081F               	movf	31,w	;volatile
   929  001F  0673               	xorwf	??_ADC_channel,w
   930  0020  393F               	andlw	-193
   931  0021  0673               	xorwf	??_ADC_channel,w
   932  0022  009F               	movwf	31	;volatile
   933                           
   934                           ;./ADC.h: 4:     switch (a){
   935  0023  288D               	goto	l772
   936  0024                     l72:	
   937                           ;./ADC.h: 5:         case 0:
   938                           
   939                           
   940                           ;./ADC.h: 6:             ANSELbits.ANS0 = 1;
   941  0024  1683               	bsf	3,5	;RP0=1, select bank3
   942  0025  1703               	bsf	3,6	;RP1=1, select bank3
   943  0026  1408               	bsf	8,0	;volatile
   944                           
   945                           ;./ADC.h: 7:             TRISAbits.TRISA0 = 1;
   946  0027  1683               	bsf	3,5	;RP0=1, select bank1
   947  0028  1303               	bcf	3,6	;RP1=0, select bank1
   948  0029  1405               	bsf	5,0	;volatile
   949                           
   950                           ;./ADC.h: 8:             break;
   951  002A  0008               	return
   952  002B                     l74:	
   953                           ;./ADC.h: 9:         case 1:
   954                           
   955                           
   956                           ;./ADC.h: 10:             ANSELbits.ANS1 = 1;
   957  002B  1683               	bsf	3,5	;RP0=1, select bank3
   958  002C  1703               	bsf	3,6	;RP1=1, select bank3
   959  002D  1488               	bsf	8,1	;volatile
   960                           
   961                           ;./ADC.h: 11:             TRISAbits.TRISA1 = 1;
   962  002E  1683               	bsf	3,5	;RP0=1, select bank1
   963  002F  1303               	bcf	3,6	;RP1=0, select bank1
   964  0030  1485               	bsf	5,1	;volatile
   965                           
   966                           ;./ADC.h: 12:             break;
   967  0031  0008               	return
   968  0032                     l75:	
   969                           ;./ADC.h: 13:         case 2:
   970                           
   971                           
   972                           ;./ADC.h: 14:             ANSELbits.ANS2 = 1;
   973  0032  1683               	bsf	3,5	;RP0=1, select bank3
   974  0033  1703               	bsf	3,6	;RP1=1, select bank3
   975  0034  1508               	bsf	8,2	;volatile
   976                           
   977                           ;./ADC.h: 15:             TRISAbits.TRISA2 = 1;
   978  0035  1683               	bsf	3,5	;RP0=1, select bank1
   979  0036  1303               	bcf	3,6	;RP1=0, select bank1
   980  0037  1505               	bsf	5,2	;volatile
   981                           
   982                           ;./ADC.h: 16:             break;
   983  0038  0008               	return
   984  0039                     l76:	
   985                           ;./ADC.h: 17:         case 3:
   986                           
   987                           
   988                           ;./ADC.h: 18:             ANSELbits.ANS3 = 1;
   989  0039  1683               	bsf	3,5	;RP0=1, select bank3
   990  003A  1703               	bsf	3,6	;RP1=1, select bank3
   991  003B  1588               	bsf	8,3	;volatile
   992                           
   993                           ;./ADC.h: 19:             TRISAbits.TRISA3 = 1;
   994  003C  1683               	bsf	3,5	;RP0=1, select bank1
   995  003D  1303               	bcf	3,6	;RP1=0, select bank1
   996  003E  1585               	bsf	5,3	;volatile
   997                           
   998                           ;./ADC.h: 20:             break;
   999  003F  0008               	return
  1000  0040                     l77:	
  1001                           ;./ADC.h: 21:         case 4:
  1002                           
  1003                           
  1004                           ;./ADC.h: 22:             ANSELbits.ANS4 = 1;
  1005  0040  1683               	bsf	3,5	;RP0=1, select bank3
  1006  0041  1703               	bsf	3,6	;RP1=1, select bank3
  1007  0042  1608               	bsf	8,4	;volatile
  1008                           
  1009                           ;./ADC.h: 23:             TRISAbits.TRISA5 = 1;
  1010  0043  1683               	bsf	3,5	;RP0=1, select bank1
  1011  0044  1303               	bcf	3,6	;RP1=0, select bank1
  1012  0045  1685               	bsf	5,5	;volatile
  1013                           
  1014                           ;./ADC.h: 24:             break;
  1015  0046  0008               	return
  1016  0047                     l78:	
  1017                           ;./ADC.h: 25:         case 5:
  1018                           
  1019                           
  1020                           ;./ADC.h: 26:             ANSELbits.ANS5 = 1;
  1021  0047  1683               	bsf	3,5	;RP0=1, select bank3
  1022  0048  1703               	bsf	3,6	;RP1=1, select bank3
  1023  0049  1688               	bsf	8,5	;volatile
  1024                           
  1025                           ;./ADC.h: 27:             TRISEbits.TRISE0 = 1;
  1026  004A  1683               	bsf	3,5	;RP0=1, select bank1
  1027  004B  1303               	bcf	3,6	;RP1=0, select bank1
  1028  004C  1409               	bsf	9,0	;volatile
  1029                           
  1030                           ;./ADC.h: 28:             break;
  1031  004D  0008               	return
  1032  004E                     l79:	
  1033                           ;./ADC.h: 29:         case 6:
  1034                           
  1035                           
  1036                           ;./ADC.h: 30:             ANSELbits.ANS6 = 1;
  1037  004E  1683               	bsf	3,5	;RP0=1, select bank3
  1038  004F  1703               	bsf	3,6	;RP1=1, select bank3
  1039  0050  1708               	bsf	8,6	;volatile
  1040                           
  1041                           ;./ADC.h: 31:             TRISEbits.TRISE1 = 1;
  1042  0051  1683               	bsf	3,5	;RP0=1, select bank1
  1043  0052  1303               	bcf	3,6	;RP1=0, select bank1
  1044  0053  1489               	bsf	9,1	;volatile
  1045                           
  1046                           ;./ADC.h: 32:             break;
  1047  0054  0008               	return
  1048  0055                     l80:	
  1049                           ;./ADC.h: 33:         case 7:
  1050                           
  1051                           
  1052                           ;./ADC.h: 34:             ANSELbits.ANS7 = 1;
  1053  0055  1683               	bsf	3,5	;RP0=1, select bank3
  1054  0056  1703               	bsf	3,6	;RP1=1, select bank3
  1055  0057  1788               	bsf	8,7	;volatile
  1056                           
  1057                           ;./ADC.h: 35:             TRISEbits.TRISE2 = 1;
  1058  0058  1683               	bsf	3,5	;RP0=1, select bank1
  1059  0059  1303               	bcf	3,6	;RP1=0, select bank1
  1060  005A  1509               	bsf	9,2	;volatile
  1061                           
  1062                           ;./ADC.h: 36:             break;
  1063  005B  0008               	return
  1064  005C                     l81:	
  1065                           ;./ADC.h: 37:         case 8:
  1066                           
  1067                           
  1068                           ;./ADC.h: 38:             ANSELHbits.ANS8 = 1;
  1069  005C  1683               	bsf	3,5	;RP0=1, select bank3
  1070  005D  1703               	bsf	3,6	;RP1=1, select bank3
  1071  005E  1409               	bsf	9,0	;volatile
  1072                           
  1073                           ;./ADC.h: 39:             TRISBbits.TRISB2 = 1;
  1074  005F  1683               	bsf	3,5	;RP0=1, select bank1
  1075  0060  1303               	bcf	3,6	;RP1=0, select bank1
  1076  0061  1506               	bsf	6,2	;volatile
  1077                           
  1078                           ;./ADC.h: 40:             break;
  1079  0062  0008               	return
  1080  0063                     l82:	
  1081                           ;./ADC.h: 41:         case 9:
  1082                           
  1083                           
  1084                           ;./ADC.h: 42:             ANSELHbits.ANS9 = 1;
  1085  0063  1683               	bsf	3,5	;RP0=1, select bank3
  1086  0064  1703               	bsf	3,6	;RP1=1, select bank3
  1087  0065  1489               	bsf	9,1	;volatile
  1088                           
  1089                           ;./ADC.h: 43:             TRISBbits.TRISB3 = 1;
  1090  0066  1683               	bsf	3,5	;RP0=1, select bank1
  1091  0067  1303               	bcf	3,6	;RP1=0, select bank1
  1092  0068  1586               	bsf	6,3	;volatile
  1093                           
  1094                           ;./ADC.h: 44:             break;
  1095  0069  0008               	return
  1096  006A                     l83:	
  1097                           ;./ADC.h: 45:         case 10:
  1098                           
  1099                           
  1100                           ;./ADC.h: 46:             ANSELHbits.ANS10 = 1;
  1101  006A  1683               	bsf	3,5	;RP0=1, select bank3
  1102  006B  1703               	bsf	3,6	;RP1=1, select bank3
  1103  006C  1509               	bsf	9,2	;volatile
  1104                           
  1105                           ;./ADC.h: 47:             TRISBbits.TRISB1 = 1;
  1106  006D  1683               	bsf	3,5	;RP0=1, select bank1
  1107  006E  1303               	bcf	3,6	;RP1=0, select bank1
  1108  006F  1486               	bsf	6,1	;volatile
  1109                           
  1110                           ;./ADC.h: 48:             break;
  1111  0070  0008               	return
  1112  0071                     l84:	
  1113                           ;./ADC.h: 49:         case 11:
  1114                           
  1115                           
  1116                           ;./ADC.h: 50:             ANSELHbits.ANS11 = 1;
  1117  0071  1683               	bsf	3,5	;RP0=1, select bank3
  1118  0072  1703               	bsf	3,6	;RP1=1, select bank3
  1119  0073  1589               	bsf	9,3	;volatile
  1120                           
  1121                           ;./ADC.h: 51:             TRISBbits.TRISB4 = 1;
  1122  0074  1683               	bsf	3,5	;RP0=1, select bank1
  1123  0075  1303               	bcf	3,6	;RP1=0, select bank1
  1124  0076  1606               	bsf	6,4	;volatile
  1125                           
  1126                           ;./ADC.h: 52:             break;
  1127  0077  0008               	return
  1128  0078                     l85:	
  1129                           ;./ADC.h: 53:         case 12:
  1130                           
  1131                           
  1132                           ;./ADC.h: 54:             ANSELHbits.ANS12 = 1;
  1133  0078  1683               	bsf	3,5	;RP0=1, select bank3
  1134  0079  1703               	bsf	3,6	;RP1=1, select bank3
  1135  007A  1609               	bsf	9,4	;volatile
  1136                           
  1137                           ;./ADC.h: 55:             TRISBbits.TRISB0 = 1;
  1138  007B  1683               	bsf	3,5	;RP0=1, select bank1
  1139  007C  1303               	bcf	3,6	;RP1=0, select bank1
  1140  007D  1406               	bsf	6,0	;volatile
  1141                           
  1142                           ;./ADC.h: 56:             break;
  1143  007E  0008               	return
  1144  007F                     l86:	
  1145                           ;./ADC.h: 57:         case 13:
  1146                           
  1147                           
  1148                           ;./ADC.h: 58:             ANSELHbits.ANS13 = 1;
  1149  007F  1683               	bsf	3,5	;RP0=1, select bank3
  1150  0080  1703               	bsf	3,6	;RP1=1, select bank3
  1151  0081  1689               	bsf	9,5	;volatile
  1152                           
  1153                           ;./ADC.h: 59:             TRISBbits.TRISB5 = 1;
  1154  0082  1683               	bsf	3,5	;RP0=1, select bank1
  1155  0083  1303               	bcf	3,6	;RP1=0, select bank1
  1156  0084  1686               	bsf	6,5	;volatile
  1157                           
  1158                           ;./ADC.h: 60:             break;
  1159  0085  0008               	return
  1160  0086                     l87:	
  1161                           ;./ADC.h: 61:         default:
  1162                           
  1163                           
  1164                           ;./ADC.h: 62:             ANSELbits.ANS0 = 1;
  1165  0086  1683               	bsf	3,5	;RP0=1, select bank3
  1166  0087  1703               	bsf	3,6	;RP1=1, select bank3
  1167  0088  1408               	bsf	8,0	;volatile
  1168                           
  1169                           ;./ADC.h: 63:             TRISAbits.TRISA0 = 1;
  1170  0089  1683               	bsf	3,5	;RP0=1, select bank1
  1171  008A  1303               	bcf	3,6	;RP1=0, select bank1
  1172  008B  1405               	bsf	5,0	;volatile
  1173                           
  1174                           ;./ADC.h: 64:             break;
  1175  008C  0008               	return
  1176  008D                     l772:	
  1177  008D  0875               	movf	ADC_channel@a,w
  1178  008E  00F3               	movwf	??_ADC_channel
  1179  008F  01F4               	clrf	??_ADC_channel+1
  1180                           
  1181                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1182                           ; Switch size 1, requested type "simple"
  1183                           ; Number of cases is 1, Range of values is 0 to 0
  1184                           ; switch strategies available:
  1185                           ; Name         Instructions Cycles
  1186                           ; simple_byte            4     3 (average)
  1187                           ; direct_byte           11     8 (fixed)
  1188                           ; jumptable            260     6 (fixed)
  1189                           ;	Chosen strategy is simple_byte
  1190  0090  0874               	movf	??_ADC_channel+1,w
  1191  0091  3A00               	xorlw	0	; case 0
  1192  0092  1903               	skipnz
  1193  0093  2895               	goto	l1106
  1194  0094  2886               	goto	l87
  1195  0095                     l1106:	
  1196                           
  1197                           ; Switch size 1, requested type "simple"
  1198                           ; Number of cases is 14, Range of values is 0 to 13
  1199                           ; switch strategies available:
  1200                           ; Name         Instructions Cycles
  1201                           ; simple_byte           43    22 (average)
  1202                           ; direct_byte           50     8 (fixed)
  1203                           ; jumptable            260     6 (fixed)
  1204                           ;	Chosen strategy is simple_byte
  1205  0095  0873               	movf	??_ADC_channel,w
  1206  0096  3A00               	xorlw	0	; case 0
  1207  0097  1903               	skipnz
  1208  0098  2824               	goto	l72
  1209  0099  3A01               	xorlw	1	; case 1
  1210  009A  1903               	skipnz
  1211  009B  282B               	goto	l74
  1212  009C  3A03               	xorlw	3	; case 2
  1213  009D  1903               	skipnz
  1214  009E  2832               	goto	l75
  1215  009F  3A01               	xorlw	1	; case 3
  1216  00A0  1903               	skipnz
  1217  00A1  2839               	goto	l76
  1218  00A2  3A07               	xorlw	7	; case 4
  1219  00A3  1903               	skipnz
  1220  00A4  2840               	goto	l77
  1221  00A5  3A01               	xorlw	1	; case 5
  1222  00A6  1903               	skipnz
  1223  00A7  2847               	goto	l78
  1224  00A8  3A03               	xorlw	3	; case 6
  1225  00A9  1903               	skipnz
  1226  00AA  284E               	goto	l79
  1227  00AB  3A01               	xorlw	1	; case 7
  1228  00AC  1903               	skipnz
  1229  00AD  2855               	goto	l80
  1230  00AE  3A0F               	xorlw	15	; case 8
  1231  00AF  1903               	skipnz
  1232  00B0  285C               	goto	l81
  1233  00B1  3A01               	xorlw	1	; case 9
  1234  00B2  1903               	skipnz
  1235  00B3  2863               	goto	l82
  1236  00B4  3A03               	xorlw	3	; case 10
  1237  00B5  1903               	skipnz
  1238  00B6  286A               	goto	l83
  1239  00B7  3A01               	xorlw	1	; case 11
  1240  00B8  1903               	skipnz
  1241  00B9  2871               	goto	l84
  1242  00BA  3A07               	xorlw	7	; case 12
  1243  00BB  1903               	skipnz
  1244  00BC  2878               	goto	l85
  1245  00BD  3A01               	xorlw	1	; case 13
  1246  00BE  1903               	skipnz
  1247  00BF  287F               	goto	l86
  1248  00C0  2886               	goto	l87
  1249  00C1  0008               	return
  1250  00C2                     __end_of_ADC_channel:	
  1251                           
  1252                           	psect	text6
  1253  0117                     __ptext6:	
  1254 ;; *************** function _isr *****************
  1255 ;; Defined at:
  1256 ;;		line 35 in file "MainHall.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;		None
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;		None
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1270 ;;      Params:         0       0       0       0       0
  1271 ;;      Locals:         0       0       0       0       0
  1272 ;;      Temps:          3       0       0       0       0
  1273 ;;      Totals:         3       0       0       0       0
  1274 ;;Total ram usage:        3 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		Interrupt level 1
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           
  1284                           ;psect for function _isr
  1285  0117                     _isr:	
  1286                           
  1287                           ;MainHall.c: 36:    if(PIR1bits.SSPIF == 1){
  1288  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1289  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1290  0119  1D8C               	btfss	12,3	;volatile
  1291  011A  2961               	goto	i1l158
  1292                           
  1293                           ;MainHall.c: 38:         SSPCONbits.CKP = 0;
  1294  011B  1214               	bcf	20,4	;volatile
  1295                           
  1296                           ;MainHall.c: 40:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1297  011C  1B14               	btfsc	20,6	;volatile
  1298  011D  2920               	goto	i1l894
  1299  011E  1F94               	btfss	20,7	;volatile
  1300  011F  2927               	goto	i1l902
  1301  0120                     i1l894:	
  1302                           
  1303                           ;MainHall.c: 41:             z = SSPBUF;
  1304  0120  0813               	movf	19,w	;volatile
  1305  0121  00F0               	movwf	??_isr
  1306  0122  0870               	movf	??_isr,w
  1307  0123  00F8               	movwf	_z
  1308                           
  1309                           ;MainHall.c: 42:             SSPCONbits.SSPOV = 0;
  1310  0124  1314               	bcf	20,6	;volatile
  1311                           
  1312                           ;MainHall.c: 43:             SSPCONbits.WCOL = 0;
  1313  0125  1394               	bcf	20,7	;volatile
  1314                           
  1315                           ;MainHall.c: 44:             SSPCONbits.CKP = 1;
  1316  0126  1614               	bsf	20,4	;volatile
  1317  0127                     i1l902:	
  1318                           
  1319                           ;MainHall.c: 47:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1320  0127  1683               	bsf	3,5	;RP0=1, select bank1
  1321  0128  1303               	bcf	3,6	;RP1=0, select bank1
  1322  0129  1E94               	btfss	20,5	;volatile
  1323  012A  1914               	btfsc	20,2	;volatile
  1324  012B  2944               	goto	i1l149
  1325                           
  1326                           ;MainHall.c: 49:             z = SSPBUF;
  1327  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1328  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1329  012E  0813               	movf	19,w	;volatile
  1330  012F  00F0               	movwf	??_isr
  1331  0130  0870               	movf	??_isr,w
  1332  0131  00F8               	movwf	_z
  1333                           
  1334                           ;MainHall.c: 51:             PIR1bits.SSPIF = 0;
  1335  0132  118C               	bcf	12,3	;volatile
  1336                           
  1337                           ;MainHall.c: 52:             SSPCONbits.CKP = 1;
  1338  0133  1614               	bsf	20,4	;volatile
  1339  0134                     i1l150:	
  1340                           ;MainHall.c: 53:             while(!SSPSTATbits.BF);
  1341                           
  1342  0134  1683               	bsf	3,5	;RP0=1, select bank1
  1343  0135  1303               	bcf	3,6	;RP1=0, select bank1
  1344  0136  1C14               	btfss	20,0	;volatile
  1345  0137  2934               	goto	i1l150
  1346                           
  1347                           ;MainHall.c: 54:             z = SSPBUF;
  1348  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1349  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1350  013A  0813               	movf	19,w	;volatile
  1351  013B  00F0               	movwf	??_isr
  1352  013C  0870               	movf	??_isr,w
  1353  013D  00F8               	movwf	_z
  1354                           
  1355                           ;MainHall.c: 55:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1356  013E  30A6               	movlw	166
  1357  013F  00F0               	movwf	??_isr
  1358  0140                     u24_27:	
  1359  0140  0BF0               	decfsz	??_isr,f
  1360  0141  2940               	goto	u24_27
  1361  0142  0000               	nop
  1362                           
  1363                           ;MainHall.c: 57:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1364  0143  295E               	goto	i1l153
  1365  0144                     i1l149:	
  1366  0144  1E94               	btfss	20,5	;volatile
  1367  0145  1D14               	btfss	20,2	;volatile
  1368  0146  295E               	goto	i1l153
  1369                           
  1370                           ;MainHall.c: 58:             z = SSPBUF;
  1371  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1372  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1373  0149  0813               	movf	19,w	;volatile
  1374  014A  00F0               	movwf	??_isr
  1375  014B  0870               	movf	??_isr,w
  1376  014C  00F8               	movwf	_z
  1377                           
  1378                           ;MainHall.c: 59:             BF = 0;
  1379  014D  1683               	bsf	3,5	;RP0=1, select bank1
  1380  014E  1303               	bcf	3,6	;RP1=0, select bank1
  1381  014F  1014               	bcf	20,0	;volatile
  1382                           
  1383                           ;MainHall.c: 60:             SSPBUF = key;
  1384  0150  0877               	movf	_key,w
  1385  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1386  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1387  0153  0093               	movwf	19	;volatile
  1388                           
  1389                           ;MainHall.c: 61:             SSPCONbits.CKP = 1;
  1390  0154  1614               	bsf	20,4	;volatile
  1391                           
  1392                           ;MainHall.c: 62:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1393  0155  30A6               	movlw	166
  1394  0156  00F0               	movwf	??_isr
  1395  0157                     u25_27:	
  1396  0157  0BF0               	decfsz	??_isr,f
  1397  0158  2957               	goto	u25_27
  1398  0159  0000               	nop
  1399  015A                     i1l155:	
  1400                           ;MainHall.c: 63:             while(SSPSTATbits.BF);
  1401                           
  1402  015A  1683               	bsf	3,5	;RP0=1, select bank1
  1403  015B  1303               	bcf	3,6	;RP1=0, select bank1
  1404  015C  1814               	btfsc	20,0	;volatile
  1405  015D  295A               	goto	i1l155
  1406  015E                     i1l153:	
  1407                           
  1408                           ;MainHall.c: 66:         PIR1bits.SSPIF = 0;
  1409  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1410  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1411  0160  118C               	bcf	12,3	;volatile
  1412  0161                     i1l158:	
  1413  0161  0872               	movf	??_isr+2,w
  1414  0162  008A               	movwf	10
  1415  0163  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1416  0164  0083               	movwf	3
  1417  0165  0EFE               	swapf	126,f
  1418  0166  0E7E               	swapf	126,w
  1419  0167  0009               	retfie
  1420  0168                     __end_of_isr:	
  1421  007E                     btemp	set	126	;btemp
  1422  007E                     wtemp0	set	126
  1423                           
  1424                           	psect	intentry
  1425  0004                     __pintentry:	
  1426                           ;incstack = 0
  1427                           ; Regs used in _isr: [wreg]
  1428                           
  1429  0004                     interrupt_function:	
  1430  007E                     saved_w	set	btemp
  1431  0004  00FE               	movwf	btemp
  1432  0005  0E03               	swapf	3,w
  1433  0006  00F1               	movwf	??_isr+1
  1434  0007  080A               	movf	10,w
  1435  0008  00F2               	movwf	??_isr+2
  1436  0009  120A  118A  2917   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_ADC_channel
    _setup->_initOscilador

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     158
                                              0 BANK0      3     3      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     158
                        _ADC_channel
                     _I2C_Slave_Init
                            _initADC
                      _initOscilador
 ---------------------------------------------------------------------------------
 (2) _initOscilador                                        3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _initADC                                              2     2      0      15
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_channel                                          3     3      0      30
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _ADC_channel
     _I2C_Slave_Init
     _initADC
     _initOscilador

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Feb 23 18:29:32 2019

                       _z 0078               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        l80 0055                        l72 0024  
                      l81 005C                        l82 0063                        l74 002B  
                      l83 006A                        l75 0032                        l84 0071  
                      l76 0039                        l85 0078                        l77 0040  
                      l86 007F                        l78 0047                        l87 0086  
                      l79 004E                       l125 0115                       l164 0170  
                     _ADC 0076                       l169 0193                       l800 00C4  
                     l810 00E1                       l802 00C9                       l812 00E7  
                     l804 00CF                       l820 00F3                       l814 00EE  
                     l806 00D5                       l816 00EE                       l808 00DB  
                     l772 008D                       _GIE 005F                       u237 0184  
            __CFG_CPD$OFF 0000                       _key 0077                       _isr 0117  
            __CFG_LVP$OFF 0000                      l1104 00FB                      l1106 0095  
                    l1062 0196                      l1056 016D                      l1058 0176  
                    ?_isr 0070                      _PEIE 005E                      _RCEN 048B  
            __CFG_WRT$OFF 0000                      _main 0168                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000      __size_of_ADC_channel 00AC  
                   ??_isr 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l150 0134                     i1l153 015E  
                   i1l155 015A                     i1l149 0144                     i1l158 0161  
                   i1l902 0127                     i1l894 0120                     u24_27 0140  
                   u25_27 0157                     _PORTA 0005                     _PORTB 0006  
                   _TRISA 0085                     _TRISB 0086                     _SSPIE 0463  
                   _SSPIF 0063            __CFG_FCMEN$OFF 0000           __end_of_initADC 01EB  
                   _setup 0198            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 0198    __size_of_initOscilador 0055  
                  ??_main 0020                    _ADRESH 001E                    ?_setup 0070  
                  _ANSELH 0189                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000                 ??_initADC 0073                    saved_w 007E  
 __end_of__initialization 0012             _initOscilador 00C2            __pcstackCOMMON 0070  
 __size_of_I2C_Slave_Init 0019             __end_of_setup 01BE                   ??_setup 0076  
   I2C_Slave_Init@address 0073            ?_initOscilador 0070                __pmaintext 0168  
              __pintentry 0004                   _SSPCON2 0091                   _SSPSTAT 0094  
     initOscilador@option 0075             ??_ADC_channel 0073                 _ANSELbits 0188  
                 __ptext1 0198                   __ptext2 00C2                   __ptext3 01D7  
                 __ptext4 01BE                   __ptext5 0016                   __ptext6 0117  
                 _initADC 01D7              __size_of_isr 0051           ??_initOscilador 0073  
    end_of_initialization 0012            _I2C_Slave_Init 01BE       __end_of_ADC_channel 00C2  
            ADC_channel@a 0075                 _TRISAbits 0085                 _TRISBbits 0086  
               _TRISEbits 0089    __end_of_I2C_Slave_Init 01D7       start_initialization 000F  
             __end_of_isr 0168               _ADC_channel 0016  __CFG_FOSC$INTRC_NOCLKOUT 0000  
         ?_I2C_Slave_Init 0073               __pbssCOMMON 0076                 ___latbits 0002  
           __pcstackBANK0 0020                  ?_initADC 0070            __size_of_setup 0026  
       interrupt_function 0004                  _PIR1bits 000C                _ADCON0bits 001F  
              _ADCON1bits 009F     __end_of_initOscilador 0117                _ANSELHbits 0189  
        __size_of_initADC 0014         __CFG_BOR4V$BOR40V 0000          ??_I2C_Slave_Init 0075  
           __size_of_main 0030              ?_ADC_channel 0070                  initADC@a 0074  
                intlevel1 0000                _OSCCONbits 008F               _SSPCON2bits 0091  
              _SSPCONbits 0014  
