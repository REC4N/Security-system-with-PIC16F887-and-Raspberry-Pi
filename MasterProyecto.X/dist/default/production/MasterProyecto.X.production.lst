

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Feb 23 16:18:12 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.05
    37                           ; Generated 20/12/2018 GMT
    38                           ; 
    39                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F887 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  008F                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  0105                     	;# 
   134  0107                     	;# 
   135  0108                     	;# 
   136  0109                     	;# 
   137  010C                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0185                     	;# 
   143  0187                     	;# 
   144  0188                     	;# 
   145  0189                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0088                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226                           
   227                           	psect	strings
   228  0003                     __pstrings:	
   229  0003                     stringtab:	
   230  0003                     __stringtab:	
   231  0003                     stringcode:	
   232                           ;	String table - string pointers are 1 byte each
   233                           
   234  0003                     stringdir:	
   235  0003  3000               	movlw	high stringdir
   236  0004  008A               	movwf	10
   237  0005  0804               	movf	4,w
   238  0006  0A84               	incf	4,f
   239  0007  0782               	addwf	2,f
   240  0008                     __stringbase:	
   241  0008  3400               	retlw	0
   242  0009                     __end_of__stringtab:	
   243  0009                     _dpowers:	
   244  0009  3401               	retlw	1
   245  000A  3400               	retlw	0
   246  000B  340A               	retlw	10
   247  000C  3400               	retlw	0
   248  000D  3464               	retlw	100
   249  000E  3400               	retlw	0
   250  000F  34E8               	retlw	232
   251  0010  3403               	retlw	3
   252  0011  3410               	retlw	16
   253  0012  3427               	retlw	39
   254  0013                     __end_of_dpowers:	
   255  0005                     _PORTA	set	5
   256  0006                     _PORTB	set	6
   257  0006                     _PORTBbits	set	6
   258  0013                     _SSPBUF	set	19
   259  0014                     _SSPCON	set	20
   260  0063                     _SSPIF	set	99
   261  005E                     _PEIE	set	94
   262  005F                     _GIE	set	95
   263  0085                     _TRISA	set	133
   264  0086                     _TRISB	set	134
   265  008F                     _OSCCONbits	set	143
   266  0091                     _SSPCON2bits	set	145
   267  0094                     _SSPSTAT	set	148
   268  0093                     _SSPADD	set	147
   269  0091                     _SSPCON2	set	145
   270  0463                     _SSPIE	set	1123
   271  048B                     _RCEN	set	1163
   272  043C                     _TRISC4	set	1084
   273  043B                     _TRISC3	set	1083
   274  0188                     _ANSEL	set	392
   275  0189                     _ANSELH	set	393
   276  0013                     STR_2:	
   277  0013  342E               	retlw	46	;'.'
   278  0014  3425               	retlw	37	;'%'
   279  0015  3464               	retlw	100	;'d'
   280  0016  3430               	retlw	48	;'0'
   281  0017  3400               	retlw	0
   282  0018                     STR_3:	
   283  0018  342E               	retlw	46	;'.'
   284  0019  3425               	retlw	37	;'%'
   285  001A  3464               	retlw	100	;'d'
   286  001B  3400               	retlw	0
   287  0019                     
   288                           ; #config settings
   289  0000                     
   290                           	psect	cinit
   291  07F8                     start_initialization:	
   292  07F8                     __initialization:	
   293                           
   294                           ; Clear objects allocated to BANK0
   295  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   296  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   297  07FA  01BC               	clrf	__pbssBANK0& (0+127)
   298  07FB  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   299  07FC                     end_of_initialization:	
   300                           ;End of C runtime variable initialization code
   301                           
   302  07FC                     __end_of__initialization:	
   303  07FC  0183               	clrf	3
   304  07FD  120A  118A  2C7B   	ljmp	_main	;jump to C main() function
   305                           
   306                           	psect	bssBANK0
   307  003C                     __pbssBANK0:	
   308  003C                     _temp:	
   309  003C                     	ds	1
   310  003D                     _time:	
   311  003D                     	ds	1
   312                           
   313                           	psect	cstackCOMMON
   314  0070                     __pcstackCOMMON:	
   315  0070                     ?_setup:	
   316  0070                     ?_get_time:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?_get_temp:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_strcat:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_I2C_Master_Wait:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ??_I2C_Master_Wait:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_I2C_Master_Start:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ??_I2C_Master_Start:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_I2C_Master_RepeatedStart:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ??_I2C_Master_RepeatedStart:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_I2C_Master_Stop:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ??_I2C_Master_Stop:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_I2C_Master_Write:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_Lcd_Port:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ??_Lcd_Port:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_Lcd_Cmd:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_Lcd_Clear:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ?_Lcd_Init:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_Lcd_Write_Char:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_Lcd_Write_String:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_initOscilador:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ??_initOscilador:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_main:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?___bmul:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_I2C_Master_Read:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?___lwdiv:	
   389                           ; 2 bytes @ 0x0
   390                           
   391  0070                     ?___lldiv:	
   392                           ; 2 bytes @ 0x0
   393                           
   394  0070                     Lcd_Port@a:	
   395                           ; 4 bytes @ 0x0
   396                           
   397  0070                     ___bmul@multiplicand:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     strcat@from:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     I2C_Master_Write@d:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     I2C_Master_Read@a:	
   407                           ; 2 bytes @ 0x0
   408                           
   409  0070                     ___lwdiv@divisor:	
   410                           ; 2 bytes @ 0x0
   411                           
   412  0070                     ___lldiv@divisor:	
   413                           ; 2 bytes @ 0x0
   414                           
   415                           
   416                           ; 4 bytes @ 0x0
   417  0070                     	ds	1
   418  0071                     ??_strcat:	
   419  0071                     ??_Lcd_Cmd:	
   420                           ; 1 bytes @ 0x1
   421                           
   422  0071                     ??_Lcd_Write_Char:	
   423                           ; 1 bytes @ 0x1
   424                           
   425  0071                     ??___bmul:	
   426                           ; 1 bytes @ 0x1
   427                           
   428                           
   429                           ; 1 bytes @ 0x1
   430  0071                     	ds	1
   431  0072                     ??_I2C_Master_Write:	
   432  0072                     ??_I2C_Master_Read:	
   433                           ; 1 bytes @ 0x2
   434                           
   435  0072                     Lcd_Write_Char@temp:	
   436                           ; 1 bytes @ 0x2
   437                           
   438  0072                     initOscilador@option:	
   439                           ; 1 bytes @ 0x2
   440                           
   441  0072                     ___bmul@product:	
   442                           ; 1 bytes @ 0x2
   443                           
   444  0072                     strcat@to:	
   445                           ; 1 bytes @ 0x2
   446                           
   447  0072                     ___lwdiv@dividend:	
   448                           ; 1 bytes @ 0x2
   449                           
   450                           
   451                           ; 2 bytes @ 0x2
   452  0072                     	ds	1
   453  0073                     Lcd_Cmd@a:	
   454  0073                     Lcd_Write_Char@y:	
   455                           ; 1 bytes @ 0x3
   456                           
   457  0073                     ___bmul@multiplier:	
   458                           ; 1 bytes @ 0x3
   459                           
   460  0073                     strcat@cp:	
   461                           ; 1 bytes @ 0x3
   462                           
   463                           
   464                           ; 1 bytes @ 0x3
   465  0073                     	ds	1
   466  0074                     ??_Lcd_Clear:	
   467  0074                     ?_Lcd_Set_Cursor:	
   468                           ; 1 bytes @ 0x4
   469                           
   470  0074                     ??_Lcd_Init:	
   471                           ; 1 bytes @ 0x4
   472                           
   473  0074                     ??___lwdiv:	
   474                           ; 1 bytes @ 0x4
   475                           
   476  0074                     Lcd_Set_Cursor@b:	
   477                           ; 1 bytes @ 0x4
   478                           
   479  0074                     Lcd_Write_Char@a:	
   480                           ; 1 bytes @ 0x4
   481                           
   482  0074                     I2C_Master_Read@temp:	
   483                           ; 1 bytes @ 0x4
   484                           
   485  0074                     ___lldiv@dividend:	
   486                           ; 2 bytes @ 0x4
   487                           
   488                           
   489                           ; 4 bytes @ 0x4
   490  0074                     	ds	1
   491  0075                     ??_Lcd_Set_Cursor:	
   492  0075                     ??_Lcd_Write_String:	
   493                           ; 1 bytes @ 0x5
   494                           
   495  0075                     ___lwdiv@quotient:	
   496                           ; 1 bytes @ 0x5
   497                           
   498                           
   499                           ; 2 bytes @ 0x5
   500  0075                     	ds	1
   501  0076                     ??_get_time:	
   502  0076                     Lcd_Write_String@i:	
   503                           ; 1 bytes @ 0x6
   504                           
   505                           
   506                           ; 2 bytes @ 0x6
   507  0076                     	ds	1
   508  0077                     Lcd_Set_Cursor@a:	
   509  0077                     ___lwdiv@counter:	
   510                           ; 1 bytes @ 0x7
   511                           
   512                           
   513                           ; 1 bytes @ 0x7
   514  0077                     	ds	1
   515  0078                     ??___lldiv:	
   516  0078                     ?___lwmod:	
   517                           ; 1 bytes @ 0x8
   518                           
   519  0078                     Lcd_Set_Cursor@z:	
   520                           ; 2 bytes @ 0x8
   521                           
   522  0078                     Lcd_Write_String@a:	
   523                           ; 1 bytes @ 0x8
   524                           
   525  0078                     ___lwmod@divisor:	
   526                           ; 1 bytes @ 0x8
   527                           
   528                           
   529                           ; 2 bytes @ 0x8
   530  0078                     	ds	1
   531  0079                     Lcd_Set_Cursor@y:	
   532  0079                     ___lldiv@quotient:	
   533                           ; 1 bytes @ 0x9
   534                           
   535                           
   536                           ; 4 bytes @ 0x9
   537  0079                     	ds	1
   538  007A                     Lcd_Set_Cursor@temp:	
   539  007A                     ___lwmod@dividend:	
   540                           ; 1 bytes @ 0xA
   541                           
   542                           
   543                           ; 2 bytes @ 0xA
   544  007A                     	ds	2
   545  007C                     ??___lwmod:	
   546                           
   547                           ; 1 bytes @ 0xC
   548  007C                     	ds	1
   549  007D                     ___lldiv@counter:	
   550  007D                     ___lwmod@counter:	
   551                           ; 1 bytes @ 0xD
   552                           
   553                           
   554                           ; 1 bytes @ 0xD
   555  007D                     	ds	1
   556  007E                     ??_setup:	
   557                           
   558                           	psect	cstackBANK0
   559  0020                     __pcstackBANK0:	
   560                           ; 1 bytes @ 0xE
   561                           
   562  0020                     ?_I2C_Master_Init:	
   563  0020                     ?_sprintf:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0020                     sprintf@f:	
   567                           ; 2 bytes @ 0x0
   568                           
   569  0020                     I2C_Master_Init@c:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0020                     get_time@string_time:	
   573                           ; 4 bytes @ 0x0
   574                           
   575                           
   576                           ; 6 bytes @ 0x0
   577  0020                     	ds	3
   578  0023                     ??_sprintf:	
   579                           
   580                           ; 1 bytes @ 0x3
   581  0023                     	ds	1
   582  0024                     ??_I2C_Master_Init:	
   583                           
   584                           ; 1 bytes @ 0x4
   585  0024                     	ds	2
   586  0026                     get_time@hour:	
   587  0026                     sprintf@ap:	
   588                           ; 1 bytes @ 0x6
   589                           
   590                           
   591                           ; 1 bytes @ 0x6
   592  0026                     	ds	1
   593  0027                     get_time@min:	
   594  0027                     sprintf@flag:	
   595                           ; 1 bytes @ 0x7
   596                           
   597                           
   598                           ; 1 bytes @ 0x7
   599  0027                     	ds	1
   600  0028                     sprintf@prec:	
   601                           
   602                           ; 1 bytes @ 0x8
   603  0028                     	ds	1
   604  0029                     sprintf@val:	
   605                           
   606                           ; 2 bytes @ 0x9
   607  0029                     	ds	2
   608  002B                     sprintf@sp:	
   609                           
   610                           ; 1 bytes @ 0xB
   611  002B                     	ds	1
   612  002C                     sprintf@c:	
   613                           
   614                           ; 1 bytes @ 0xC
   615  002C                     	ds	1
   616  002D                     ??_get_temp:	
   617                           
   618                           ; 1 bytes @ 0xD
   619  002D                     	ds	3
   620  0030                     get_temp@temperature:	
   621                           
   622                           ; 6 bytes @ 0x10
   623  0030                     	ds	6
   624  0036                     get_temp@tempMSB:	
   625                           
   626                           ; 1 bytes @ 0x16
   627  0036                     	ds	1
   628  0037                     get_temp@decimal:	
   629                           
   630                           ; 3 bytes @ 0x17
   631  0037                     	ds	3
   632  003A                     get_temp@tempLSB:	
   633                           
   634                           ; 1 bytes @ 0x1A
   635  003A                     	ds	1
   636  003B                     ??_main:	
   637                           
   638                           ; 1 bytes @ 0x1B
   639  003B                     	ds	1
   640                           
   641                           	psect	maintext
   642  047B                     __pmaintext:	
   643 ;;
   644 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   645 ;;
   646 ;; *************** function _main *****************
   647 ;; Defined at:
   648 ;;		line 47 in file "mainMaster.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;		None
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   657 ;; Tracked objects:
   658 ;;		On entry : B00/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   662 ;;      Params:         0       0       0       0       0
   663 ;;      Locals:         0       0       0       0       0
   664 ;;      Temps:          0       1       0       0       0
   665 ;;      Totals:         0       1       0       0       0
   666 ;;Total ram usage:        1 bytes
   667 ;; Hardware stack levels required when called:    4
   668 ;; This function calls:
   669 ;;		_Lcd_Clear
   670 ;;		_Lcd_Set_Cursor
   671 ;;		_Lcd_Write_String
   672 ;;		_get_temp
   673 ;;		_get_time
   674 ;;		_setup
   675 ;; This function is called by:
   676 ;;		Startup code after reset
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           
   681                           ;psect for function _main
   682  047B                     _main:	
   683                           
   684                           ;mainMaster.c: 48:     setup();
   685                           
   686                           ;incstack = 0
   687                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   688  047B  120A  118A  234D  120A  118A  	fcall	_setup
   689                           
   690                           ;mainMaster.c: 49:     Lcd_Clear();
   691  0480  120A  118A  22BB  120A  118A  	fcall	_Lcd_Clear
   692  0485                     l1620:	
   693                           
   694                           ;mainMaster.c: 52:         time = get_time();
   695  0485  120A  118A  2612  120A  118A  	fcall	_get_time
   696  048A  1283               	bcf	3,5	;RP0=0, select bank0
   697  048B  1303               	bcf	3,6	;RP1=0, select bank0
   698  048C  00BB               	movwf	??_main
   699  048D  083B               	movf	??_main,w
   700  048E  00BD               	movwf	_time
   701                           
   702                           ;mainMaster.c: 53:         Lcd_Set_Cursor(1,1);
   703  048F  01F4               	clrf	Lcd_Set_Cursor@b
   704  0490  0AF4               	incf	Lcd_Set_Cursor@b,f
   705  0491  3001               	movlw	1
   706  0492  120A  118A  24BA  120A  118A  	fcall	_Lcd_Set_Cursor
   707                           
   708                           ;mainMaster.c: 54:         Lcd_Write_String(time);
   709  0497  1283               	bcf	3,5	;RP0=0, select bank0
   710  0498  1303               	bcf	3,6	;RP1=0, select bank0
   711  0499  083D               	movf	_time,w
   712  049A  120A  118A  230B  120A  118A  	fcall	_Lcd_Write_String
   713                           
   714                           ;mainMaster.c: 55:         temp = get_temp();
   715  049F  120A  118A  2688  120A  118A  	fcall	_get_temp
   716  04A4  1283               	bcf	3,5	;RP0=0, select bank0
   717  04A5  1303               	bcf	3,6	;RP1=0, select bank0
   718  04A6  00BB               	movwf	??_main
   719  04A7  083B               	movf	??_main,w
   720  04A8  00BC               	movwf	_temp
   721                           
   722                           ;mainMaster.c: 56:         Lcd_Set_Cursor(2,1);
   723  04A9  01F4               	clrf	Lcd_Set_Cursor@b
   724  04AA  0AF4               	incf	Lcd_Set_Cursor@b,f
   725  04AB  3002               	movlw	2
   726  04AC  120A  118A  24BA  120A  118A  	fcall	_Lcd_Set_Cursor
   727                           
   728                           ;mainMaster.c: 57:         Lcd_Write_String(temp);
   729  04B1  1283               	bcf	3,5	;RP0=0, select bank0
   730  04B2  1303               	bcf	3,6	;RP1=0, select bank0
   731  04B3  083C               	movf	_temp,w
   732  04B4  120A  118A  230B  120A  118A  	fcall	_Lcd_Write_String
   733  04B9  2C85               	goto	l1620
   734  04BA                     __end_of_main:	
   735                           
   736                           	psect	text1
   737  034D                     __ptext1:	
   738 ;; *************** function _setup *****************
   739 ;; Defined at:
   740 ;;		line 61 in file "mainMaster.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;		None
   743 ;; Auto vars:     Size  Location     Type
   744 ;;		None
   745 ;; Return value:  Size  Location     Type
   746 ;;                  1    wreg      void 
   747 ;; Registers used:
   748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   754 ;;      Params:         0       0       0       0       0
   755 ;;      Locals:         0       0       0       0       0
   756 ;;      Temps:          0       0       0       0       0
   757 ;;      Totals:         0       0       0       0       0
   758 ;;Total ram usage:        0 bytes
   759 ;; Hardware stack levels used:    1
   760 ;; Hardware stack levels required when called:    3
   761 ;; This function calls:
   762 ;;		_I2C_Master_Init
   763 ;;		_Lcd_Init
   764 ;;		_initOscilador
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           
   771                           ;psect for function _setup
   772  034D                     _setup:	
   773                           
   774                           ;mainMaster.c: 62:     initOscilador(7);
   775                           
   776                           ;incstack = 0
   777                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   778  034D  3007               	movlw	7
   779  034E  120A  118A  2504  120A  118A  	fcall	_initOscilador
   780                           
   781                           ;mainMaster.c: 63:     ANSELH = 0;
   782  0353  1683               	bsf	3,5	;RP0=1, select bank3
   783  0354  1703               	bsf	3,6	;RP1=1, select bank3
   784  0355  0189               	clrf	9	;volatile
   785                           
   786                           ;mainMaster.c: 64:     ANSEL = 0;
   787  0356  0188               	clrf	8	;volatile
   788                           
   789                           ;mainMaster.c: 65:     TRISB = 0;
   790  0357  1683               	bsf	3,5	;RP0=1, select bank1
   791  0358  1303               	bcf	3,6	;RP1=0, select bank1
   792  0359  0186               	clrf	6	;volatile
   793                           
   794                           ;mainMaster.c: 66:     TRISA = 0;
   795  035A  0185               	clrf	5	;volatile
   796                           
   797                           ;mainMaster.c: 67:     PORTB = 0;
   798  035B  1283               	bcf	3,5	;RP0=0, select bank0
   799  035C  1303               	bcf	3,6	;RP1=0, select bank0
   800  035D  0186               	clrf	6	;volatile
   801                           
   802                           ;mainMaster.c: 68:     PORTA = 0;
   803  035E  0185               	clrf	5	;volatile
   804                           
   805                           ;mainMaster.c: 69:     Lcd_Init();
   806  035F  120A  118A  2559  120A  118A  	fcall	_Lcd_Init
   807                           
   808                           ;mainMaster.c: 70:     I2C_Master_Init(100000);
   809  0364  3000               	movlw	0
   810  0365  1283               	bcf	3,5	;RP0=0, select bank0
   811  0366  1303               	bcf	3,6	;RP1=0, select bank0
   812  0367  00A3               	movwf	I2C_Master_Init@c+3
   813  0368  3001               	movlw	1
   814  0369  00A2               	movwf	I2C_Master_Init@c+2
   815  036A  3086               	movlw	134
   816  036B  00A1               	movwf	I2C_Master_Init@c+1
   817  036C  30A0               	movlw	160
   818  036D  00A0               	movwf	I2C_Master_Init@c
   819  036E  120A  118A  23D0   	fcall	_I2C_Master_Init
   820  0371  0008               	return
   821  0372                     __end_of_setup:	
   822                           
   823                           	psect	text2
   824  0504                     __ptext2:	
   825 ;; *************** function _initOscilador *****************
   826 ;; Defined at:
   827 ;;		line 11 in file "./Oscilador.h"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  option          1    wreg     unsigned char 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  option          1    2[COMMON] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         0       0       0       0       0
   842 ;;      Locals:         1       0       0       0       0
   843 ;;      Temps:          2       0       0       0       0
   844 ;;      Totals:         3       0       0       0       0
   845 ;;Total ram usage:        3 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; This function calls:
   848 ;;		Nothing
   849 ;; This function is called by:
   850 ;;		_setup
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _initOscilador
   856  0504                     _initOscilador:	
   857                           
   858                           ;incstack = 0
   859                           ; Regs used in _initOscilador: [wreg-fsr0h+status,2+status,0]
   860                           ;initOscilador@option stored from wreg
   861  0504  00F2               	movwf	initOscilador@option
   862                           
   863                           ;./Oscilador.h: 13: 
   864  0505  2D35               	goto	l1436
   865  0506                     l1416:	
   866                           
   867                           ;./Oscilador.h: 16:         case 3:
   868  0506  308F               	movlw	-113
   869  0507  1683               	bsf	3,5	;RP0=1, select bank1
   870  0508  1303               	bcf	3,6	;RP1=0, select bank1
   871  0509  058F               	andwf	15,f	;volatile
   872                           
   873                           ;./Oscilador.h: 17: 
   874  050A  2D57               	goto	l129
   875  050B                     l1418:	
   876                           
   877                           ;./Oscilador.h: 20:         case 4:
   878  050B  1683               	bsf	3,5	;RP0=1, select bank1
   879  050C  1303               	bcf	3,6	;RP1=0, select bank1
   880  050D  080F               	movf	15,w	;volatile
   881  050E  398F               	andlw	-113
   882  050F  3810               	iorlw	16
   883  0510  2D2E               	goto	L5
   884  0511                     l1420:	
   885                           ;./Oscilador.h: 21: 
   886                           
   887                           
   888                           ;./Oscilador.h: 24:         case 5:
   889  0511  1683               	bsf	3,5	;RP0=1, select bank1
   890  0512  1303               	bcf	3,6	;RP1=0, select bank1
   891  0513  080F               	movf	15,w	;volatile
   892  0514  398F               	andlw	-113
   893  0515  3820               	iorlw	32
   894  0516  2D2E               	goto	L5
   895  0517                     l1422:	
   896                           ;./Oscilador.h: 25: 
   897                           
   898                           
   899                           ;./Oscilador.h: 28:         case 6:
   900  0517  1683               	bsf	3,5	;RP0=1, select bank1
   901  0518  1303               	bcf	3,6	;RP1=0, select bank1
   902  0519  080F               	movf	15,w	;volatile
   903  051A  398F               	andlw	-113
   904  051B  3830               	iorlw	48
   905  051C  2D2E               	goto	L5
   906  051D                     l1424:	
   907                           ;./Oscilador.h: 29: 
   908                           
   909                           
   910                           ;./Oscilador.h: 32:         case 7:
   911  051D  1683               	bsf	3,5	;RP0=1, select bank1
   912  051E  1303               	bcf	3,6	;RP1=0, select bank1
   913  051F  080F               	movf	15,w	;volatile
   914  0520  398F               	andlw	-113
   915  0521  3840               	iorlw	64
   916  0522  2D2E               	goto	L5
   917  0523                     l1426:	
   918                           ;./Oscilador.h: 33: 
   919                           
   920                           
   921                           ;./Oscilador.h: 36:         default:
   922  0523  1683               	bsf	3,5	;RP0=1, select bank1
   923  0524  1303               	bcf	3,6	;RP1=0, select bank1
   924  0525  080F               	movf	15,w	;volatile
   925  0526  398F               	andlw	-113
   926  0527  3850               	iorlw	80
   927  0528  2D2E               	goto	L5
   928  0529                     l1428:	
   929                           ;./Oscilador.h: 37: 
   930                           
   931                           
   932                           ;./Oscilador.h: 40:     }
   933  0529  1683               	bsf	3,5	;RP0=1, select bank1
   934  052A  1303               	bcf	3,6	;RP1=0, select bank1
   935  052B  080F               	movf	15,w	;volatile
   936  052C  398F               	andlw	-113
   937  052D  3860               	iorlw	96
   938  052E                     L5:	
   939  052E  008F               	movwf	15	;volatile
   940                           
   941                           ;./Oscilador.h: 41:     OSCCONbits.SCS = 1;
   942  052F  2D57               	goto	l129
   943  0530                     l1430:	
   944  0530                     l1432:	
   945  0530  3070               	movlw	112
   946  0531  1683               	bsf	3,5	;RP0=1, select bank1
   947  0532  1303               	bcf	3,6	;RP1=0, select bank1
   948  0533  048F               	iorwf	15,f	;volatile
   949  0534  2D57               	goto	l129
   950  0535                     l1436:	
   951  0535  0872               	movf	initOscilador@option,w
   952  0536  00F0               	movwf	??_initOscilador
   953  0537  01F1               	clrf	??_initOscilador+1
   954                           
   955                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   956                           ; Switch size 1, requested type "simple"
   957                           ; Number of cases is 1, Range of values is 0 to 0
   958                           ; switch strategies available:
   959                           ; Name         Instructions Cycles
   960                           ; simple_byte            4     3 (average)
   961                           ; direct_byte           11     8 (fixed)
   962                           ; jumptable            260     6 (fixed)
   963                           ;	Chosen strategy is simple_byte
   964  0538  0871               	movf	??_initOscilador+1,w
   965  0539  3A00               	xorlw	0	; case 0
   966  053A  1903               	skipnz
   967  053B  2D3D               	goto	l1678
   968  053C  2D30               	goto	l1432
   969  053D                     l1678:	
   970                           
   971                           ; Switch size 1, requested type "simple"
   972                           ; Number of cases is 8, Range of values is 0 to 7
   973                           ; switch strategies available:
   974                           ; Name         Instructions Cycles
   975                           ; simple_byte           25    13 (average)
   976                           ; direct_byte           32     8 (fixed)
   977                           ; jumptable            260     6 (fixed)
   978                           ;	Chosen strategy is simple_byte
   979  053D  0870               	movf	??_initOscilador,w
   980  053E  3A00               	xorlw	0	; case 0
   981  053F  1903               	skipnz
   982  0540  2D06               	goto	l1416
   983  0541  3A01               	xorlw	1	; case 1
   984  0542  1903               	skipnz
   985  0543  2D0B               	goto	l1418
   986  0544  3A03               	xorlw	3	; case 2
   987  0545  1903               	skipnz
   988  0546  2D11               	goto	l1420
   989  0547  3A01               	xorlw	1	; case 3
   990  0548  1903               	skipnz
   991  0549  2D17               	goto	l1422
   992  054A  3A07               	xorlw	7	; case 4
   993  054B  1903               	skipnz
   994  054C  2D1D               	goto	l1424
   995  054D  3A01               	xorlw	1	; case 5
   996  054E  1903               	skipnz
   997  054F  2D23               	goto	l1426
   998  0550  3A03               	xorlw	3	; case 6
   999  0551  1903               	skipnz
  1000  0552  2D29               	goto	l1428
  1001  0553  3A01               	xorlw	1	; case 7
  1002  0554  1903               	skipnz
  1003  0555  2D30               	goto	l1430
  1004  0556  2D30               	goto	l1432
  1005  0557                     l129:	
  1006  0557  140F               	bsf	15,0	;volatile
  1007  0558  0008               	return
  1008  0559                     __end_of_initOscilador:	
  1009                           
  1010                           	psect	text3
  1011  0559                     __ptext3:	
  1012 ;; *************** function _Lcd_Init *****************
  1013 ;; Defined at:
  1014 ;;		line 65 in file "./LCD4bits.h"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		wreg, status,2, status,0, pclath, cstack
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1028 ;;      Params:         0       0       0       0       0
  1029 ;;      Locals:         0       0       0       0       0
  1030 ;;      Temps:          2       0       0       0       0
  1031 ;;      Totals:         2       0       0       0       0
  1032 ;;Total ram usage:        2 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; Hardware stack levels required when called:    2
  1035 ;; This function calls:
  1036 ;;		_Lcd_Cmd
  1037 ;;		_Lcd_Port
  1038 ;; This function is called by:
  1039 ;;		_setup
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           
  1044                           ;psect for function _Lcd_Init
  1045  0559                     _Lcd_Init:	
  1046                           
  1047                           ;./LCD4bits.h: 67:   Lcd_Port(0x00);
  1048                           
  1049                           ;incstack = 0
  1050                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1051  0559  3000               	movlw	0
  1052  055A  120A  118A  22D7  120A  118A  	fcall	_Lcd_Port
  1053                           
  1054                           ;./LCD4bits.h: 68:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1055  055F  3034               	movlw	52
  1056  0560  00F5               	movwf	??_Lcd_Init+1
  1057  0561  30F1               	movlw	241
  1058  0562  00F4               	movwf	??_Lcd_Init
  1059  0563                     u997:	
  1060  0563  0BF4               	decfsz	??_Lcd_Init,f
  1061  0564  2D63               	goto	u997
  1062  0565  0BF5               	decfsz	??_Lcd_Init+1,f
  1063  0566  2D63               	goto	u997
  1064  0567  2D68               	nop2
  1065                           
  1066                           ;./LCD4bits.h: 69:   Lcd_Cmd(0x03);
  1067  0568  3003               	movlw	3
  1068  0569  120A  118A  22F1  120A  118A  	fcall	_Lcd_Cmd
  1069                           
  1070                           ;./LCD4bits.h: 70:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1071  056E  300D               	movlw	13
  1072  056F  00F5               	movwf	??_Lcd_Init+1
  1073  0570  30FB               	movlw	251
  1074  0571  00F4               	movwf	??_Lcd_Init
  1075  0572                     u1007:	
  1076  0572  0BF4               	decfsz	??_Lcd_Init,f
  1077  0573  2D72               	goto	u1007
  1078  0574  0BF5               	decfsz	??_Lcd_Init+1,f
  1079  0575  2D72               	goto	u1007
  1080  0576  2D77               	nop2
  1081                           
  1082                           ;./LCD4bits.h: 71:   Lcd_Cmd(0x03);
  1083  0577  3003               	movlw	3
  1084  0578  120A  118A  22F1  120A  118A  	fcall	_Lcd_Cmd
  1085                           
  1086                           ;./LCD4bits.h: 72:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1087  057D  301D               	movlw	29
  1088  057E  00F5               	movwf	??_Lcd_Init+1
  1089  057F  3091               	movlw	145
  1090  0580  00F4               	movwf	??_Lcd_Init
  1091  0581                     u1017:	
  1092  0581  0BF4               	decfsz	??_Lcd_Init,f
  1093  0582  2D81               	goto	u1017
  1094  0583  0BF5               	decfsz	??_Lcd_Init+1,f
  1095  0584  2D81               	goto	u1017
  1096                           
  1097                           ;./LCD4bits.h: 73:   Lcd_Cmd(0x03);
  1098  0585  3003               	movlw	3
  1099  0586  120A  118A  22F1  120A  118A  	fcall	_Lcd_Cmd
  1100                           
  1101                           ;./LCD4bits.h: 75:   Lcd_Cmd(0x02);
  1102  058B  3002               	movlw	2
  1103  058C  120A  118A  22F1  120A  118A  	fcall	_Lcd_Cmd
  1104                           
  1105                           ;./LCD4bits.h: 76:   Lcd_Cmd(0x02);
  1106  0591  3002               	movlw	2
  1107  0592  120A  118A  22F1  120A  118A  	fcall	_Lcd_Cmd
  1108                           
  1109                           ;./LCD4bits.h: 77:   Lcd_Cmd(0x08);
  1110  0597  3008               	movlw	8
  1111  0598  120A  118A  22F1  120A  118A  	fcall	_Lcd_Cmd
  1112                           
  1113                           ;./LCD4bits.h: 78:   Lcd_Cmd(0x00);
  1114  059D  3000               	movlw	0
  1115  059E  120A  118A  22F1  120A  118A  	fcall	_Lcd_Cmd
  1116                           
  1117                           ;./LCD4bits.h: 79:   Lcd_Cmd(0x0C);
  1118  05A3  300C               	movlw	12
  1119  05A4  120A  118A  22F1  120A  118A  	fcall	_Lcd_Cmd
  1120                           
  1121                           ;./LCD4bits.h: 80:   Lcd_Cmd(0x00);
  1122  05A9  3000               	movlw	0
  1123  05AA  120A  118A  22F1  120A  118A  	fcall	_Lcd_Cmd
  1124                           
  1125                           ;./LCD4bits.h: 81:   Lcd_Cmd(0x06);
  1126  05AF  3006               	movlw	6
  1127  05B0  120A  118A  22F1   	fcall	_Lcd_Cmd
  1128  05B3  0008               	return
  1129  05B4                     __end_of_Lcd_Init:	
  1130                           
  1131                           	psect	text4
  1132  03D0                     __ptext4:	
  1133 ;; *************** function _I2C_Master_Init *****************
  1134 ;; Defined at:
  1135 ;;		line 16 in file "./I2C.h"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;  c               4    0[BANK0 ] const unsigned long 
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, status,2, status,0, pclath, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1149 ;;      Params:         0       4       0       0       0
  1150 ;;      Locals:         0       0       0       0       0
  1151 ;;      Temps:          0       4       0       0       0
  1152 ;;      Totals:         0       8       0       0       0
  1153 ;;Total ram usage:        8 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; Hardware stack levels required when called:    1
  1156 ;; This function calls:
  1157 ;;		___lldiv
  1158 ;; This function is called by:
  1159 ;;		_setup
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           
  1164                           ;psect for function _I2C_Master_Init
  1165  03D0                     _I2C_Master_Init:	
  1166                           
  1167                           ;./I2C.h: 16: void I2C_Master_Init(const unsigned long c);./I2C.h: 17: {;./I2C.h: 18:   
      +                            SSPCON = 0b00101000;
  1168                           
  1169                           ;incstack = 0
  1170                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1171  03D0  3028               	movlw	40
  1172  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  1173  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  1174  03D3  0094               	movwf	20	;volatile
  1175                           
  1176                           ;./I2C.h: 19:     SSPCON2 = 0;
  1177  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  1178  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  1179  03D6  0191               	clrf	17	;volatile
  1180                           
  1181                           ;./I2C.h: 20:     SSPADD = (8000000/(4*c))-1;
  1182  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  1183  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  1184  03D9  0820               	movf	I2C_Master_Init@c,w
  1185  03DA  00A4               	movwf	??_I2C_Master_Init
  1186  03DB  0821               	movf	I2C_Master_Init@c+1,w
  1187  03DC  00A5               	movwf	??_I2C_Master_Init+1
  1188  03DD  0822               	movf	I2C_Master_Init@c+2,w
  1189  03DE  00A6               	movwf	??_I2C_Master_Init+2
  1190  03DF  0823               	movf	I2C_Master_Init@c+3,w
  1191  03E0  00A7               	movwf	??_I2C_Master_Init+3
  1192  03E1  3002               	movlw	2
  1193  03E2                     u765:	
  1194  03E2  1003               	clrc
  1195  03E3  0DA4               	rlf	??_I2C_Master_Init,f
  1196  03E4  0DA5               	rlf	??_I2C_Master_Init+1,f
  1197  03E5  0DA6               	rlf	??_I2C_Master_Init+2,f
  1198  03E6  0DA7               	rlf	??_I2C_Master_Init+3,f
  1199  03E7  3EFF               	addlw	-1
  1200  03E8  1D03               	skipz
  1201  03E9  2BE2               	goto	u765
  1202  03EA  0827               	movf	??_I2C_Master_Init+3,w
  1203  03EB  00F3               	movwf	___lldiv@divisor+3
  1204  03EC  0826               	movf	??_I2C_Master_Init+2,w
  1205  03ED  00F2               	movwf	___lldiv@divisor+2
  1206  03EE  0825               	movf	??_I2C_Master_Init+1,w
  1207  03EF  00F1               	movwf	___lldiv@divisor+1
  1208  03F0  0824               	movf	??_I2C_Master_Init,w
  1209  03F1  00F0               	movwf	___lldiv@divisor
  1210  03F2  3000               	movlw	0
  1211  03F3  00F7               	movwf	___lldiv@dividend+3
  1212  03F4  307A               	movlw	122
  1213  03F5  00F6               	movwf	___lldiv@dividend+2
  1214  03F6  3012               	movlw	18
  1215  03F7  00F5               	movwf	___lldiv@dividend+1
  1216  03F8  3000               	movlw	0
  1217  03F9  00F4               	movwf	___lldiv@dividend
  1218  03FA  120A  118A  25B4   	fcall	___lldiv
  1219  03FD  0870               	movf	?___lldiv,w
  1220  03FE  3EFF               	addlw	255
  1221  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  1222  0400  1303               	bcf	3,6	;RP1=0, select bank1
  1223  0401  0093               	movwf	19	;volatile
  1224                           
  1225                           ;./I2C.h: 21:     SSPSTAT = 0;
  1226  0402  0194               	clrf	20	;volatile
  1227                           
  1228                           ;./I2C.h: 22:     TRISC3 = 1;
  1229  0403  1587               	bsf	7,3	;volatile
  1230                           
  1231                           ;./I2C.h: 23:     TRISC4 = 1;
  1232  0404  1607               	bsf	7,4	;volatile
  1233  0405  0008               	return
  1234  0406                     __end_of_I2C_Master_Init:	
  1235                           
  1236                           	psect	text5
  1237  05B4                     __ptext5:	
  1238 ;; *************** function ___lldiv *****************
  1239 ;; Defined at:
  1240 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  divisor         4    0[COMMON] unsigned long 
  1243 ;;  dividend        4    4[COMMON] unsigned long 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  quotient        4    9[COMMON] unsigned long 
  1246 ;;  counter         1   13[COMMON] unsigned char 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  4    0[COMMON] unsigned long 
  1249 ;; Registers used:
  1250 ;;		wreg, status,2, status,0
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1256 ;;      Params:         8       0       0       0       0
  1257 ;;      Locals:         5       0       0       0       0
  1258 ;;      Temps:          1       0       0       0       0
  1259 ;;      Totals:        14       0       0       0       0
  1260 ;;Total ram usage:       14 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; This function calls:
  1263 ;;		Nothing
  1264 ;; This function is called by:
  1265 ;;		_I2C_Master_Init
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           
  1270                           ;psect for function ___lldiv
  1271  05B4                     ___lldiv:	
  1272                           
  1273                           ;incstack = 0
  1274                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1275  05B4  3000               	movlw	0
  1276  05B5  00FC               	movwf	___lldiv@quotient+3
  1277  05B6  3000               	movlw	0
  1278  05B7  00FB               	movwf	___lldiv@quotient+2
  1279  05B8  3000               	movlw	0
  1280  05B9  00FA               	movwf	___lldiv@quotient+1
  1281  05BA  3000               	movlw	0
  1282  05BB  00F9               	movwf	___lldiv@quotient
  1283  05BC  0873               	movf	___lldiv@divisor+3,w
  1284  05BD  0472               	iorwf	___lldiv@divisor+2,w
  1285  05BE  0471               	iorwf	___lldiv@divisor+1,w
  1286  05BF  0470               	iorwf	___lldiv@divisor,w
  1287  05C0  1903               	skipnz
  1288  05C1  2E09               	goto	l1288
  1289  05C2  01FD               	clrf	___lldiv@counter
  1290  05C3  0AFD               	incf	___lldiv@counter,f
  1291  05C4                     l1274:	
  1292  05C4  1BF3               	btfsc	___lldiv@divisor+3,7
  1293  05C5  2DD4               	goto	l1276
  1294  05C6  3001               	movlw	1
  1295  05C7  00F8               	movwf	??___lldiv
  1296  05C8                     u575:	
  1297  05C8  1003               	clrc
  1298  05C9  0DF0               	rlf	___lldiv@divisor,f
  1299  05CA  0DF1               	rlf	___lldiv@divisor+1,f
  1300  05CB  0DF2               	rlf	___lldiv@divisor+2,f
  1301  05CC  0DF3               	rlf	___lldiv@divisor+3,f
  1302  05CD  0BF8               	decfsz	??___lldiv,f
  1303  05CE  2DC8               	goto	u575
  1304  05CF  3001               	movlw	1
  1305  05D0  00F8               	movwf	??___lldiv
  1306  05D1  0878               	movf	??___lldiv,w
  1307  05D2  07FD               	addwf	___lldiv@counter,f
  1308  05D3  2DC4               	goto	l1274
  1309  05D4                     l1276:	
  1310  05D4  3001               	movlw	1
  1311  05D5  00F8               	movwf	??___lldiv
  1312  05D6                     u595:	
  1313  05D6  1003               	clrc
  1314  05D7  0DF9               	rlf	___lldiv@quotient,f
  1315  05D8  0DFA               	rlf	___lldiv@quotient+1,f
  1316  05D9  0DFB               	rlf	___lldiv@quotient+2,f
  1317  05DA  0DFC               	rlf	___lldiv@quotient+3,f
  1318  05DB  0BF8               	decfsz	??___lldiv,f
  1319  05DC  2DD6               	goto	u595
  1320  05DD  0873               	movf	___lldiv@divisor+3,w
  1321  05DE  0277               	subwf	___lldiv@dividend+3,w
  1322  05DF  1D03               	skipz
  1323  05E0  2DEB               	goto	u605
  1324  05E1  0872               	movf	___lldiv@divisor+2,w
  1325  05E2  0276               	subwf	___lldiv@dividend+2,w
  1326  05E3  1D03               	skipz
  1327  05E4  2DEB               	goto	u605
  1328  05E5  0871               	movf	___lldiv@divisor+1,w
  1329  05E6  0275               	subwf	___lldiv@dividend+1,w
  1330  05E7  1D03               	skipz
  1331  05E8  2DEB               	goto	u605
  1332  05E9  0870               	movf	___lldiv@divisor,w
  1333  05EA  0274               	subwf	___lldiv@dividend,w
  1334  05EB                     u605:	
  1335  05EB  1C03               	skipc
  1336  05EC  2DFC               	goto	l1284
  1337  05ED  0870               	movf	___lldiv@divisor,w
  1338  05EE  02F4               	subwf	___lldiv@dividend,f
  1339  05EF  0871               	movf	___lldiv@divisor+1,w
  1340  05F0  1C03               	skipc
  1341  05F1  0F71               	incfsz	___lldiv@divisor+1,w
  1342  05F2  02F5               	subwf	___lldiv@dividend+1,f
  1343  05F3  0872               	movf	___lldiv@divisor+2,w
  1344  05F4  1C03               	skipc
  1345  05F5  0F72               	incfsz	___lldiv@divisor+2,w
  1346  05F6  02F6               	subwf	___lldiv@dividend+2,f
  1347  05F7  0873               	movf	___lldiv@divisor+3,w
  1348  05F8  1C03               	skipc
  1349  05F9  0F73               	incfsz	___lldiv@divisor+3,w
  1350  05FA  02F7               	subwf	___lldiv@dividend+3,f
  1351  05FB  1479               	bsf	___lldiv@quotient,0
  1352  05FC                     l1284:	
  1353  05FC  3001               	movlw	1
  1354  05FD                     u615:	
  1355  05FD  1003               	clrc
  1356  05FE  0CF3               	rrf	___lldiv@divisor+3,f
  1357  05FF  0CF2               	rrf	___lldiv@divisor+2,f
  1358  0600  0CF1               	rrf	___lldiv@divisor+1,f
  1359  0601  0CF0               	rrf	___lldiv@divisor,f
  1360  0602  3EFF               	addlw	-1
  1361  0603  1D03               	skipz
  1362  0604  2DFD               	goto	u615
  1363  0605  3001               	movlw	1
  1364  0606  02FD               	subwf	___lldiv@counter,f
  1365  0607  1D03               	btfss	3,2
  1366  0608  2DD4               	goto	l1276
  1367  0609                     l1288:	
  1368  0609  087C               	movf	___lldiv@quotient+3,w
  1369  060A  00F3               	movwf	?___lldiv+3
  1370  060B  087B               	movf	___lldiv@quotient+2,w
  1371  060C  00F2               	movwf	?___lldiv+2
  1372  060D  087A               	movf	___lldiv@quotient+1,w
  1373  060E  00F1               	movwf	?___lldiv+1
  1374  060F  0879               	movf	___lldiv@quotient,w
  1375  0610  00F0               	movwf	?___lldiv
  1376  0611  0008               	return
  1377  0612                     __end_of___lldiv:	
  1378                           
  1379                           	psect	text6
  1380  0612                     __ptext6:	
  1381 ;; *************** function _get_time *****************
  1382 ;; Defined at:
  1383 ;;		line 84 in file "mainMaster.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  string_time     6    0[BANK0 ] unsigned char [6]
  1388 ;;  min             1    7[BANK0 ] unsigned char 
  1389 ;;  hour            1    6[BANK0 ] unsigned char 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      PTR unsigned char 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, status,0, pclath, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1399 ;;      Params:         0       0       0       0       0
  1400 ;;      Locals:         0       8       0       0       0
  1401 ;;      Temps:          2       0       0       0       0
  1402 ;;      Totals:         2       8       0       0       0
  1403 ;;Total ram usage:       10 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    2
  1406 ;; This function calls:
  1407 ;;		_I2C_Master_Read
  1408 ;;		_I2C_Master_RepeatedStart
  1409 ;;		_I2C_Master_Start
  1410 ;;		_I2C_Master_Stop
  1411 ;;		_I2C_Master_Write
  1412 ;; This function is called by:
  1413 ;;		_main
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           
  1418                           ;psect for function _get_time
  1419  0612                     _get_time:	
  1420                           
  1421                           ;mainMaster.c: 85:     char hour, min;;mainMaster.c: 86:     char string_time[6];;mainMa
      +                          ster.c: 88:     I2C_Master_Start();
  1422                           
  1423                           ;incstack = 0
  1424                           ; Regs used in _get_time: [wreg+status,2+status,0+pclath+cstack]
  1425  0612  120A  118A  229C  120A  118A  	fcall	_I2C_Master_Start
  1426                           
  1427                           ;mainMaster.c: 89:     I2C_Master_Write(0xD0);
  1428  0617  30D0               	movlw	208
  1429  0618  00F0               	movwf	I2C_Master_Write@d
  1430  0619  3000               	movlw	0
  1431  061A  00F1               	movwf	I2C_Master_Write@d+1
  1432  061B  120A  118A  22AA  120A  118A  	fcall	_I2C_Master_Write
  1433                           
  1434                           ;mainMaster.c: 90:     I2C_Master_Write(0x01);
  1435  0620  3001               	movlw	1
  1436  0621  00F0               	movwf	I2C_Master_Write@d
  1437  0622  3000               	movlw	0
  1438  0623  00F1               	movwf	I2C_Master_Write@d+1
  1439  0624  120A  118A  22AA  120A  118A  	fcall	_I2C_Master_Write
  1440                           
  1441                           ;mainMaster.c: 91:     I2C_Master_RepeatedStart();
  1442  0629  120A  118A  2295  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1443                           
  1444                           ;mainMaster.c: 92:     I2C_Master_Write(0xD1);
  1445  062E  30D1               	movlw	209
  1446  062F  00F0               	movwf	I2C_Master_Write@d
  1447  0630  3000               	movlw	0
  1448  0631  00F1               	movwf	I2C_Master_Write@d+1
  1449  0632  120A  118A  22AA  120A  118A  	fcall	_I2C_Master_Write
  1450                           
  1451                           ;mainMaster.c: 93:     min = I2C_Master_Read(1);
  1452  0637  3001               	movlw	1
  1453  0638  00F0               	movwf	I2C_Master_Read@a
  1454  0639  3000               	movlw	0
  1455  063A  00F1               	movwf	I2C_Master_Read@a+1
  1456  063B  120A  118A  2372  120A  118A  	fcall	_I2C_Master_Read
  1457  0640  0870               	movf	?_I2C_Master_Read,w
  1458  0641  00F6               	movwf	??_get_time
  1459  0642  0876               	movf	??_get_time,w
  1460  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1461  0644  1303               	bcf	3,6	;RP1=0, select bank0
  1462  0645  00A7               	movwf	get_time@min
  1463                           
  1464                           ;mainMaster.c: 94:     hour = I2C_Master_Read(0);
  1465  0646  3000               	movlw	0
  1466  0647  00F0               	movwf	I2C_Master_Read@a
  1467  0648  00F1               	movwf	I2C_Master_Read@a+1
  1468  0649  120A  118A  2372  120A  118A  	fcall	_I2C_Master_Read
  1469  064E  0870               	movf	?_I2C_Master_Read,w
  1470  064F  00F6               	movwf	??_get_time
  1471  0650  0876               	movf	??_get_time,w
  1472  0651  1283               	bcf	3,5	;RP0=0, select bank0
  1473  0652  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0653  00A6               	movwf	get_time@hour
  1475                           
  1476                           ;mainMaster.c: 95:     I2C_Master_Stop();
  1477  0654  120A  118A  22A3  120A  118A  	fcall	_I2C_Master_Stop
  1478                           
  1479                           ;mainMaster.c: 97:     string_time[0] = (hour >> 4) + '0';
  1480  0659  1283               	bcf	3,5	;RP0=0, select bank0
  1481  065A  1303               	bcf	3,6	;RP1=0, select bank0
  1482  065B  0826               	movf	get_time@hour,w
  1483  065C  00F6               	movwf	??_get_time
  1484  065D  3004               	movlw	4
  1485  065E                     u955:	
  1486  065E  1003               	clrc
  1487  065F  0CF6               	rrf	??_get_time,f
  1488  0660  3EFF               	addlw	-1
  1489  0661  1D03               	skipz
  1490  0662  2E5E               	goto	u955
  1491  0663  0876               	movf	??_get_time,w
  1492  0664  3E30               	addlw	48
  1493  0665  00F7               	movwf	??_get_time+1
  1494  0666  0877               	movf	??_get_time+1,w
  1495  0667  00A0               	movwf	get_time@string_time
  1496                           
  1497                           ;mainMaster.c: 98:     string_time[1] = (hour & 0x0F) + '0';
  1498  0668  0826               	movf	get_time@hour,w
  1499  0669  390F               	andlw	15
  1500  066A  3E30               	addlw	48
  1501  066B  00F6               	movwf	??_get_time
  1502  066C  0876               	movf	??_get_time,w
  1503  066D  00A1               	movwf	get_time@string_time+1
  1504                           
  1505                           ;mainMaster.c: 99:     string_time[2] = ':';
  1506  066E  303A               	movlw	58
  1507  066F  00F6               	movwf	??_get_time
  1508  0670  0876               	movf	??_get_time,w
  1509  0671  00A2               	movwf	get_time@string_time+2
  1510                           
  1511                           ;mainMaster.c: 100:     string_time[3] = (min >> 4) + '0';
  1512  0672  0827               	movf	get_time@min,w
  1513  0673  00F6               	movwf	??_get_time
  1514  0674  3004               	movlw	4
  1515  0675                     u965:	
  1516  0675  1003               	clrc
  1517  0676  0CF6               	rrf	??_get_time,f
  1518  0677  3EFF               	addlw	-1
  1519  0678  1D03               	skipz
  1520  0679  2E75               	goto	u965
  1521  067A  0876               	movf	??_get_time,w
  1522  067B  3E30               	addlw	48
  1523  067C  00F7               	movwf	??_get_time+1
  1524  067D  0877               	movf	??_get_time+1,w
  1525  067E  00A3               	movwf	get_time@string_time+3
  1526                           
  1527                           ;mainMaster.c: 101:     string_time[4] = (min & 0x0F) + '0';
  1528  067F  0827               	movf	get_time@min,w
  1529  0680  390F               	andlw	15
  1530  0681  3E30               	addlw	48
  1531  0682  00F6               	movwf	??_get_time
  1532  0683  0876               	movf	??_get_time,w
  1533  0684  00A4               	movwf	get_time@string_time+4
  1534                           
  1535                           ;mainMaster.c: 102:     string_time[5] = '\0';
  1536  0685  01A5               	clrf	get_time@string_time+5
  1537                           
  1538                           ;mainMaster.c: 104:     return (string_time);
  1539  0686  3020               	movlw	(low (get_time@string_time| 0))& (0+255)
  1540  0687  0008               	return
  1541  0688                     __end_of_get_time:	
  1542                           
  1543                           	psect	text7
  1544  0688                     __ptext7:	
  1545 ;; *************** function _get_temp *****************
  1546 ;; Defined at:
  1547 ;;		line 121 in file "mainMaster.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;  temperature     6   16[BANK0 ] unsigned char [6]
  1552 ;;  decimal         3   23[BANK0 ] unsigned char [3]
  1553 ;;  tempLSB         1   26[BANK0 ] unsigned char 
  1554 ;;  tempMSB         1   22[BANK0 ] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      PTR unsigned char 
  1557 ;; Registers used:
  1558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1564 ;;      Params:         0       0       0       0       0
  1565 ;;      Locals:         0      11       0       0       0
  1566 ;;      Temps:          0       3       0       0       0
  1567 ;;      Totals:         0      14       0       0       0
  1568 ;;Total ram usage:       14 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:    2
  1571 ;; This function calls:
  1572 ;;		_I2C_Master_Read
  1573 ;;		_I2C_Master_RepeatedStart
  1574 ;;		_I2C_Master_Start
  1575 ;;		_I2C_Master_Stop
  1576 ;;		_I2C_Master_Write
  1577 ;;		___bmul
  1578 ;;		_sprintf
  1579 ;;		_strcat
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           
  1586                           ;psect for function _get_temp
  1587  0688                     _get_temp:	
  1588                           
  1589                           ;mainMaster.c: 122:     char tempLSB, tempMSB;;mainMaster.c: 123:     char temperature[6
      +                          ], decimal[3];;mainMaster.c: 125:     I2C_Master_Start();
  1590                           
  1591                           ;incstack = 0
  1592                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1593  0688  120A  118A  229C  120A  118A  	fcall	_I2C_Master_Start
  1594                           
  1595                           ;mainMaster.c: 126:     I2C_Master_Write(0xD0);
  1596  068D  30D0               	movlw	208
  1597  068E  00F0               	movwf	I2C_Master_Write@d
  1598  068F  3000               	movlw	0
  1599  0690  00F1               	movwf	I2C_Master_Write@d+1
  1600  0691  120A  118A  22AA  120A  118A  	fcall	_I2C_Master_Write
  1601                           
  1602                           ;mainMaster.c: 127:     I2C_Master_Write(0x11);
  1603  0696  3011               	movlw	17
  1604  0697  00F0               	movwf	I2C_Master_Write@d
  1605  0698  3000               	movlw	0
  1606  0699  00F1               	movwf	I2C_Master_Write@d+1
  1607  069A  120A  118A  22AA  120A  118A  	fcall	_I2C_Master_Write
  1608                           
  1609                           ;mainMaster.c: 128:     I2C_Master_RepeatedStart();
  1610  069F  120A  118A  2295  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1611                           
  1612                           ;mainMaster.c: 129:     I2C_Master_Write(0xD1);
  1613  06A4  30D1               	movlw	209
  1614  06A5  00F0               	movwf	I2C_Master_Write@d
  1615  06A6  3000               	movlw	0
  1616  06A7  00F1               	movwf	I2C_Master_Write@d+1
  1617  06A8  120A  118A  22AA  120A  118A  	fcall	_I2C_Master_Write
  1618                           
  1619                           ;mainMaster.c: 130:     tempMSB = I2C_Master_Read(1);
  1620  06AD  3001               	movlw	1
  1621  06AE  00F0               	movwf	I2C_Master_Read@a
  1622  06AF  3000               	movlw	0
  1623  06B0  00F1               	movwf	I2C_Master_Read@a+1
  1624  06B1  120A  118A  2372  120A  118A  	fcall	_I2C_Master_Read
  1625  06B6  0870               	movf	?_I2C_Master_Read,w
  1626  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  1627  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  1628  06B9  00AD               	movwf	??_get_temp
  1629  06BA  082D               	movf	??_get_temp,w
  1630  06BB  00B6               	movwf	get_temp@tempMSB
  1631                           
  1632                           ;mainMaster.c: 131:     tempLSB = I2C_Master_Read(0);
  1633  06BC  3000               	movlw	0
  1634  06BD  00F0               	movwf	I2C_Master_Read@a
  1635  06BE  00F1               	movwf	I2C_Master_Read@a+1
  1636  06BF  120A  118A  2372  120A  118A  	fcall	_I2C_Master_Read
  1637  06C4  0870               	movf	?_I2C_Master_Read,w
  1638  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  1639  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  1640  06C7  00AD               	movwf	??_get_temp
  1641  06C8  082D               	movf	??_get_temp,w
  1642  06C9  00BA               	movwf	get_temp@tempLSB
  1643                           
  1644                           ;mainMaster.c: 132:     I2C_Master_Stop();
  1645  06CA  120A  118A  22A3  120A  118A  	fcall	_I2C_Master_Stop
  1646                           
  1647                           ;mainMaster.c: 135:     tempLSB = (tempLSB >> 6) * 25;
  1648  06CF  3019               	movlw	25
  1649  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  1650  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  1651  06D2  00AD               	movwf	??_get_temp
  1652  06D3  082D               	movf	??_get_temp,w
  1653  06D4  00F0               	movwf	___bmul@multiplicand
  1654  06D5  083A               	movf	get_temp@tempLSB,w
  1655  06D6  00AE               	movwf	??_get_temp+1
  1656  06D7  3006               	movlw	6
  1657  06D8                     u975:	
  1658  06D8  1003               	clrc
  1659  06D9  0CAE               	rrf	??_get_temp+1,f
  1660  06DA  3EFF               	addlw	-1
  1661  06DB  1D03               	skipz
  1662  06DC  2ED8               	goto	u975
  1663  06DD  082E               	movf	??_get_temp+1,w
  1664  06DE  120A  118A  22C6  120A  118A  	fcall	___bmul
  1665  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1666  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1667  06E5  00AF               	movwf	??_get_temp+2
  1668  06E6  082F               	movf	??_get_temp+2,w
  1669  06E7  00BA               	movwf	get_temp@tempLSB
  1670                           
  1671                           ;mainMaster.c: 136:     sprintf(temperature, "%d", tempMSB);
  1672  06E8  3011               	movlw	(low (((STR_3+1)-__stringbase)| (0+32768)))& (0+255)
  1673  06E9  00AD               	movwf	??_get_temp
  1674  06EA  082D               	movf	??_get_temp,w
  1675  06EB  00A0               	movwf	sprintf@f
  1676  06EC  0836               	movf	get_temp@tempMSB,w
  1677  06ED  00AE               	movwf	??_get_temp+1
  1678  06EE  01AF               	clrf	??_get_temp+2
  1679  06EF  082E               	movf	??_get_temp+1,w
  1680  06F0  00A1               	movwf	?_sprintf+1
  1681  06F1  082F               	movf	??_get_temp+2,w
  1682  06F2  00A2               	movwf	?_sprintf+2
  1683  06F3  3030               	movlw	(low (get_temp@temperature| 0))& (0+255)
  1684  06F4  120A  118A  2720  120A  118A  	fcall	_sprintf
  1685                           
  1686                           ;mainMaster.c: 137:     if (tempLSB == 0){
  1687  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  1688  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  1689  06FB  083A               	movf	get_temp@tempLSB,w
  1690  06FC  1D03               	btfss	3,2
  1691  06FD  2F00               	goto	l1602
  1692                           
  1693                           ;mainMaster.c: 138:         sprintf(decimal, ".%d0", tempLSB);
  1694  06FE  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1695  06FF  2F01               	goto	L6
  1696  0700                     l1602:	
  1697                           ;mainMaster.c: 139:     } else {
  1698                           
  1699                           
  1700                           ;mainMaster.c: 140:         sprintf(decimal, ".%d", tempLSB);
  1701  0700  3010               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1702  0701                     L6:	
  1703  0701  00AD               	movwf	??_get_temp
  1704  0702  082D               	movf	??_get_temp,w
  1705  0703  00A0               	movwf	sprintf@f
  1706  0704  083A               	movf	get_temp@tempLSB,w
  1707  0705  00AE               	movwf	??_get_temp+1
  1708  0706  01AF               	clrf	??_get_temp+2
  1709  0707  082E               	movf	??_get_temp+1,w
  1710  0708  00A1               	movwf	?_sprintf+1
  1711  0709  082F               	movf	??_get_temp+2,w
  1712  070A  00A2               	movwf	?_sprintf+2
  1713  070B  3037               	movlw	(low (get_temp@decimal| 0))& (0+255)
  1714  070C  120A  118A  2720  120A  118A  	fcall	_sprintf
  1715                           
  1716                           ;mainMaster.c: 142:     strcat(temperature, decimal);
  1717  0711  3037               	movlw	(low (get_temp@decimal| 0))& (0+255)
  1718  0712  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0713  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0714  00AD               	movwf	??_get_temp
  1721  0715  082D               	movf	??_get_temp,w
  1722  0716  00F0               	movwf	strcat@from
  1723  0717  3030               	movlw	(low (get_temp@temperature| 0))& (0+255)
  1724  0718  120A  118A  2329   	fcall	_strcat
  1725                           
  1726                           ;mainMaster.c: 143:     temperature[5] = '\0';
  1727  071B  1283               	bcf	3,5	;RP0=0, select bank0
  1728  071C  1303               	bcf	3,6	;RP1=0, select bank0
  1729  071D  01B5               	clrf	get_temp@temperature+5
  1730                           
  1731                           ;mainMaster.c: 145:     return (temperature);
  1732  071E  3030               	movlw	(low (get_temp@temperature| 0))& (0+255)
  1733  071F  0008               	return
  1734  0720                     __end_of_get_temp:	
  1735                           
  1736                           	psect	text8
  1737  0329                     __ptext8:	
  1738 ;; *************** function _strcat *****************
  1739 ;; Defined at:
  1740 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcat.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  to              1    wreg     PTR unsigned char 
  1743 ;;		 -> get_temp@temperature(6), 
  1744 ;;  from            1    0[COMMON] PTR const unsigned char 
  1745 ;;		 -> get_temp@decimal(3), 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  to              1    2[COMMON] PTR unsigned char 
  1748 ;;		 -> get_temp@temperature(6), 
  1749 ;;  cp              1    3[COMMON] PTR unsigned char 
  1750 ;;		 -> get_temp@temperature(6), 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      PTR unsigned char 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1760 ;;      Params:         1       0       0       0       0
  1761 ;;      Locals:         2       0       0       0       0
  1762 ;;      Temps:          1       0       0       0       0
  1763 ;;      Totals:         4       0       0       0       0
  1764 ;;Total ram usage:        4 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		_get_temp
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           
  1774                           ;psect for function _strcat
  1775  0329                     _strcat:	
  1776                           
  1777                           ;incstack = 0
  1778                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  1779                           ;strcat@to stored from wreg
  1780  0329  00F2               	movwf	strcat@to
  1781  032A  0872               	movf	strcat@to,w
  1782  032B  00F1               	movwf	??_strcat
  1783  032C  0871               	movf	??_strcat,w
  1784  032D  00F3               	movwf	strcat@cp
  1785  032E                     l1508:	
  1786  032E  0873               	movf	strcat@cp,w
  1787  032F  0084               	movwf	4
  1788  0330  1383               	bcf	3,7	;select IRP bank0
  1789  0331  0800               	movf	0,w
  1790  0332  1903               	btfsc	3,2
  1791  0333  2B41               	goto	l1512
  1792  0334  3001               	movlw	1
  1793  0335  00F1               	movwf	??_strcat
  1794  0336  0871               	movf	??_strcat,w
  1795  0337  07F3               	addwf	strcat@cp,f
  1796  0338  2B2E               	goto	l1508
  1797  0339                     l1510:	
  1798  0339  3001               	movlw	1
  1799  033A  00F1               	movwf	??_strcat
  1800  033B  0871               	movf	??_strcat,w
  1801  033C  07F3               	addwf	strcat@cp,f
  1802  033D  3001               	movlw	1
  1803  033E  00F1               	movwf	??_strcat
  1804  033F  0871               	movf	??_strcat,w
  1805  0340  07F0               	addwf	strcat@from,f
  1806  0341                     l1512:	
  1807  0341  0870               	movf	strcat@from,w
  1808  0342  0084               	movwf	4
  1809  0343  0800               	movf	0,w
  1810  0344  00F1               	movwf	??_strcat
  1811  0345  0873               	movf	strcat@cp,w
  1812  0346  0084               	movwf	4
  1813  0347  0871               	movf	??_strcat,w
  1814  0348  0080               	movwf	0
  1815  0349  0800               	movf	0,w
  1816  034A  1903               	btfsc	3,2
  1817  034B  0008               	return
  1818  034C  2B39               	goto	l1510
  1819  034D                     __end_of_strcat:	
  1820                           
  1821                           	psect	text9
  1822  0720                     __ptext9:	
  1823 ;; *************** function _sprintf *****************
  1824 ;; Defined at:
  1825 ;;		line 500 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;  sp              1    wreg     PTR unsigned char 
  1828 ;;		 -> get_temp@decimal(3), get_temp@temperature(6), 
  1829 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1830 ;;		 -> STR_3(4), STR_2(5), STR_1(3), 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1833 ;;		 -> get_temp@decimal(3), get_temp@temperature(6), 
  1834 ;;  tmpval          4    0        struct .
  1835 ;;  val             2    9[BANK0 ] unsigned int 
  1836 ;;  cp              2    0        PTR const unsigned char 
  1837 ;;  len             2    0        unsigned int 
  1838 ;;  c               1   12[BANK0 ] unsigned char 
  1839 ;;  prec            1    8[BANK0 ] char 
  1840 ;;  flag            1    7[BANK0 ] unsigned char 
  1841 ;;  ap              1    6[BANK0 ] PTR void [1]
  1842 ;;		 -> ?_sprintf(2), 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  2    0[BANK0 ] int 
  1845 ;; Registers used:
  1846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1852 ;;      Params:         0       3       0       0       0
  1853 ;;      Locals:         0       7       0       0       0
  1854 ;;      Temps:          0       3       0       0       0
  1855 ;;      Totals:         0      13       0       0       0
  1856 ;;Total ram usage:       13 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    1
  1859 ;; This function calls:
  1860 ;;		___lwdiv
  1861 ;;		___lwmod
  1862 ;; This function is called by:
  1863 ;;		_get_temp
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           
  1868                           ;psect for function _sprintf
  1869  0720                     _sprintf:	
  1870                           
  1871                           ;incstack = 0
  1872                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1873                           ;sprintf@sp stored from wreg
  1874  0720  1283               	bcf	3,5	;RP0=0, select bank0
  1875  0721  1303               	bcf	3,6	;RP1=0, select bank0
  1876  0722  00AB               	movwf	sprintf@sp
  1877                           
  1878                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;D:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  1879  0723  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1880  0724  00A3               	movwf	??_sprintf
  1881  0725  0823               	movf	??_sprintf,w
  1882  0726  00A6               	movwf	sprintf@ap
  1883  0727                     l1494:	
  1884                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1885                           
  1886                           
  1887                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1888  0727  3001               	movlw	1
  1889  0728  07A0               	addwf	sprintf@f,f
  1890  0729  30FF               	movlw	-1
  1891  072A  0720               	addwf	sprintf@f,w
  1892  072B  0084               	movwf	4
  1893  072C  120A  118A  2003  120A  118A  	fcall	stringdir
  1894  0731  00A3               	movwf	??_sprintf
  1895  0732  0823               	movf	??_sprintf,w
  1896  0733  00AC               	movwf	sprintf@c
  1897  0734  082C               	movf	sprintf@c,w
  1898  0735  1903               	btfsc	3,2
  1899  0736  2FF3               	goto	l1496
  1900                           
  1901                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1902  0737  3025               	movlw	37
  1903  0738  062C               	xorwf	sprintf@c,w
  1904  0739  1903               	btfsc	3,2
  1905  073A  2F47               	goto	l1450
  1906                           
  1907                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;D:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1908  073B  082C               	movf	sprintf@c,w
  1909  073C  00A3               	movwf	??_sprintf
  1910  073D  082B               	movf	sprintf@sp,w
  1911  073E  0084               	movwf	4
  1912  073F  0823               	movf	??_sprintf,w
  1913  0740  1383               	bcf	3,7	;select IRP bank0
  1914  0741  0080               	movwf	0
  1915  0742  3001               	movlw	1
  1916  0743  00A3               	movwf	??_sprintf
  1917  0744  0823               	movf	??_sprintf,w
  1918  0745  07AB               	addwf	sprintf@sp,f
  1919                           
  1920                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1921  0746  2F27               	goto	l1494
  1922  0747                     l1450:	
  1923                           
  1924                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1925  0747  01A7               	clrf	sprintf@flag
  1926                           
  1927                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  1928  0748  3001               	movlw	1
  1929  0749  07A0               	addwf	sprintf@f,f
  1930  074A  30FF               	movlw	-1
  1931  074B  0720               	addwf	sprintf@f,w
  1932  074C  0084               	movwf	4
  1933  074D  120A  118A  2003  120A  118A  	fcall	stringdir
  1934  0752  00AC               	movwf	sprintf@c
  1935  0753  00A3               	movwf	??_sprintf
  1936  0754  01A4               	clrf	??_sprintf+1
  1937                           
  1938                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1939                           ; Switch size 1, requested type "simple"
  1940                           ; Number of cases is 1, Range of values is 0 to 0
  1941                           ; switch strategies available:
  1942                           ; Name         Instructions Cycles
  1943                           ; simple_byte            4     3 (average)
  1944                           ; direct_byte           11     8 (fixed)
  1945                           ; jumptable            260     6 (fixed)
  1946                           ;	Chosen strategy is simple_byte
  1947  0755  0824               	movf	??_sprintf+1,w
  1948  0756  3A00               	xorlw	0	; case 0
  1949  0757  1903               	skipnz
  1950  0758  2F5A               	goto	l1680
  1951  0759  2F27               	goto	l1494
  1952  075A                     l1680:	
  1953                           
  1954                           ; Switch size 1, requested type "simple"
  1955                           ; Number of cases is 3, Range of values is 0 to 105
  1956                           ; switch strategies available:
  1957                           ; Name         Instructions Cycles
  1958                           ; simple_byte           10     6 (average)
  1959                           ; jumptable            260     6 (fixed)
  1960                           ;	Chosen strategy is simple_byte
  1961  075A  0823               	movf	??_sprintf,w
  1962  075B  3A00               	xorlw	0	; case 0
  1963  075C  1903               	skipnz
  1964  075D  2FF3               	goto	l1496
  1965  075E  3A64               	xorlw	100	; case 100
  1966  075F  1903               	skipnz
  1967  0760  2F65               	goto	l1456
  1968  0761  3A0D               	xorlw	13	; case 105
  1969  0762  1903               	skipnz
  1970  0763  2F65               	goto	l1456
  1971  0764  2F27               	goto	l1494
  1972  0765                     l1456:	
  1973                           
  1974                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1975  0765  0826               	movf	sprintf@ap,w
  1976  0766  0084               	movwf	4
  1977  0767  1383               	bcf	3,7	;select IRP bank0
  1978  0768  0800               	movf	0,w
  1979  0769  00A9               	movwf	sprintf@val
  1980  076A  0A84               	incf	4,f
  1981  076B  0800               	movf	0,w
  1982  076C  00AA               	movwf	sprintf@val+1
  1983  076D  3002               	movlw	2
  1984  076E  00A3               	movwf	??_sprintf
  1985  076F  0823               	movf	??_sprintf,w
  1986  0770  07A6               	addwf	sprintf@ap,f
  1987                           
  1988                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  1989  0771  1FAA               	btfss	sprintf@val+1,7
  1990  0772  2F7C               	goto	l1466
  1991                           
  1992                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  1993  0773  3003               	movlw	3
  1994  0774  00A3               	movwf	??_sprintf
  1995  0775  0823               	movf	??_sprintf,w
  1996  0776  04A7               	iorwf	sprintf@flag,f
  1997                           
  1998                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  1999  0777  09A9               	comf	sprintf@val,f
  2000  0778  09AA               	comf	sprintf@val+1,f
  2001  0779  0AA9               	incf	sprintf@val,f
  2002  077A  1903               	skipnz
  2003  077B  0AAA               	incf	sprintf@val+1,f
  2004  077C                     l1466:	
  2005                           
  2006                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2007  077C  01AC               	clrf	sprintf@c
  2008  077D  0AAC               	incf	sprintf@c,f
  2009  077E                     l1472:	
  2010                           
  2011                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  2012  077E  082C               	movf	sprintf@c,w
  2013  077F  00A3               	movwf	??_sprintf
  2014  0780  0723               	addwf	??_sprintf,w
  2015  0781  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2016  0782  0084               	movwf	4
  2017  0783  120A  118A  2003  120A  118A  	fcall	stringdir
  2018  0788  00A4               	movwf	??_sprintf+1
  2019  0789  120A  118A  2003  120A  118A  	fcall	stringdir
  2020  078E  00A5               	movwf	??_sprintf+2
  2021  078F  0825               	movf	??_sprintf+2,w
  2022  0790  022A               	subwf	sprintf@val+1,w
  2023  0791  1D03               	skipz
  2024  0792  2F95               	goto	u815
  2025  0793  0824               	movf	??_sprintf+1,w
  2026  0794  0229               	subwf	sprintf@val,w
  2027  0795                     u815:	
  2028  0795  1C03               	btfss	3,0
  2029  0796  2F9F               	goto	l1478
  2030  0797  3001               	movlw	1
  2031  0798  00A3               	movwf	??_sprintf
  2032  0799  0823               	movf	??_sprintf,w
  2033  079A  07AC               	addwf	sprintf@c,f
  2034  079B  3005               	movlw	5
  2035  079C  062C               	xorwf	sprintf@c,w
  2036  079D  1D03               	btfss	3,2
  2037  079E  2F7E               	goto	l1472
  2038  079F                     l1478:	
  2039                           
  2040                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  2041  079F  0827               	movf	sprintf@flag,w
  2042  07A0  3903               	andlw	3
  2043  07A1  1903               	btfsc	3,2
  2044  07A2  2FAE               	goto	l1484
  2045                           
  2046                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  2047  07A3  302D               	movlw	45
  2048  07A4  00A3               	movwf	??_sprintf
  2049  07A5  082B               	movf	sprintf@sp,w
  2050  07A6  0084               	movwf	4
  2051  07A7  0823               	movf	??_sprintf,w
  2052  07A8  1383               	bcf	3,7	;select IRP bank0
  2053  07A9  0080               	movwf	0
  2054  07AA  3001               	movlw	1
  2055  07AB  00A3               	movwf	??_sprintf
  2056  07AC  0823               	movf	??_sprintf,w
  2057  07AD  07AB               	addwf	sprintf@sp,f
  2058  07AE                     l1484:	
  2059                           
  2060                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  2061  07AE  082C               	movf	sprintf@c,w
  2062  07AF  00A3               	movwf	??_sprintf
  2063  07B0  0823               	movf	??_sprintf,w
  2064  07B1  00A8               	movwf	sprintf@prec
  2065  07B2                     l1492:	
  2066                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2067                           
  2068                           
  2069                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2070  07B2  30FF               	movlw	255
  2071  07B3  00A3               	movwf	??_sprintf
  2072  07B4  0823               	movf	??_sprintf,w
  2073  07B5  07A8               	addwf	sprintf@prec,f
  2074  07B6  0A28               	incf	sprintf@prec,w
  2075  07B7  1903               	btfsc	3,2
  2076  07B8  2F27               	goto	l1494
  2077                           
  2078                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  2079  07B9  300A               	movlw	10
  2080  07BA  00F8               	movwf	___lwmod@divisor
  2081  07BB  3000               	movlw	0
  2082  07BC  00F9               	movwf	___lwmod@divisor+1
  2083  07BD  0828               	movf	sprintf@prec,w
  2084  07BE  00A3               	movwf	??_sprintf
  2085  07BF  0723               	addwf	??_sprintf,w
  2086  07C0  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2087  07C1  0084               	movwf	4
  2088  07C2  120A  118A  2003  120A  118A  	fcall	stringdir
  2089  07C7  00F0               	movwf	___lwdiv@divisor
  2090  07C8  120A  118A  2003  120A  118A  	fcall	stringdir
  2091  07CD  00F1               	movwf	___lwdiv@divisor+1
  2092  07CE  082A               	movf	sprintf@val+1,w
  2093  07CF  00F3               	movwf	___lwdiv@dividend+1
  2094  07D0  0829               	movf	sprintf@val,w
  2095  07D1  00F2               	movwf	___lwdiv@dividend
  2096  07D2  120A  118A  243F  120A  118A  	fcall	___lwdiv
  2097  07D7  0871               	movf	?___lwdiv+1,w
  2098  07D8  00FB               	movwf	___lwmod@dividend+1
  2099  07D9  0870               	movf	?___lwdiv,w
  2100  07DA  00FA               	movwf	___lwmod@dividend
  2101  07DB  120A  118A  239E  120A  118A  	fcall	___lwmod
  2102  07E0  0878               	movf	?___lwmod,w
  2103  07E1  3E30               	addlw	48
  2104  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  2105  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  2106  07E4  00A4               	movwf	??_sprintf+1
  2107  07E5  0824               	movf	??_sprintf+1,w
  2108  07E6  00AC               	movwf	sprintf@c
  2109                           
  2110                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  2111  07E7  082C               	movf	sprintf@c,w
  2112  07E8  00A3               	movwf	??_sprintf
  2113  07E9  082B               	movf	sprintf@sp,w
  2114  07EA  0084               	movwf	4
  2115  07EB  0823               	movf	??_sprintf,w
  2116  07EC  1383               	bcf	3,7	;select IRP bank0
  2117  07ED  0080               	movwf	0
  2118  07EE  3001               	movlw	1
  2119  07EF  00A3               	movwf	??_sprintf
  2120  07F0  0823               	movf	??_sprintf,w
  2121  07F1  07AB               	addwf	sprintf@sp,f
  2122  07F2  2FB2               	goto	l1492
  2123  07F3                     l1496:	
  2124                           
  2125                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  2126  07F3  082B               	movf	sprintf@sp,w
  2127  07F4  0084               	movwf	4
  2128  07F5  1383               	bcf	3,7	;select IRP bank0
  2129  07F6  0180               	clrf	0
  2130  07F7  0008               	return
  2131  07F8                     __end_of_sprintf:	
  2132                           
  2133                           	psect	text10
  2134  039E                     __ptext10:	
  2135 ;; *************** function ___lwmod *****************
  2136 ;; Defined at:
  2137 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  divisor         2    8[COMMON] unsigned int 
  2140 ;;  dividend        2   10[COMMON] unsigned int 
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;  counter         1   13[COMMON] unsigned char 
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  2    8[COMMON] unsigned int 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2, status,0
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2152 ;;      Params:         4       0       0       0       0
  2153 ;;      Locals:         1       0       0       0       0
  2154 ;;      Temps:          1       0       0       0       0
  2155 ;;      Totals:         6       0       0       0       0
  2156 ;;Total ram usage:        6 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_sprintf
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           
  2166                           ;psect for function ___lwmod
  2167  039E                     ___lwmod:	
  2168                           
  2169                           ;incstack = 0
  2170                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2171  039E  0878               	movf	___lwmod@divisor,w
  2172  039F  0479               	iorwf	___lwmod@divisor+1,w
  2173  03A0  1903               	btfsc	3,2
  2174  03A1  2BCB               	goto	l1336
  2175  03A2  01FD               	clrf	___lwmod@counter
  2176  03A3  0AFD               	incf	___lwmod@counter,f
  2177  03A4                     l1326:	
  2178  03A4  1BF9               	btfsc	___lwmod@divisor+1,7
  2179  03A5  2BB2               	goto	l1328
  2180  03A6  3001               	movlw	1
  2181  03A7                     u715:	
  2182  03A7  1003               	clrc
  2183  03A8  0DF8               	rlf	___lwmod@divisor,f
  2184  03A9  0DF9               	rlf	___lwmod@divisor+1,f
  2185  03AA  3EFF               	addlw	-1
  2186  03AB  1D03               	skipz
  2187  03AC  2BA7               	goto	u715
  2188  03AD  3001               	movlw	1
  2189  03AE  00FC               	movwf	??___lwmod
  2190  03AF  087C               	movf	??___lwmod,w
  2191  03B0  07FD               	addwf	___lwmod@counter,f
  2192  03B1  2BA4               	goto	l1326
  2193  03B2                     l1328:	
  2194  03B2  0879               	movf	___lwmod@divisor+1,w
  2195  03B3  027B               	subwf	___lwmod@dividend+1,w
  2196  03B4  1D03               	skipz
  2197  03B5  2BB8               	goto	u735
  2198  03B6  0878               	movf	___lwmod@divisor,w
  2199  03B7  027A               	subwf	___lwmod@dividend,w
  2200  03B8                     u735:	
  2201  03B8  1C03               	skipc
  2202  03B9  2BC0               	goto	l1332
  2203  03BA  0878               	movf	___lwmod@divisor,w
  2204  03BB  02FA               	subwf	___lwmod@dividend,f
  2205  03BC  0879               	movf	___lwmod@divisor+1,w
  2206  03BD  1C03               	skipc
  2207  03BE  03FB               	decf	___lwmod@dividend+1,f
  2208  03BF  02FB               	subwf	___lwmod@dividend+1,f
  2209  03C0                     l1332:	
  2210  03C0  3001               	movlw	1
  2211  03C1                     u745:	
  2212  03C1  1003               	clrc
  2213  03C2  0CF9               	rrf	___lwmod@divisor+1,f
  2214  03C3  0CF8               	rrf	___lwmod@divisor,f
  2215  03C4  3EFF               	addlw	-1
  2216  03C5  1D03               	skipz
  2217  03C6  2BC1               	goto	u745
  2218  03C7  3001               	movlw	1
  2219  03C8  02FD               	subwf	___lwmod@counter,f
  2220  03C9  1D03               	btfss	3,2
  2221  03CA  2BB2               	goto	l1328
  2222  03CB                     l1336:	
  2223  03CB  087B               	movf	___lwmod@dividend+1,w
  2224  03CC  00F9               	movwf	?___lwmod+1
  2225  03CD  087A               	movf	___lwmod@dividend,w
  2226  03CE  00F8               	movwf	?___lwmod
  2227  03CF  0008               	return
  2228  03D0                     __end_of___lwmod:	
  2229                           
  2230                           	psect	text11
  2231  043F                     __ptext11:	
  2232 ;; *************** function ___lwdiv *****************
  2233 ;; Defined at:
  2234 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  divisor         2    0[COMMON] unsigned int 
  2237 ;;  dividend        2    2[COMMON] unsigned int 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  quotient        2    5[COMMON] unsigned int 
  2240 ;;  counter         1    7[COMMON] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  2    0[COMMON] unsigned int 
  2243 ;; Registers used:
  2244 ;;		wreg, status,2, status,0
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2250 ;;      Params:         4       0       0       0       0
  2251 ;;      Locals:         3       0       0       0       0
  2252 ;;      Temps:          1       0       0       0       0
  2253 ;;      Totals:         8       0       0       0       0
  2254 ;;Total ram usage:        8 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; This function calls:
  2257 ;;		Nothing
  2258 ;; This function is called by:
  2259 ;;		_sprintf
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           
  2264                           ;psect for function ___lwdiv
  2265  043F                     ___lwdiv:	
  2266                           
  2267                           ;incstack = 0
  2268                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2269  043F  01F5               	clrf	___lwdiv@quotient
  2270  0440  01F6               	clrf	___lwdiv@quotient+1
  2271  0441  0870               	movf	___lwdiv@divisor,w
  2272  0442  0471               	iorwf	___lwdiv@divisor+1,w
  2273  0443  1903               	btfsc	3,2
  2274  0444  2C76               	goto	l1314
  2275  0445  01F7               	clrf	___lwdiv@counter
  2276  0446  0AF7               	incf	___lwdiv@counter,f
  2277  0447                     l1302:	
  2278  0447  1BF1               	btfsc	___lwdiv@divisor+1,7
  2279  0448  2C55               	goto	l1304
  2280  0449  3001               	movlw	1
  2281  044A                     u645:	
  2282  044A  1003               	clrc
  2283  044B  0DF0               	rlf	___lwdiv@divisor,f
  2284  044C  0DF1               	rlf	___lwdiv@divisor+1,f
  2285  044D  3EFF               	addlw	-1
  2286  044E  1D03               	skipz
  2287  044F  2C4A               	goto	u645
  2288  0450  3001               	movlw	1
  2289  0451  00F4               	movwf	??___lwdiv
  2290  0452  0874               	movf	??___lwdiv,w
  2291  0453  07F7               	addwf	___lwdiv@counter,f
  2292  0454  2C47               	goto	l1302
  2293  0455                     l1304:	
  2294  0455  3001               	movlw	1
  2295  0456                     u665:	
  2296  0456  1003               	clrc
  2297  0457  0DF5               	rlf	___lwdiv@quotient,f
  2298  0458  0DF6               	rlf	___lwdiv@quotient+1,f
  2299  0459  3EFF               	addlw	-1
  2300  045A  1D03               	skipz
  2301  045B  2C56               	goto	u665
  2302  045C  0871               	movf	___lwdiv@divisor+1,w
  2303  045D  0273               	subwf	___lwdiv@dividend+1,w
  2304  045E  1D03               	skipz
  2305  045F  2C62               	goto	u675
  2306  0460  0870               	movf	___lwdiv@divisor,w
  2307  0461  0272               	subwf	___lwdiv@dividend,w
  2308  0462                     u675:	
  2309  0462  1C03               	skipc
  2310  0463  2C6B               	goto	l1310
  2311  0464  0870               	movf	___lwdiv@divisor,w
  2312  0465  02F2               	subwf	___lwdiv@dividend,f
  2313  0466  0871               	movf	___lwdiv@divisor+1,w
  2314  0467  1C03               	skipc
  2315  0468  03F3               	decf	___lwdiv@dividend+1,f
  2316  0469  02F3               	subwf	___lwdiv@dividend+1,f
  2317  046A  1475               	bsf	___lwdiv@quotient,0
  2318  046B                     l1310:	
  2319  046B  3001               	movlw	1
  2320  046C                     u685:	
  2321  046C  1003               	clrc
  2322  046D  0CF1               	rrf	___lwdiv@divisor+1,f
  2323  046E  0CF0               	rrf	___lwdiv@divisor,f
  2324  046F  3EFF               	addlw	-1
  2325  0470  1D03               	skipz
  2326  0471  2C6C               	goto	u685
  2327  0472  3001               	movlw	1
  2328  0473  02F7               	subwf	___lwdiv@counter,f
  2329  0474  1D03               	btfss	3,2
  2330  0475  2C55               	goto	l1304
  2331  0476                     l1314:	
  2332  0476  0876               	movf	___lwdiv@quotient+1,w
  2333  0477  00F1               	movwf	?___lwdiv+1
  2334  0478  0875               	movf	___lwdiv@quotient,w
  2335  0479  00F0               	movwf	?___lwdiv
  2336  047A  0008               	return
  2337  047B                     __end_of___lwdiv:	
  2338                           
  2339                           	psect	text12
  2340  02C6                     __ptext12:	
  2341 ;; *************** function ___bmul *****************
  2342 ;; Defined at:
  2343 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  multiplier      1    wreg     unsigned char 
  2346 ;;  multiplicand    1    0[COMMON] unsigned char 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  multiplier      1    3[COMMON] unsigned char 
  2349 ;;  product         1    2[COMMON] unsigned char 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      unsigned char 
  2352 ;; Registers used:
  2353 ;;		wreg, status,2, status,0
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2359 ;;      Params:         1       0       0       0       0
  2360 ;;      Locals:         2       0       0       0       0
  2361 ;;      Temps:          1       0       0       0       0
  2362 ;;      Totals:         4       0       0       0       0
  2363 ;;Total ram usage:        4 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; This function calls:
  2366 ;;		Nothing
  2367 ;; This function is called by:
  2368 ;;		_get_temp
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           
  2373                           ;psect for function ___bmul
  2374  02C6                     ___bmul:	
  2375                           
  2376                           ;incstack = 0
  2377                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2378                           ;___bmul@multiplier stored from wreg
  2379  02C6  00F3               	movwf	___bmul@multiplier
  2380  02C7  01F2               	clrf	___bmul@product
  2381  02C8                     l1516:	
  2382  02C8  1C73               	btfss	___bmul@multiplier,0
  2383  02C9  2ACE               	goto	l1520
  2384  02CA  0870               	movf	___bmul@multiplicand,w
  2385  02CB  00F1               	movwf	??___bmul
  2386  02CC  0871               	movf	??___bmul,w
  2387  02CD  07F2               	addwf	___bmul@product,f
  2388  02CE                     l1520:	
  2389  02CE  1003               	clrc
  2390  02CF  0DF0               	rlf	___bmul@multiplicand,f
  2391  02D0  1003               	clrc
  2392  02D1  0CF3               	rrf	___bmul@multiplier,f
  2393  02D2  0873               	movf	___bmul@multiplier,w
  2394  02D3  1D03               	btfss	3,2
  2395  02D4  2AC8               	goto	l1516
  2396  02D5  0872               	movf	___bmul@product,w
  2397  02D6  0008               	return
  2398  02D7                     __end_of___bmul:	
  2399                           
  2400                           	psect	text13
  2401  02AA                     __ptext13:	
  2402 ;; *************** function _I2C_Master_Write *****************
  2403 ;; Defined at:
  2404 ;;		line 65 in file "./I2C.h"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  d               2    0[COMMON] unsigned int 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0, pclath, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2418 ;;      Params:         2       0       0       0       0
  2419 ;;      Locals:         0       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0
  2421 ;;      Totals:         2       0       0       0       0
  2422 ;;Total ram usage:        2 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    1
  2425 ;; This function calls:
  2426 ;;		_I2C_Master_Wait
  2427 ;; This function is called by:
  2428 ;;		_get_time
  2429 ;;		_get_temp
  2430 ;;		_write_RTC
  2431 ;;		_get_day
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           
  2436                           ;psect for function _I2C_Master_Write
  2437  02AA                     _I2C_Master_Write:	
  2438                           
  2439                           ;./I2C.h: 65: void I2C_Master_Write(unsigned d);./I2C.h: 66: {;./I2C.h: 67:     I2C_Mast
      +                          er_Wait();
  2440                           
  2441                           ;incstack = 0
  2442                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2443  02AA  120A  118A  22B2   	fcall	_I2C_Master_Wait
  2444                           
  2445                           ;./I2C.h: 68:     SSPBUF = d;
  2446  02AD  0870               	movf	I2C_Master_Write@d,w
  2447  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  2448  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  2449  02B0  0093               	movwf	19	;volatile
  2450  02B1  0008               	return
  2451  02B2                     __end_of_I2C_Master_Write:	
  2452                           
  2453                           	psect	text14
  2454  02A3                     __ptext14:	
  2455 ;; *************** function _I2C_Master_Stop *****************
  2456 ;; Defined at:
  2457 ;;		line 55 in file "./I2C.h"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;		None
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;		None
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  1    wreg      void 
  2464 ;; Registers used:
  2465 ;;		wreg, status,2, status,0, pclath, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2471 ;;      Params:         0       0       0       0       0
  2472 ;;      Locals:         0       0       0       0       0
  2473 ;;      Temps:          0       0       0       0       0
  2474 ;;      Totals:         0       0       0       0       0
  2475 ;;Total ram usage:        0 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:    1
  2478 ;; This function calls:
  2479 ;;		_I2C_Master_Wait
  2480 ;; This function is called by:
  2481 ;;		_get_time
  2482 ;;		_get_temp
  2483 ;;		_write_RTC
  2484 ;;		_get_day
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           
  2489                           ;psect for function _I2C_Master_Stop
  2490  02A3                     _I2C_Master_Stop:	
  2491                           
  2492                           ;./I2C.h: 57:     I2C_Master_Wait();
  2493                           
  2494                           ;incstack = 0
  2495                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2496  02A3  120A  118A  22B2   	fcall	_I2C_Master_Wait
  2497                           
  2498                           ;./I2C.h: 58:     SSPCON2bits.PEN = 1;
  2499  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  2500  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  2501  02A8  1511               	bsf	17,2	;volatile
  2502  02A9  0008               	return
  2503  02AA                     __end_of_I2C_Master_Stop:	
  2504                           
  2505                           	psect	text15
  2506  029C                     __ptext15:	
  2507 ;; *************** function _I2C_Master_Start *****************
  2508 ;; Defined at:
  2509 ;;		line 39 in file "./I2C.h"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;		None
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;		None
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      void 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0, pclath, cstack
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2523 ;;      Params:         0       0       0       0       0
  2524 ;;      Locals:         0       0       0       0       0
  2525 ;;      Temps:          0       0       0       0       0
  2526 ;;      Totals:         0       0       0       0       0
  2527 ;;Total ram usage:        0 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    1
  2530 ;; This function calls:
  2531 ;;		_I2C_Master_Wait
  2532 ;; This function is called by:
  2533 ;;		_get_time
  2534 ;;		_get_temp
  2535 ;;		_write_RTC
  2536 ;;		_get_day
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           
  2541                           ;psect for function _I2C_Master_Start
  2542  029C                     _I2C_Master_Start:	
  2543                           
  2544                           ;./I2C.h: 41:     I2C_Master_Wait();
  2545                           
  2546                           ;incstack = 0
  2547                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2548  029C  120A  118A  22B2   	fcall	_I2C_Master_Wait
  2549                           
  2550                           ;./I2C.h: 42:     SSPCON2bits.SEN = 1;
  2551  029F  1683               	bsf	3,5	;RP0=1, select bank1
  2552  02A0  1303               	bcf	3,6	;RP1=0, select bank1
  2553  02A1  1411               	bsf	17,0	;volatile
  2554  02A2  0008               	return
  2555  02A3                     __end_of_I2C_Master_Start:	
  2556                           
  2557                           	psect	text16
  2558  0295                     __ptext16:	
  2559 ;; *************** function _I2C_Master_RepeatedStart *****************
  2560 ;; Defined at:
  2561 ;;		line 47 in file "./I2C.h"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;		None
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		wreg, status,2, status,0, pclath, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2575 ;;      Params:         0       0       0       0       0
  2576 ;;      Locals:         0       0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0
  2578 ;;      Totals:         0       0       0       0       0
  2579 ;;Total ram usage:        0 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; Hardware stack levels required when called:    1
  2582 ;; This function calls:
  2583 ;;		_I2C_Master_Wait
  2584 ;; This function is called by:
  2585 ;;		_get_time
  2586 ;;		_get_temp
  2587 ;;		_get_day
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           
  2592                           ;psect for function _I2C_Master_RepeatedStart
  2593  0295                     _I2C_Master_RepeatedStart:	
  2594                           
  2595                           ;./I2C.h: 49:     I2C_Master_Wait();
  2596                           
  2597                           ;incstack = 0
  2598                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2599  0295  120A  118A  22B2   	fcall	_I2C_Master_Wait
  2600                           
  2601                           ;./I2C.h: 50:     SSPCON2bits.RSEN = 1;
  2602  0298  1683               	bsf	3,5	;RP0=1, select bank1
  2603  0299  1303               	bcf	3,6	;RP1=0, select bank1
  2604  029A  1491               	bsf	17,1	;volatile
  2605  029B  0008               	return
  2606  029C                     __end_of_I2C_Master_RepeatedStart:	
  2607                           
  2608                           	psect	text17
  2609  0372                     __ptext17:	
  2610 ;; *************** function _I2C_Master_Read *****************
  2611 ;; Defined at:
  2612 ;;		line 74 in file "./I2C.h"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  a               2    0[COMMON] unsigned short 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  temp            2    4[COMMON] unsigned short 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  2    0[COMMON] unsigned short 
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0, pclath, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2626 ;;      Params:         2       0       0       0       0
  2627 ;;      Locals:         2       0       0       0       0
  2628 ;;      Temps:          2       0       0       0       0
  2629 ;;      Totals:         6       0       0       0       0
  2630 ;;Total ram usage:        6 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:    1
  2633 ;; This function calls:
  2634 ;;		_I2C_Master_Wait
  2635 ;; This function is called by:
  2636 ;;		_get_time
  2637 ;;		_get_temp
  2638 ;;		_get_day
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           
  2643                           ;psect for function _I2C_Master_Read
  2644  0372                     _I2C_Master_Read:	
  2645                           
  2646                           ;./I2C.h: 74: unsigned short I2C_Master_Read(unsigned short a);./I2C.h: 75: {;./I2C.h: 7
      +                          6:     unsigned short temp;;./I2C.h: 77:     I2C_Master_Wait();
  2647                           
  2648                           ;incstack = 0
  2649                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2650  0372  120A  118A  22B2  120A  118A  	fcall	_I2C_Master_Wait
  2651                           
  2652                           ;./I2C.h: 78:     RCEN = 1;
  2653  0377  1683               	bsf	3,5	;RP0=1, select bank1
  2654  0378  1303               	bcf	3,6	;RP1=0, select bank1
  2655  0379  1591               	bsf	17,3	;volatile
  2656                           
  2657                           ;./I2C.h: 79:     I2C_Master_Wait();
  2658  037A  120A  118A  22B2  120A  118A  	fcall	_I2C_Master_Wait
  2659                           
  2660                           ;./I2C.h: 80:     temp = SSPBUF;
  2661  037F  1283               	bcf	3,5	;RP0=0, select bank0
  2662  0380  1303               	bcf	3,6	;RP1=0, select bank0
  2663  0381  0813               	movf	19,w	;volatile
  2664  0382  00F2               	movwf	??_I2C_Master_Read
  2665  0383  01F3               	clrf	??_I2C_Master_Read+1
  2666  0384  0872               	movf	??_I2C_Master_Read,w
  2667  0385  00F4               	movwf	I2C_Master_Read@temp
  2668  0386  0873               	movf	??_I2C_Master_Read+1,w
  2669  0387  00F5               	movwf	I2C_Master_Read@temp+1
  2670                           
  2671                           ;./I2C.h: 81:     I2C_Master_Wait();
  2672  0388  120A  118A  22B2  120A  118A  	fcall	_I2C_Master_Wait
  2673                           
  2674                           ;./I2C.h: 83:     if(a == 1){
  2675  038D  0370               	decf	I2C_Master_Read@a,w
  2676  038E  0471               	iorwf	I2C_Master_Read@a+1,w
  2677  038F  1D03               	btfss	3,2
  2678  0390  2B95               	goto	l78
  2679                           
  2680                           ;./I2C.h: 84:         SSPCON2bits.ACKDT = 0;
  2681  0391  1683               	bsf	3,5	;RP0=1, select bank1
  2682  0392  1303               	bcf	3,6	;RP1=0, select bank1
  2683  0393  1291               	bcf	17,5	;volatile
  2684                           
  2685                           ;./I2C.h: 85:     }else{
  2686  0394  2B98               	goto	l79
  2687  0395                     l78:	
  2688                           
  2689                           ;./I2C.h: 86:         SSPCON2bits.ACKDT = 1;
  2690  0395  1683               	bsf	3,5	;RP0=1, select bank1
  2691  0396  1303               	bcf	3,6	;RP1=0, select bank1
  2692  0397  1691               	bsf	17,5	;volatile
  2693  0398                     l79:	
  2694                           ;./I2C.h: 87:     }
  2695                           
  2696                           
  2697                           ;./I2C.h: 88:     SSPCON2bits.ACKEN = 1;
  2698  0398  1611               	bsf	17,4	;volatile
  2699                           
  2700                           ;./I2C.h: 89:     return temp;
  2701  0399  0875               	movf	I2C_Master_Read@temp+1,w
  2702  039A  00F1               	movwf	?_I2C_Master_Read+1
  2703  039B  0874               	movf	I2C_Master_Read@temp,w
  2704  039C  00F0               	movwf	?_I2C_Master_Read
  2705  039D  0008               	return
  2706  039E                     __end_of_I2C_Master_Read:	
  2707                           
  2708                           	psect	text18
  2709  02B2                     __ptext18:	
  2710 ;; *************** function _I2C_Master_Wait *****************
  2711 ;; Defined at:
  2712 ;;		line 32 in file "./I2C.h"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;		None
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;		None
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      void 
  2719 ;; Registers used:
  2720 ;;		wreg, status,2
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2726 ;;      Params:         0       0       0       0       0
  2727 ;;      Locals:         0       0       0       0       0
  2728 ;;      Temps:          0       0       0       0       0
  2729 ;;      Totals:         0       0       0       0       0
  2730 ;;Total ram usage:        0 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_I2C_Master_Start
  2736 ;;		_I2C_Master_RepeatedStart
  2737 ;;		_I2C_Master_Stop
  2738 ;;		_I2C_Master_Write
  2739 ;;		_I2C_Master_Read
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           
  2744                           ;psect for function _I2C_Master_Wait
  2745  02B2                     _I2C_Master_Wait:	
  2746  02B2                     l60:	
  2747                           ;./I2C.h: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2748                           
  2749                           ;incstack = 0
  2750                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2751                           
  2752  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  2753  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  2754  02B4  1914               	btfsc	20,2	;volatile
  2755  02B5  2AB2               	goto	l60
  2756  02B6  0811               	movf	17,w	;volatile
  2757  02B7  391F               	andlw	31
  2758  02B8  1903               	btfsc	3,2
  2759  02B9  0008               	return
  2760  02BA  2AB2               	goto	l60
  2761  02BB                     __end_of_I2C_Master_Wait:	
  2762                           
  2763                           	psect	text19
  2764  030B                     __ptext19:	
  2765 ;; *************** function _Lcd_Write_String *****************
  2766 ;; Defined at:
  2767 ;;		line 100 in file "./LCD4bits.h"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  a               1    wreg     PTR unsigned char 
  2770 ;;		 -> NULL(0), get_temp@temperature(6), get_time@string_time(6), 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  a               1    8[COMMON] PTR unsigned char 
  2773 ;;		 -> NULL(0), get_temp@temperature(6), get_time@string_time(6), 
  2774 ;;  i               2    6[COMMON] int 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2784 ;;      Params:         0       0       0       0       0
  2785 ;;      Locals:         3       0       0       0       0
  2786 ;;      Temps:          1       0       0       0       0
  2787 ;;      Totals:         4       0       0       0       0
  2788 ;;Total ram usage:        4 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    2
  2791 ;; This function calls:
  2792 ;;		_Lcd_Write_Char
  2793 ;; This function is called by:
  2794 ;;		_main
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           
  2799                           ;psect for function _Lcd_Write_String
  2800  030B                     _Lcd_Write_String:	
  2801                           
  2802                           ;incstack = 0
  2803                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2804                           ;Lcd_Write_String@a stored from wreg
  2805  030B  00F8               	movwf	Lcd_Write_String@a
  2806                           
  2807                           ;./LCD4bits.h: 100: void Lcd_Write_String(char *a);./LCD4bits.h: 101: {;./LCD4bits.h: 10
      +                          2:  int i;;./LCD4bits.h: 103:  for(i=0;a[i]!='\0';i++)
  2808  030C  01F6               	clrf	Lcd_Write_String@i
  2809  030D  01F7               	clrf	Lcd_Write_String@i+1
  2810  030E                     l1556:	
  2811  030E  0876               	movf	Lcd_Write_String@i,w
  2812  030F  0778               	addwf	Lcd_Write_String@a,w
  2813  0310  00F5               	movwf	??_Lcd_Write_String
  2814  0311  0875               	movf	??_Lcd_Write_String,w
  2815  0312  0084               	movwf	4
  2816  0313  1383               	bcf	3,7	;select IRP bank0
  2817  0314  0800               	movf	0,w
  2818  0315  1903               	btfsc	3,2
  2819  0316  0008               	return
  2820                           
  2821                           ;./LCD4bits.h: 104:     Lcd_Write_Char(a[i]);
  2822  0317  0876               	movf	Lcd_Write_String@i,w
  2823  0318  0778               	addwf	Lcd_Write_String@a,w
  2824  0319  00F5               	movwf	??_Lcd_Write_String
  2825  031A  0875               	movf	??_Lcd_Write_String,w
  2826  031B  0084               	movwf	4
  2827  031C  0800               	movf	0,w
  2828  031D  120A  118A  2406  120A  118A  	fcall	_Lcd_Write_Char
  2829  0322  3001               	movlw	1
  2830  0323  07F6               	addwf	Lcd_Write_String@i,f
  2831  0324  1803               	skipnc
  2832  0325  0AF7               	incf	Lcd_Write_String@i+1,f
  2833  0326  3000               	movlw	0
  2834  0327  07F7               	addwf	Lcd_Write_String@i+1,f
  2835  0328  2B0E               	goto	l1556
  2836  0329                     __end_of_Lcd_Write_String:	
  2837                           
  2838                           	psect	text20
  2839  0406                     __ptext20:	
  2840 ;; *************** function _Lcd_Write_Char *****************
  2841 ;; Defined at:
  2842 ;;		line 84 in file "./LCD4bits.h"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  a               1    wreg     unsigned char 
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  a               1    4[COMMON] unsigned char 
  2847 ;;  y               1    3[COMMON] unsigned char 
  2848 ;;  temp            1    2[COMMON] unsigned char 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, pclath, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2858 ;;      Params:         0       0       0       0       0
  2859 ;;      Locals:         3       0       0       0       0
  2860 ;;      Temps:          1       0       0       0       0
  2861 ;;      Totals:         4       0       0       0       0
  2862 ;;Total ram usage:        4 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    1
  2865 ;; This function calls:
  2866 ;;		_Lcd_Port
  2867 ;; This function is called by:
  2868 ;;		_Lcd_Write_String
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function _Lcd_Write_Char
  2874  0406                     _Lcd_Write_Char:	
  2875                           
  2876                           ;incstack = 0
  2877                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2878                           ;Lcd_Write_Char@a stored from wreg
  2879  0406  00F4               	movwf	Lcd_Write_Char@a
  2880                           
  2881                           ;./LCD4bits.h: 84: void Lcd_Write_Char(char a);./LCD4bits.h: 85: {;./LCD4bits.h: 86:    
      +                          char temp,y;;./LCD4bits.h: 87:    temp = a&0x0F;
  2882  0407  0874               	movf	Lcd_Write_Char@a,w
  2883  0408  390F               	andlw	15
  2884  0409  00F1               	movwf	??_Lcd_Write_Char
  2885  040A  0871               	movf	??_Lcd_Write_Char,w
  2886  040B  00F2               	movwf	Lcd_Write_Char@temp
  2887                           
  2888                           ;./LCD4bits.h: 88:    y = a&0xF0;
  2889  040C  0874               	movf	Lcd_Write_Char@a,w
  2890  040D  39F0               	andlw	240
  2891  040E  00F1               	movwf	??_Lcd_Write_Char
  2892  040F  0871               	movf	??_Lcd_Write_Char,w
  2893  0410  00F3               	movwf	Lcd_Write_Char@y
  2894                           
  2895                           ;./LCD4bits.h: 89:    PORTBbits.RB4 = 1;
  2896  0411  1283               	bcf	3,5	;RP0=0, select bank0
  2897  0412  1303               	bcf	3,6	;RP1=0, select bank0
  2898  0413  1606               	bsf	6,4	;volatile
  2899                           
  2900                           ;./LCD4bits.h: 90:    Lcd_Port(y>>4);
  2901  0414  0873               	movf	Lcd_Write_Char@y,w
  2902  0415  00F1               	movwf	??_Lcd_Write_Char
  2903  0416  3004               	movlw	4
  2904  0417                     u785:	
  2905  0417  1003               	clrc
  2906  0418  0CF1               	rrf	??_Lcd_Write_Char,f
  2907  0419  3EFF               	addlw	-1
  2908  041A  1D03               	skipz
  2909  041B  2C17               	goto	u785
  2910  041C  0871               	movf	??_Lcd_Write_Char,w
  2911  041D  120A  118A  22D7  120A  118A  	fcall	_Lcd_Port
  2912                           
  2913                           ;./LCD4bits.h: 91:    PORTBbits.RB5 = 1;
  2914  0422  1283               	bcf	3,5	;RP0=0, select bank0
  2915  0423  1303               	bcf	3,6	;RP1=0, select bank0
  2916  0424  1686               	bsf	6,5	;volatile
  2917                           
  2918                           ;./LCD4bits.h: 92:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2919  0425  301A               	movlw	26
  2920  0426  00F1               	movwf	??_Lcd_Write_Char
  2921  0427                     u1027:	
  2922  0427  0BF1               	decfsz	??_Lcd_Write_Char,f
  2923  0428  2C27               	goto	u1027
  2924  0429  0000               	nop
  2925                           
  2926                           ;./LCD4bits.h: 93:    PORTBbits.RB5 = 0;
  2927  042A  1283               	bcf	3,5	;RP0=0, select bank0
  2928  042B  1303               	bcf	3,6	;RP1=0, select bank0
  2929  042C  1286               	bcf	6,5	;volatile
  2930                           
  2931                           ;./LCD4bits.h: 94:    Lcd_Port(temp);
  2932  042D  0872               	movf	Lcd_Write_Char@temp,w
  2933  042E  120A  118A  22D7  120A  118A  	fcall	_Lcd_Port
  2934                           
  2935                           ;./LCD4bits.h: 95:    PORTBbits.RB5 = 1;
  2936  0433  1283               	bcf	3,5	;RP0=0, select bank0
  2937  0434  1303               	bcf	3,6	;RP1=0, select bank0
  2938  0435  1686               	bsf	6,5	;volatile
  2939                           
  2940                           ;./LCD4bits.h: 96:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2941  0436  301A               	movlw	26
  2942  0437  00F1               	movwf	??_Lcd_Write_Char
  2943  0438                     u1037:	
  2944  0438  0BF1               	decfsz	??_Lcd_Write_Char,f
  2945  0439  2C38               	goto	u1037
  2946  043A  0000               	nop
  2947                           
  2948                           ;./LCD4bits.h: 97:    PORTBbits.RB5 = 0;
  2949  043B  1283               	bcf	3,5	;RP0=0, select bank0
  2950  043C  1303               	bcf	3,6	;RP1=0, select bank0
  2951  043D  1286               	bcf	6,5	;volatile
  2952  043E  0008               	return
  2953  043F                     __end_of_Lcd_Write_Char:	
  2954                           
  2955                           	psect	text21
  2956  04BA                     __ptext21:	
  2957 ;; *************** function _Lcd_Set_Cursor *****************
  2958 ;; Defined at:
  2959 ;;		line 44 in file "./LCD4bits.h"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  a               1    wreg     unsigned char 
  2962 ;;  b               1    4[COMMON] unsigned char 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  a               1    7[COMMON] unsigned char 
  2965 ;;  temp            1   10[COMMON] unsigned char 
  2966 ;;  y               1    9[COMMON] unsigned char 
  2967 ;;  z               1    8[COMMON] unsigned char 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      void 
  2970 ;; Registers used:
  2971 ;;		wreg, status,2, status,0, pclath, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2977 ;;      Params:         1       0       0       0       0
  2978 ;;      Locals:         4       0       0       0       0
  2979 ;;      Temps:          2       0       0       0       0
  2980 ;;      Totals:         7       0       0       0       0
  2981 ;;Total ram usage:        7 bytes
  2982 ;; Hardware stack levels used:    1
  2983 ;; Hardware stack levels required when called:    2
  2984 ;; This function calls:
  2985 ;;		_Lcd_Cmd
  2986 ;; This function is called by:
  2987 ;;		_main
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           
  2992                           ;psect for function _Lcd_Set_Cursor
  2993  04BA                     _Lcd_Set_Cursor:	
  2994                           
  2995                           ;incstack = 0
  2996                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2997                           ;Lcd_Set_Cursor@a stored from wreg
  2998  04BA  00F7               	movwf	Lcd_Set_Cursor@a
  2999                           
  3000                           ;./LCD4bits.h: 44: void Lcd_Set_Cursor(char a, char b);./LCD4bits.h: 45: {;./LCD4bits.h:
      +                           46:  char temp,z,y;;./LCD4bits.h: 47:  if(a == 1)
  3001  04BB  0377               	decf	Lcd_Set_Cursor@a,w
  3002  04BC  1D03               	btfss	3,2
  3003  04BD  2CDF               	goto	l1540
  3004                           
  3005                           ;./LCD4bits.h: 48:  {;./LCD4bits.h: 49:    temp = 0x80 + b - 1;
  3006  04BE  0874               	movf	Lcd_Set_Cursor@b,w
  3007  04BF  3E7F               	addlw	127
  3008  04C0  00F5               	movwf	??_Lcd_Set_Cursor
  3009  04C1  0875               	movf	??_Lcd_Set_Cursor,w
  3010  04C2  00FA               	movwf	Lcd_Set_Cursor@temp
  3011                           
  3012                           ;./LCD4bits.h: 50:   z = temp>>4;
  3013  04C3  087A               	movf	Lcd_Set_Cursor@temp,w
  3014  04C4  00F5               	movwf	??_Lcd_Set_Cursor
  3015  04C5  3004               	movlw	4
  3016  04C6                     u915:	
  3017  04C6  1003               	clrc
  3018  04C7  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3019  04C8  3EFF               	addlw	-1
  3020  04C9  1D03               	skipz
  3021  04CA  2CC6               	goto	u915
  3022  04CB  0875               	movf	??_Lcd_Set_Cursor,w
  3023  04CC  00F6               	movwf	??_Lcd_Set_Cursor+1
  3024  04CD  0876               	movf	??_Lcd_Set_Cursor+1,w
  3025  04CE  00F8               	movwf	Lcd_Set_Cursor@z
  3026                           
  3027                           ;./LCD4bits.h: 51:   y = temp & 0x0F;
  3028  04CF  087A               	movf	Lcd_Set_Cursor@temp,w
  3029  04D0  390F               	andlw	15
  3030  04D1  00F5               	movwf	??_Lcd_Set_Cursor
  3031  04D2  0875               	movf	??_Lcd_Set_Cursor,w
  3032  04D3  00F9               	movwf	Lcd_Set_Cursor@y
  3033                           
  3034                           ;./LCD4bits.h: 52:   Lcd_Cmd(z);
  3035  04D4  0878               	movf	Lcd_Set_Cursor@z,w
  3036  04D5  120A  118A  22F1  120A  118A  	fcall	_Lcd_Cmd
  3037                           
  3038                           ;./LCD4bits.h: 53:   Lcd_Cmd(y);
  3039  04DA  0879               	movf	Lcd_Set_Cursor@y,w
  3040  04DB  120A  118A  22F1   	fcall	_Lcd_Cmd
  3041                           
  3042                           ;./LCD4bits.h: 54:  }
  3043  04DE  0008               	return
  3044  04DF                     l1540:	
  3045  04DF  3002               	movlw	2
  3046  04E0  0677               	xorwf	Lcd_Set_Cursor@a,w
  3047  04E1  1D03               	btfss	3,2
  3048  04E2  0008               	return
  3049                           
  3050                           ;./LCD4bits.h: 56:  {;./LCD4bits.h: 57:   temp = 0xC0 + b - 1;
  3051  04E3  0874               	movf	Lcd_Set_Cursor@b,w
  3052  04E4  3EBF               	addlw	191
  3053  04E5  00F5               	movwf	??_Lcd_Set_Cursor
  3054  04E6  0875               	movf	??_Lcd_Set_Cursor,w
  3055  04E7  00FA               	movwf	Lcd_Set_Cursor@temp
  3056                           
  3057                           ;./LCD4bits.h: 58:   z = temp>>4;
  3058  04E8  087A               	movf	Lcd_Set_Cursor@temp,w
  3059  04E9  00F5               	movwf	??_Lcd_Set_Cursor
  3060  04EA  3004               	movlw	4
  3061  04EB                     u935:	
  3062  04EB  1003               	clrc
  3063  04EC  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3064  04ED  3EFF               	addlw	-1
  3065  04EE  1D03               	skipz
  3066  04EF  2CEB               	goto	u935
  3067  04F0  0875               	movf	??_Lcd_Set_Cursor,w
  3068  04F1  00F6               	movwf	??_Lcd_Set_Cursor+1
  3069  04F2  0876               	movf	??_Lcd_Set_Cursor+1,w
  3070  04F3  00F8               	movwf	Lcd_Set_Cursor@z
  3071                           
  3072                           ;./LCD4bits.h: 59:   y = temp & 0x0F;
  3073  04F4  087A               	movf	Lcd_Set_Cursor@temp,w
  3074  04F5  390F               	andlw	15
  3075  04F6  00F5               	movwf	??_Lcd_Set_Cursor
  3076  04F7  0875               	movf	??_Lcd_Set_Cursor,w
  3077  04F8  00F9               	movwf	Lcd_Set_Cursor@y
  3078                           
  3079                           ;./LCD4bits.h: 60:   Lcd_Cmd(z);
  3080  04F9  0878               	movf	Lcd_Set_Cursor@z,w
  3081  04FA  120A  118A  22F1  120A  118A  	fcall	_Lcd_Cmd
  3082                           
  3083                           ;./LCD4bits.h: 61:   Lcd_Cmd(y);
  3084  04FF  0879               	movf	Lcd_Set_Cursor@y,w
  3085  0500  120A  118A  22F1   	fcall	_Lcd_Cmd
  3086  0503  0008               	return
  3087  0504                     __end_of_Lcd_Set_Cursor:	
  3088                           
  3089                           	psect	text22
  3090  02BB                     __ptext22:	
  3091 ;; *************** function _Lcd_Clear *****************
  3092 ;; Defined at:
  3093 ;;		line 38 in file "./LCD4bits.h"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;		None
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;		None
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      void 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2, status,0, pclath, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3107 ;;      Params:         0       0       0       0       0
  3108 ;;      Locals:         0       0       0       0       0
  3109 ;;      Temps:          0       0       0       0       0
  3110 ;;      Totals:         0       0       0       0       0
  3111 ;;Total ram usage:        0 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; Hardware stack levels required when called:    2
  3114 ;; This function calls:
  3115 ;;		_Lcd_Cmd
  3116 ;; This function is called by:
  3117 ;;		_main
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           
  3122                           ;psect for function _Lcd_Clear
  3123  02BB                     _Lcd_Clear:	
  3124                           
  3125                           ;./LCD4bits.h: 40:  Lcd_Cmd(0);
  3126                           
  3127                           ;incstack = 0
  3128                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3129  02BB  3000               	movlw	0
  3130  02BC  120A  118A  22F1  120A  118A  	fcall	_Lcd_Cmd
  3131                           
  3132                           ;./LCD4bits.h: 41:  Lcd_Cmd(1);
  3133  02C1  3001               	movlw	1
  3134  02C2  120A  118A  22F1   	fcall	_Lcd_Cmd
  3135  02C5  0008               	return
  3136  02C6                     __end_of_Lcd_Clear:	
  3137                           
  3138                           	psect	text23
  3139  02F1                     __ptext23:	
  3140 ;; *************** function _Lcd_Cmd *****************
  3141 ;; Defined at:
  3142 ;;		line 29 in file "./LCD4bits.h"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  a               1    wreg     unsigned char 
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;  a               1    3[COMMON] unsigned char 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0, pclath, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3156 ;;      Params:         0       0       0       0       0
  3157 ;;      Locals:         1       0       0       0       0
  3158 ;;      Temps:          2       0       0       0       0
  3159 ;;      Totals:         3       0       0       0       0
  3160 ;;Total ram usage:        3 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:    1
  3163 ;; This function calls:
  3164 ;;		_Lcd_Port
  3165 ;; This function is called by:
  3166 ;;		_Lcd_Clear
  3167 ;;		_Lcd_Set_Cursor
  3168 ;;		_Lcd_Init
  3169 ;;		_Lcd_Shift_Right
  3170 ;;		_Lcd_Shift_Left
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           
  3175                           ;psect for function _Lcd_Cmd
  3176  02F1                     _Lcd_Cmd:	
  3177                           
  3178                           ;incstack = 0
  3179                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3180                           ;Lcd_Cmd@a stored from wreg
  3181  02F1  00F3               	movwf	Lcd_Cmd@a
  3182                           
  3183                           ;./LCD4bits.h: 29: void Lcd_Cmd(char a);./LCD4bits.h: 30: {;./LCD4bits.h: 31:  PORTBbits
      +                          .RB4 = 0;
  3184  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  3185  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  3186  02F4  1206               	bcf	6,4	;volatile
  3187                           
  3188                           ;./LCD4bits.h: 32:  Lcd_Port(a);
  3189  02F5  0873               	movf	Lcd_Cmd@a,w
  3190  02F6  120A  118A  22D7  120A  118A  	fcall	_Lcd_Port
  3191                           
  3192                           ;./LCD4bits.h: 33:  PORTBbits.RB5 = 1;
  3193  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  3194  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  3195  02FD  1686               	bsf	6,5	;volatile
  3196                           
  3197                           ;./LCD4bits.h: 34:         _delay((unsigned long)((4)*(8000000/4000.0)));
  3198  02FE  300B               	movlw	11
  3199  02FF  00F2               	movwf	??_Lcd_Cmd+1
  3200  0300  3062               	movlw	98
  3201  0301  00F1               	movwf	??_Lcd_Cmd
  3202  0302                     u1047:	
  3203  0302  0BF1               	decfsz	??_Lcd_Cmd,f
  3204  0303  2B02               	goto	u1047
  3205  0304  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3206  0305  2B02               	goto	u1047
  3207  0306  0000               	nop
  3208                           
  3209                           ;./LCD4bits.h: 35:         PORTBbits.RB5 = 0;
  3210  0307  1283               	bcf	3,5	;RP0=0, select bank0
  3211  0308  1303               	bcf	3,6	;RP1=0, select bank0
  3212  0309  1286               	bcf	6,5	;volatile
  3213  030A  0008               	return
  3214  030B                     __end_of_Lcd_Cmd:	
  3215                           
  3216                           	psect	text24
  3217  02D7                     __ptext24:	
  3218 ;; *************** function _Lcd_Port *****************
  3219 ;; Defined at:
  3220 ;;		line 7 in file "./LCD4bits.h"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  a               1    wreg     unsigned char 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  a               1    0[COMMON] unsigned char 
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3234 ;;      Params:         0       0       0       0       0
  3235 ;;      Locals:         1       0       0       0       0
  3236 ;;      Temps:          0       0       0       0       0
  3237 ;;      Totals:         1       0       0       0       0
  3238 ;;Total ram usage:        1 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; This function calls:
  3241 ;;		Nothing
  3242 ;; This function is called by:
  3243 ;;		_Lcd_Cmd
  3244 ;;		_Lcd_Init
  3245 ;;		_Lcd_Write_Char
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           
  3250                           ;psect for function _Lcd_Port
  3251  02D7                     _Lcd_Port:	
  3252                           
  3253                           ;incstack = 0
  3254                           ; Regs used in _Lcd_Port: [wreg]
  3255                           ;Lcd_Port@a stored from wreg
  3256  02D7  00F0               	movwf	Lcd_Port@a
  3257                           
  3258                           ;./LCD4bits.h: 7: void Lcd_Port(char a);./LCD4bits.h: 8: {;./LCD4bits.h: 9:  if(a & 1)
  3259  02D8  1C70               	btfss	Lcd_Port@a,0
  3260  02D9  2ADE               	goto	l86
  3261                           
  3262                           ;./LCD4bits.h: 10:   PORTBbits.RB0 = 1;
  3263  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  3264  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  3265  02DC  1406               	bsf	6,0	;volatile
  3266  02DD  2AE1               	goto	l87
  3267  02DE                     l86:	
  3268                           ;./LCD4bits.h: 11:  else
  3269                           
  3270                           
  3271                           ;./LCD4bits.h: 12:   PORTBbits.RB0 = 0;
  3272  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  3273  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  3274  02E0  1006               	bcf	6,0	;volatile
  3275  02E1                     l87:	
  3276                           
  3277                           ;./LCD4bits.h: 14:  if(a & 2)
  3278  02E1  1CF0               	btfss	Lcd_Port@a,1
  3279  02E2  2AE5               	goto	l88
  3280                           
  3281                           ;./LCD4bits.h: 15:   PORTBbits.RB1 = 1;
  3282  02E3  1486               	bsf	6,1	;volatile
  3283  02E4  2AE6               	goto	l89
  3284  02E5                     l88:	
  3285                           ;./LCD4bits.h: 16:  else
  3286                           
  3287                           
  3288                           ;./LCD4bits.h: 17:   PORTBbits.RB1 = 0;
  3289  02E5  1086               	bcf	6,1	;volatile
  3290  02E6                     l89:	
  3291                           
  3292                           ;./LCD4bits.h: 19:  if(a & 4)
  3293  02E6  1D70               	btfss	Lcd_Port@a,2
  3294  02E7  2AEA               	goto	l90
  3295                           
  3296                           ;./LCD4bits.h: 20:   PORTBbits.RB2 = 1;
  3297  02E8  1506               	bsf	6,2	;volatile
  3298  02E9  2AEB               	goto	l91
  3299  02EA                     l90:	
  3300                           ;./LCD4bits.h: 21:  else
  3301                           
  3302                           
  3303                           ;./LCD4bits.h: 22:   PORTBbits.RB2 = 0;
  3304  02EA  1106               	bcf	6,2	;volatile
  3305  02EB                     l91:	
  3306                           
  3307                           ;./LCD4bits.h: 24:  if(a & 8)
  3308  02EB  1DF0               	btfss	Lcd_Port@a,3
  3309  02EC  2AEF               	goto	l92
  3310                           
  3311                           ;./LCD4bits.h: 25:   PORTBbits.RB3 = 1;
  3312  02ED  1586               	bsf	6,3	;volatile
  3313  02EE  0008               	return
  3314  02EF                     l92:	
  3315                           ;./LCD4bits.h: 26:  else
  3316                           
  3317                           
  3318                           ;./LCD4bits.h: 27:   PORTBbits.RB3 = 0;
  3319  02EF  1186               	bcf	6,3	;volatile
  3320  02F0  0008               	return
  3321  02F1                     __end_of_Lcd_Port:	
  3322  007E                     btemp	set	126	;btemp
  3323  007E                     wtemp0	set	126


Data Sizes:
    Strings     9
    Constant    10
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 3
		 -> get_temp@decimal(BANK0[3]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@decimal(BANK0[3]), get_temp@temperature(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    sp__get_temp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    temp	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_temp@temperature(BANK0[6]), 

    sp__get_time	PTR unsigned char  size(1) Largest target is 6
		 -> get_time@string_time(BANK0[6]), 

    time	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_time@string_time(BANK0[6]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_temp@temperature(BANK0[6]), get_time@string_time(BANK0[6]), 


Critical Paths under _main in COMMON

    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _get_time->_I2C_Master_Read
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_get_temp
    _setup->_I2C_Master_Init
    _get_temp->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    7112
                                             27 BANK0      1     1      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _get_temp
                           _get_time
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     632
                    _I2C_Master_Init
                           _Lcd_Init
                      _initOscilador
 ---------------------------------------------------------------------------------
 (2) _initOscilador                                        3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _get_time                                            10    10      0    1822
                                              6 COMMON     2     2      0
                                              0 BANK0      8     8      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            14    14      0    3682
                                             13 BANK0     14    14      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___bmul
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     3      1     207
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1429
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1162
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     425
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     334
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     532
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _get_temp
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___bmul
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _strcat
   _get_time
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _initOscilador

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      1E       5       37.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2C      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Feb 23 16:18:12 2019

                                pc 0002                     ___bmul@product 0072  
                      __CFG_CP$OFF 0000                                 l60 02B2  
                               l90 02EA                                 l91 02EB  
                               l92 02EF                                 l86 02DE  
                               l78 0395                                 l87 02E1  
                               l79 0398                                 l88 02E5  
                               l89 02E6                                 fsr 0004  
                              l129 0557                                _GIE 005F  
                     __CFG_CPD$OFF 0000                                u605 05EB  
                              u615 05FD                                u715 03A7  
                              u645 044A                                u735 03B8  
                              u815 0795                                u575 05C8  
                              u665 0456                                u745 03C1  
                              u915 04C6                                u675 0462  
                              u595 05D6                                u685 046C  
                              u765 03E2                                u935 04EB  
                              u785 0417                                u955 065E  
                              u965 0675                                u975 06D8  
                              u997 0563                                fsr0 0004  
                              indf 0000                       __CFG_LVP$OFF 0000  
                             l1310 046B                               l1302 0447  
                             l1304 0455                               l1314 0476  
                             l1332 03C0                               l1420 0511  
                             l1326 03A4                               l1510 0339  
                             l1430 0530                               l1422 0517  
                             l1520 02CE                               l1328 03B2  
                             l1336 03CB                               l1512 0341  
                             l1432 0530                               l1424 051D  
                             l1416 0506                               l1450 0747  
                             l1602 0700                               l1274 05C4  
                             l1426 0523                               l1418 050B  
                             l1540 04DF                               l1516 02C8  
                             l1508 032E                               l1284 05FC  
                             l1276 05D4                               l1428 0529  
                             l1436 0535                               l1620 0485  
                             l1472 077E                               l1456 0765  
                             l1288 0609                               l1466 077C  
                             l1556 030E                               l1492 07B2  
                             l1484 07AE                               l1478 079F  
                             l1494 0727                               l1496 07F3  
                             l1680 075A                               l1678 053D  
                             STR_1 0019                               STR_2 0013  
                      get_time@min 0027                               STR_3 0018  
                             u1007 0572                               u1017 0581  
                             u1027 0427                               u1037 0438  
                             u1047 0302                               _PEIE 005E  
                             _RCEN 048B                       __CFG_WRT$OFF 0000  
                ?_Lcd_Write_String 0070   __end_of_I2C_Master_RepeatedStart 029C  
                             _main 047B                               _temp 003C  
                             _time 003D                               btemp 007E  
                             start 0000                 ??_Lcd_Write_String 0075  
                    __CFG_IESO$OFF 0000                    __end_of_Lcd_Cmd 030B  
                ___bmul@multiplier 0073                      __CFG_MCLRE$ON 0000  
              get_temp@temperature 0030                   ?_I2C_Master_Init 0020  
                 ?_I2C_Master_Read 0070                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                    __CFG_WDTE$OFF 0000                       get_time@hour 0026  
                            _ANSEL 0188                    __end_of___lldiv 0612  
                  __end_of___lwdiv 047B                    __end_of___lwmod 03D0  
                            _PORTA 0005                              _PORTB 0006  
          __size_of_Lcd_Set_Cursor 004A                              _TRISA 0085  
                            _TRISB 0086                              _SSPIE 0463  
                            _SSPIF 0063                     __CFG_FCMEN$OFF 0000  
                  __end_of_dpowers 0013                              _setup 034D  
                   __CFG_BOREN$OFF 0000                              pclath 000A  
                            status 0003                              wtemp0 007E  
                  __end_of_sprintf 07F8                   __end_of_Lcd_Init 05B4  
                 __end_of_Lcd_Port 02F1                    __initialization 07F8  
                     __end_of_main 04BA             __size_of_initOscilador 0055  
                           ??_main 003B                 __size_of_Lcd_Clear 000B  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0070  
               ??_I2C_Master_Start 0070                 ??_I2C_Master_Write 0072  
                           ?_setup 0070                             _ANSELH 0189  
                        ??_Lcd_Cmd 0071            __size_of_Lcd_Write_Char 0039  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013                     __CFG_PWRTE$OFF 0000  
         _I2C_Master_RepeatedStart 0295                   __end_of_get_temp 0720  
                 __end_of_get_time 0688                             ___bmul 02C6  
                        ??___lldiv 0078                          ??___lwdiv 0074  
                        ??___lwmod 007C                             _strcat 0329  
                        ??_sprintf 0023                    Lcd_Set_Cursor@a 0077  
                  Lcd_Set_Cursor@b 0074                    Lcd_Set_Cursor@y 0079  
                  Lcd_Set_Cursor@z 0078            __end_of__initialization 07FC  
                    _initOscilador 0504                  __end_of_Lcd_Clear 02C6  
              ___bmul@multiplicand 0070                     __pcstackCOMMON 0070  
                    __end_of_setup 0372                     _Lcd_Set_Cursor 04BA  
                        ?_Lcd_Init 0070                          ?_Lcd_Port 0070  
                          ??_setup 007E                         __pbssBANK0 003C  
                   ?_initOscilador 0070                         __pmaintext 047B  
                          ?___bmul 0070          __size_of_Lcd_Write_String 001E  
           __end_of_Lcd_Set_Cursor 0504                            ?_strcat 0070  
                       ??_Lcd_Init 0074                         ??_Lcd_Port 0070  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                        ?_get_temp 0070                          ?_get_time 0070  
                       __stringtab 0003                initOscilador@option 0072  
                   _Lcd_Write_Char 0406                            _Lcd_Cmd 02F1  
                  __size_of___bmul 0011                            ___lldiv 05B4  
                          ___lwdiv 043F                            ___lwmod 039E  
                  ?_Lcd_Set_Cursor 0074                            __ptext1 034D  
                          __ptext2 0504                            __ptext3 0559  
                          __ptext4 03D0                            __ptext5 05B4  
                          __ptext6 0612                            __ptext7 0688  
                          __ptext8 0329                            __ptext9 0720  
                  __size_of_strcat 0024                            _dpowers 0009  
         __size_of_I2C_Master_Init 0036           __size_of_I2C_Master_Read 002C  
         __size_of_I2C_Master_Wait 0009           __size_of_I2C_Master_Stop 0007  
                  ??_initOscilador 0070                            _sprintf 0720  
           __end_of_Lcd_Write_Char 043F                         ??_get_temp 002D  
                       ??_get_time 0076               end_of_initialization 07FC  
       ??_I2C_Master_RepeatedStart 0070          __size_of_I2C_Master_Start 0007  
        __size_of_I2C_Master_Write 0008                    ___lldiv@divisor 0070  
                  ___lldiv@counter 007D                   I2C_Master_Init@c 0020  
                 I2C_Master_Read@a 0070                          Lcd_Port@a 0070  
                        _PORTBbits 0006                    ?_Lcd_Write_Char 0070  
                Lcd_Write_String@a 0078                  Lcd_Write_String@i 0076  
              get_time@string_time 0020                          _Lcd_Clear 02BB  
                   __end_of___bmul 02D7                   _Lcd_Write_String 030B  
                   __end_of_strcat 034D                start_initialization 07F8  
                __size_of_Lcd_Init 005B                  __size_of_Lcd_Port 001A  
                ??_I2C_Master_Init 0024                  ??_I2C_Master_Read 0072  
                ??_I2C_Master_Wait 0070                  ??_I2C_Master_Stop 0070  
         __CFG_FOSC$INTRC_NOCLKOUT 0000                         ?_Lcd_Clear 0070  
                         ??___bmul 0071                    Lcd_Write_Char@a 0074  
                  Lcd_Write_Char@y 0073                           ??_strcat 0071  
                        ___latbits 0002                      __pcstackBANK0 0020  
                         ?_Lcd_Cmd 0070                  __size_of_get_temp 0098  
                __size_of_get_time 0076                        sprintf@flag 0027  
                      sprintf@prec 0028                   _I2C_Master_Start 029C  
                 _I2C_Master_Write 02AA                   ___lwdiv@dividend 0072  
                 ??_Lcd_Set_Cursor 0075                    get_temp@decimal 0037  
                         ?___lldiv 0070                           ?___lwdiv 0070  
                         ?___lwmod 0078                          __pstrings 0003  
                  get_temp@tempLSB 003A                    get_temp@tempMSB 0036  
                 ___lwdiv@quotient 0075                           ?_sprintf 0020  
                   __size_of_setup 0025                           Lcd_Cmd@a 0073  
                      ??_Lcd_Clear 0074                        __stringbase 0008  
                 ??_Lcd_Write_Char 0071                           _Lcd_Init 0559  
                         _Lcd_Port 02D7                I2C_Master_Read@temp 0074  
            __end_of_initOscilador 0559           __end_of_Lcd_Write_String 0329  
                 __size_of_Lcd_Cmd 001A  __size_of_I2C_Master_RepeatedStart 0007  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 005E  
                 __size_of___lwdiv 003C                   __size_of___lwmod 0032  
               __end_of__stringtab 0009                         sprintf@val 0029  
                  _I2C_Master_Init 03D0                    _I2C_Master_Read 0372  
                  _I2C_Master_Wait 02B2                         strcat@from 0070  
                  _I2C_Master_Stop 02A3                    ___lwdiv@divisor 0070  
                  ___lwdiv@counter 0077                           __ptext10 039E  
                         __ptext11 043F                           __ptext20 0406  
                         __ptext12 02C6                           __ptext21 04BA  
                         __ptext13 02AA                           __ptext22 02BB  
                         __ptext14 02A3                           __ptext23 02F1  
                         __ptext15 029C                           __ptext24 02D7  
                         __ptext16 0295                           __ptext17 0372  
                         __ptext18 02B2                           __ptext19 030B  
                __CFG_BOR4V$BOR40V 0000                           _get_temp 0688  
                         _get_time 0612                   __size_of_sprintf 00D8  
                    __size_of_main 003F           __end_of_I2C_Master_Start 02A3  
         __end_of_I2C_Master_Write 02B2                 Lcd_Write_Char@temp 0072  
                        sprintf@ap 0026                          sprintf@sp 002B  
                 ___lwmod@dividend 007A                   ___lldiv@dividend 0074  
                        stringcode 0003                         _OSCCONbits 008F  
          __end_of_I2C_Master_Init 0406            __end_of_I2C_Master_Read 039E  
          __end_of_I2C_Master_Wait 02BB            __end_of_I2C_Master_Stop 02AA  
               Lcd_Set_Cursor@temp 007A                           sprintf@c 002C  
                         sprintf@f 0020                           strcat@cp 0073  
                         strcat@to 0072                   ___lldiv@quotient 0079  
                I2C_Master_Write@d 0070                    ___lwmod@divisor 0078  
                  ___lwmod@counter 007D                           stringdir 0003  
                         stringtab 0003                        _SSPCON2bits 0091  
