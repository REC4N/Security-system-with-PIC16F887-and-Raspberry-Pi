

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Feb 26 12:16:34 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.05
    42                           ; Generated 20/12/2018 GMT
    43                           ; 
    44                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  0105                     	;# 
   139  0107                     	;# 
   140  0108                     	;# 
   141  0109                     	;# 
   142  010C                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0187                     	;# 
   149  0188                     	;# 
   150  0189                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008F                     	;# 
   198  0090                     	;# 
   199  0091                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0094                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  009F                     	;# 
   216  0105                     	;# 
   217  0107                     	;# 
   218  0108                     	;# 
   219  0109                     	;# 
   220  010C                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  0185                     	;# 
   226  0187                     	;# 
   227  0188                     	;# 
   228  0189                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231                           
   232                           	psect	strings
   233  0466                     __pstrings:	
   234  0466                     stringtab:	
   235  0466                     __stringtab:	
   236                           
   237                           ;	String table - string pointers are 1 byte each
   238  0466  1BFF               	btfsc	btemp+1,7
   239  0467  2C70               	ljmp	stringcode
   240  0468  1383               	bcf	3,7
   241  0469  187F               	btfsc	btemp+1,0
   242  046A  1783               	bsf	3,7
   243  046B  0800               	movf	0,w
   244  046C  0A84               	incf	4,f
   245  046D  1903               	skipnz
   246  046E  0AFF               	incf	btemp+1,f
   247  046F  0008               	return
   248  0470                     stringcode:	
   249  0470                     stringdir:	
   250  0470  3004               	movlw	high stringdir
   251  0471  008A               	movwf	10
   252  0472  0804               	movf	4,w
   253  0473  0A84               	incf	4,f
   254  0474  0782               	addwf	2,f
   255  0475                     __stringbase:	
   256  0475  3400               	retlw	0
   257  0476                     __end_of__stringtab:	
   258  0476                     _dpowers:	
   259  0476  3401               	retlw	1
   260  0477  3400               	retlw	0
   261  0478  340A               	retlw	10
   262  0479  3400               	retlw	0
   263  047A  3464               	retlw	100
   264  047B  3400               	retlw	0
   265  047C  34E8               	retlw	232
   266  047D  3403               	retlw	3
   267  047E  3410               	retlw	16
   268  047F  3427               	retlw	39
   269  0480                     __end_of_dpowers:	
   270  0005                     _PORTA	set	5
   271  0006                     _PORTB	set	6
   272  0005                     _PORTAbits	set	5
   273  0006                     _PORTBbits	set	6
   274  0013                     _SSPBUF	set	19
   275  0014                     _SSPCON	set	20
   276  0063                     _SSPIF	set	99
   277  005E                     _PEIE	set	94
   278  005F                     _GIE	set	95
   279  0085                     _TRISA	set	133
   280  0086                     _TRISB	set	134
   281  008F                     _OSCCONbits	set	143
   282  0091                     _SSPCON2bits	set	145
   283  0094                     _SSPSTAT	set	148
   284  0093                     _SSPADD	set	147
   285  0091                     _SSPCON2	set	145
   286  0463                     _SSPIE	set	1123
   287  048B                     _RCEN	set	1163
   288  043C                     _TRISC4	set	1084
   289  043B                     _TRISC3	set	1083
   290  0188                     _ANSEL	set	392
   291  0189                     _ANSELH	set	393
   292  0480                     STR_1:	
   293  0480  344B               	retlw	75	;'K'
   294  0481  3465               	retlw	101	;'e'
   295  0482  3479               	retlw	121	;'y'
   296  0483  3420               	retlw	32	;' '
   297  0484  344F               	retlw	79	;'O'
   298  0485  344E               	retlw	78	;'N'
   299  0486  3420               	retlw	32	;' '
   300  0487  3420               	retlw	32	;' '
   301  0488  3400               	retlw	0
   302  0489                     STR_2:	
   303  0489  344B               	retlw	75	;'K'
   304  048A  3465               	retlw	101	;'e'
   305  048B  3479               	retlw	121	;'y'
   306  048C  3420               	retlw	32	;' '
   307  048D  344F               	retlw	79	;'O'
   308  048E  3446               	retlw	70	;'F'
   309  048F  3446               	retlw	70	;'F'
   310  0490  3420               	retlw	32	;' '
   311  0491  3400               	retlw	0
   312  0492                     STR_3:	
   313  0492  3432               	retlw	50	;'2'
   314  0493  3433               	retlw	51	;'3'
   315  0494  342E               	retlw	46	;'.'
   316  0495  3435               	retlw	53	;'5'
   317  0496  3430               	retlw	48	;'0'
   318  0497  3400               	retlw	0
   319  0498                     STR_5:	
   320  0498  342E               	retlw	46	;'.'
   321  0499  3425               	retlw	37	;'%'
   322  049A  3464               	retlw	100	;'d'
   323  049B  3430               	retlw	48	;'0'
   324  049C  3400               	retlw	0
   325  049D                     STR_6:	
   326  049D  342E               	retlw	46	;'.'
   327  049E  3425               	retlw	37	;'%'
   328  049F  3464               	retlw	100	;'d'
   329  04A0  3400               	retlw	0
   330  049E                     
   331                           ; #config settings
   332  0000                     
   333                           	psect	cinit
   334  000F                     start_initialization:	
   335  000F                     __initialization:	
   336                           
   337                           ; Clear objects allocated to COMMON
   338  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   339  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   340                           
   341                           ; Clear objects allocated to BANK0
   342  0011  1283               	bcf	3,5	;RP0=0, select bank0
   343  0012  1303               	bcf	3,6	;RP1=0, select bank0
   344  0013  01C2               	clrf	__pbssBANK0& (0+127)
   345  0014  01C3               	clrf	(__pbssBANK0+1)& (0+127)
   346  0015                     end_of_initialization:	
   347                           ;End of C runtime variable initialization code
   348                           
   349  0015                     __end_of__initialization:	
   350  0015  0183               	clrf	3
   351  0016  120A  118A  2990   	ljmp	_main	;jump to C main() function
   352                           
   353                           	psect	bssCOMMON
   354  007A                     __pbssCOMMON:	
   355  007A                     _temp:	
   356  007A                     	ds	1
   357  007B                     _time:	
   358  007B                     	ds	1
   359                           
   360                           	psect	bssBANK0
   361  0042                     __pbssBANK0:	
   362  0042                     _cont:	
   363  0042                     	ds	1
   364  0043                     _key:	
   365  0043                     	ds	1
   366                           
   367                           	psect	cstackCOMMON
   368  0070                     __pcstackCOMMON:	
   369  0070                     ?_setup:	
   370  0070                     ?_get_temp:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_get_hall:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_get_time:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_I2C_Master_Wait:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_I2C_Master_Start:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_I2C_Master_RepeatedStart:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_I2C_Master_Stop:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_Lcd_Port:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_Lcd_Cmd:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_Lcd_Clear:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_Lcd_Init:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_Lcd_Write_Char:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_initOscilador:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_isr:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ??_isr:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_main:	
   416                           ; 1 bytes @ 0x0
   417                           
   418                           
   419                           ; 1 bytes @ 0x0
   420  0070                     	ds	2
   421  0072                     ?_strcat:	
   422  0072                     ??_I2C_Master_Wait:	
   423                           ; 1 bytes @ 0x2
   424                           
   425  0072                     ??_I2C_Master_Start:	
   426                           ; 1 bytes @ 0x2
   427                           
   428  0072                     ??_I2C_Master_RepeatedStart:	
   429                           ; 1 bytes @ 0x2
   430                           
   431  0072                     ??_I2C_Master_Stop:	
   432                           ; 1 bytes @ 0x2
   433                           
   434  0072                     ?_I2C_Master_Write:	
   435                           ; 1 bytes @ 0x2
   436                           
   437  0072                     ??_Lcd_Port:	
   438                           ; 1 bytes @ 0x2
   439                           
   440  0072                     ??_initOscilador:	
   441                           ; 1 bytes @ 0x2
   442                           
   443  0072                     ?___bmul:	
   444                           ; 1 bytes @ 0x2
   445                           
   446  0072                     ?_strcmp:	
   447                           ; 1 bytes @ 0x2
   448                           
   449  0072                     ?_I2C_Master_Read:	
   450                           ; 2 bytes @ 0x2
   451                           
   452  0072                     ?___lwdiv:	
   453                           ; 2 bytes @ 0x2
   454                           
   455  0072                     ?___lldiv:	
   456                           ; 2 bytes @ 0x2
   457                           
   458  0072                     Lcd_Port@a:	
   459                           ; 4 bytes @ 0x2
   460                           
   461  0072                     ___bmul@multiplicand:	
   462                           ; 1 bytes @ 0x2
   463                           
   464  0072                     strcat@from:	
   465                           ; 1 bytes @ 0x2
   466                           
   467  0072                     strcmp@s2:	
   468                           ; 1 bytes @ 0x2
   469                           
   470  0072                     I2C_Master_Write@d:	
   471                           ; 1 bytes @ 0x2
   472                           
   473  0072                     I2C_Master_Read@a:	
   474                           ; 2 bytes @ 0x2
   475                           
   476  0072                     ___lwdiv@divisor:	
   477                           ; 2 bytes @ 0x2
   478                           
   479  0072                     ___lldiv@divisor:	
   480                           ; 2 bytes @ 0x2
   481                           
   482                           
   483                           ; 4 bytes @ 0x2
   484  0072                     	ds	1
   485  0073                     ??_strcat:	
   486  0073                     ??_Lcd_Cmd:	
   487                           ; 1 bytes @ 0x3
   488                           
   489  0073                     ??_Lcd_Write_Char:	
   490                           ; 1 bytes @ 0x3
   491                           
   492  0073                     ??___bmul:	
   493                           ; 1 bytes @ 0x3
   494                           
   495                           
   496                           ; 1 bytes @ 0x3
   497  0073                     	ds	1
   498  0074                     ??_strcmp:	
   499  0074                     ??_I2C_Master_Write:	
   500                           ; 1 bytes @ 0x4
   501                           
   502  0074                     ??_I2C_Master_Read:	
   503                           ; 1 bytes @ 0x4
   504                           
   505  0074                     Lcd_Write_Char@temp:	
   506                           ; 1 bytes @ 0x4
   507                           
   508  0074                     initOscilador@option:	
   509                           ; 1 bytes @ 0x4
   510                           
   511  0074                     ___bmul@product:	
   512                           ; 1 bytes @ 0x4
   513                           
   514  0074                     strcat@to:	
   515                           ; 1 bytes @ 0x4
   516                           
   517  0074                     ___lwdiv@dividend:	
   518                           ; 1 bytes @ 0x4
   519                           
   520                           
   521                           ; 2 bytes @ 0x4
   522  0074                     	ds	1
   523  0075                     Lcd_Cmd@a:	
   524  0075                     Lcd_Write_Char@y:	
   525                           ; 1 bytes @ 0x5
   526                           
   527  0075                     ___bmul@multiplier:	
   528                           ; 1 bytes @ 0x5
   529                           
   530  0075                     strcat@cp:	
   531                           ; 1 bytes @ 0x5
   532                           
   533                           
   534                           ; 1 bytes @ 0x5
   535  0075                     	ds	1
   536  0076                     ??_Lcd_Clear:	
   537  0076                     ?_Lcd_Set_Cursor:	
   538                           ; 1 bytes @ 0x6
   539                           
   540  0076                     ??_Lcd_Init:	
   541                           ; 1 bytes @ 0x6
   542                           
   543  0076                     ??___lwdiv:	
   544                           ; 1 bytes @ 0x6
   545                           
   546  0076                     Lcd_Set_Cursor@b:	
   547                           ; 1 bytes @ 0x6
   548                           
   549  0076                     Lcd_Write_Char@a:	
   550                           ; 1 bytes @ 0x6
   551                           
   552  0076                     I2C_Master_Read@temp:	
   553                           ; 1 bytes @ 0x6
   554                           
   555  0076                     ___lldiv@dividend:	
   556                           ; 2 bytes @ 0x6
   557                           
   558                           
   559                           ; 4 bytes @ 0x6
   560  0076                     	ds	1
   561  0077                     ??_Lcd_Set_Cursor:	
   562  0077                     ?_Lcd_Write_String:	
   563                           ; 1 bytes @ 0x7
   564                           
   565  0077                     strcmp@r:	
   566                           ; 1 bytes @ 0x7
   567                           
   568  0077                     Lcd_Write_String@a:	
   569                           ; 1 bytes @ 0x7
   570                           
   571  0077                     ___lwdiv@quotient:	
   572                           ; 2 bytes @ 0x7
   573                           
   574                           
   575                           ; 2 bytes @ 0x7
   576  0077                     	ds	1
   577  0078                     ??_get_hall:	
   578  0078                     ??_get_time:	
   579                           ; 1 bytes @ 0x8
   580                           
   581  0078                     strcmp@s1:	
   582                           ; 1 bytes @ 0x8
   583                           
   584                           
   585                           ; 1 bytes @ 0x8
   586  0078                     	ds	1
   587  0079                     get_hall@key:	
   588  0079                     ___lwdiv@counter:	
   589                           ; 1 bytes @ 0x9
   590                           
   591                           
   592                           ; 1 bytes @ 0x9
   593  0079                     	ds	1
   594  007A                     ??_setup:	
   595                           
   596                           	psect	cstackBANK0
   597  0020                     __pcstackBANK0:	
   598                           ; 1 bytes @ 0xA
   599                           
   600  0020                     ??_Lcd_Write_String:	
   601  0020                     ??___lldiv:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0020                     ?___lwmod:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0020                     Lcd_Set_Cursor@a:	
   608                           ; 2 bytes @ 0x0
   609                           
   610  0020                     ___lwmod@divisor:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0020                     get_time@string_time:	
   614                           ; 2 bytes @ 0x0
   615                           
   616                           
   617                           ; 6 bytes @ 0x0
   618  0020                     	ds	1
   619  0021                     Lcd_Set_Cursor@z:	
   620  0021                     ___lldiv@quotient:	
   621                           ; 1 bytes @ 0x1
   622                           
   623                           
   624                           ; 4 bytes @ 0x1
   625  0021                     	ds	1
   626  0022                     Lcd_Set_Cursor@y:	
   627  0022                     ___lwmod@dividend:	
   628                           ; 1 bytes @ 0x2
   629                           
   630                           
   631                           ; 2 bytes @ 0x2
   632  0022                     	ds	1
   633  0023                     Lcd_Set_Cursor@temp:	
   634  0023                     Lcd_Write_String@i:	
   635                           ; 1 bytes @ 0x3
   636                           
   637                           
   638                           ; 2 bytes @ 0x3
   639  0023                     	ds	1
   640  0024                     ??___lwmod:	
   641                           
   642                           ; 1 bytes @ 0x4
   643  0024                     	ds	1
   644  0025                     ___lldiv@counter:	
   645  0025                     ___lwmod@counter:	
   646                           ; 1 bytes @ 0x5
   647                           
   648                           
   649                           ; 1 bytes @ 0x5
   650  0025                     	ds	1
   651  0026                     ?_I2C_Master_Init:	
   652  0026                     ?_sprintf:	
   653                           ; 1 bytes @ 0x6
   654                           
   655  0026                     get_time@hour:	
   656                           ; 2 bytes @ 0x6
   657                           
   658  0026                     sprintf@f:	
   659                           ; 1 bytes @ 0x6
   660                           
   661  0026                     I2C_Master_Init@c:	
   662                           ; 1 bytes @ 0x6
   663                           
   664                           
   665                           ; 4 bytes @ 0x6
   666  0026                     	ds	1
   667  0027                     get_time@min:	
   668                           
   669                           ; 1 bytes @ 0x7
   670  0027                     	ds	2
   671  0029                     ??_sprintf:	
   672                           
   673                           ; 1 bytes @ 0x9
   674  0029                     	ds	1
   675  002A                     ??_I2C_Master_Init:	
   676                           
   677                           ; 1 bytes @ 0xA
   678  002A                     	ds	2
   679  002C                     sprintf@ap:	
   680                           
   681                           ; 1 bytes @ 0xC
   682  002C                     	ds	1
   683  002D                     sprintf@flag:	
   684                           
   685                           ; 1 bytes @ 0xD
   686  002D                     	ds	1
   687  002E                     sprintf@prec:	
   688                           
   689                           ; 1 bytes @ 0xE
   690  002E                     	ds	1
   691  002F                     sprintf@val:	
   692                           
   693                           ; 2 bytes @ 0xF
   694  002F                     	ds	2
   695  0031                     sprintf@sp:	
   696                           
   697                           ; 1 bytes @ 0x11
   698  0031                     	ds	1
   699  0032                     sprintf@c:	
   700                           
   701                           ; 1 bytes @ 0x12
   702  0032                     	ds	1
   703  0033                     ??_get_temp:	
   704                           
   705                           ; 1 bytes @ 0x13
   706  0033                     	ds	3
   707  0036                     get_temp@temperature:	
   708                           
   709                           ; 6 bytes @ 0x16
   710  0036                     	ds	6
   711  003C                     get_temp@decimal:	
   712                           
   713                           ; 3 bytes @ 0x1C
   714  003C                     	ds	3
   715  003F                     get_temp@tempMSB:	
   716                           
   717                           ; 1 bytes @ 0x1F
   718  003F                     	ds	1
   719  0040                     get_temp@tempLSB:	
   720                           
   721                           ; 1 bytes @ 0x20
   722  0040                     	ds	1
   723  0041                     ??_main:	
   724                           
   725                           ; 1 bytes @ 0x21
   726  0041                     	ds	1
   727                           
   728                           	psect	maintext
   729  0190                     __pmaintext:	
   730 ;;
   731 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   732 ;;
   733 ;; *************** function _main *****************
   734 ;; Defined at:
   735 ;;		line 52 in file "mainMaster.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : B00/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   749 ;;      Params:         0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0
   751 ;;      Temps:          0       1       0       0       0
   752 ;;      Totals:         0       1       0       0       0
   753 ;;Total ram usage:        1 bytes
   754 ;; Hardware stack levels required when called:    5
   755 ;; This function calls:
   756 ;;		_Lcd_Clear
   757 ;;		_Lcd_Set_Cursor
   758 ;;		_Lcd_Write_String
   759 ;;		_get_hall
   760 ;;		_get_temp
   761 ;;		_get_time
   762 ;;		_setup
   763 ;;		_strcmp
   764 ;; This function is called by:
   765 ;;		Startup code after reset
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           
   770                           ;psect for function _main
   771  0190                     _main:	
   772                           
   773                           ;mainMaster.c: 53:     setup();
   774                           
   775                           ;incstack = 0
   776                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   777  0190  120A  118A  259A  120A  118A  	fcall	_setup
   778                           
   779                           ;mainMaster.c: 54:     Lcd_Clear();
   780  0195  120A  118A  2647  120A  118A  	fcall	_Lcd_Clear
   781  019A                     l1948:	
   782                           
   783                           ;mainMaster.c: 58:         Lcd_Write_String(time);
   784  019A  087B               	movf	_time,w
   785  019B  00F7               	movwf	Lcd_Write_String@a
   786  019C  3000               	movlw	0
   787  019D  00F8               	movwf	Lcd_Write_String@a+1
   788  019E  120A  118A  23E9  120A  118A  	fcall	_Lcd_Write_String
   789                           
   790                           ;mainMaster.c: 59:         temp = get_temp();
   791  01A3  120A  118A  20F3  120A  118A  	fcall	_get_temp
   792  01A8  1283               	bcf	3,5	;RP0=0, select bank0
   793  01A9  1303               	bcf	3,6	;RP1=0, select bank0
   794  01AA  00C1               	movwf	??_main
   795  01AB  0841               	movf	??_main,w
   796  01AC  00FA               	movwf	_temp
   797                           
   798                           ;mainMaster.c: 60:         Lcd_Set_Cursor(2,1);
   799  01AD  01F6               	clrf	Lcd_Set_Cursor@b
   800  01AE  0AF6               	incf	Lcd_Set_Cursor@b,f
   801  01AF  3002               	movlw	2
   802  01B0  120A  118A  2399  120A  118A  	fcall	_Lcd_Set_Cursor
   803                           
   804                           ;mainMaster.c: 61:         Lcd_Write_String(temp);
   805  01B5  087A               	movf	_temp,w
   806  01B6  00F7               	movwf	Lcd_Write_String@a
   807  01B7  3000               	movlw	0
   808  01B8  00F8               	movwf	Lcd_Write_String@a+1
   809  01B9  120A  118A  23E9  120A  118A  	fcall	_Lcd_Write_String
   810                           
   811                           ;mainMaster.c: 62:         key = get_hall();
   812  01BE  120A  118A  25E3  120A  118A  	fcall	_get_hall
   813  01C3  1283               	bcf	3,5	;RP0=0, select bank0
   814  01C4  1303               	bcf	3,6	;RP1=0, select bank0
   815  01C5  00C1               	movwf	??_main
   816  01C6  0841               	movf	??_main,w
   817  01C7  00C3               	movwf	_key
   818                           
   819                           ;mainMaster.c: 63:         Lcd_Set_Cursor(1,7);
   820  01C8  3007               	movlw	7
   821  01C9  00C1               	movwf	??_main
   822  01CA  0841               	movf	??_main,w
   823  01CB  00F6               	movwf	Lcd_Set_Cursor@b
   824  01CC  3001               	movlw	1
   825  01CD  120A  118A  2399  120A  118A  	fcall	_Lcd_Set_Cursor
   826                           
   827                           ;mainMaster.c: 65:         if (key == 1){
   828  01D2  1283               	bcf	3,5	;RP0=0, select bank0
   829  01D3  1303               	bcf	3,6	;RP1=0, select bank0
   830  01D4  0343               	decf	_key,w
   831  01D5  1D03               	btfss	3,2
   832  01D6  29D9               	goto	l1964
   833                           
   834                           ;mainMaster.c: 66:             Lcd_Write_String("Key ON  ");
   835  01D7  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   836  01D8  29DA               	goto	L1
   837  01D9                     l1964:	
   838                           ;mainMaster.c: 67:         } else {
   839                           
   840                           
   841                           ;mainMaster.c: 68:             Lcd_Write_String("Key OFF ");
   842  01D9  3014               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   843  01DA                     L1:	
   844  01DA  00F7               	movwf	Lcd_Write_String@a
   845  01DB  3080               	movlw	128
   846  01DC  00F8               	movwf	Lcd_Write_String@a+1
   847  01DD  120A  118A  23E9  120A  118A  	fcall	_Lcd_Write_String
   848                           
   849                           ;mainMaster.c: 71:         if (strcmp(temp,"23.50") > 0){
   850                           
   851                           ;mainMaster.c: 69:         }
   852  01E2  301D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   853  01E3  1283               	bcf	3,5	;RP0=0, select bank0
   854  01E4  1303               	bcf	3,6	;RP1=0, select bank0
   855  01E5  00C1               	movwf	??_main
   856  01E6  0841               	movf	??_main,w
   857  01E7  00F2               	movwf	strcmp@s2
   858  01E8  087A               	movf	_temp,w
   859  01E9  120A  118A  2570  120A  118A  	fcall	_strcmp
   860  01EE  0873               	movf	?_strcmp+1,w
   861  01EF  3A80               	xorlw	128
   862  01F0  00FF               	movwf	127
   863  01F1  3080               	movlw	128
   864  01F2  027F               	subwf	127,w
   865  01F3  1D03               	skipz
   866  01F4  29F7               	goto	u1385
   867  01F5  3001               	movlw	1
   868  01F6  0272               	subwf	?_strcmp,w
   869  01F7                     u1385:	
   870  01F7  1C03               	skipc
   871  01F8  29FD               	goto	l165
   872                           
   873                           ;mainMaster.c: 72:             PORTAbits.RA0 = 1;
   874  01F9  1283               	bcf	3,5	;RP0=0, select bank0
   875  01FA  1303               	bcf	3,6	;RP1=0, select bank0
   876  01FB  1405               	bsf	5,0	;volatile
   877                           
   878                           ;mainMaster.c: 73:         } else {
   879  01FC  2A00               	goto	l1968
   880  01FD                     l165:	
   881                           
   882                           ;mainMaster.c: 74:             PORTAbits.RA0 = 0;
   883  01FD  1283               	bcf	3,5	;RP0=0, select bank0
   884  01FE  1303               	bcf	3,6	;RP1=0, select bank0
   885  01FF  1005               	bcf	5,0	;volatile
   886  0200                     l1968:	
   887                           
   888                           ;mainMaster.c: 77:         time = get_time();
   889  0200  120A  118A  2213  120A  118A  	fcall	_get_time
   890  0205  1283               	bcf	3,5	;RP0=0, select bank0
   891  0206  1303               	bcf	3,6	;RP1=0, select bank0
   892  0207  00C1               	movwf	??_main
   893  0208  0841               	movf	??_main,w
   894  0209  00FB               	movwf	_time
   895                           
   896                           ;mainMaster.c: 78:         Lcd_Set_Cursor(1,1);
   897  020A  01F6               	clrf	Lcd_Set_Cursor@b
   898  020B  0AF6               	incf	Lcd_Set_Cursor@b,f
   899  020C  3001               	movlw	1
   900  020D  120A  118A  2399  120A  118A  	fcall	_Lcd_Set_Cursor
   901  0212  299A               	goto	l1948
   902  0213                     __end_of_main:	
   903                           
   904                           	psect	text1
   905  0570                     __ptext1:	
   906 ;; *************** function _strcmp *****************
   907 ;; Defined at:
   908 ;;		line 33 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcmp.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;  s1              1    wreg     PTR const unsigned char 
   911 ;;		 -> NULL(0), get_temp@temperature(6), 
   912 ;;  s2              1    2[COMMON] PTR const unsigned char 
   913 ;;		 -> STR_3(6), 
   914 ;; Auto vars:     Size  Location     Type
   915 ;;  s1              1    8[COMMON] PTR const unsigned char 
   916 ;;		 -> NULL(0), get_temp@temperature(6), 
   917 ;;  r               1    7[COMMON] char 
   918 ;; Return value:  Size  Location     Type
   919 ;;                  2    2[COMMON] int 
   920 ;; Registers used:
   921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   927 ;;      Params:         2       0       0       0       0
   928 ;;      Locals:         2       0       0       0       0
   929 ;;      Temps:          3       0       0       0       0
   930 ;;      Totals:         7       0       0       0       0
   931 ;;Total ram usage:        7 bytes
   932 ;; Hardware stack levels used:    2
   933 ;; Hardware stack levels required when called:    1
   934 ;; This function calls:
   935 ;;		Nothing
   936 ;; This function is called by:
   937 ;;		_main
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           
   942                           ;psect for function _strcmp
   943  0570                     _strcmp:	
   944                           
   945                           ;incstack = 0
   946                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+pclath]
   947                           ;strcmp@s1 stored from wreg
   948  0570  00F8               	movwf	strcmp@s1
   949  0571  2D7F               	goto	l1674
   950  0572                     l1676:	
   951  0572  0878               	movf	strcmp@s1,w
   952  0573  0084               	movwf	4
   953  0574  0800               	movf	0,w
   954  0575  1903               	btfsc	3,2
   955  0576  2D94               	goto	l1678
   956  0577  3001               	movlw	1
   957  0578  00F4               	movwf	??_strcmp
   958  0579  0874               	movf	??_strcmp,w
   959  057A  07F8               	addwf	strcmp@s1,f
   960  057B  3001               	movlw	1
   961  057C  00F4               	movwf	??_strcmp
   962  057D  0874               	movf	??_strcmp,w
   963  057E  07F2               	addwf	strcmp@s2,f
   964  057F                     l1674:	
   965  057F  0872               	movf	strcmp@s2,w
   966  0580  0084               	movwf	4
   967  0581  120A  118A  2470  120A  118A  	fcall	stringdir
   968  0586  00F4               	movwf	??_strcmp
   969  0587  0878               	movf	strcmp@s1,w
   970  0588  0084               	movwf	4
   971  0589  1383               	bcf	3,7	;select IRP bank0
   972  058A  0800               	movf	0,w
   973  058B  00F5               	movwf	??_strcmp+1
   974  058C  0874               	movf	??_strcmp,w
   975  058D  0275               	subwf	??_strcmp+1,w
   976  058E  00F6               	movwf	??_strcmp+2
   977  058F  0876               	movf	??_strcmp+2,w
   978  0590  00F7               	movwf	strcmp@r
   979  0591  0877               	movf	strcmp@r,w
   980  0592  1903               	btfsc	3,2
   981  0593  2D72               	goto	l1676
   982  0594                     l1678:	
   983  0594  0877               	movf	strcmp@r,w
   984  0595  00F2               	movwf	?_strcmp
   985  0596  01F3               	clrf	?_strcmp+1
   986  0597  1BF2               	btfsc	?_strcmp,7
   987  0598  03F3               	decf	?_strcmp+1,f
   988  0599  0008               	return
   989  059A                     __end_of_strcmp:	
   990                           
   991                           	psect	text2
   992  059A                     __ptext2:	
   993 ;; *************** function _setup *****************
   994 ;; Defined at:
   995 ;;		line 82 in file "mainMaster.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0
  1012 ;;      Totals:         0       0       0       0       0
  1013 ;;Total ram usage:        0 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; Hardware stack levels required when called:    4
  1016 ;; This function calls:
  1017 ;;		_I2C_Master_Init
  1018 ;;		_Lcd_Init
  1019 ;;		_initOscilador
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           
  1026                           ;psect for function _setup
  1027  059A                     _setup:	
  1028                           
  1029                           ;mainMaster.c: 83:     initOscilador(7);
  1030                           
  1031                           ;incstack = 0
  1032                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1033  059A  3007               	movlw	7
  1034  059B  120A  118A  2344  120A  118A  	fcall	_initOscilador
  1035                           
  1036                           ;mainMaster.c: 84:     ANSELH = 0;
  1037  05A0  1683               	bsf	3,5	;RP0=1, select bank3
  1038  05A1  1703               	bsf	3,6	;RP1=1, select bank3
  1039  05A2  0189               	clrf	9	;volatile
  1040                           
  1041                           ;mainMaster.c: 85:     ANSEL = 0;
  1042  05A3  0188               	clrf	8	;volatile
  1043                           
  1044                           ;mainMaster.c: 86:     TRISB = 0;
  1045  05A4  1683               	bsf	3,5	;RP0=1, select bank1
  1046  05A5  1303               	bcf	3,6	;RP1=0, select bank1
  1047  05A6  0186               	clrf	6	;volatile
  1048                           
  1049                           ;mainMaster.c: 87:     TRISA = 0;
  1050  05A7  0185               	clrf	5	;volatile
  1051                           
  1052                           ;mainMaster.c: 88:     PORTB = 0;
  1053  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  1054  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  1055  05AA  0186               	clrf	6	;volatile
  1056                           
  1057                           ;mainMaster.c: 89:     PORTA = 0;
  1058  05AB  0185               	clrf	5	;volatile
  1059                           
  1060                           ;mainMaster.c: 91:     Lcd_Init();
  1061  05AC  120A  118A  22E9  120A  118A  	fcall	_Lcd_Init
  1062                           
  1063                           ;mainMaster.c: 92:     I2C_Master_Init(100000);
  1064  05B1  3000               	movlw	0
  1065  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  1066  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  1067  05B4  00A9               	movwf	I2C_Master_Init@c+3
  1068  05B5  3001               	movlw	1
  1069  05B6  00A8               	movwf	I2C_Master_Init@c+2
  1070  05B7  3086               	movlw	134
  1071  05B8  00A7               	movwf	I2C_Master_Init@c+1
  1072  05B9  30A0               	movlw	160
  1073  05BA  00A6               	movwf	I2C_Master_Init@c
  1074  05BB  120A  118A  24DA   	fcall	_I2C_Master_Init
  1075  05BE  0008               	return
  1076  05BF                     __end_of_setup:	
  1077                           
  1078                           	psect	text3
  1079  0344                     __ptext3:	
  1080 ;; *************** function _initOscilador *****************
  1081 ;; Defined at:
  1082 ;;		line 11 in file "./Oscilador.h"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;  option          1    wreg     unsigned char 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;  option          1    4[COMMON] unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         0       0       0       0       0
  1097 ;;      Locals:         1       0       0       0       0
  1098 ;;      Temps:          2       0       0       0       0
  1099 ;;      Totals:         3       0       0       0       0
  1100 ;;Total ram usage:        3 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    1
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_setup
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function _initOscilador
  1112  0344                     _initOscilador:	
  1113                           
  1114                           ;incstack = 0
  1115                           ; Regs used in _initOscilador: [wreg-fsr0h+status,2+status,0]
  1116                           ;initOscilador@option stored from wreg
  1117  0344  00F4               	movwf	initOscilador@option
  1118                           
  1119                           ;./Oscilador.h: 13: 
  1120  0345  2B75               	goto	l1500
  1121  0346                     l1480:	
  1122                           
  1123                           ;./Oscilador.h: 16:         case 3:
  1124  0346  308F               	movlw	-113
  1125  0347  1683               	bsf	3,5	;RP0=1, select bank1
  1126  0348  1303               	bcf	3,6	;RP1=0, select bank1
  1127  0349  058F               	andwf	15,f	;volatile
  1128                           
  1129                           ;./Oscilador.h: 17: 
  1130  034A  2B97               	goto	l135
  1131  034B                     l1482:	
  1132                           
  1133                           ;./Oscilador.h: 20:         case 4:
  1134  034B  1683               	bsf	3,5	;RP0=1, select bank1
  1135  034C  1303               	bcf	3,6	;RP1=0, select bank1
  1136  034D  080F               	movf	15,w	;volatile
  1137  034E  398F               	andlw	-113
  1138  034F  3810               	iorlw	16
  1139  0350  2B6E               	goto	L6
  1140  0351                     l1484:	
  1141                           ;./Oscilador.h: 21: 
  1142                           
  1143                           
  1144                           ;./Oscilador.h: 24:         case 5:
  1145  0351  1683               	bsf	3,5	;RP0=1, select bank1
  1146  0352  1303               	bcf	3,6	;RP1=0, select bank1
  1147  0353  080F               	movf	15,w	;volatile
  1148  0354  398F               	andlw	-113
  1149  0355  3820               	iorlw	32
  1150  0356  2B6E               	goto	L6
  1151  0357                     l1486:	
  1152                           ;./Oscilador.h: 25: 
  1153                           
  1154                           
  1155                           ;./Oscilador.h: 28:         case 6:
  1156  0357  1683               	bsf	3,5	;RP0=1, select bank1
  1157  0358  1303               	bcf	3,6	;RP1=0, select bank1
  1158  0359  080F               	movf	15,w	;volatile
  1159  035A  398F               	andlw	-113
  1160  035B  3830               	iorlw	48
  1161  035C  2B6E               	goto	L6
  1162  035D                     l1488:	
  1163                           ;./Oscilador.h: 29: 
  1164                           
  1165                           
  1166                           ;./Oscilador.h: 32:         case 7:
  1167  035D  1683               	bsf	3,5	;RP0=1, select bank1
  1168  035E  1303               	bcf	3,6	;RP1=0, select bank1
  1169  035F  080F               	movf	15,w	;volatile
  1170  0360  398F               	andlw	-113
  1171  0361  3840               	iorlw	64
  1172  0362  2B6E               	goto	L6
  1173  0363                     l1490:	
  1174                           ;./Oscilador.h: 33: 
  1175                           
  1176                           
  1177                           ;./Oscilador.h: 36:         default:
  1178  0363  1683               	bsf	3,5	;RP0=1, select bank1
  1179  0364  1303               	bcf	3,6	;RP1=0, select bank1
  1180  0365  080F               	movf	15,w	;volatile
  1181  0366  398F               	andlw	-113
  1182  0367  3850               	iorlw	80
  1183  0368  2B6E               	goto	L6
  1184  0369                     l1492:	
  1185                           ;./Oscilador.h: 37: 
  1186                           
  1187                           
  1188                           ;./Oscilador.h: 40:     }
  1189  0369  1683               	bsf	3,5	;RP0=1, select bank1
  1190  036A  1303               	bcf	3,6	;RP1=0, select bank1
  1191  036B  080F               	movf	15,w	;volatile
  1192  036C  398F               	andlw	-113
  1193  036D  3860               	iorlw	96
  1194  036E                     L6:	
  1195  036E  008F               	movwf	15	;volatile
  1196                           
  1197                           ;./Oscilador.h: 41:     OSCCONbits.SCS = 1;
  1198  036F  2B97               	goto	l135
  1199  0370                     l1494:	
  1200  0370                     l1496:	
  1201  0370  3070               	movlw	112
  1202  0371  1683               	bsf	3,5	;RP0=1, select bank1
  1203  0372  1303               	bcf	3,6	;RP1=0, select bank1
  1204  0373  048F               	iorwf	15,f	;volatile
  1205  0374  2B97               	goto	l135
  1206  0375                     l1500:	
  1207  0375  0874               	movf	initOscilador@option,w
  1208  0376  00F2               	movwf	??_initOscilador
  1209  0377  01F3               	clrf	??_initOscilador+1
  1210                           
  1211                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1212                           ; Switch size 1, requested type "simple"
  1213                           ; Number of cases is 1, Range of values is 0 to 0
  1214                           ; switch strategies available:
  1215                           ; Name         Instructions Cycles
  1216                           ; simple_byte            4     3 (average)
  1217                           ; direct_byte           11     8 (fixed)
  1218                           ; jumptable            260     6 (fixed)
  1219                           ;	Chosen strategy is simple_byte
  1220  0378  0873               	movf	??_initOscilador+1,w
  1221  0379  3A00               	xorlw	0	; case 0
  1222  037A  1903               	skipnz
  1223  037B  2B7D               	goto	l2010
  1224  037C  2B70               	goto	l1496
  1225  037D                     l2010:	
  1226                           
  1227                           ; Switch size 1, requested type "simple"
  1228                           ; Number of cases is 8, Range of values is 0 to 7
  1229                           ; switch strategies available:
  1230                           ; Name         Instructions Cycles
  1231                           ; simple_byte           25    13 (average)
  1232                           ; direct_byte           32     8 (fixed)
  1233                           ; jumptable            260     6 (fixed)
  1234                           ;	Chosen strategy is simple_byte
  1235  037D  0872               	movf	??_initOscilador,w
  1236  037E  3A00               	xorlw	0	; case 0
  1237  037F  1903               	skipnz
  1238  0380  2B46               	goto	l1480
  1239  0381  3A01               	xorlw	1	; case 1
  1240  0382  1903               	skipnz
  1241  0383  2B4B               	goto	l1482
  1242  0384  3A03               	xorlw	3	; case 2
  1243  0385  1903               	skipnz
  1244  0386  2B51               	goto	l1484
  1245  0387  3A01               	xorlw	1	; case 3
  1246  0388  1903               	skipnz
  1247  0389  2B57               	goto	l1486
  1248  038A  3A07               	xorlw	7	; case 4
  1249  038B  1903               	skipnz
  1250  038C  2B5D               	goto	l1488
  1251  038D  3A01               	xorlw	1	; case 5
  1252  038E  1903               	skipnz
  1253  038F  2B63               	goto	l1490
  1254  0390  3A03               	xorlw	3	; case 6
  1255  0391  1903               	skipnz
  1256  0392  2B69               	goto	l1492
  1257  0393  3A01               	xorlw	1	; case 7
  1258  0394  1903               	skipnz
  1259  0395  2B70               	goto	l1494
  1260  0396  2B70               	goto	l1496
  1261  0397                     l135:	
  1262  0397  140F               	bsf	15,0	;volatile
  1263  0398  0008               	return
  1264  0399                     __end_of_initOscilador:	
  1265                           
  1266                           	psect	text4
  1267  02E9                     __ptext4:	
  1268 ;; *************** function _Lcd_Init *****************
  1269 ;; Defined at:
  1270 ;;		line 65 in file "./LCD4bits.h"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;		None
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;		None
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, status,2, status,0, pclath, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1284 ;;      Params:         0       0       0       0       0
  1285 ;;      Locals:         0       0       0       0       0
  1286 ;;      Temps:          2       0       0       0       0
  1287 ;;      Totals:         2       0       0       0       0
  1288 ;;Total ram usage:        2 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    3
  1291 ;; This function calls:
  1292 ;;		_Lcd_Cmd
  1293 ;;		_Lcd_Port
  1294 ;; This function is called by:
  1295 ;;		_setup
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           
  1300                           ;psect for function _Lcd_Init
  1301  02E9                     _Lcd_Init:	
  1302                           
  1303                           ;./LCD4bits.h: 67:   Lcd_Port(0x00);
  1304                           
  1305                           ;incstack = 0
  1306                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1307  02E9  3000               	movlw	0
  1308  02EA  120A  118A  261C  120A  118A  	fcall	_Lcd_Port
  1309                           
  1310                           ;./LCD4bits.h: 68:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1311  02EF  3034               	movlw	52
  1312  02F0  00F7               	movwf	??_Lcd_Init+1
  1313  02F1  30F1               	movlw	241
  1314  02F2  00F6               	movwf	??_Lcd_Init
  1315  02F3                     u1397:	
  1316  02F3  0BF6               	decfsz	??_Lcd_Init,f
  1317  02F4  2AF3               	goto	u1397
  1318  02F5  0BF7               	decfsz	??_Lcd_Init+1,f
  1319  02F6  2AF3               	goto	u1397
  1320  02F7  2AF8               	nop2
  1321                           
  1322                           ;./LCD4bits.h: 69:   Lcd_Cmd(0x03);
  1323  02F8  3003               	movlw	3
  1324  02F9  120A  118A  2602  120A  118A  	fcall	_Lcd_Cmd
  1325                           
  1326                           ;./LCD4bits.h: 70:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1327  02FE  300D               	movlw	13
  1328  02FF  00F7               	movwf	??_Lcd_Init+1
  1329  0300  30FB               	movlw	251
  1330  0301  00F6               	movwf	??_Lcd_Init
  1331  0302                     u1407:	
  1332  0302  0BF6               	decfsz	??_Lcd_Init,f
  1333  0303  2B02               	goto	u1407
  1334  0304  0BF7               	decfsz	??_Lcd_Init+1,f
  1335  0305  2B02               	goto	u1407
  1336  0306  2B07               	nop2
  1337                           
  1338                           ;./LCD4bits.h: 71:   Lcd_Cmd(0x03);
  1339  0307  3003               	movlw	3
  1340  0308  120A  118A  2602  120A  118A  	fcall	_Lcd_Cmd
  1341                           
  1342                           ;./LCD4bits.h: 72:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1343  030D  301D               	movlw	29
  1344  030E  00F7               	movwf	??_Lcd_Init+1
  1345  030F  3091               	movlw	145
  1346  0310  00F6               	movwf	??_Lcd_Init
  1347  0311                     u1417:	
  1348  0311  0BF6               	decfsz	??_Lcd_Init,f
  1349  0312  2B11               	goto	u1417
  1350  0313  0BF7               	decfsz	??_Lcd_Init+1,f
  1351  0314  2B11               	goto	u1417
  1352                           
  1353                           ;./LCD4bits.h: 73:   Lcd_Cmd(0x03);
  1354  0315  3003               	movlw	3
  1355  0316  120A  118A  2602  120A  118A  	fcall	_Lcd_Cmd
  1356                           
  1357                           ;./LCD4bits.h: 75:   Lcd_Cmd(0x02);
  1358  031B  3002               	movlw	2
  1359  031C  120A  118A  2602  120A  118A  	fcall	_Lcd_Cmd
  1360                           
  1361                           ;./LCD4bits.h: 76:   Lcd_Cmd(0x02);
  1362  0321  3002               	movlw	2
  1363  0322  120A  118A  2602  120A  118A  	fcall	_Lcd_Cmd
  1364                           
  1365                           ;./LCD4bits.h: 77:   Lcd_Cmd(0x08);
  1366  0327  3008               	movlw	8
  1367  0328  120A  118A  2602  120A  118A  	fcall	_Lcd_Cmd
  1368                           
  1369                           ;./LCD4bits.h: 78:   Lcd_Cmd(0x00);
  1370  032D  3000               	movlw	0
  1371  032E  120A  118A  2602  120A  118A  	fcall	_Lcd_Cmd
  1372                           
  1373                           ;./LCD4bits.h: 79:   Lcd_Cmd(0x0C);
  1374  0333  300C               	movlw	12
  1375  0334  120A  118A  2602  120A  118A  	fcall	_Lcd_Cmd
  1376                           
  1377                           ;./LCD4bits.h: 80:   Lcd_Cmd(0x00);
  1378  0339  3000               	movlw	0
  1379  033A  120A  118A  2602  120A  118A  	fcall	_Lcd_Cmd
  1380                           
  1381                           ;./LCD4bits.h: 81:   Lcd_Cmd(0x06);
  1382  033F  3006               	movlw	6
  1383  0340  120A  118A  2602   	fcall	_Lcd_Cmd
  1384  0343  0008               	return
  1385  0344                     __end_of_Lcd_Init:	
  1386                           
  1387                           	psect	text5
  1388  04DA                     __ptext5:	
  1389 ;; *************** function _I2C_Master_Init *****************
  1390 ;; Defined at:
  1391 ;;		line 16 in file "./I2C.h"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;  c               4    6[BANK0 ] const unsigned long 
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;		None
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      void 
  1398 ;; Registers used:
  1399 ;;		wreg, status,2, status,0, pclath, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1405 ;;      Params:         0       4       0       0       0
  1406 ;;      Locals:         0       0       0       0       0
  1407 ;;      Temps:          0       4       0       0       0
  1408 ;;      Totals:         0       8       0       0       0
  1409 ;;Total ram usage:        8 bytes
  1410 ;; Hardware stack levels used:    1
  1411 ;; Hardware stack levels required when called:    2
  1412 ;; This function calls:
  1413 ;;		___lldiv
  1414 ;; This function is called by:
  1415 ;;		_setup
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           
  1420                           ;psect for function _I2C_Master_Init
  1421  04DA                     _I2C_Master_Init:	
  1422                           
  1423                           ;./I2C.h: 16: void I2C_Master_Init(const unsigned long c);./I2C.h: 17: {;./I2C.h: 18:   
      +                            SSPCON = 0b00101000;
  1424                           
  1425                           ;incstack = 0
  1426                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1427  04DA  3028               	movlw	40
  1428  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  1429  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  1430  04DD  0094               	movwf	20	;volatile
  1431                           
  1432                           ;./I2C.h: 19:     SSPCON2 = 0;
  1433  04DE  1683               	bsf	3,5	;RP0=1, select bank1
  1434  04DF  1303               	bcf	3,6	;RP1=0, select bank1
  1435  04E0  0191               	clrf	17	;volatile
  1436                           
  1437                           ;./I2C.h: 20:     SSPADD = (8000000/(4*c))-1;
  1438  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  1439  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  1440  04E3  0826               	movf	I2C_Master_Init@c,w
  1441  04E4  00AA               	movwf	??_I2C_Master_Init
  1442  04E5  0827               	movf	I2C_Master_Init@c+1,w
  1443  04E6  00AB               	movwf	??_I2C_Master_Init+1
  1444  04E7  0828               	movf	I2C_Master_Init@c+2,w
  1445  04E8  00AC               	movwf	??_I2C_Master_Init+2
  1446  04E9  0829               	movf	I2C_Master_Init@c+3,w
  1447  04EA  00AD               	movwf	??_I2C_Master_Init+3
  1448  04EB  3002               	movlw	2
  1449  04EC                     u1245:	
  1450  04EC  1003               	clrc
  1451  04ED  0DAA               	rlf	??_I2C_Master_Init,f
  1452  04EE  0DAB               	rlf	??_I2C_Master_Init+1,f
  1453  04EF  0DAC               	rlf	??_I2C_Master_Init+2,f
  1454  04F0  0DAD               	rlf	??_I2C_Master_Init+3,f
  1455  04F1  3EFF               	addlw	-1
  1456  04F2  1D03               	skipz
  1457  04F3  2CEC               	goto	u1245
  1458  04F4  082D               	movf	??_I2C_Master_Init+3,w
  1459  04F5  00F5               	movwf	___lldiv@divisor+3
  1460  04F6  082C               	movf	??_I2C_Master_Init+2,w
  1461  04F7  00F4               	movwf	___lldiv@divisor+2
  1462  04F8  082B               	movf	??_I2C_Master_Init+1,w
  1463  04F9  00F3               	movwf	___lldiv@divisor+1
  1464  04FA  082A               	movf	??_I2C_Master_Init,w
  1465  04FB  00F2               	movwf	___lldiv@divisor
  1466  04FC  3000               	movlw	0
  1467  04FD  00F9               	movwf	___lldiv@dividend+3
  1468  04FE  307A               	movlw	122
  1469  04FF  00F8               	movwf	___lldiv@dividend+2
  1470  0500  3012               	movlw	18
  1471  0501  00F7               	movwf	___lldiv@dividend+1
  1472  0502  3000               	movlw	0
  1473  0503  00F6               	movwf	___lldiv@dividend
  1474  0504  120A  118A  2289   	fcall	___lldiv
  1475  0507  0872               	movf	?___lldiv,w
  1476  0508  3EFF               	addlw	255
  1477  0509  1683               	bsf	3,5	;RP0=1, select bank1
  1478  050A  1303               	bcf	3,6	;RP1=0, select bank1
  1479  050B  0093               	movwf	19	;volatile
  1480                           
  1481                           ;./I2C.h: 21:     SSPSTAT = 0;
  1482  050C  0194               	clrf	20	;volatile
  1483                           
  1484                           ;./I2C.h: 22:     TRISC3 = 1;
  1485  050D  1587               	bsf	7,3	;volatile
  1486                           
  1487                           ;./I2C.h: 23:     TRISC4 = 1;
  1488  050E  1607               	bsf	7,4	;volatile
  1489  050F  0008               	return
  1490  0510                     __end_of_I2C_Master_Init:	
  1491                           
  1492                           	psect	text6
  1493  0289                     __ptext6:	
  1494 ;; *************** function ___lldiv *****************
  1495 ;; Defined at:
  1496 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  divisor         4    2[COMMON] unsigned long 
  1499 ;;  dividend        4    6[COMMON] unsigned long 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  quotient        4    1[BANK0 ] unsigned long 
  1502 ;;  counter         1    5[BANK0 ] unsigned char 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  4    2[COMMON] unsigned long 
  1505 ;; Registers used:
  1506 ;;		wreg, status,2, status,0
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1512 ;;      Params:         8       0       0       0       0
  1513 ;;      Locals:         0       5       0       0       0
  1514 ;;      Temps:          0       1       0       0       0
  1515 ;;      Totals:         8       6       0       0       0
  1516 ;;Total ram usage:       14 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:    1
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_I2C_Master_Init
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           
  1527                           ;psect for function ___lldiv
  1528  0289                     ___lldiv:	
  1529                           
  1530                           ;incstack = 0
  1531                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1532  0289  3000               	movlw	0
  1533  028A  1283               	bcf	3,5	;RP0=0, select bank0
  1534  028B  1303               	bcf	3,6	;RP1=0, select bank0
  1535  028C  00A4               	movwf	___lldiv@quotient+3
  1536  028D  3000               	movlw	0
  1537  028E  00A3               	movwf	___lldiv@quotient+2
  1538  028F  3000               	movlw	0
  1539  0290  00A2               	movwf	___lldiv@quotient+1
  1540  0291  3000               	movlw	0
  1541  0292  00A1               	movwf	___lldiv@quotient
  1542  0293  0875               	movf	___lldiv@divisor+3,w
  1543  0294  0474               	iorwf	___lldiv@divisor+2,w
  1544  0295  0473               	iorwf	___lldiv@divisor+1,w
  1545  0296  0472               	iorwf	___lldiv@divisor,w
  1546  0297  1903               	skipnz
  1547  0298  2AE0               	goto	l1796
  1548  0299  01A5               	clrf	___lldiv@counter
  1549  029A  0AA5               	incf	___lldiv@counter,f
  1550  029B                     l1782:	
  1551  029B  1BF5               	btfsc	___lldiv@divisor+3,7
  1552  029C  2AAB               	goto	l1784
  1553  029D  3001               	movlw	1
  1554  029E  00A0               	movwf	??___lldiv
  1555  029F                     u1125:	
  1556  029F  1003               	clrc
  1557  02A0  0DF2               	rlf	___lldiv@divisor,f
  1558  02A1  0DF3               	rlf	___lldiv@divisor+1,f
  1559  02A2  0DF4               	rlf	___lldiv@divisor+2,f
  1560  02A3  0DF5               	rlf	___lldiv@divisor+3,f
  1561  02A4  0BA0               	decfsz	??___lldiv,f
  1562  02A5  2A9F               	goto	u1125
  1563  02A6  3001               	movlw	1
  1564  02A7  00A0               	movwf	??___lldiv
  1565  02A8  0820               	movf	??___lldiv,w
  1566  02A9  07A5               	addwf	___lldiv@counter,f
  1567  02AA  2A9B               	goto	l1782
  1568  02AB                     l1784:	
  1569  02AB  3001               	movlw	1
  1570  02AC  00A0               	movwf	??___lldiv
  1571  02AD                     u1145:	
  1572  02AD  1003               	clrc
  1573  02AE  0DA1               	rlf	___lldiv@quotient,f
  1574  02AF  0DA2               	rlf	___lldiv@quotient+1,f
  1575  02B0  0DA3               	rlf	___lldiv@quotient+2,f
  1576  02B1  0DA4               	rlf	___lldiv@quotient+3,f
  1577  02B2  0BA0               	decfsz	??___lldiv,f
  1578  02B3  2AAD               	goto	u1145
  1579  02B4  0875               	movf	___lldiv@divisor+3,w
  1580  02B5  0279               	subwf	___lldiv@dividend+3,w
  1581  02B6  1D03               	skipz
  1582  02B7  2AC2               	goto	u1155
  1583  02B8  0874               	movf	___lldiv@divisor+2,w
  1584  02B9  0278               	subwf	___lldiv@dividend+2,w
  1585  02BA  1D03               	skipz
  1586  02BB  2AC2               	goto	u1155
  1587  02BC  0873               	movf	___lldiv@divisor+1,w
  1588  02BD  0277               	subwf	___lldiv@dividend+1,w
  1589  02BE  1D03               	skipz
  1590  02BF  2AC2               	goto	u1155
  1591  02C0  0872               	movf	___lldiv@divisor,w
  1592  02C1  0276               	subwf	___lldiv@dividend,w
  1593  02C2                     u1155:	
  1594  02C2  1C03               	skipc
  1595  02C3  2AD3               	goto	l1792
  1596  02C4  0872               	movf	___lldiv@divisor,w
  1597  02C5  02F6               	subwf	___lldiv@dividend,f
  1598  02C6  0873               	movf	___lldiv@divisor+1,w
  1599  02C7  1C03               	skipc
  1600  02C8  0F73               	incfsz	___lldiv@divisor+1,w
  1601  02C9  02F7               	subwf	___lldiv@dividend+1,f
  1602  02CA  0874               	movf	___lldiv@divisor+2,w
  1603  02CB  1C03               	skipc
  1604  02CC  0F74               	incfsz	___lldiv@divisor+2,w
  1605  02CD  02F8               	subwf	___lldiv@dividend+2,f
  1606  02CE  0875               	movf	___lldiv@divisor+3,w
  1607  02CF  1C03               	skipc
  1608  02D0  0F75               	incfsz	___lldiv@divisor+3,w
  1609  02D1  02F9               	subwf	___lldiv@dividend+3,f
  1610  02D2  1421               	bsf	___lldiv@quotient,0
  1611  02D3                     l1792:	
  1612  02D3  3001               	movlw	1
  1613  02D4                     u1165:	
  1614  02D4  1003               	clrc
  1615  02D5  0CF5               	rrf	___lldiv@divisor+3,f
  1616  02D6  0CF4               	rrf	___lldiv@divisor+2,f
  1617  02D7  0CF3               	rrf	___lldiv@divisor+1,f
  1618  02D8  0CF2               	rrf	___lldiv@divisor,f
  1619  02D9  3EFF               	addlw	-1
  1620  02DA  1D03               	skipz
  1621  02DB  2AD4               	goto	u1165
  1622  02DC  3001               	movlw	1
  1623  02DD  02A5               	subwf	___lldiv@counter,f
  1624  02DE  1D03               	btfss	3,2
  1625  02DF  2AAB               	goto	l1784
  1626  02E0                     l1796:	
  1627  02E0  0824               	movf	___lldiv@quotient+3,w
  1628  02E1  00F5               	movwf	?___lldiv+3
  1629  02E2  0823               	movf	___lldiv@quotient+2,w
  1630  02E3  00F4               	movwf	?___lldiv+2
  1631  02E4  0822               	movf	___lldiv@quotient+1,w
  1632  02E5  00F3               	movwf	?___lldiv+1
  1633  02E6  0821               	movf	___lldiv@quotient,w
  1634  02E7  00F2               	movwf	?___lldiv
  1635  02E8  0008               	return
  1636  02E9                     __end_of___lldiv:	
  1637                           
  1638                           	psect	text7
  1639  0213                     __ptext7:	
  1640 ;; *************** function _get_time *****************
  1641 ;; Defined at:
  1642 ;;		line 106 in file "mainMaster.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  string_time     6    0[BANK0 ] unsigned char [6]
  1647 ;;  min             1    7[BANK0 ] unsigned char 
  1648 ;;  hour            1    6[BANK0 ] unsigned char 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      PTR unsigned char 
  1651 ;; Registers used:
  1652 ;;		wreg, status,2, status,0, pclath, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1658 ;;      Params:         0       0       0       0       0
  1659 ;;      Locals:         0       8       0       0       0
  1660 ;;      Temps:          2       0       0       0       0
  1661 ;;      Totals:         2       8       0       0       0
  1662 ;;Total ram usage:       10 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    3
  1665 ;; This function calls:
  1666 ;;		_I2C_Master_Read
  1667 ;;		_I2C_Master_RepeatedStart
  1668 ;;		_I2C_Master_Start
  1669 ;;		_I2C_Master_Stop
  1670 ;;		_I2C_Master_Write
  1671 ;; This function is called by:
  1672 ;;		_main
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           
  1677                           ;psect for function _get_time
  1678  0213                     _get_time:	
  1679                           
  1680                           ;mainMaster.c: 107:     char hour, min;;mainMaster.c: 108:     char string_time[6];;main
      +                          Master.c: 110:     I2C_Master_Start();
  1681                           
  1682                           ;incstack = 0
  1683                           ; Regs used in _get_time: [wreg+status,2+status,0+pclath+cstack]
  1684  0213  120A  118A  2671  120A  118A  	fcall	_I2C_Master_Start
  1685                           
  1686                           ;mainMaster.c: 111:     I2C_Master_Write(0xD0);
  1687  0218  30D0               	movlw	208
  1688  0219  00F2               	movwf	I2C_Master_Write@d
  1689  021A  3000               	movlw	0
  1690  021B  00F3               	movwf	I2C_Master_Write@d+1
  1691  021C  120A  118A  265B  120A  118A  	fcall	_I2C_Master_Write
  1692                           
  1693                           ;mainMaster.c: 112:     I2C_Master_Write(0x01);
  1694  0221  3001               	movlw	1
  1695  0222  00F2               	movwf	I2C_Master_Write@d
  1696  0223  3000               	movlw	0
  1697  0224  00F3               	movwf	I2C_Master_Write@d+1
  1698  0225  120A  118A  265B  120A  118A  	fcall	_I2C_Master_Write
  1699                           
  1700                           ;mainMaster.c: 113:     I2C_Master_RepeatedStart();
  1701  022A  120A  118A  2663  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1702                           
  1703                           ;mainMaster.c: 114:     I2C_Master_Write(0xD1);
  1704  022F  30D1               	movlw	209
  1705  0230  00F2               	movwf	I2C_Master_Write@d
  1706  0231  3000               	movlw	0
  1707  0232  00F3               	movwf	I2C_Master_Write@d+1
  1708  0233  120A  118A  265B  120A  118A  	fcall	_I2C_Master_Write
  1709                           
  1710                           ;mainMaster.c: 115:     min = I2C_Master_Read(1);
  1711  0238  3001               	movlw	1
  1712  0239  00F2               	movwf	I2C_Master_Read@a
  1713  023A  3000               	movlw	0
  1714  023B  00F3               	movwf	I2C_Master_Read@a+1
  1715  023C  120A  118A  2544  120A  118A  	fcall	_I2C_Master_Read
  1716  0241  0872               	movf	?_I2C_Master_Read,w
  1717  0242  00F8               	movwf	??_get_time
  1718  0243  0878               	movf	??_get_time,w
  1719  0244  1283               	bcf	3,5	;RP0=0, select bank0
  1720  0245  1303               	bcf	3,6	;RP1=0, select bank0
  1721  0246  00A7               	movwf	get_time@min
  1722                           
  1723                           ;mainMaster.c: 116:     hour = I2C_Master_Read(0);
  1724  0247  3000               	movlw	0
  1725  0248  00F2               	movwf	I2C_Master_Read@a
  1726  0249  00F3               	movwf	I2C_Master_Read@a+1
  1727  024A  120A  118A  2544  120A  118A  	fcall	_I2C_Master_Read
  1728  024F  0872               	movf	?_I2C_Master_Read,w
  1729  0250  00F8               	movwf	??_get_time
  1730  0251  0878               	movf	??_get_time,w
  1731  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1732  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1733  0254  00A6               	movwf	get_time@hour
  1734                           
  1735                           ;mainMaster.c: 117:     I2C_Master_Stop();
  1736  0255  120A  118A  266A  120A  118A  	fcall	_I2C_Master_Stop
  1737                           
  1738                           ;mainMaster.c: 119:     string_time[0] = (hour >> 4) + '0';
  1739  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1740  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1741  025C  0826               	movf	get_time@hour,w
  1742  025D  00F8               	movwf	??_get_time
  1743  025E  3004               	movlw	4
  1744  025F                     u1075:	
  1745  025F  1003               	clrc
  1746  0260  0CF8               	rrf	??_get_time,f
  1747  0261  3EFF               	addlw	-1
  1748  0262  1D03               	skipz
  1749  0263  2A5F               	goto	u1075
  1750  0264  0878               	movf	??_get_time,w
  1751  0265  3E30               	addlw	48
  1752  0266  00F9               	movwf	??_get_time+1
  1753  0267  0879               	movf	??_get_time+1,w
  1754  0268  00A0               	movwf	get_time@string_time
  1755                           
  1756                           ;mainMaster.c: 120:     string_time[1] = (hour & 0x0F) + '0';
  1757  0269  0826               	movf	get_time@hour,w
  1758  026A  390F               	andlw	15
  1759  026B  3E30               	addlw	48
  1760  026C  00F8               	movwf	??_get_time
  1761  026D  0878               	movf	??_get_time,w
  1762  026E  00A1               	movwf	get_time@string_time+1
  1763                           
  1764                           ;mainMaster.c: 121:     string_time[2] = ':';
  1765  026F  303A               	movlw	58
  1766  0270  00F8               	movwf	??_get_time
  1767  0271  0878               	movf	??_get_time,w
  1768  0272  00A2               	movwf	get_time@string_time+2
  1769                           
  1770                           ;mainMaster.c: 122:     string_time[3] = (min >> 4) + '0';
  1771  0273  0827               	movf	get_time@min,w
  1772  0274  00F8               	movwf	??_get_time
  1773  0275  3004               	movlw	4
  1774  0276                     u1085:	
  1775  0276  1003               	clrc
  1776  0277  0CF8               	rrf	??_get_time,f
  1777  0278  3EFF               	addlw	-1
  1778  0279  1D03               	skipz
  1779  027A  2A76               	goto	u1085
  1780  027B  0878               	movf	??_get_time,w
  1781  027C  3E30               	addlw	48
  1782  027D  00F9               	movwf	??_get_time+1
  1783  027E  0879               	movf	??_get_time+1,w
  1784  027F  00A3               	movwf	get_time@string_time+3
  1785                           
  1786                           ;mainMaster.c: 123:     string_time[4] = (min & 0x0F) + '0';
  1787  0280  0827               	movf	get_time@min,w
  1788  0281  390F               	andlw	15
  1789  0282  3E30               	addlw	48
  1790  0283  00F8               	movwf	??_get_time
  1791  0284  0878               	movf	??_get_time,w
  1792  0285  00A4               	movwf	get_time@string_time+4
  1793                           
  1794                           ;mainMaster.c: 124:     string_time[5] = '\0';
  1795  0286  01A5               	clrf	get_time@string_time+5
  1796                           
  1797                           ;mainMaster.c: 126:     return (string_time);
  1798  0287  3020               	movlw	(low (get_time@string_time| 0))& (0+255)
  1799  0288  0008               	return
  1800  0289                     __end_of_get_time:	
  1801                           
  1802                           	psect	text8
  1803  00F3                     __ptext8:	
  1804 ;; *************** function _get_temp *****************
  1805 ;; Defined at:
  1806 ;;		line 143 in file "mainMaster.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  temperature     6   22[BANK0 ] unsigned char [6]
  1811 ;;  decimal         3   28[BANK0 ] unsigned char [3]
  1812 ;;  tempLSB         1   32[BANK0 ] unsigned char 
  1813 ;;  tempMSB         1   31[BANK0 ] unsigned char 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      PTR unsigned char 
  1816 ;; Registers used:
  1817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1823 ;;      Params:         0       0       0       0       0
  1824 ;;      Locals:         0      11       0       0       0
  1825 ;;      Temps:          0       3       0       0       0
  1826 ;;      Totals:         0      14       0       0       0
  1827 ;;Total ram usage:       14 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; Hardware stack levels required when called:    3
  1830 ;; This function calls:
  1831 ;;		_I2C_Master_Read
  1832 ;;		_I2C_Master_RepeatedStart
  1833 ;;		_I2C_Master_Start
  1834 ;;		_I2C_Master_Stop
  1835 ;;		_I2C_Master_Write
  1836 ;;		___bmul
  1837 ;;		_sprintf
  1838 ;;		_strcat
  1839 ;; This function is called by:
  1840 ;;		_main
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           
  1845                           ;psect for function _get_temp
  1846  00F3                     _get_temp:	
  1847                           
  1848                           ;mainMaster.c: 144:     char tempLSB, tempMSB;;mainMaster.c: 145:     char temperature[6
      +                          ], decimal[3];;mainMaster.c: 147:     I2C_Master_Start();
  1849                           
  1850                           ;incstack = 0
  1851                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1852  00F3  120A  118A  2671  120A  118A  	fcall	_I2C_Master_Start
  1853                           
  1854                           ;mainMaster.c: 148:     I2C_Master_Write(0xD0);
  1855  00F8  30D0               	movlw	208
  1856  00F9  00F2               	movwf	I2C_Master_Write@d
  1857  00FA  3000               	movlw	0
  1858  00FB  00F3               	movwf	I2C_Master_Write@d+1
  1859  00FC  120A  118A  265B  120A  118A  	fcall	_I2C_Master_Write
  1860                           
  1861                           ;mainMaster.c: 149:     I2C_Master_Write(0x11);
  1862  0101  3011               	movlw	17
  1863  0102  00F2               	movwf	I2C_Master_Write@d
  1864  0103  3000               	movlw	0
  1865  0104  00F3               	movwf	I2C_Master_Write@d+1
  1866  0105  120A  118A  265B  120A  118A  	fcall	_I2C_Master_Write
  1867                           
  1868                           ;mainMaster.c: 150:     I2C_Master_RepeatedStart();
  1869  010A  120A  118A  2663  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1870                           
  1871                           ;mainMaster.c: 151:     I2C_Master_Write(0xD1);
  1872  010F  30D1               	movlw	209
  1873  0110  00F2               	movwf	I2C_Master_Write@d
  1874  0111  3000               	movlw	0
  1875  0112  00F3               	movwf	I2C_Master_Write@d+1
  1876  0113  120A  118A  265B  120A  118A  	fcall	_I2C_Master_Write
  1877                           
  1878                           ;mainMaster.c: 152:     tempMSB = I2C_Master_Read(1);
  1879  0118  3001               	movlw	1
  1880  0119  00F2               	movwf	I2C_Master_Read@a
  1881  011A  3000               	movlw	0
  1882  011B  00F3               	movwf	I2C_Master_Read@a+1
  1883  011C  120A  118A  2544  120A  118A  	fcall	_I2C_Master_Read
  1884  0121  0872               	movf	?_I2C_Master_Read,w
  1885  0122  1283               	bcf	3,5	;RP0=0, select bank0
  1886  0123  1303               	bcf	3,6	;RP1=0, select bank0
  1887  0124  00B3               	movwf	??_get_temp
  1888  0125  0833               	movf	??_get_temp,w
  1889  0126  00BF               	movwf	get_temp@tempMSB
  1890                           
  1891                           ;mainMaster.c: 153:     tempLSB = I2C_Master_Read(0);
  1892  0127  3000               	movlw	0
  1893  0128  00F2               	movwf	I2C_Master_Read@a
  1894  0129  00F3               	movwf	I2C_Master_Read@a+1
  1895  012A  120A  118A  2544  120A  118A  	fcall	_I2C_Master_Read
  1896  012F  0872               	movf	?_I2C_Master_Read,w
  1897  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1898  0131  1303               	bcf	3,6	;RP1=0, select bank0
  1899  0132  00B3               	movwf	??_get_temp
  1900  0133  0833               	movf	??_get_temp,w
  1901  0134  00C0               	movwf	get_temp@tempLSB
  1902                           
  1903                           ;mainMaster.c: 154:     I2C_Master_Stop();
  1904  0135  120A  118A  266A  120A  118A  	fcall	_I2C_Master_Stop
  1905                           
  1906                           ;mainMaster.c: 156:     tempMSB = tempMSB - 4;
  1907  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1908  013B  1303               	bcf	3,6	;RP1=0, select bank0
  1909  013C  083F               	movf	get_temp@tempMSB,w
  1910  013D  3EFC               	addlw	252
  1911  013E  00B3               	movwf	??_get_temp
  1912  013F  0833               	movf	??_get_temp,w
  1913  0140  00BF               	movwf	get_temp@tempMSB
  1914                           
  1915                           ;mainMaster.c: 157:     tempLSB = (tempLSB >> 6) * 25;
  1916  0141  3019               	movlw	25
  1917  0142  00B3               	movwf	??_get_temp
  1918  0143  0833               	movf	??_get_temp,w
  1919  0144  00F2               	movwf	___bmul@multiplicand
  1920  0145  0840               	movf	get_temp@tempLSB,w
  1921  0146  00B4               	movwf	??_get_temp+1
  1922  0147  3006               	movlw	6
  1923  0148                     u1355:	
  1924  0148  1003               	clrc
  1925  0149  0CB4               	rrf	??_get_temp+1,f
  1926  014A  3EFF               	addlw	-1
  1927  014B  1D03               	skipz
  1928  014C  2948               	goto	u1355
  1929  014D  0834               	movf	??_get_temp+1,w
  1930  014E  120A  118A  2636  120A  118A  	fcall	___bmul
  1931  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1932  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1933  0155  00B5               	movwf	??_get_temp+2
  1934  0156  0835               	movf	??_get_temp+2,w
  1935  0157  00C0               	movwf	get_temp@tempLSB
  1936                           
  1937                           ;mainMaster.c: 158:     sprintf(temperature, "%d", tempMSB);
  1938  0158  3029               	movlw	(low (((STR_6+1)-__stringbase)| (0+32768)))& (0+255)
  1939  0159  00B3               	movwf	??_get_temp
  1940  015A  0833               	movf	??_get_temp,w
  1941  015B  00A6               	movwf	sprintf@f
  1942  015C  083F               	movf	get_temp@tempMSB,w
  1943  015D  00B4               	movwf	??_get_temp+1
  1944  015E  01B5               	clrf	??_get_temp+2
  1945  015F  0834               	movf	??_get_temp+1,w
  1946  0160  00A7               	movwf	?_sprintf+1
  1947  0161  0835               	movf	??_get_temp+2,w
  1948  0162  00A8               	movwf	?_sprintf+2
  1949  0163  3036               	movlw	(low (get_temp@temperature| 0))& (0+255)
  1950  0164  120A  118A  2019  120A  118A  	fcall	_sprintf
  1951                           
  1952                           ;mainMaster.c: 159:     if (tempLSB == 0){
  1953  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1954  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1955  016B  0840               	movf	get_temp@tempLSB,w
  1956  016C  1D03               	btfss	3,2
  1957  016D  2970               	goto	l1934
  1958                           
  1959                           ;mainMaster.c: 160:         sprintf(decimal, ".%d0", tempLSB);
  1960  016E  3023               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1961  016F  2971               	goto	L7
  1962  0170                     l1934:	
  1963                           ;mainMaster.c: 161:     } else {
  1964                           
  1965                           
  1966                           ;mainMaster.c: 162:         sprintf(decimal, ".%d", tempLSB);
  1967  0170  3028               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1968  0171                     L7:	
  1969  0171  00B3               	movwf	??_get_temp
  1970  0172  0833               	movf	??_get_temp,w
  1971  0173  00A6               	movwf	sprintf@f
  1972  0174  0840               	movf	get_temp@tempLSB,w
  1973  0175  00B4               	movwf	??_get_temp+1
  1974  0176  01B5               	clrf	??_get_temp+2
  1975  0177  0834               	movf	??_get_temp+1,w
  1976  0178  00A7               	movwf	?_sprintf+1
  1977  0179  0835               	movf	??_get_temp+2,w
  1978  017A  00A8               	movwf	?_sprintf+2
  1979  017B  303C               	movlw	(low (get_temp@decimal| 0))& (0+255)
  1980  017C  120A  118A  2019  120A  118A  	fcall	_sprintf
  1981                           
  1982                           ;mainMaster.c: 164:     strcat(temperature, decimal);
  1983  0181  303C               	movlw	(low (get_temp@decimal| 0))& (0+255)
  1984  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1985  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1986  0184  00B3               	movwf	??_get_temp
  1987  0185  0833               	movf	??_get_temp,w
  1988  0186  00F2               	movwf	strcat@from
  1989  0187  3036               	movlw	(low (get_temp@temperature| 0))& (0+255)
  1990  0188  120A  118A  25BF   	fcall	_strcat
  1991                           
  1992                           ;mainMaster.c: 165:     temperature[5] = '\0';
  1993  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1994  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1995  018D  01BB               	clrf	get_temp@temperature+5
  1996                           
  1997                           ;mainMaster.c: 167:     return (temperature);
  1998  018E  3036               	movlw	(low (get_temp@temperature| 0))& (0+255)
  1999  018F  0008               	return
  2000  0190                     __end_of_get_temp:	
  2001                           
  2002                           	psect	text9
  2003  05BF                     __ptext9:	
  2004 ;; *************** function _strcat *****************
  2005 ;; Defined at:
  2006 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcat.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  to              1    wreg     PTR unsigned char 
  2009 ;;		 -> get_temp@temperature(6), 
  2010 ;;  from            1    2[COMMON] PTR const unsigned char 
  2011 ;;		 -> get_temp@decimal(3), 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  to              1    4[COMMON] PTR unsigned char 
  2014 ;;		 -> get_temp@temperature(6), 
  2015 ;;  cp              1    5[COMMON] PTR unsigned char 
  2016 ;;		 -> get_temp@temperature(6), 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      PTR unsigned char 
  2019 ;; Registers used:
  2020 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2026 ;;      Params:         1       0       0       0       0
  2027 ;;      Locals:         2       0       0       0       0
  2028 ;;      Temps:          1       0       0       0       0
  2029 ;;      Totals:         4       0       0       0       0
  2030 ;;Total ram usage:        4 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    1
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_get_temp
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           
  2041                           ;psect for function _strcat
  2042  05BF                     _strcat:	
  2043                           
  2044                           ;incstack = 0
  2045                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2046                           ;strcat@to stored from wreg
  2047  05BF  00F4               	movwf	strcat@to
  2048  05C0  0874               	movf	strcat@to,w
  2049  05C1  00F3               	movwf	??_strcat
  2050  05C2  0873               	movf	??_strcat,w
  2051  05C3  00F5               	movwf	strcat@cp
  2052  05C4                     l1572:	
  2053  05C4  0875               	movf	strcat@cp,w
  2054  05C5  0084               	movwf	4
  2055  05C6  1383               	bcf	3,7	;select IRP bank0
  2056  05C7  0800               	movf	0,w
  2057  05C8  1903               	btfsc	3,2
  2058  05C9  2DD7               	goto	l1576
  2059  05CA  3001               	movlw	1
  2060  05CB  00F3               	movwf	??_strcat
  2061  05CC  0873               	movf	??_strcat,w
  2062  05CD  07F5               	addwf	strcat@cp,f
  2063  05CE  2DC4               	goto	l1572
  2064  05CF                     l1574:	
  2065  05CF  3001               	movlw	1
  2066  05D0  00F3               	movwf	??_strcat
  2067  05D1  0873               	movf	??_strcat,w
  2068  05D2  07F5               	addwf	strcat@cp,f
  2069  05D3  3001               	movlw	1
  2070  05D4  00F3               	movwf	??_strcat
  2071  05D5  0873               	movf	??_strcat,w
  2072  05D6  07F2               	addwf	strcat@from,f
  2073  05D7                     l1576:	
  2074  05D7  0872               	movf	strcat@from,w
  2075  05D8  0084               	movwf	4
  2076  05D9  0800               	movf	0,w
  2077  05DA  00F3               	movwf	??_strcat
  2078  05DB  0875               	movf	strcat@cp,w
  2079  05DC  0084               	movwf	4
  2080  05DD  0873               	movf	??_strcat,w
  2081  05DE  0080               	movwf	0
  2082  05DF  0800               	movf	0,w
  2083  05E0  1903               	btfsc	3,2
  2084  05E1  0008               	return
  2085  05E2  2DCF               	goto	l1574
  2086  05E3                     __end_of_strcat:	
  2087                           
  2088                           	psect	text10
  2089  0019                     __ptext10:	
  2090 ;; *************** function _sprintf *****************
  2091 ;; Defined at:
  2092 ;;		line 500 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  sp              1    wreg     PTR unsigned char 
  2095 ;;		 -> get_temp@decimal(3), get_temp@temperature(6), 
  2096 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  2097 ;;		 -> STR_6(4), STR_5(5), STR_4(3), 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  2100 ;;		 -> get_temp@decimal(3), get_temp@temperature(6), 
  2101 ;;  tmpval          4    0        struct .
  2102 ;;  val             2   15[BANK0 ] unsigned int 
  2103 ;;  cp              2    0        PTR const unsigned char 
  2104 ;;  len             2    0        unsigned int 
  2105 ;;  c               1   18[BANK0 ] unsigned char 
  2106 ;;  prec            1   14[BANK0 ] char 
  2107 ;;  flag            1   13[BANK0 ] unsigned char 
  2108 ;;  ap              1   12[BANK0 ] PTR void [1]
  2109 ;;		 -> ?_sprintf(2), 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  2    6[BANK0 ] int 
  2112 ;; Registers used:
  2113 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2119 ;;      Params:         0       3       0       0       0
  2120 ;;      Locals:         0       7       0       0       0
  2121 ;;      Temps:          0       3       0       0       0
  2122 ;;      Totals:         0      13       0       0       0
  2123 ;;Total ram usage:       13 bytes
  2124 ;; Hardware stack levels used:    1
  2125 ;; Hardware stack levels required when called:    2
  2126 ;; This function calls:
  2127 ;;		___lwdiv
  2128 ;;		___lwmod
  2129 ;; This function is called by:
  2130 ;;		_get_temp
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           
  2135                           ;psect for function _sprintf
  2136  0019                     _sprintf:	
  2137                           
  2138                           ;incstack = 0
  2139                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2140                           ;sprintf@sp stored from wreg
  2141  0019  1283               	bcf	3,5	;RP0=0, select bank0
  2142  001A  1303               	bcf	3,6	;RP1=0, select bank0
  2143  001B  00B1               	movwf	sprintf@sp
  2144                           
  2145                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;D:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  2146  001C  3027               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2147  001D  00A9               	movwf	??_sprintf
  2148  001E  0829               	movf	??_sprintf,w
  2149  001F  00AC               	movwf	sprintf@ap
  2150  0020                     l1886:	
  2151                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2152                           
  2153                           
  2154                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2155  0020  3001               	movlw	1
  2156  0021  07A6               	addwf	sprintf@f,f
  2157  0022  30FF               	movlw	-1
  2158  0023  0726               	addwf	sprintf@f,w
  2159  0024  0084               	movwf	4
  2160  0025  120A  118A  2470  120A  118A  	fcall	stringdir
  2161  002A  00A9               	movwf	??_sprintf
  2162  002B  0829               	movf	??_sprintf,w
  2163  002C  00B2               	movwf	sprintf@c
  2164  002D  0832               	movf	sprintf@c,w
  2165  002E  1903               	btfsc	3,2
  2166  002F  28EE               	goto	l1888
  2167                           
  2168                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  2169  0030  3025               	movlw	37
  2170  0031  0632               	xorwf	sprintf@c,w
  2171  0032  1903               	btfsc	3,2
  2172  0033  2840               	goto	l1842
  2173                           
  2174                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;D:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  2175  0034  0832               	movf	sprintf@c,w
  2176  0035  00A9               	movwf	??_sprintf
  2177  0036  0831               	movf	sprintf@sp,w
  2178  0037  0084               	movwf	4
  2179  0038  0829               	movf	??_sprintf,w
  2180  0039  1383               	bcf	3,7	;select IRP bank0
  2181  003A  0080               	movwf	0
  2182  003B  3001               	movlw	1
  2183  003C  00A9               	movwf	??_sprintf
  2184  003D  0829               	movf	??_sprintf,w
  2185  003E  07B1               	addwf	sprintf@sp,f
  2186                           
  2187                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  2188  003F  2820               	goto	l1886
  2189  0040                     l1842:	
  2190                           
  2191                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  2192  0040  01AD               	clrf	sprintf@flag
  2193                           
  2194                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  2195  0041  3001               	movlw	1
  2196  0042  07A6               	addwf	sprintf@f,f
  2197  0043  30FF               	movlw	-1
  2198  0044  0726               	addwf	sprintf@f,w
  2199  0045  0084               	movwf	4
  2200  0046  120A  118A  2470  120A  118A  	fcall	stringdir
  2201  004B  00B2               	movwf	sprintf@c
  2202  004C  00A9               	movwf	??_sprintf
  2203  004D  01AA               	clrf	??_sprintf+1
  2204                           
  2205                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2206                           ; Switch size 1, requested type "simple"
  2207                           ; Number of cases is 1, Range of values is 0 to 0
  2208                           ; switch strategies available:
  2209                           ; Name         Instructions Cycles
  2210                           ; simple_byte            4     3 (average)
  2211                           ; direct_byte           11     8 (fixed)
  2212                           ; jumptable            260     6 (fixed)
  2213                           ;	Chosen strategy is simple_byte
  2214  004E  082A               	movf	??_sprintf+1,w
  2215  004F  3A00               	xorlw	0	; case 0
  2216  0050  1903               	skipnz
  2217  0051  2853               	goto	l2012
  2218  0052  2820               	goto	l1886
  2219  0053                     l2012:	
  2220                           
  2221                           ; Switch size 1, requested type "simple"
  2222                           ; Number of cases is 3, Range of values is 0 to 105
  2223                           ; switch strategies available:
  2224                           ; Name         Instructions Cycles
  2225                           ; simple_byte           10     6 (average)
  2226                           ; jumptable            260     6 (fixed)
  2227                           ;	Chosen strategy is simple_byte
  2228  0053  0829               	movf	??_sprintf,w
  2229  0054  3A00               	xorlw	0	; case 0
  2230  0055  1903               	skipnz
  2231  0056  28EE               	goto	l1888
  2232  0057  3A64               	xorlw	100	; case 100
  2233  0058  1903               	skipnz
  2234  0059  285E               	goto	l1848
  2235  005A  3A0D               	xorlw	13	; case 105
  2236  005B  1903               	skipnz
  2237  005C  285E               	goto	l1848
  2238  005D  2820               	goto	l1886
  2239  005E                     l1848:	
  2240                           
  2241                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2242  005E  082C               	movf	sprintf@ap,w
  2243  005F  0084               	movwf	4
  2244  0060  1383               	bcf	3,7	;select IRP bank0
  2245  0061  0800               	movf	0,w
  2246  0062  00AF               	movwf	sprintf@val
  2247  0063  0A84               	incf	4,f
  2248  0064  0800               	movf	0,w
  2249  0065  00B0               	movwf	sprintf@val+1
  2250  0066  3002               	movlw	2
  2251  0067  00A9               	movwf	??_sprintf
  2252  0068  0829               	movf	??_sprintf,w
  2253  0069  07AC               	addwf	sprintf@ap,f
  2254                           
  2255                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  2256  006A  1FB0               	btfss	sprintf@val+1,7
  2257  006B  2875               	goto	l1858
  2258                           
  2259                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  2260  006C  3003               	movlw	3
  2261  006D  00A9               	movwf	??_sprintf
  2262  006E  0829               	movf	??_sprintf,w
  2263  006F  04AD               	iorwf	sprintf@flag,f
  2264                           
  2265                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  2266  0070  09AF               	comf	sprintf@val,f
  2267  0071  09B0               	comf	sprintf@val+1,f
  2268  0072  0AAF               	incf	sprintf@val,f
  2269  0073  1903               	skipnz
  2270  0074  0AB0               	incf	sprintf@val+1,f
  2271  0075                     l1858:	
  2272                           
  2273                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2274  0075  01B2               	clrf	sprintf@c
  2275  0076  0AB2               	incf	sprintf@c,f
  2276  0077                     l1864:	
  2277                           
  2278                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  2279  0077  0832               	movf	sprintf@c,w
  2280  0078  00A9               	movwf	??_sprintf
  2281  0079  0729               	addwf	??_sprintf,w
  2282  007A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2283  007B  0084               	movwf	4
  2284  007C  120A  118A  2470  120A  118A  	fcall	stringdir
  2285  0081  00AA               	movwf	??_sprintf+1
  2286  0082  120A  118A  2470  120A  118A  	fcall	stringdir
  2287  0087  00AB               	movwf	??_sprintf+2
  2288  0088  082B               	movf	??_sprintf+2,w
  2289  0089  0230               	subwf	sprintf@val+1,w
  2290  008A  1D03               	skipz
  2291  008B  288E               	goto	u1275
  2292  008C  082A               	movf	??_sprintf+1,w
  2293  008D  022F               	subwf	sprintf@val,w
  2294  008E                     u1275:	
  2295  008E  1C03               	btfss	3,0
  2296  008F  2898               	goto	l1870
  2297  0090  3001               	movlw	1
  2298  0091  00A9               	movwf	??_sprintf
  2299  0092  0829               	movf	??_sprintf,w
  2300  0093  07B2               	addwf	sprintf@c,f
  2301  0094  3005               	movlw	5
  2302  0095  0632               	xorwf	sprintf@c,w
  2303  0096  1D03               	btfss	3,2
  2304  0097  2877               	goto	l1864
  2305  0098                     l1870:	
  2306                           
  2307                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  2308  0098  082D               	movf	sprintf@flag,w
  2309  0099  3903               	andlw	3
  2310  009A  1903               	btfsc	3,2
  2311  009B  28A7               	goto	l1876
  2312                           
  2313                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  2314  009C  302D               	movlw	45
  2315  009D  00A9               	movwf	??_sprintf
  2316  009E  0831               	movf	sprintf@sp,w
  2317  009F  0084               	movwf	4
  2318  00A0  0829               	movf	??_sprintf,w
  2319  00A1  1383               	bcf	3,7	;select IRP bank0
  2320  00A2  0080               	movwf	0
  2321  00A3  3001               	movlw	1
  2322  00A4  00A9               	movwf	??_sprintf
  2323  00A5  0829               	movf	??_sprintf,w
  2324  00A6  07B1               	addwf	sprintf@sp,f
  2325  00A7                     l1876:	
  2326                           
  2327                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  2328  00A7  0832               	movf	sprintf@c,w
  2329  00A8  00A9               	movwf	??_sprintf
  2330  00A9  0829               	movf	??_sprintf,w
  2331  00AA  00AE               	movwf	sprintf@prec
  2332  00AB                     l1884:	
  2333                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2334                           
  2335                           
  2336                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2337  00AB  30FF               	movlw	255
  2338  00AC  00A9               	movwf	??_sprintf
  2339  00AD  0829               	movf	??_sprintf,w
  2340  00AE  07AE               	addwf	sprintf@prec,f
  2341  00AF  0A2E               	incf	sprintf@prec,w
  2342  00B0  1903               	btfsc	3,2
  2343  00B1  2820               	goto	l1886
  2344                           
  2345                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  2346  00B2  300A               	movlw	10
  2347  00B3  00A0               	movwf	___lwmod@divisor
  2348  00B4  3000               	movlw	0
  2349  00B5  00A1               	movwf	___lwmod@divisor+1
  2350  00B6  082E               	movf	sprintf@prec,w
  2351  00B7  00A9               	movwf	??_sprintf
  2352  00B8  0729               	addwf	??_sprintf,w
  2353  00B9  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2354  00BA  0084               	movwf	4
  2355  00BB  120A  118A  2470  120A  118A  	fcall	stringdir
  2356  00C0  00F2               	movwf	___lwdiv@divisor
  2357  00C1  120A  118A  2470  120A  118A  	fcall	stringdir
  2358  00C6  00F3               	movwf	___lwdiv@divisor+1
  2359  00C7  0830               	movf	sprintf@val+1,w
  2360  00C8  00F5               	movwf	___lwdiv@dividend+1
  2361  00C9  082F               	movf	sprintf@val,w
  2362  00CA  00F4               	movwf	___lwdiv@dividend
  2363  00CB  120A  118A  242A  120A  118A  	fcall	___lwdiv
  2364  00D0  0873               	movf	?___lwdiv+1,w
  2365  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  2366  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  2367  00D3  00A3               	movwf	___lwmod@dividend+1
  2368  00D4  0872               	movf	?___lwdiv,w
  2369  00D5  00A2               	movwf	___lwmod@dividend
  2370  00D6  120A  118A  2510  120A  118A  	fcall	___lwmod
  2371  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  2372  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  2373  00DD  0820               	movf	?___lwmod,w
  2374  00DE  3E30               	addlw	48
  2375  00DF  00AA               	movwf	??_sprintf+1
  2376  00E0  082A               	movf	??_sprintf+1,w
  2377  00E1  00B2               	movwf	sprintf@c
  2378                           
  2379                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  2380  00E2  0832               	movf	sprintf@c,w
  2381  00E3  00A9               	movwf	??_sprintf
  2382  00E4  0831               	movf	sprintf@sp,w
  2383  00E5  0084               	movwf	4
  2384  00E6  0829               	movf	??_sprintf,w
  2385  00E7  1383               	bcf	3,7	;select IRP bank0
  2386  00E8  0080               	movwf	0
  2387  00E9  3001               	movlw	1
  2388  00EA  00A9               	movwf	??_sprintf
  2389  00EB  0829               	movf	??_sprintf,w
  2390  00EC  07B1               	addwf	sprintf@sp,f
  2391  00ED  28AB               	goto	l1884
  2392  00EE                     l1888:	
  2393                           
  2394                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  2395  00EE  0831               	movf	sprintf@sp,w
  2396  00EF  0084               	movwf	4
  2397  00F0  1383               	bcf	3,7	;select IRP bank0
  2398  00F1  0180               	clrf	0
  2399  00F2  0008               	return
  2400  00F3                     __end_of_sprintf:	
  2401                           
  2402                           	psect	text11
  2403  0510                     __ptext11:	
  2404 ;; *************** function ___lwmod *****************
  2405 ;; Defined at:
  2406 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  divisor         2    0[BANK0 ] unsigned int 
  2409 ;;  dividend        2    2[BANK0 ] unsigned int 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  counter         1    5[BANK0 ] unsigned char 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  2    0[BANK0 ] unsigned int 
  2414 ;; Registers used:
  2415 ;;		wreg, status,2, status,0
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2421 ;;      Params:         0       4       0       0       0
  2422 ;;      Locals:         0       1       0       0       0
  2423 ;;      Temps:          0       1       0       0       0
  2424 ;;      Totals:         0       6       0       0       0
  2425 ;;Total ram usage:        6 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:    1
  2428 ;; This function calls:
  2429 ;;		Nothing
  2430 ;; This function is called by:
  2431 ;;		_sprintf
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           
  2436                           ;psect for function ___lwmod
  2437  0510                     ___lwmod:	
  2438                           
  2439                           ;incstack = 0
  2440                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2441  0510  1283               	bcf	3,5	;RP0=0, select bank0
  2442  0511  1303               	bcf	3,6	;RP1=0, select bank0
  2443  0512  0820               	movf	___lwmod@divisor,w
  2444  0513  0421               	iorwf	___lwmod@divisor+1,w
  2445  0514  1903               	btfsc	3,2
  2446  0515  2D3F               	goto	l1818
  2447  0516  01A5               	clrf	___lwmod@counter
  2448  0517  0AA5               	incf	___lwmod@counter,f
  2449  0518                     l1808:	
  2450  0518  1BA1               	btfsc	___lwmod@divisor+1,7
  2451  0519  2D26               	goto	l1810
  2452  051A  3001               	movlw	1
  2453  051B                     u1195:	
  2454  051B  1003               	clrc
  2455  051C  0DA0               	rlf	___lwmod@divisor,f
  2456  051D  0DA1               	rlf	___lwmod@divisor+1,f
  2457  051E  3EFF               	addlw	-1
  2458  051F  1D03               	skipz
  2459  0520  2D1B               	goto	u1195
  2460  0521  3001               	movlw	1
  2461  0522  00A4               	movwf	??___lwmod
  2462  0523  0824               	movf	??___lwmod,w
  2463  0524  07A5               	addwf	___lwmod@counter,f
  2464  0525  2D18               	goto	l1808
  2465  0526                     l1810:	
  2466  0526  0821               	movf	___lwmod@divisor+1,w
  2467  0527  0223               	subwf	___lwmod@dividend+1,w
  2468  0528  1D03               	skipz
  2469  0529  2D2C               	goto	u1215
  2470  052A  0820               	movf	___lwmod@divisor,w
  2471  052B  0222               	subwf	___lwmod@dividend,w
  2472  052C                     u1215:	
  2473  052C  1C03               	skipc
  2474  052D  2D34               	goto	l1814
  2475  052E  0820               	movf	___lwmod@divisor,w
  2476  052F  02A2               	subwf	___lwmod@dividend,f
  2477  0530  0821               	movf	___lwmod@divisor+1,w
  2478  0531  1C03               	skipc
  2479  0532  03A3               	decf	___lwmod@dividend+1,f
  2480  0533  02A3               	subwf	___lwmod@dividend+1,f
  2481  0534                     l1814:	
  2482  0534  3001               	movlw	1
  2483  0535                     u1225:	
  2484  0535  1003               	clrc
  2485  0536  0CA1               	rrf	___lwmod@divisor+1,f
  2486  0537  0CA0               	rrf	___lwmod@divisor,f
  2487  0538  3EFF               	addlw	-1
  2488  0539  1D03               	skipz
  2489  053A  2D35               	goto	u1225
  2490  053B  3001               	movlw	1
  2491  053C  02A5               	subwf	___lwmod@counter,f
  2492  053D  1D03               	btfss	3,2
  2493  053E  2D26               	goto	l1810
  2494  053F                     l1818:	
  2495  053F  0823               	movf	___lwmod@dividend+1,w
  2496  0540  00A1               	movwf	?___lwmod+1
  2497  0541  0822               	movf	___lwmod@dividend,w
  2498  0542  00A0               	movwf	?___lwmod
  2499  0543  0008               	return
  2500  0544                     __end_of___lwmod:	
  2501                           
  2502                           	psect	text12
  2503  042A                     __ptext12:	
  2504 ;; *************** function ___lwdiv *****************
  2505 ;; Defined at:
  2506 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  divisor         2    2[COMMON] unsigned int 
  2509 ;;  dividend        2    4[COMMON] unsigned int 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  quotient        2    7[COMMON] unsigned int 
  2512 ;;  counter         1    9[COMMON] unsigned char 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  2    2[COMMON] unsigned int 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2522 ;;      Params:         4       0       0       0       0
  2523 ;;      Locals:         3       0       0       0       0
  2524 ;;      Temps:          1       0       0       0       0
  2525 ;;      Totals:         8       0       0       0       0
  2526 ;;Total ram usage:        8 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    1
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_sprintf
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           
  2537                           ;psect for function ___lwdiv
  2538  042A                     ___lwdiv:	
  2539                           
  2540                           ;incstack = 0
  2541                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2542  042A  01F7               	clrf	___lwdiv@quotient
  2543  042B  01F8               	clrf	___lwdiv@quotient+1
  2544  042C  0872               	movf	___lwdiv@divisor,w
  2545  042D  0473               	iorwf	___lwdiv@divisor+1,w
  2546  042E  1903               	btfsc	3,2
  2547  042F  2C61               	goto	l1378
  2548  0430  01F9               	clrf	___lwdiv@counter
  2549  0431  0AF9               	incf	___lwdiv@counter,f
  2550  0432                     l1366:	
  2551  0432  1BF3               	btfsc	___lwdiv@divisor+1,7
  2552  0433  2C40               	goto	l1368
  2553  0434  3001               	movlw	1
  2554  0435                     u705:	
  2555  0435  1003               	clrc
  2556  0436  0DF2               	rlf	___lwdiv@divisor,f
  2557  0437  0DF3               	rlf	___lwdiv@divisor+1,f
  2558  0438  3EFF               	addlw	-1
  2559  0439  1D03               	skipz
  2560  043A  2C35               	goto	u705
  2561  043B  3001               	movlw	1
  2562  043C  00F6               	movwf	??___lwdiv
  2563  043D  0876               	movf	??___lwdiv,w
  2564  043E  07F9               	addwf	___lwdiv@counter,f
  2565  043F  2C32               	goto	l1366
  2566  0440                     l1368:	
  2567  0440  3001               	movlw	1
  2568  0441                     u725:	
  2569  0441  1003               	clrc
  2570  0442  0DF7               	rlf	___lwdiv@quotient,f
  2571  0443  0DF8               	rlf	___lwdiv@quotient+1,f
  2572  0444  3EFF               	addlw	-1
  2573  0445  1D03               	skipz
  2574  0446  2C41               	goto	u725
  2575  0447  0873               	movf	___lwdiv@divisor+1,w
  2576  0448  0275               	subwf	___lwdiv@dividend+1,w
  2577  0449  1D03               	skipz
  2578  044A  2C4D               	goto	u735
  2579  044B  0872               	movf	___lwdiv@divisor,w
  2580  044C  0274               	subwf	___lwdiv@dividend,w
  2581  044D                     u735:	
  2582  044D  1C03               	skipc
  2583  044E  2C56               	goto	l1374
  2584  044F  0872               	movf	___lwdiv@divisor,w
  2585  0450  02F4               	subwf	___lwdiv@dividend,f
  2586  0451  0873               	movf	___lwdiv@divisor+1,w
  2587  0452  1C03               	skipc
  2588  0453  03F5               	decf	___lwdiv@dividend+1,f
  2589  0454  02F5               	subwf	___lwdiv@dividend+1,f
  2590  0455  1477               	bsf	___lwdiv@quotient,0
  2591  0456                     l1374:	
  2592  0456  3001               	movlw	1
  2593  0457                     u745:	
  2594  0457  1003               	clrc
  2595  0458  0CF3               	rrf	___lwdiv@divisor+1,f
  2596  0459  0CF2               	rrf	___lwdiv@divisor,f
  2597  045A  3EFF               	addlw	-1
  2598  045B  1D03               	skipz
  2599  045C  2C57               	goto	u745
  2600  045D  3001               	movlw	1
  2601  045E  02F9               	subwf	___lwdiv@counter,f
  2602  045F  1D03               	btfss	3,2
  2603  0460  2C40               	goto	l1368
  2604  0461                     l1378:	
  2605  0461  0878               	movf	___lwdiv@quotient+1,w
  2606  0462  00F3               	movwf	?___lwdiv+1
  2607  0463  0877               	movf	___lwdiv@quotient,w
  2608  0464  00F2               	movwf	?___lwdiv
  2609  0465  0008               	return
  2610  0466                     __end_of___lwdiv:	
  2611                           
  2612                           	psect	text13
  2613  0636                     __ptext13:	
  2614 ;; *************** function ___bmul *****************
  2615 ;; Defined at:
  2616 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;  multiplier      1    wreg     unsigned char 
  2619 ;;  multiplicand    1    2[COMMON] unsigned char 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;  multiplier      1    5[COMMON] unsigned char 
  2622 ;;  product         1    4[COMMON] unsigned char 
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      unsigned char 
  2625 ;; Registers used:
  2626 ;;		wreg, status,2, status,0
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2632 ;;      Params:         1       0       0       0       0
  2633 ;;      Locals:         2       0       0       0       0
  2634 ;;      Temps:          1       0       0       0       0
  2635 ;;      Totals:         4       0       0       0       0
  2636 ;;Total ram usage:        4 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    1
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_get_temp
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           
  2647                           ;psect for function ___bmul
  2648  0636                     ___bmul:	
  2649                           
  2650                           ;incstack = 0
  2651                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2652                           ;___bmul@multiplier stored from wreg
  2653  0636  00F5               	movwf	___bmul@multiplier
  2654  0637  01F4               	clrf	___bmul@product
  2655  0638                     l1580:	
  2656  0638  1C75               	btfss	___bmul@multiplier,0
  2657  0639  2E3E               	goto	l1584
  2658  063A  0872               	movf	___bmul@multiplicand,w
  2659  063B  00F3               	movwf	??___bmul
  2660  063C  0873               	movf	??___bmul,w
  2661  063D  07F4               	addwf	___bmul@product,f
  2662  063E                     l1584:	
  2663  063E  1003               	clrc
  2664  063F  0DF2               	rlf	___bmul@multiplicand,f
  2665  0640  1003               	clrc
  2666  0641  0CF5               	rrf	___bmul@multiplier,f
  2667  0642  0875               	movf	___bmul@multiplier,w
  2668  0643  1D03               	btfss	3,2
  2669  0644  2E38               	goto	l1580
  2670  0645  0874               	movf	___bmul@product,w
  2671  0646  0008               	return
  2672  0647                     __end_of___bmul:	
  2673                           
  2674                           	psect	text14
  2675  0663                     __ptext14:	
  2676 ;; *************** function _I2C_Master_RepeatedStart *****************
  2677 ;; Defined at:
  2678 ;;		line 47 in file "./I2C.h"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;		None
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;		None
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      void 
  2685 ;; Registers used:
  2686 ;;		wreg, status,2, status,0, pclath, cstack
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2692 ;;      Params:         0       0       0       0       0
  2693 ;;      Locals:         0       0       0       0       0
  2694 ;;      Temps:          0       0       0       0       0
  2695 ;;      Totals:         0       0       0       0       0
  2696 ;;Total ram usage:        0 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:    2
  2699 ;; This function calls:
  2700 ;;		_I2C_Master_Wait
  2701 ;; This function is called by:
  2702 ;;		_get_time
  2703 ;;		_get_temp
  2704 ;;		_get_day
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           
  2709                           ;psect for function _I2C_Master_RepeatedStart
  2710  0663                     _I2C_Master_RepeatedStart:	
  2711                           
  2712                           ;./I2C.h: 49:     I2C_Master_Wait();
  2713                           
  2714                           ;incstack = 0
  2715                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2716  0663  120A  118A  2652   	fcall	_I2C_Master_Wait
  2717                           
  2718                           ;./I2C.h: 50:     SSPCON2bits.RSEN = 1;
  2719  0666  1683               	bsf	3,5	;RP0=1, select bank1
  2720  0667  1303               	bcf	3,6	;RP1=0, select bank1
  2721  0668  1491               	bsf	17,1	;volatile
  2722  0669  0008               	return
  2723  066A                     __end_of_I2C_Master_RepeatedStart:	
  2724                           
  2725                           	psect	text15
  2726  05E3                     __ptext15:	
  2727 ;; *************** function _get_hall *****************
  2728 ;; Defined at:
  2729 ;;		line 170 in file "mainMaster.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;  key             1    9[COMMON] unsigned char 
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      unsigned char 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0, pclath, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2743 ;;      Params:         0       0       0       0       0
  2744 ;;      Locals:         1       0       0       0       0
  2745 ;;      Temps:          1       0       0       0       0
  2746 ;;      Totals:         2       0       0       0       0
  2747 ;;Total ram usage:        2 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; Hardware stack levels required when called:    3
  2750 ;; This function calls:
  2751 ;;		_I2C_Master_Read
  2752 ;;		_I2C_Master_Start
  2753 ;;		_I2C_Master_Stop
  2754 ;;		_I2C_Master_Write
  2755 ;; This function is called by:
  2756 ;;		_main
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           
  2761                           ;psect for function _get_hall
  2762  05E3                     _get_hall:	
  2763                           
  2764                           ;mainMaster.c: 171:     char key;;mainMaster.c: 173:     I2C_Master_Start();
  2765                           
  2766                           ;incstack = 0
  2767                           ; Regs used in _get_hall: [wreg+status,2+status,0+pclath+cstack]
  2768  05E3  120A  118A  2671  120A  118A  	fcall	_I2C_Master_Start
  2769                           
  2770                           ;mainMaster.c: 174:     I2C_Master_Write(0x11);
  2771  05E8  3011               	movlw	17
  2772  05E9  00F2               	movwf	I2C_Master_Write@d
  2773  05EA  3000               	movlw	0
  2774  05EB  00F3               	movwf	I2C_Master_Write@d+1
  2775  05EC  120A  118A  265B  120A  118A  	fcall	_I2C_Master_Write
  2776                           
  2777                           ;mainMaster.c: 175:     key = I2C_Master_Read(0);
  2778  05F1  3000               	movlw	0
  2779  05F2  00F2               	movwf	I2C_Master_Read@a
  2780  05F3  00F3               	movwf	I2C_Master_Read@a+1
  2781  05F4  120A  118A  2544  120A  118A  	fcall	_I2C_Master_Read
  2782  05F9  0872               	movf	?_I2C_Master_Read,w
  2783  05FA  00F8               	movwf	??_get_hall
  2784  05FB  0878               	movf	??_get_hall,w
  2785  05FC  00F9               	movwf	get_hall@key
  2786                           
  2787                           ;mainMaster.c: 176:     I2C_Master_Stop();
  2788  05FD  120A  118A  266A   	fcall	_I2C_Master_Stop
  2789                           
  2790                           ;mainMaster.c: 178:     return (key);
  2791  0600  0879               	movf	get_hall@key,w
  2792  0601  0008               	return
  2793  0602                     __end_of_get_hall:	
  2794                           
  2795                           	psect	text16
  2796  065B                     __ptext16:	
  2797 ;; *************** function _I2C_Master_Write *****************
  2798 ;; Defined at:
  2799 ;;		line 65 in file "./I2C.h"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;  d               2    2[COMMON] unsigned int 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;		None
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      void 
  2806 ;; Registers used:
  2807 ;;		wreg, status,2, status,0, pclath, cstack
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2813 ;;      Params:         2       0       0       0       0
  2814 ;;      Locals:         0       0       0       0       0
  2815 ;;      Temps:          0       0       0       0       0
  2816 ;;      Totals:         2       0       0       0       0
  2817 ;;Total ram usage:        2 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; Hardware stack levels required when called:    2
  2820 ;; This function calls:
  2821 ;;		_I2C_Master_Wait
  2822 ;; This function is called by:
  2823 ;;		_get_time
  2824 ;;		_get_temp
  2825 ;;		_get_hall
  2826 ;;		_write_RTC
  2827 ;;		_get_day
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           
  2832                           ;psect for function _I2C_Master_Write
  2833  065B                     _I2C_Master_Write:	
  2834                           
  2835                           ;./I2C.h: 65: void I2C_Master_Write(unsigned d);./I2C.h: 66: {;./I2C.h: 67:     I2C_Mast
      +                          er_Wait();
  2836                           
  2837                           ;incstack = 0
  2838                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2839  065B  120A  118A  2652   	fcall	_I2C_Master_Wait
  2840                           
  2841                           ;./I2C.h: 68:     SSPBUF = d;
  2842  065E  0872               	movf	I2C_Master_Write@d,w
  2843  065F  1283               	bcf	3,5	;RP0=0, select bank0
  2844  0660  1303               	bcf	3,6	;RP1=0, select bank0
  2845  0661  0093               	movwf	19	;volatile
  2846  0662  0008               	return
  2847  0663                     __end_of_I2C_Master_Write:	
  2848                           
  2849                           	psect	text17
  2850  066A                     __ptext17:	
  2851 ;; *************** function _I2C_Master_Stop *****************
  2852 ;; Defined at:
  2853 ;;		line 55 in file "./I2C.h"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, status,0, pclath, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2867 ;;      Params:         0       0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0
  2870 ;;      Totals:         0       0       0       0       0
  2871 ;;Total ram usage:        0 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    2
  2874 ;; This function calls:
  2875 ;;		_I2C_Master_Wait
  2876 ;; This function is called by:
  2877 ;;		_get_time
  2878 ;;		_get_temp
  2879 ;;		_get_hall
  2880 ;;		_write_RTC
  2881 ;;		_get_day
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           
  2886                           ;psect for function _I2C_Master_Stop
  2887  066A                     _I2C_Master_Stop:	
  2888                           
  2889                           ;./I2C.h: 57:     I2C_Master_Wait();
  2890                           
  2891                           ;incstack = 0
  2892                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2893  066A  120A  118A  2652   	fcall	_I2C_Master_Wait
  2894                           
  2895                           ;./I2C.h: 58:     SSPCON2bits.PEN = 1;
  2896  066D  1683               	bsf	3,5	;RP0=1, select bank1
  2897  066E  1303               	bcf	3,6	;RP1=0, select bank1
  2898  066F  1511               	bsf	17,2	;volatile
  2899  0670  0008               	return
  2900  0671                     __end_of_I2C_Master_Stop:	
  2901                           
  2902                           	psect	text18
  2903  0671                     __ptext18:	
  2904 ;; *************** function _I2C_Master_Start *****************
  2905 ;; Defined at:
  2906 ;;		line 39 in file "./I2C.h"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, status,2, status,0, pclath, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2920 ;;      Params:         0       0       0       0       0
  2921 ;;      Locals:         0       0       0       0       0
  2922 ;;      Temps:          0       0       0       0       0
  2923 ;;      Totals:         0       0       0       0       0
  2924 ;;Total ram usage:        0 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    2
  2927 ;; This function calls:
  2928 ;;		_I2C_Master_Wait
  2929 ;; This function is called by:
  2930 ;;		_get_time
  2931 ;;		_get_temp
  2932 ;;		_get_hall
  2933 ;;		_write_RTC
  2934 ;;		_get_day
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           
  2939                           ;psect for function _I2C_Master_Start
  2940  0671                     _I2C_Master_Start:	
  2941                           
  2942                           ;./I2C.h: 41:     I2C_Master_Wait();
  2943                           
  2944                           ;incstack = 0
  2945                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2946  0671  120A  118A  2652   	fcall	_I2C_Master_Wait
  2947                           
  2948                           ;./I2C.h: 42:     SSPCON2bits.SEN = 1;
  2949  0674  1683               	bsf	3,5	;RP0=1, select bank1
  2950  0675  1303               	bcf	3,6	;RP1=0, select bank1
  2951  0676  1411               	bsf	17,0	;volatile
  2952  0677  0008               	return
  2953  0678                     __end_of_I2C_Master_Start:	
  2954                           
  2955                           	psect	text19
  2956  0544                     __ptext19:	
  2957 ;; *************** function _I2C_Master_Read *****************
  2958 ;; Defined at:
  2959 ;;		line 74 in file "./I2C.h"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  a               2    2[COMMON] unsigned short 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;  temp            2    6[COMMON] unsigned short 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  2    2[COMMON] unsigned short 
  2966 ;; Registers used:
  2967 ;;		wreg, status,2, status,0, pclath, cstack
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2973 ;;      Params:         2       0       0       0       0
  2974 ;;      Locals:         2       0       0       0       0
  2975 ;;      Temps:          2       0       0       0       0
  2976 ;;      Totals:         6       0       0       0       0
  2977 ;;Total ram usage:        6 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; Hardware stack levels required when called:    2
  2980 ;; This function calls:
  2981 ;;		_I2C_Master_Wait
  2982 ;; This function is called by:
  2983 ;;		_get_time
  2984 ;;		_get_temp
  2985 ;;		_get_hall
  2986 ;;		_get_day
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           
  2991                           ;psect for function _I2C_Master_Read
  2992  0544                     _I2C_Master_Read:	
  2993                           
  2994                           ;./I2C.h: 74: unsigned short I2C_Master_Read(unsigned short a);./I2C.h: 75: {;./I2C.h: 7
      +                          6:     unsigned short temp;;./I2C.h: 77:     I2C_Master_Wait();
  2995                           
  2996                           ;incstack = 0
  2997                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2998  0544  120A  118A  2652  120A  118A  	fcall	_I2C_Master_Wait
  2999                           
  3000                           ;./I2C.h: 78:     RCEN = 1;
  3001  0549  1683               	bsf	3,5	;RP0=1, select bank1
  3002  054A  1303               	bcf	3,6	;RP1=0, select bank1
  3003  054B  1591               	bsf	17,3	;volatile
  3004                           
  3005                           ;./I2C.h: 79:     I2C_Master_Wait();
  3006  054C  120A  118A  2652  120A  118A  	fcall	_I2C_Master_Wait
  3007                           
  3008                           ;./I2C.h: 80:     temp = SSPBUF;
  3009  0551  1283               	bcf	3,5	;RP0=0, select bank0
  3010  0552  1303               	bcf	3,6	;RP1=0, select bank0
  3011  0553  0813               	movf	19,w	;volatile
  3012  0554  00F4               	movwf	??_I2C_Master_Read
  3013  0555  01F5               	clrf	??_I2C_Master_Read+1
  3014  0556  0874               	movf	??_I2C_Master_Read,w
  3015  0557  00F6               	movwf	I2C_Master_Read@temp
  3016  0558  0875               	movf	??_I2C_Master_Read+1,w
  3017  0559  00F7               	movwf	I2C_Master_Read@temp+1
  3018                           
  3019                           ;./I2C.h: 81:     I2C_Master_Wait();
  3020  055A  120A  118A  2652  120A  118A  	fcall	_I2C_Master_Wait
  3021                           
  3022                           ;./I2C.h: 83:     if(a == 1){
  3023  055F  0372               	decf	I2C_Master_Read@a,w
  3024  0560  0473               	iorwf	I2C_Master_Read@a+1,w
  3025  0561  1D03               	btfss	3,2
  3026  0562  2D67               	goto	l84
  3027                           
  3028                           ;./I2C.h: 84:         SSPCON2bits.ACKDT = 0;
  3029  0563  1683               	bsf	3,5	;RP0=1, select bank1
  3030  0564  1303               	bcf	3,6	;RP1=0, select bank1
  3031  0565  1291               	bcf	17,5	;volatile
  3032                           
  3033                           ;./I2C.h: 85:     }else{
  3034  0566  2D6A               	goto	l85
  3035  0567                     l84:	
  3036                           
  3037                           ;./I2C.h: 86:         SSPCON2bits.ACKDT = 1;
  3038  0567  1683               	bsf	3,5	;RP0=1, select bank1
  3039  0568  1303               	bcf	3,6	;RP1=0, select bank1
  3040  0569  1691               	bsf	17,5	;volatile
  3041  056A                     l85:	
  3042                           ;./I2C.h: 87:     }
  3043                           
  3044                           
  3045                           ;./I2C.h: 88:     SSPCON2bits.ACKEN = 1;
  3046  056A  1611               	bsf	17,4	;volatile
  3047                           
  3048                           ;./I2C.h: 89:     return temp;
  3049  056B  0877               	movf	I2C_Master_Read@temp+1,w
  3050  056C  00F3               	movwf	?_I2C_Master_Read+1
  3051  056D  0876               	movf	I2C_Master_Read@temp,w
  3052  056E  00F2               	movwf	?_I2C_Master_Read
  3053  056F  0008               	return
  3054  0570                     __end_of_I2C_Master_Read:	
  3055                           
  3056                           	psect	text20
  3057  0652                     __ptext20:	
  3058 ;; *************** function _I2C_Master_Wait *****************
  3059 ;; Defined at:
  3060 ;;		line 32 in file "./I2C.h"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;		None
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  1    wreg      void 
  3067 ;; Registers used:
  3068 ;;		wreg, status,2
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3074 ;;      Params:         0       0       0       0       0
  3075 ;;      Locals:         0       0       0       0       0
  3076 ;;      Temps:          0       0       0       0       0
  3077 ;;      Totals:         0       0       0       0       0
  3078 ;;Total ram usage:        0 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; Hardware stack levels required when called:    1
  3081 ;; This function calls:
  3082 ;;		Nothing
  3083 ;; This function is called by:
  3084 ;;		_I2C_Master_Start
  3085 ;;		_I2C_Master_RepeatedStart
  3086 ;;		_I2C_Master_Stop
  3087 ;;		_I2C_Master_Write
  3088 ;;		_I2C_Master_Read
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           
  3093                           ;psect for function _I2C_Master_Wait
  3094  0652                     _I2C_Master_Wait:	
  3095  0652                     l66:	
  3096                           ;./I2C.h: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3097                           
  3098                           ;incstack = 0
  3099                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3100                           
  3101  0652  1683               	bsf	3,5	;RP0=1, select bank1
  3102  0653  1303               	bcf	3,6	;RP1=0, select bank1
  3103  0654  1914               	btfsc	20,2	;volatile
  3104  0655  2E52               	goto	l66
  3105  0656  0811               	movf	17,w	;volatile
  3106  0657  391F               	andlw	31
  3107  0658  1903               	btfsc	3,2
  3108  0659  0008               	return
  3109  065A  2E52               	goto	l66
  3110  065B                     __end_of_I2C_Master_Wait:	
  3111                           
  3112                           	psect	text21
  3113  03E9                     __ptext21:	
  3114 ;; *************** function _Lcd_Write_String *****************
  3115 ;; Defined at:
  3116 ;;		line 100 in file "./LCD4bits.h"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  a               2    7[COMMON] PTR unsigned char 
  3119 ;;		 -> NULL(0), get_temp@temperature(6), get_time@string_time(6), STR_2(9), 
  3120 ;;		 -> STR_1(9), 
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;  i               2    3[BANK0 ] int 
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3132 ;;      Params:         2       0       0       0       0
  3133 ;;      Locals:         0       2       0       0       0
  3134 ;;      Temps:          0       3       0       0       0
  3135 ;;      Totals:         2       5       0       0       0
  3136 ;;Total ram usage:        7 bytes
  3137 ;; Hardware stack levels used:    1
  3138 ;; Hardware stack levels required when called:    3
  3139 ;; This function calls:
  3140 ;;		_Lcd_Write_Char
  3141 ;; This function is called by:
  3142 ;;		_main
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           
  3147                           ;psect for function _Lcd_Write_String
  3148  03E9                     _Lcd_Write_String:	
  3149                           
  3150                           ;./LCD4bits.h: 100: void Lcd_Write_String(char *a);./LCD4bits.h: 101: {;./LCD4bits.h: 10
      +                          2:  int i;;./LCD4bits.h: 103:  for(i=0;a[i]!='\0';i++)
  3151                           
  3152                           ;incstack = 0
  3153                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3154  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  3155  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  3156  03EB  01A3               	clrf	Lcd_Write_String@i
  3157  03EC  01A4               	clrf	Lcd_Write_String@i+1
  3158  03ED                     l1902:	
  3159  03ED  0823               	movf	Lcd_Write_String@i,w
  3160  03EE  0777               	addwf	Lcd_Write_String@a,w
  3161  03EF  00A1               	movwf	??_Lcd_Write_String+1
  3162  03F0  0878               	movf	Lcd_Write_String@a+1,w
  3163  03F1  00A0               	movwf	??_Lcd_Write_String
  3164  03F2  1803               	skipnc
  3165  03F3  0AA0               	incf	??_Lcd_Write_String,f
  3166  03F4  1BA3               	btfsc	Lcd_Write_String@i,7
  3167  03F5  03A0               	decf	??_Lcd_Write_String,f
  3168  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  3169  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  3170  03F8  0820               	movf	??_Lcd_Write_String,w
  3171  03F9  00A2               	movwf	??_Lcd_Write_String+2
  3172  03FA  0822               	movf	??_Lcd_Write_String+2,w
  3173  03FB  00FF               	movwf	127
  3174  03FC  0821               	movf	??_Lcd_Write_String+1,w
  3175  03FD  0084               	movwf	4
  3176  03FE  120A  118A  2466  120A  118A  	fcall	stringtab
  3177  0403  3A00               	xorlw	0
  3178  0404  1903               	btfsc	3,2
  3179  0405  0008               	return
  3180                           
  3181                           ;./LCD4bits.h: 104:     Lcd_Write_Char(a[i]);
  3182  0406  0823               	movf	Lcd_Write_String@i,w
  3183  0407  0777               	addwf	Lcd_Write_String@a,w
  3184  0408  00A1               	movwf	??_Lcd_Write_String+1
  3185  0409  0878               	movf	Lcd_Write_String@a+1,w
  3186  040A  00A0               	movwf	??_Lcd_Write_String
  3187  040B  1803               	skipnc
  3188  040C  0AA0               	incf	??_Lcd_Write_String,f
  3189  040D  1BA3               	btfsc	Lcd_Write_String@i,7
  3190  040E  03A0               	decf	??_Lcd_Write_String,f
  3191  040F  1283               	bcf	3,5	;RP0=0, select bank0
  3192  0410  1303               	bcf	3,6	;RP1=0, select bank0
  3193  0411  0820               	movf	??_Lcd_Write_String,w
  3194  0412  00A2               	movwf	??_Lcd_Write_String+2
  3195  0413  0822               	movf	??_Lcd_Write_String+2,w
  3196  0414  00FF               	movwf	127
  3197  0415  0821               	movf	??_Lcd_Write_String+1,w
  3198  0416  0084               	movwf	4
  3199  0417  120A  118A  2466  120A  118A  	fcall	stringtab
  3200  041C  120A  118A  24A1  120A  118A  	fcall	_Lcd_Write_Char
  3201  0421  3001               	movlw	1
  3202  0422  1283               	bcf	3,5	;RP0=0, select bank0
  3203  0423  1303               	bcf	3,6	;RP1=0, select bank0
  3204  0424  07A3               	addwf	Lcd_Write_String@i,f
  3205  0425  1803               	skipnc
  3206  0426  0AA4               	incf	Lcd_Write_String@i+1,f
  3207  0427  3000               	movlw	0
  3208  0428  07A4               	addwf	Lcd_Write_String@i+1,f
  3209  0429  2BED               	goto	l1902
  3210  042A                     __end_of_Lcd_Write_String:	
  3211                           
  3212                           	psect	text22
  3213  04A1                     __ptext22:	
  3214 ;; *************** function _Lcd_Write_Char *****************
  3215 ;; Defined at:
  3216 ;;		line 84 in file "./LCD4bits.h"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  a               1    wreg     unsigned char 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  a               1    6[COMMON] unsigned char 
  3221 ;;  y               1    5[COMMON] unsigned char 
  3222 ;;  temp            1    4[COMMON] unsigned char 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      void 
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0, pclath, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3232 ;;      Params:         0       0       0       0       0
  3233 ;;      Locals:         3       0       0       0       0
  3234 ;;      Temps:          1       0       0       0       0
  3235 ;;      Totals:         4       0       0       0       0
  3236 ;;Total ram usage:        4 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; Hardware stack levels required when called:    2
  3239 ;; This function calls:
  3240 ;;		_Lcd_Port
  3241 ;; This function is called by:
  3242 ;;		_Lcd_Write_String
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           
  3247                           ;psect for function _Lcd_Write_Char
  3248  04A1                     _Lcd_Write_Char:	
  3249                           
  3250                           ;incstack = 0
  3251                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3252                           ;Lcd_Write_Char@a stored from wreg
  3253  04A1  00F6               	movwf	Lcd_Write_Char@a
  3254                           
  3255                           ;./LCD4bits.h: 84: void Lcd_Write_Char(char a);./LCD4bits.h: 85: {;./LCD4bits.h: 86:    
      +                          char temp,y;;./LCD4bits.h: 87:    temp = a&0x0F;
  3256  04A2  0876               	movf	Lcd_Write_Char@a,w
  3257  04A3  390F               	andlw	15
  3258  04A4  00F3               	movwf	??_Lcd_Write_Char
  3259  04A5  0873               	movf	??_Lcd_Write_Char,w
  3260  04A6  00F4               	movwf	Lcd_Write_Char@temp
  3261                           
  3262                           ;./LCD4bits.h: 88:    y = a&0xF0;
  3263  04A7  0876               	movf	Lcd_Write_Char@a,w
  3264  04A8  39F0               	andlw	240
  3265  04A9  00F3               	movwf	??_Lcd_Write_Char
  3266  04AA  0873               	movf	??_Lcd_Write_Char,w
  3267  04AB  00F5               	movwf	Lcd_Write_Char@y
  3268                           
  3269                           ;./LCD4bits.h: 89:    PORTBbits.RB4 = 1;
  3270  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  3271  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  3272  04AE  1606               	bsf	6,4	;volatile
  3273                           
  3274                           ;./LCD4bits.h: 90:    Lcd_Port(y>>4);
  3275  04AF  0875               	movf	Lcd_Write_Char@y,w
  3276  04B0  00F3               	movwf	??_Lcd_Write_Char
  3277  04B1  3004               	movlw	4
  3278  04B2                     u845:	
  3279  04B2  1003               	clrc
  3280  04B3  0CF3               	rrf	??_Lcd_Write_Char,f
  3281  04B4  3EFF               	addlw	-1
  3282  04B5  1D03               	skipz
  3283  04B6  2CB2               	goto	u845
  3284  04B7  0873               	movf	??_Lcd_Write_Char,w
  3285  04B8  120A  118A  261C  120A  118A  	fcall	_Lcd_Port
  3286                           
  3287                           ;./LCD4bits.h: 91:    PORTBbits.RB5 = 1;
  3288  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  3289  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  3290  04BF  1686               	bsf	6,5	;volatile
  3291                           
  3292                           ;./LCD4bits.h: 92:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3293  04C0  301A               	movlw	26
  3294  04C1  00F3               	movwf	??_Lcd_Write_Char
  3295  04C2                     u1427:	
  3296  04C2  0BF3               	decfsz	??_Lcd_Write_Char,f
  3297  04C3  2CC2               	goto	u1427
  3298  04C4  0000               	nop
  3299                           
  3300                           ;./LCD4bits.h: 93:    PORTBbits.RB5 = 0;
  3301  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  3302  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  3303  04C7  1286               	bcf	6,5	;volatile
  3304                           
  3305                           ;./LCD4bits.h: 94:    Lcd_Port(temp);
  3306  04C8  0874               	movf	Lcd_Write_Char@temp,w
  3307  04C9  120A  118A  261C  120A  118A  	fcall	_Lcd_Port
  3308                           
  3309                           ;./LCD4bits.h: 95:    PORTBbits.RB5 = 1;
  3310  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  3311  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  3312  04D0  1686               	bsf	6,5	;volatile
  3313                           
  3314                           ;./LCD4bits.h: 96:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3315  04D1  301A               	movlw	26
  3316  04D2  00F3               	movwf	??_Lcd_Write_Char
  3317  04D3                     u1437:	
  3318  04D3  0BF3               	decfsz	??_Lcd_Write_Char,f
  3319  04D4  2CD3               	goto	u1437
  3320  04D5  0000               	nop
  3321                           
  3322                           ;./LCD4bits.h: 97:    PORTBbits.RB5 = 0;
  3323  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  3324  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  3325  04D8  1286               	bcf	6,5	;volatile
  3326  04D9  0008               	return
  3327  04DA                     __end_of_Lcd_Write_Char:	
  3328                           
  3329                           	psect	text23
  3330  0399                     __ptext23:	
  3331 ;; *************** function _Lcd_Set_Cursor *****************
  3332 ;; Defined at:
  3333 ;;		line 44 in file "./LCD4bits.h"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  a               1    wreg     unsigned char 
  3336 ;;  b               1    6[COMMON] unsigned char 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  a               1    0[BANK0 ] unsigned char 
  3339 ;;  temp            1    3[BANK0 ] unsigned char 
  3340 ;;  y               1    2[BANK0 ] unsigned char 
  3341 ;;  z               1    1[BANK0 ] unsigned char 
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		wreg, status,2, status,0, pclath, cstack
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3351 ;;      Params:         1       0       0       0       0
  3352 ;;      Locals:         0       4       0       0       0
  3353 ;;      Temps:          2       0       0       0       0
  3354 ;;      Totals:         3       4       0       0       0
  3355 ;;Total ram usage:        7 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; Hardware stack levels required when called:    3
  3358 ;; This function calls:
  3359 ;;		_Lcd_Cmd
  3360 ;; This function is called by:
  3361 ;;		_main
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           
  3366                           ;psect for function _Lcd_Set_Cursor
  3367  0399                     _Lcd_Set_Cursor:	
  3368                           
  3369                           ;incstack = 0
  3370                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3371                           ;Lcd_Set_Cursor@a stored from wreg
  3372  0399  1283               	bcf	3,5	;RP0=0, select bank0
  3373  039A  1303               	bcf	3,6	;RP1=0, select bank0
  3374  039B  00A0               	movwf	Lcd_Set_Cursor@a
  3375                           
  3376                           ;./LCD4bits.h: 44: void Lcd_Set_Cursor(char a, char b);./LCD4bits.h: 45: {;./LCD4bits.h:
      +                           46:  char temp,z,y;;./LCD4bits.h: 47:  if(a == 1)
  3377  039C  0320               	decf	Lcd_Set_Cursor@a,w
  3378  039D  1D03               	btfss	3,2
  3379  039E  2BC2               	goto	l1604
  3380                           
  3381                           ;./LCD4bits.h: 48:  {;./LCD4bits.h: 49:    temp = 0x80 + b - 1;
  3382  039F  0876               	movf	Lcd_Set_Cursor@b,w
  3383  03A0  3E7F               	addlw	127
  3384  03A1  00F7               	movwf	??_Lcd_Set_Cursor
  3385  03A2  0877               	movf	??_Lcd_Set_Cursor,w
  3386  03A3  00A3               	movwf	Lcd_Set_Cursor@temp
  3387                           
  3388                           ;./LCD4bits.h: 50:   z = temp>>4;
  3389  03A4  0823               	movf	Lcd_Set_Cursor@temp,w
  3390  03A5  00F7               	movwf	??_Lcd_Set_Cursor
  3391  03A6  3004               	movlw	4
  3392  03A7                     u975:	
  3393  03A7  1003               	clrc
  3394  03A8  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3395  03A9  3EFF               	addlw	-1
  3396  03AA  1D03               	skipz
  3397  03AB  2BA7               	goto	u975
  3398  03AC  0877               	movf	??_Lcd_Set_Cursor,w
  3399  03AD  00F8               	movwf	??_Lcd_Set_Cursor+1
  3400  03AE  0878               	movf	??_Lcd_Set_Cursor+1,w
  3401  03AF  00A1               	movwf	Lcd_Set_Cursor@z
  3402                           
  3403                           ;./LCD4bits.h: 51:   y = temp & 0x0F;
  3404  03B0  0823               	movf	Lcd_Set_Cursor@temp,w
  3405  03B1  390F               	andlw	15
  3406  03B2  00F7               	movwf	??_Lcd_Set_Cursor
  3407  03B3  0877               	movf	??_Lcd_Set_Cursor,w
  3408  03B4  00A2               	movwf	Lcd_Set_Cursor@y
  3409                           
  3410                           ;./LCD4bits.h: 52:   Lcd_Cmd(z);
  3411  03B5  0821               	movf	Lcd_Set_Cursor@z,w
  3412  03B6  120A  118A  2602  120A  118A  	fcall	_Lcd_Cmd
  3413                           
  3414                           ;./LCD4bits.h: 53:   Lcd_Cmd(y);
  3415  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  3416  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  3417  03BD  0822               	movf	Lcd_Set_Cursor@y,w
  3418  03BE  120A  118A  2602   	fcall	_Lcd_Cmd
  3419                           
  3420                           ;./LCD4bits.h: 54:  }
  3421  03C1  0008               	return
  3422  03C2                     l1604:	
  3423  03C2  3002               	movlw	2
  3424  03C3  0620               	xorwf	Lcd_Set_Cursor@a,w
  3425  03C4  1D03               	btfss	3,2
  3426  03C5  0008               	return
  3427                           
  3428                           ;./LCD4bits.h: 56:  {;./LCD4bits.h: 57:   temp = 0xC0 + b - 1;
  3429  03C6  0876               	movf	Lcd_Set_Cursor@b,w
  3430  03C7  3EBF               	addlw	191
  3431  03C8  00F7               	movwf	??_Lcd_Set_Cursor
  3432  03C9  0877               	movf	??_Lcd_Set_Cursor,w
  3433  03CA  00A3               	movwf	Lcd_Set_Cursor@temp
  3434                           
  3435                           ;./LCD4bits.h: 58:   z = temp>>4;
  3436  03CB  0823               	movf	Lcd_Set_Cursor@temp,w
  3437  03CC  00F7               	movwf	??_Lcd_Set_Cursor
  3438  03CD  3004               	movlw	4
  3439  03CE                     u995:	
  3440  03CE  1003               	clrc
  3441  03CF  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3442  03D0  3EFF               	addlw	-1
  3443  03D1  1D03               	skipz
  3444  03D2  2BCE               	goto	u995
  3445  03D3  0877               	movf	??_Lcd_Set_Cursor,w
  3446  03D4  00F8               	movwf	??_Lcd_Set_Cursor+1
  3447  03D5  0878               	movf	??_Lcd_Set_Cursor+1,w
  3448  03D6  00A1               	movwf	Lcd_Set_Cursor@z
  3449                           
  3450                           ;./LCD4bits.h: 59:   y = temp & 0x0F;
  3451  03D7  0823               	movf	Lcd_Set_Cursor@temp,w
  3452  03D8  390F               	andlw	15
  3453  03D9  00F7               	movwf	??_Lcd_Set_Cursor
  3454  03DA  0877               	movf	??_Lcd_Set_Cursor,w
  3455  03DB  00A2               	movwf	Lcd_Set_Cursor@y
  3456                           
  3457                           ;./LCD4bits.h: 60:   Lcd_Cmd(z);
  3458  03DC  0821               	movf	Lcd_Set_Cursor@z,w
  3459  03DD  120A  118A  2602  120A  118A  	fcall	_Lcd_Cmd
  3460                           
  3461                           ;./LCD4bits.h: 61:   Lcd_Cmd(y);
  3462  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  3463  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  3464  03E4  0822               	movf	Lcd_Set_Cursor@y,w
  3465  03E5  120A  118A  2602   	fcall	_Lcd_Cmd
  3466  03E8  0008               	return
  3467  03E9                     __end_of_Lcd_Set_Cursor:	
  3468                           
  3469                           	psect	text24
  3470  0647                     __ptext24:	
  3471 ;; *************** function _Lcd_Clear *****************
  3472 ;; Defined at:
  3473 ;;		line 38 in file "./LCD4bits.h"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, status,2, status,0, pclath, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3487 ;;      Params:         0       0       0       0       0
  3488 ;;      Locals:         0       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0
  3490 ;;      Totals:         0       0       0       0       0
  3491 ;;Total ram usage:        0 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    3
  3494 ;; This function calls:
  3495 ;;		_Lcd_Cmd
  3496 ;; This function is called by:
  3497 ;;		_main
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           
  3502                           ;psect for function _Lcd_Clear
  3503  0647                     _Lcd_Clear:	
  3504                           
  3505                           ;./LCD4bits.h: 40:  Lcd_Cmd(0);
  3506                           
  3507                           ;incstack = 0
  3508                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3509  0647  3000               	movlw	0
  3510  0648  120A  118A  2602  120A  118A  	fcall	_Lcd_Cmd
  3511                           
  3512                           ;./LCD4bits.h: 41:  Lcd_Cmd(1);
  3513  064D  3001               	movlw	1
  3514  064E  120A  118A  2602   	fcall	_Lcd_Cmd
  3515  0651  0008               	return
  3516  0652                     __end_of_Lcd_Clear:	
  3517                           
  3518                           	psect	text25
  3519  0602                     __ptext25:	
  3520 ;; *************** function _Lcd_Cmd *****************
  3521 ;; Defined at:
  3522 ;;		line 29 in file "./LCD4bits.h"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  a               1    wreg     unsigned char 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  a               1    5[COMMON] unsigned char 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  1    wreg      void 
  3529 ;; Registers used:
  3530 ;;		wreg, status,2, status,0, pclath, cstack
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3536 ;;      Params:         0       0       0       0       0
  3537 ;;      Locals:         1       0       0       0       0
  3538 ;;      Temps:          2       0       0       0       0
  3539 ;;      Totals:         3       0       0       0       0
  3540 ;;Total ram usage:        3 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; Hardware stack levels required when called:    2
  3543 ;; This function calls:
  3544 ;;		_Lcd_Port
  3545 ;; This function is called by:
  3546 ;;		_Lcd_Clear
  3547 ;;		_Lcd_Set_Cursor
  3548 ;;		_Lcd_Init
  3549 ;;		_Lcd_Shift_Right
  3550 ;;		_Lcd_Shift_Left
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           
  3555                           ;psect for function _Lcd_Cmd
  3556  0602                     _Lcd_Cmd:	
  3557                           
  3558                           ;incstack = 0
  3559                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3560                           ;Lcd_Cmd@a stored from wreg
  3561  0602  00F5               	movwf	Lcd_Cmd@a
  3562                           
  3563                           ;./LCD4bits.h: 29: void Lcd_Cmd(char a);./LCD4bits.h: 30: {;./LCD4bits.h: 31:  PORTBbits
      +                          .RB4 = 0;
  3564  0603  1283               	bcf	3,5	;RP0=0, select bank0
  3565  0604  1303               	bcf	3,6	;RP1=0, select bank0
  3566  0605  1206               	bcf	6,4	;volatile
  3567                           
  3568                           ;./LCD4bits.h: 32:  Lcd_Port(a);
  3569  0606  0875               	movf	Lcd_Cmd@a,w
  3570  0607  120A  118A  261C  120A  118A  	fcall	_Lcd_Port
  3571                           
  3572                           ;./LCD4bits.h: 33:  PORTBbits.RB5 = 1;
  3573  060C  1283               	bcf	3,5	;RP0=0, select bank0
  3574  060D  1303               	bcf	3,6	;RP1=0, select bank0
  3575  060E  1686               	bsf	6,5	;volatile
  3576                           
  3577                           ;./LCD4bits.h: 34:         _delay((unsigned long)((4)*(8000000/4000.0)));
  3578  060F  300B               	movlw	11
  3579  0610  00F4               	movwf	??_Lcd_Cmd+1
  3580  0611  3062               	movlw	98
  3581  0612  00F3               	movwf	??_Lcd_Cmd
  3582  0613                     u1447:	
  3583  0613  0BF3               	decfsz	??_Lcd_Cmd,f
  3584  0614  2E13               	goto	u1447
  3585  0615  0BF4               	decfsz	??_Lcd_Cmd+1,f
  3586  0616  2E13               	goto	u1447
  3587  0617  0000               	nop
  3588                           
  3589                           ;./LCD4bits.h: 35:         PORTBbits.RB5 = 0;
  3590  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3591  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3592  061A  1286               	bcf	6,5	;volatile
  3593  061B  0008               	return
  3594  061C                     __end_of_Lcd_Cmd:	
  3595                           
  3596                           	psect	text26
  3597  061C                     __ptext26:	
  3598 ;; *************** function _Lcd_Port *****************
  3599 ;; Defined at:
  3600 ;;		line 7 in file "./LCD4bits.h"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;  a               1    wreg     unsigned char 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  a               1    2[COMMON] unsigned char 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      void 
  3607 ;; Registers used:
  3608 ;;		wreg
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3614 ;;      Params:         0       0       0       0       0
  3615 ;;      Locals:         1       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0
  3617 ;;      Totals:         1       0       0       0       0
  3618 ;;Total ram usage:        1 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    1
  3621 ;; This function calls:
  3622 ;;		Nothing
  3623 ;; This function is called by:
  3624 ;;		_Lcd_Cmd
  3625 ;;		_Lcd_Init
  3626 ;;		_Lcd_Write_Char
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           
  3631                           ;psect for function _Lcd_Port
  3632  061C                     _Lcd_Port:	
  3633                           
  3634                           ;incstack = 0
  3635                           ; Regs used in _Lcd_Port: [wreg]
  3636                           ;Lcd_Port@a stored from wreg
  3637  061C  00F2               	movwf	Lcd_Port@a
  3638                           
  3639                           ;./LCD4bits.h: 7: void Lcd_Port(char a);./LCD4bits.h: 8: {;./LCD4bits.h: 9:  if(a & 1)
  3640  061D  1C72               	btfss	Lcd_Port@a,0
  3641  061E  2E23               	goto	l92
  3642                           
  3643                           ;./LCD4bits.h: 10:   PORTBbits.RB0 = 1;
  3644  061F  1283               	bcf	3,5	;RP0=0, select bank0
  3645  0620  1303               	bcf	3,6	;RP1=0, select bank0
  3646  0621  1406               	bsf	6,0	;volatile
  3647  0622  2E26               	goto	l93
  3648  0623                     l92:	
  3649                           ;./LCD4bits.h: 11:  else
  3650                           
  3651                           
  3652                           ;./LCD4bits.h: 12:   PORTBbits.RB0 = 0;
  3653  0623  1283               	bcf	3,5	;RP0=0, select bank0
  3654  0624  1303               	bcf	3,6	;RP1=0, select bank0
  3655  0625  1006               	bcf	6,0	;volatile
  3656  0626                     l93:	
  3657                           
  3658                           ;./LCD4bits.h: 14:  if(a & 2)
  3659  0626  1CF2               	btfss	Lcd_Port@a,1
  3660  0627  2E2A               	goto	l94
  3661                           
  3662                           ;./LCD4bits.h: 15:   PORTBbits.RB1 = 1;
  3663  0628  1486               	bsf	6,1	;volatile
  3664  0629  2E2B               	goto	l95
  3665  062A                     l94:	
  3666                           ;./LCD4bits.h: 16:  else
  3667                           
  3668                           
  3669                           ;./LCD4bits.h: 17:   PORTBbits.RB1 = 0;
  3670  062A  1086               	bcf	6,1	;volatile
  3671  062B                     l95:	
  3672                           
  3673                           ;./LCD4bits.h: 19:  if(a & 4)
  3674  062B  1D72               	btfss	Lcd_Port@a,2
  3675  062C  2E2F               	goto	l96
  3676                           
  3677                           ;./LCD4bits.h: 20:   PORTBbits.RB2 = 1;
  3678  062D  1506               	bsf	6,2	;volatile
  3679  062E  2E30               	goto	l97
  3680  062F                     l96:	
  3681                           ;./LCD4bits.h: 21:  else
  3682                           
  3683                           
  3684                           ;./LCD4bits.h: 22:   PORTBbits.RB2 = 0;
  3685  062F  1106               	bcf	6,2	;volatile
  3686  0630                     l97:	
  3687                           
  3688                           ;./LCD4bits.h: 24:  if(a & 8)
  3689  0630  1DF2               	btfss	Lcd_Port@a,3
  3690  0631  2E34               	goto	l98
  3691                           
  3692                           ;./LCD4bits.h: 25:   PORTBbits.RB3 = 1;
  3693  0632  1586               	bsf	6,3	;volatile
  3694  0633  0008               	return
  3695  0634                     l98:	
  3696                           ;./LCD4bits.h: 26:  else
  3697                           
  3698                           
  3699                           ;./LCD4bits.h: 27:   PORTBbits.RB3 = 0;
  3700  0634  1186               	bcf	6,3	;volatile
  3701  0635  0008               	return
  3702  0636                     __end_of_Lcd_Port:	
  3703                           
  3704                           	psect	text27
  3705  0678                     __ptext27:	
  3706 ;; *************** function _isr *****************
  3707 ;; Defined at:
  3708 ;;		line 48 in file "mainMaster.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;		None
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;		None
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      void 
  3715 ;; Registers used:
  3716 ;;		None
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3722 ;;      Params:         0       0       0       0       0
  3723 ;;      Locals:         0       0       0       0       0
  3724 ;;      Temps:          2       0       0       0       0
  3725 ;;      Totals:         2       0       0       0       0
  3726 ;;Total ram usage:        2 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		Interrupt level 1
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           
  3736                           ;psect for function _isr
  3737  0678                     _isr:	
  3738  0678  0871               	movf	??_isr+1,w
  3739  0679  008A               	movwf	10
  3740  067A  0E70               	swapf	??_isr^(0+4294967168),w
  3741  067B  0083               	movwf	3
  3742  067C  0EFE               	swapf	126,f
  3743  067D  0E7E               	swapf	126,w
  3744  067E  0009               	retfie
  3745  067F                     __end_of_isr:	
  3746  007E                     btemp	set	126	;btemp
  3747  007E                     wtemp0	set	126
  3748                           
  3749                           	psect	intentry
  3750  0004                     __pintentry:	
  3751                           ;incstack = 0
  3752                           ; Regs used in _isr: []
  3753                           
  3754  0004                     interrupt_function:	
  3755  007E                     saved_w	set	btemp
  3756  0004  00FE               	movwf	btemp
  3757  0005  0E03               	swapf	3,w
  3758  0006  00F0               	movwf	??_isr
  3759  0007  080A               	movf	10,w
  3760  0008  00F1               	movwf	??_isr+1
  3761  0009  120A  118A  2E78   	ljmp	_isr


Data Sizes:
    Strings     33
    Constant    10
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     34      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_3(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_temp@temperature(BANK0[6]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 3
		 -> get_temp@decimal(BANK0[3]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@decimal(BANK0[3]), get_temp@temperature(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    sp__get_time	PTR unsigned char  size(1) Largest target is 6
		 -> get_time@string_time(BANK0[6]), 

    sp__get_temp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    temp	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_temp@temperature(BANK0[6]), 

    time	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_time@string_time(BANK0[6]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 9
		 -> NULL(NULL[0]), get_temp@temperature(BANK0[6]), get_time@string_time(BANK0[6]), STR_2(CODE[9]), 
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_get_hall
    _main->_get_time
    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _get_time->_I2C_Master_Read
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _get_hall->_I2C_Master_Read
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_get_temp
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _get_temp->_sprintf
    _sprintf->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   10491
                                             33 BANK0      1     1      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _get_hall
                           _get_temp
                           _get_time
                              _setup
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               7     5      2     200
                                              2 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     762
                    _I2C_Master_Init
                           _Lcd_Init
                      _initOscilador
 ---------------------------------------------------------------------------------
 (2) _initOscilador                                        3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     198
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _get_time                                            10    10      0    1974
                                              8 COMMON     2     2      0
                                              0 BANK0      8     8      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            14    14      0    4407
                                             19 BANK0     14    14      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___bmul
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     3      1     207
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1800
                                              6 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _get_hall                                             2     2      0    1762
                                              8 COMMON     2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1238
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     501
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     668
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     608
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _get_hall
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _get_temp
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___bmul
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _strcat
   _get_time
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _initOscilador
   _strcmp

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      30       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      24       5       45.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      30      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Feb 26 12:16:34 2019

                                pc 0002                     ___bmul@product 0074  
                      __CFG_CP$OFF 0000                                 l66 0652  
                               l92 0623                                 l84 0567  
                      get_hall@key 0079                                 l93 0626  
                               l85 056A                                 l94 062A  
                               l95 062B                                 l96 062F  
                               l97 0630                                 l98 0634  
                               fsr 0004                                l135 0397  
                              l165 01FD                                _GIE 005F  
                     __CFG_CPD$OFF 0000                                u705 0435  
                              u725 0441                                u735 044D  
                              u745 0457                                u845 04B2  
                              u975 03A7                                u995 03CE  
                              _key 0043                                _isr 0678  
                              fsr0 0004                                indf 0000  
                     __CFG_LVP$OFF 0000                               l2010 037D  
                             l2012 0053                               l1500 0375  
                             l1604 03C2                               l1374 0456  
                             l1366 0432                               l1368 0440  
                             l1480 0346                               l1378 0461  
                             l1810 0526                               l1490 0363  
                             l1482 034B                               l1580 0638  
                             l1572 05C4                               l1492 0369  
                             l1484 0351                               l1902 03ED  
                             l1814 0534                               l1574 05CF  
                             l1494 0370                               l1486 0357  
                             l1584 063E                               l1808 0518  
                             l1576 05D7                               l1496 0370  
                             l1488 035D                               l1818 053F  
                             l1842 0040                               l1674 057F  
                             l1676 0572                               l1870 0098  
                             l1934 0170                               l1782 029B  
                             l1678 0594                               l1864 0077  
                             l1848 005E                               l1792 02D3  
                             l1784 02AB                               l1858 0075  
                             l1884 00AB                               l1876 00A7  
                             l1796 02E0                               l1964 01D9  
                             l1948 019A                               l1886 0020  
                             l1888 00EE                               l1968 0200  
                             ?_isr 0070                               STR_1 0480  
                             STR_2 0489                        get_time@min 0027  
                             STR_3 0492                               STR_4 049E  
                             STR_5 0498                               STR_6 049D  
                             u1125 029F                               u1215 052C  
                             u1225 0535                               u1145 02AD  
                             u1075 025F                               u1155 02C2  
                             u1085 0276                               u1165 02D4  
                             u1245 04EC                               u1407 0302  
                             u1417 0311                               u1427 04C2  
                             u1195 051B                               u1275 008E  
                             u1355 0148                               u1437 04D3  
                             u1447 0613                               u1385 01F7  
                             u1397 02F3                               _PEIE 005E  
                             _RCEN 048B                       __CFG_WRT$OFF 0000  
                ?_Lcd_Write_String 0077   __end_of_I2C_Master_RepeatedStart 066A  
                             _cont 0042                               _main 0190  
                             _temp 007A                               _time 007B  
                             btemp 007E                               start 000C  
               ??_Lcd_Write_String 0020                      __CFG_IESO$OFF 0000  
                  __end_of_Lcd_Cmd 061C                  ___bmul@multiplier 0075  
                    __CFG_MCLRE$ON 0000                get_temp@temperature 0036  
                            ??_isr 0070                   ?_I2C_Master_Init 0026  
                 ?_I2C_Master_Read 0072                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                    __CFG_WDTE$OFF 0000                       get_time@hour 0026  
                            _ANSEL 0188                    __end_of___lldiv 02E9  
                  __end_of___lwdiv 0466                    __end_of___lwmod 0544  
                            _PORTA 0005                              _PORTB 0006  
          __size_of_Lcd_Set_Cursor 0050                              _TRISA 0085  
                            _TRISB 0086                              _SSPIE 0463  
                            _SSPIF 0063                     __CFG_FCMEN$OFF 0000  
                  __end_of_dpowers 0480                              _setup 059A  
                   __CFG_BOREN$OFF 0000                              pclath 000A  
                            status 0003                              wtemp0 007E  
                  __end_of_sprintf 00F3                   __end_of_Lcd_Init 0344  
                 __end_of_Lcd_Port 0636                    __initialization 000F  
                     __end_of_main 0213             __size_of_initOscilador 0055  
                           ??_main 0041                 __size_of_Lcd_Clear 000B  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0072  
               ??_I2C_Master_Start 0072                 ??_I2C_Master_Write 0074  
                           ?_setup 0070                             _ANSELH 0189  
                        ??_Lcd_Cmd 0073            __size_of_Lcd_Write_Char 0039  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013                     __CFG_PWRTE$OFF 0000  
         _I2C_Master_RepeatedStart 0663                   __end_of_get_hall 0602  
                 __end_of_get_temp 0190                   __end_of_get_time 0289  
                           ___bmul 0636                          ??___lldiv 0020  
                        ??___lwdiv 0076                          ??___lwmod 0024  
                           _strcat 05BF                             _strcmp 0570  
                           saved_w 007E                          ??_sprintf 0029  
                  Lcd_Set_Cursor@a 0020                    Lcd_Set_Cursor@b 0076  
                  Lcd_Set_Cursor@y 0022                    Lcd_Set_Cursor@z 0021  
          __end_of__initialization 0015                      _initOscilador 0344  
                __end_of_Lcd_Clear 0652                ___bmul@multiplicand 0072  
                   __pcstackCOMMON 0070                      __end_of_setup 05BF  
                   _Lcd_Set_Cursor 0399                          ?_Lcd_Init 0070  
                        ?_Lcd_Port 0070                            ??_setup 007A  
                       __pbssBANK0 0042                     ?_initOscilador 0070  
                       __pmaintext 0190                            ?___bmul 0072  
                       __pintentry 0004          __size_of_Lcd_Write_String 0041  
           __end_of_Lcd_Set_Cursor 03E9                            ?_strcat 0072  
                          ?_strcmp 0072                         ??_Lcd_Init 0076  
                       ??_Lcd_Port 0072                            _SSPCON2 0091  
                        ?_get_hall 0070                            _SSPSTAT 0094  
                        ?_get_temp 0070                          ?_get_time 0070  
                       __stringtab 0466                initOscilador@option 0074  
                   _Lcd_Write_Char 04A1                            _Lcd_Cmd 0602  
                  __size_of___bmul 0011                            ___lldiv 0289  
                          ___lwdiv 042A                            ___lwmod 0510  
                  ?_Lcd_Set_Cursor 0076                            __ptext1 0570  
                          __ptext2 059A                            __ptext3 0344  
                          __ptext4 02E9                            __ptext5 04DA  
                          __ptext6 0289                            __ptext7 0213  
                          __ptext8 00F3                            __ptext9 05BF  
                  __size_of_strcat 0024                    __size_of_strcmp 002A  
                          _dpowers 0476                       __size_of_isr 0007  
         __size_of_I2C_Master_Init 0036           __size_of_I2C_Master_Read 002C  
         __size_of_I2C_Master_Wait 0009           __size_of_I2C_Master_Stop 0007  
                  ??_initOscilador 0072                         ??_get_hall 0078  
                          _sprintf 0019             __end_of_Lcd_Write_Char 04DA  
                       ??_get_temp 0033                         ??_get_time 0078  
             end_of_initialization 0015         ??_I2C_Master_RepeatedStart 0072  
        __size_of_I2C_Master_Start 0007          __size_of_I2C_Master_Write 0008  
                  ___lldiv@divisor 0072                    ___lldiv@counter 0025  
                 I2C_Master_Init@c 0026                   I2C_Master_Read@a 0072  
                        Lcd_Port@a 0072                            strcmp@r 0077  
                        _PORTAbits 0005                          _PORTBbits 0006  
                  ?_Lcd_Write_Char 0070                  Lcd_Write_String@a 0077  
                Lcd_Write_String@i 0023                get_time@string_time 0020  
                        _Lcd_Clear 0647                     __end_of___bmul 0647  
                 _Lcd_Write_String 03E9                     __end_of_strcat 05E3  
                   __end_of_strcmp 059A                start_initialization 000F  
                      __end_of_isr 067F                  __size_of_Lcd_Init 005B  
                __size_of_Lcd_Port 001A                  ??_I2C_Master_Init 002A  
                ??_I2C_Master_Read 0074                  ??_I2C_Master_Wait 0072  
                ??_I2C_Master_Stop 0072           __CFG_FOSC$INTRC_NOCLKOUT 0000  
                       ?_Lcd_Clear 0070                           ??___bmul 0073  
                  Lcd_Write_Char@a 0076                    Lcd_Write_Char@y 0075  
                         ??_strcat 0073                           ??_strcmp 0074  
                      __pbssCOMMON 007A                          ___latbits 0002  
                    __pcstackBANK0 0020                  __size_of_get_hall 001F  
                         ?_Lcd_Cmd 0070                  __size_of_get_temp 009D  
                __size_of_get_time 0076                        sprintf@flag 002D  
                      sprintf@prec 002E                   _I2C_Master_Start 0671  
                 _I2C_Master_Write 065B                   ___lwdiv@dividend 0074  
                 ??_Lcd_Set_Cursor 0077                    get_temp@decimal 003C  
                         ?___lldiv 0072                           ?___lwdiv 0072  
                         ?___lwmod 0020                          __pstrings 0466  
                  get_temp@tempLSB 0040                    get_temp@tempMSB 003F  
                 ___lwdiv@quotient 0077                           ?_sprintf 0026  
                   __size_of_setup 0025                  interrupt_function 0004  
                         Lcd_Cmd@a 0075                        ??_Lcd_Clear 0076  
                      __stringbase 0475                   ??_Lcd_Write_Char 0073  
                         _Lcd_Init 02E9                           _Lcd_Port 061C  
              I2C_Master_Read@temp 0076              __end_of_initOscilador 0399  
         __end_of_Lcd_Write_String 042A                   __size_of_Lcd_Cmd 001A  
__size_of_I2C_Master_RepeatedStart 0007          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0060                   __size_of___lwdiv 003C  
                 __size_of___lwmod 0034                 __end_of__stringtab 0476  
                       sprintf@val 002F                    _I2C_Master_Init 04DA  
                  _I2C_Master_Read 0544                    _I2C_Master_Wait 0652  
                       strcat@from 0072                    _I2C_Master_Stop 066A  
                  ___lwdiv@divisor 0072                    ___lwdiv@counter 0079  
                         __ptext10 0019                           __ptext11 0510  
                         __ptext20 0652                           __ptext12 042A  
                         __ptext21 03E9                           __ptext13 0636  
                         __ptext22 04A1                           __ptext14 0663  
                         __ptext23 0399                           __ptext15 05E3  
                         __ptext24 0647                           __ptext16 065B  
                         __ptext25 0602                           __ptext17 066A  
                         __ptext26 061C                           __ptext18 0671  
                         __ptext27 0678                           __ptext19 0544  
                __CFG_BOR4V$BOR40V 0000                           _get_hall 05E3  
                         _get_temp 00F3                           _get_time 0213  
                 __size_of_sprintf 00DA                      __size_of_main 0083  
         __end_of_I2C_Master_Start 0678           __end_of_I2C_Master_Write 0663  
               Lcd_Write_Char@temp 0074                           intlevel1 0000  
                        sprintf@ap 002C                          sprintf@sp 0031  
                 ___lwmod@dividend 0022                   ___lldiv@dividend 0076  
                        stringcode 0470                         _OSCCONbits 008F  
          __end_of_I2C_Master_Init 0510            __end_of_I2C_Master_Read 0570  
          __end_of_I2C_Master_Wait 065B            __end_of_I2C_Master_Stop 0671  
               Lcd_Set_Cursor@temp 0023                           sprintf@c 0032  
                         sprintf@f 0026                           strcat@cp 0075  
                         strcat@to 0074                           strcmp@s1 0078  
                         strcmp@s2 0072                   ___lldiv@quotient 0021  
                I2C_Master_Write@d 0072                    ___lwmod@divisor 0020  
                  ___lwmod@counter 0025                           stringdir 0470  
                         stringtab 0466                        _SSPCON2bits 0091  
