

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Feb 23 18:38:30 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.05
    38                           ; Generated 20/12/2018 GMT
    39                           ; 
    40                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227                           
   228                           	psect	strings
   229  0003                     __pstrings:	
   230  0003                     stringtab:	
   231  0003                     __stringtab:	
   232                           
   233                           ;	String table - string pointers are 1 byte each
   234  0003  1BFF               	btfsc	btemp+1,7
   235  0004  280D               	ljmp	stringcode
   236  0005  1383               	bcf	3,7
   237  0006  187F               	btfsc	btemp+1,0
   238  0007  1783               	bsf	3,7
   239  0008  0800               	movf	0,w
   240  0009  0A84               	incf	4,f
   241  000A  1903               	skipnz
   242  000B  0AFF               	incf	btemp+1,f
   243  000C  0008               	return
   244  000D                     stringcode:	
   245  000D                     stringdir:	
   246  000D  3000               	movlw	high stringdir
   247  000E  008A               	movwf	10
   248  000F  0804               	movf	4,w
   249  0010  0A84               	incf	4,f
   250  0011  0782               	addwf	2,f
   251  0012                     __stringbase:	
   252  0012  3400               	retlw	0
   253  0013                     __end_of__stringtab:	
   254  0013                     _dpowers:	
   255  0013  3401               	retlw	1
   256  0014  3400               	retlw	0
   257  0015  340A               	retlw	10
   258  0016  3400               	retlw	0
   259  0017  3464               	retlw	100
   260  0018  3400               	retlw	0
   261  0019  34E8               	retlw	232
   262  001A  3403               	retlw	3
   263  001B  3410               	retlw	16
   264  001C  3427               	retlw	39
   265  001D                     __end_of_dpowers:	
   266  0005                     _PORTA	set	5
   267  0006                     _PORTB	set	6
   268  0006                     _PORTBbits	set	6
   269  0013                     _SSPBUF	set	19
   270  0014                     _SSPCON	set	20
   271  0063                     _SSPIF	set	99
   272  005E                     _PEIE	set	94
   273  005F                     _GIE	set	95
   274  0085                     _TRISA	set	133
   275  0086                     _TRISB	set	134
   276  008F                     _OSCCONbits	set	143
   277  0091                     _SSPCON2bits	set	145
   278  0094                     _SSPSTAT	set	148
   279  0093                     _SSPADD	set	147
   280  0091                     _SSPCON2	set	145
   281  0463                     _SSPIE	set	1123
   282  048B                     _RCEN	set	1163
   283  043C                     _TRISC4	set	1084
   284  043B                     _TRISC3	set	1083
   285  0188                     _ANSEL	set	392
   286  0189                     _ANSELH	set	393
   287  001D                     STR_1:	
   288  001D  344B               	retlw	75	;'K'
   289  001E  3465               	retlw	101	;'e'
   290  001F  3479               	retlw	121	;'y'
   291  0020  3420               	retlw	32	;' '
   292  0021  344F               	retlw	79	;'O'
   293  0022  344E               	retlw	78	;'N'
   294  0023  3420               	retlw	32	;' '
   295  0024  3420               	retlw	32	;' '
   296  0025  3400               	retlw	0
   297  0026                     STR_2:	
   298  0026  344B               	retlw	75	;'K'
   299  0027  3465               	retlw	101	;'e'
   300  0028  3479               	retlw	121	;'y'
   301  0029  3420               	retlw	32	;' '
   302  002A  344F               	retlw	79	;'O'
   303  002B  3446               	retlw	70	;'F'
   304  002C  3446               	retlw	70	;'F'
   305  002D  3420               	retlw	32	;' '
   306  002E  3400               	retlw	0
   307  002F                     STR_4:	
   308  002F  342E               	retlw	46	;'.'
   309  0030  3425               	retlw	37	;'%'
   310  0031  3464               	retlw	100	;'d'
   311  0032  3430               	retlw	48	;'0'
   312  0033  3400               	retlw	0
   313  0034                     STR_5:	
   314  0034  342E               	retlw	46	;'.'
   315  0035  3425               	retlw	37	;'%'
   316  0036  3464               	retlw	100	;'d'
   317  0037  3400               	retlw	0
   318  0035                     
   319                           ; #config settings
   320  0000                     
   321                           	psect	cinit
   322  07F7                     start_initialization:	
   323  07F7                     __initialization:	
   324                           
   325                           ; Clear objects allocated to BANK0
   326  07F7  1283               	bcf	3,5	;RP0=0, select bank0
   327  07F8  1303               	bcf	3,6	;RP1=0, select bank0
   328  07F9  01BC               	clrf	__pbssBANK0& (0+127)
   329  07FA  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   330  07FB  01BE               	clrf	(__pbssBANK0+2)& (0+127)
   331  07FC                     end_of_initialization:	
   332                           ;End of C runtime variable initialization code
   333                           
   334  07FC                     __end_of__initialization:	
   335  07FC  0183               	clrf	3
   336  07FD  120A  118A  2DA8   	ljmp	_main	;jump to C main() function
   337                           
   338                           	psect	bssBANK0
   339  003C                     __pbssBANK0:	
   340  003C                     _key:	
   341  003C                     	ds	1
   342  003D                     _temp:	
   343  003D                     	ds	1
   344  003E                     _time:	
   345  003E                     	ds	1
   346                           
   347                           	psect	cstackCOMMON
   348  0070                     __pcstackCOMMON:	
   349  0070                     ?_setup:	
   350  0070                     ?_get_time:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_get_temp:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_get_hall:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_strcat:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_I2C_Master_Wait:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ??_I2C_Master_Wait:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_I2C_Master_Start:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ??_I2C_Master_Start:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_I2C_Master_RepeatedStart:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ??_I2C_Master_RepeatedStart:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ?_I2C_Master_Stop:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ??_I2C_Master_Stop:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_I2C_Master_Write:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_Lcd_Port:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ??_Lcd_Port:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_Lcd_Cmd:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_Lcd_Clear:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_Lcd_Init:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_Lcd_Write_Char:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_initOscilador:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ??_initOscilador:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_main:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?___bmul:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_I2C_Master_Read:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?___lwdiv:	
   423                           ; 2 bytes @ 0x0
   424                           
   425  0070                     ?___lldiv:	
   426                           ; 2 bytes @ 0x0
   427                           
   428  0070                     Lcd_Port@a:	
   429                           ; 4 bytes @ 0x0
   430                           
   431  0070                     ___bmul@multiplicand:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     strcat@from:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     I2C_Master_Write@d:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     I2C_Master_Read@a:	
   441                           ; 2 bytes @ 0x0
   442                           
   443  0070                     ___lwdiv@divisor:	
   444                           ; 2 bytes @ 0x0
   445                           
   446  0070                     ___lldiv@divisor:	
   447                           ; 2 bytes @ 0x0
   448                           
   449                           
   450                           ; 4 bytes @ 0x0
   451  0070                     	ds	1
   452  0071                     ??_strcat:	
   453  0071                     ??_Lcd_Cmd:	
   454                           ; 1 bytes @ 0x1
   455                           
   456  0071                     ??_Lcd_Write_Char:	
   457                           ; 1 bytes @ 0x1
   458                           
   459  0071                     ??___bmul:	
   460                           ; 1 bytes @ 0x1
   461                           
   462                           
   463                           ; 1 bytes @ 0x1
   464  0071                     	ds	1
   465  0072                     ??_I2C_Master_Write:	
   466  0072                     ??_I2C_Master_Read:	
   467                           ; 1 bytes @ 0x2
   468                           
   469  0072                     Lcd_Write_Char@temp:	
   470                           ; 1 bytes @ 0x2
   471                           
   472  0072                     initOscilador@option:	
   473                           ; 1 bytes @ 0x2
   474                           
   475  0072                     ___bmul@product:	
   476                           ; 1 bytes @ 0x2
   477                           
   478  0072                     strcat@to:	
   479                           ; 1 bytes @ 0x2
   480                           
   481  0072                     ___lwdiv@dividend:	
   482                           ; 1 bytes @ 0x2
   483                           
   484                           
   485                           ; 2 bytes @ 0x2
   486  0072                     	ds	1
   487  0073                     Lcd_Cmd@a:	
   488  0073                     Lcd_Write_Char@y:	
   489                           ; 1 bytes @ 0x3
   490                           
   491  0073                     ___bmul@multiplier:	
   492                           ; 1 bytes @ 0x3
   493                           
   494  0073                     strcat@cp:	
   495                           ; 1 bytes @ 0x3
   496                           
   497                           
   498                           ; 1 bytes @ 0x3
   499  0073                     	ds	1
   500  0074                     ??_Lcd_Clear:	
   501  0074                     ?_Lcd_Set_Cursor:	
   502                           ; 1 bytes @ 0x4
   503                           
   504  0074                     ??_Lcd_Init:	
   505                           ; 1 bytes @ 0x4
   506                           
   507  0074                     ??___lwdiv:	
   508                           ; 1 bytes @ 0x4
   509                           
   510  0074                     Lcd_Set_Cursor@b:	
   511                           ; 1 bytes @ 0x4
   512                           
   513  0074                     Lcd_Write_Char@a:	
   514                           ; 1 bytes @ 0x4
   515                           
   516  0074                     I2C_Master_Read@temp:	
   517                           ; 1 bytes @ 0x4
   518                           
   519  0074                     ___lldiv@dividend:	
   520                           ; 2 bytes @ 0x4
   521                           
   522                           
   523                           ; 4 bytes @ 0x4
   524  0074                     	ds	1
   525  0075                     ??_Lcd_Set_Cursor:	
   526  0075                     ?_Lcd_Write_String:	
   527                           ; 1 bytes @ 0x5
   528                           
   529  0075                     Lcd_Write_String@a:	
   530                           ; 1 bytes @ 0x5
   531                           
   532  0075                     ___lwdiv@quotient:	
   533                           ; 2 bytes @ 0x5
   534                           
   535                           
   536                           ; 2 bytes @ 0x5
   537  0075                     	ds	1
   538  0076                     ??_get_time:	
   539  0076                     ??_get_hall:	
   540                           ; 1 bytes @ 0x6
   541                           
   542                           
   543                           ; 1 bytes @ 0x6
   544  0076                     	ds	1
   545  0077                     ??_Lcd_Write_String:	
   546  0077                     Lcd_Set_Cursor@a:	
   547                           ; 1 bytes @ 0x7
   548                           
   549  0077                     get_hall@key:	
   550                           ; 1 bytes @ 0x7
   551                           
   552  0077                     ___lwdiv@counter:	
   553                           ; 1 bytes @ 0x7
   554                           
   555                           
   556                           ; 1 bytes @ 0x7
   557  0077                     	ds	1
   558  0078                     ??___lldiv:	
   559  0078                     ?___lwmod:	
   560                           ; 1 bytes @ 0x8
   561                           
   562  0078                     Lcd_Set_Cursor@z:	
   563                           ; 2 bytes @ 0x8
   564                           
   565  0078                     ___lwmod@divisor:	
   566                           ; 1 bytes @ 0x8
   567                           
   568                           
   569                           ; 2 bytes @ 0x8
   570  0078                     	ds	1
   571  0079                     Lcd_Set_Cursor@y:	
   572  0079                     ___lldiv@quotient:	
   573                           ; 1 bytes @ 0x9
   574                           
   575                           
   576                           ; 4 bytes @ 0x9
   577  0079                     	ds	1
   578  007A                     Lcd_Set_Cursor@temp:	
   579  007A                     Lcd_Write_String@i:	
   580                           ; 1 bytes @ 0xA
   581                           
   582  007A                     ___lwmod@dividend:	
   583                           ; 2 bytes @ 0xA
   584                           
   585                           
   586                           ; 2 bytes @ 0xA
   587  007A                     	ds	2
   588  007C                     ??___lwmod:	
   589                           
   590                           ; 1 bytes @ 0xC
   591  007C                     	ds	1
   592  007D                     ___lldiv@counter:	
   593  007D                     ___lwmod@counter:	
   594                           ; 1 bytes @ 0xD
   595                           
   596                           
   597                           ; 1 bytes @ 0xD
   598  007D                     	ds	1
   599  007E                     ??_setup:	
   600                           
   601                           	psect	cstackBANK0
   602  0020                     __pcstackBANK0:	
   603                           ; 1 bytes @ 0xE
   604                           
   605  0020                     ?_I2C_Master_Init:	
   606  0020                     ?_sprintf:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0020                     sprintf@f:	
   610                           ; 2 bytes @ 0x0
   611                           
   612  0020                     I2C_Master_Init@c:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0020                     get_time@string_time:	
   616                           ; 4 bytes @ 0x0
   617                           
   618                           
   619                           ; 6 bytes @ 0x0
   620  0020                     	ds	3
   621  0023                     ??_sprintf:	
   622                           
   623                           ; 1 bytes @ 0x3
   624  0023                     	ds	1
   625  0024                     ??_I2C_Master_Init:	
   626                           
   627                           ; 1 bytes @ 0x4
   628  0024                     	ds	2
   629  0026                     get_time@hour:	
   630  0026                     sprintf@ap:	
   631                           ; 1 bytes @ 0x6
   632                           
   633                           
   634                           ; 1 bytes @ 0x6
   635  0026                     	ds	1
   636  0027                     get_time@min:	
   637  0027                     sprintf@flag:	
   638                           ; 1 bytes @ 0x7
   639                           
   640                           
   641                           ; 1 bytes @ 0x7
   642  0027                     	ds	1
   643  0028                     sprintf@prec:	
   644                           
   645                           ; 1 bytes @ 0x8
   646  0028                     	ds	1
   647  0029                     sprintf@val:	
   648                           
   649                           ; 2 bytes @ 0x9
   650  0029                     	ds	2
   651  002B                     sprintf@sp:	
   652                           
   653                           ; 1 bytes @ 0xB
   654  002B                     	ds	1
   655  002C                     sprintf@c:	
   656                           
   657                           ; 1 bytes @ 0xC
   658  002C                     	ds	1
   659  002D                     ??_get_temp:	
   660                           
   661                           ; 1 bytes @ 0xD
   662  002D                     	ds	3
   663  0030                     get_temp@temperature:	
   664                           
   665                           ; 6 bytes @ 0x10
   666  0030                     	ds	6
   667  0036                     get_temp@tempMSB:	
   668                           
   669                           ; 1 bytes @ 0x16
   670  0036                     	ds	1
   671  0037                     get_temp@decimal:	
   672                           
   673                           ; 3 bytes @ 0x17
   674  0037                     	ds	3
   675  003A                     get_temp@tempLSB:	
   676                           
   677                           ; 1 bytes @ 0x1A
   678  003A                     	ds	1
   679  003B                     ??_main:	
   680                           
   681                           ; 1 bytes @ 0x1B
   682  003B                     	ds	1
   683                           
   684                           	psect	maintext
   685  05A8                     __pmaintext:	
   686 ;;
   687 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   688 ;;
   689 ;; *************** function _main *****************
   690 ;; Defined at:
   691 ;;		line 48 in file "mainMaster.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : B00/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   705 ;;      Params:         0       0       0       0       0
   706 ;;      Locals:         0       0       0       0       0
   707 ;;      Temps:          0       1       0       0       0
   708 ;;      Totals:         0       1       0       0       0
   709 ;;Total ram usage:        1 bytes
   710 ;; Hardware stack levels required when called:    4
   711 ;; This function calls:
   712 ;;		_Lcd_Clear
   713 ;;		_Lcd_Set_Cursor
   714 ;;		_Lcd_Write_String
   715 ;;		_get_hall
   716 ;;		_get_temp
   717 ;;		_get_time
   718 ;;		_setup
   719 ;; This function is called by:
   720 ;;		Startup code after reset
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           
   725                           ;psect for function _main
   726  05A8                     _main:	
   727                           
   728                           ;mainMaster.c: 49:     setup();
   729                           
   730                           ;incstack = 0
   731                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   732  05A8  120A  118A  22E5  120A  118A  	fcall	_setup
   733                           
   734                           ;mainMaster.c: 50:     Lcd_Clear();
   735  05AD  120A  118A  2252  120A  118A  	fcall	_Lcd_Clear
   736  05B2  2DBC               	goto	l1651
   737  05B3                     l1669:	
   738                           
   739                           ;mainMaster.c: 62:             Lcd_Write_String("Key ON  ");
   740  05B3  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   741  05B4                     L1:	
   742  05B4  00F5               	movwf	Lcd_Write_String@a
   743  05B5  3080               	movlw	128
   744  05B6  00F6               	movwf	Lcd_Write_String@a+1
   745  05B7  120A  118A  2413  120A  118A  	fcall	_Lcd_Write_String
   746  05BC                     l1651:	
   747                           ;mainMaster.c: 63:         } else {
   748                           
   749                           
   750                           ;mainMaster.c: 53:         time = get_time();
   751  05BC  120A  118A  2611  120A  118A  	fcall	_get_time
   752  05C1  1283               	bcf	3,5	;RP0=0, select bank0
   753  05C2  1303               	bcf	3,6	;RP1=0, select bank0
   754  05C3  00BB               	movwf	??_main
   755  05C4  083B               	movf	??_main,w
   756  05C5  00BE               	movwf	_time
   757                           
   758                           ;mainMaster.c: 54:         Lcd_Set_Cursor(1,1);
   759  05C6  01F4               	clrf	Lcd_Set_Cursor@b
   760  05C7  0AF4               	incf	Lcd_Set_Cursor@b,f
   761  05C8  3001               	movlw	1
   762  05C9  120A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
   763                           
   764                           ;mainMaster.c: 55:         Lcd_Write_String(time);
   765  05CE  1283               	bcf	3,5	;RP0=0, select bank0
   766  05CF  1303               	bcf	3,6	;RP1=0, select bank0
   767  05D0  083E               	movf	_time,w
   768  05D1  00F5               	movwf	Lcd_Write_String@a
   769  05D2  3000               	movlw	0
   770  05D3  00F6               	movwf	Lcd_Write_String@a+1
   771  05D4  120A  118A  2413  120A  118A  	fcall	_Lcd_Write_String
   772                           
   773                           ;mainMaster.c: 56:         temp = get_temp();
   774  05D9  120A  118A  2687  120A  118A  	fcall	_get_temp
   775  05DE  1283               	bcf	3,5	;RP0=0, select bank0
   776  05DF  1303               	bcf	3,6	;RP1=0, select bank0
   777  05E0  00BB               	movwf	??_main
   778  05E1  083B               	movf	??_main,w
   779  05E2  00BD               	movwf	_temp
   780                           
   781                           ;mainMaster.c: 57:         Lcd_Set_Cursor(2,1);
   782  05E3  01F4               	clrf	Lcd_Set_Cursor@b
   783  05E4  0AF4               	incf	Lcd_Set_Cursor@b,f
   784  05E5  3002               	movlw	2
   785  05E6  120A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
   786                           
   787                           ;mainMaster.c: 58:         Lcd_Write_String(temp);
   788  05EB  1283               	bcf	3,5	;RP0=0, select bank0
   789  05EC  1303               	bcf	3,6	;RP1=0, select bank0
   790  05ED  083D               	movf	_temp,w
   791  05EE  00F5               	movwf	Lcd_Write_String@a
   792  05EF  3000               	movlw	0
   793  05F0  00F6               	movwf	Lcd_Write_String@a+1
   794  05F1  120A  118A  2413  120A  118A  	fcall	_Lcd_Write_String
   795                           
   796                           ;mainMaster.c: 59:         key = get_hall();
   797  05F6  120A  118A  22A2  120A  118A  	fcall	_get_hall
   798  05FB  1283               	bcf	3,5	;RP0=0, select bank0
   799  05FC  1303               	bcf	3,6	;RP1=0, select bank0
   800  05FD  00BB               	movwf	??_main
   801  05FE  083B               	movf	??_main,w
   802  05FF  00BC               	movwf	_key
   803                           
   804                           ;mainMaster.c: 60:         Lcd_Set_Cursor(1,7);
   805  0600  3007               	movlw	7
   806  0601  00BB               	movwf	??_main
   807  0602  083B               	movf	??_main,w
   808  0603  00F4               	movwf	Lcd_Set_Cursor@b
   809  0604  3001               	movlw	1
   810  0605  120A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
   811                           
   812                           ;mainMaster.c: 61:         if (key == 1){
   813  060A  1283               	bcf	3,5	;RP0=0, select bank0
   814  060B  1303               	bcf	3,6	;RP1=0, select bank0
   815  060C  033C               	decf	_key,w
   816  060D  1903               	btfsc	3,2
   817  060E  2DB3               	goto	l1669
   818                           
   819                           ;mainMaster.c: 64:             Lcd_Write_String("Key OFF ");
   820  060F  3014               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   821  0610  2DB4               	goto	L1
   822  0611                     __end_of_main:	
   823                           
   824                           	psect	text1
   825  02E5                     __ptext1:	
   826 ;; *************** function _setup *****************
   827 ;; Defined at:
   828 ;;		line 69 in file "mainMaster.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;		None
   831 ;; Auto vars:     Size  Location     Type
   832 ;;		None
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      void 
   835 ;; Registers used:
   836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   842 ;;      Params:         0       0       0       0       0
   843 ;;      Locals:         0       0       0       0       0
   844 ;;      Temps:          0       0       0       0       0
   845 ;;      Totals:         0       0       0       0       0
   846 ;;Total ram usage:        0 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; Hardware stack levels required when called:    3
   849 ;; This function calls:
   850 ;;		_I2C_Master_Init
   851 ;;		_Lcd_Init
   852 ;;		_initOscilador
   853 ;; This function is called by:
   854 ;;		_main
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           
   859                           ;psect for function _setup
   860  02E5                     _setup:	
   861                           
   862                           ;mainMaster.c: 70:     initOscilador(7);
   863                           
   864                           ;incstack = 0
   865                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   866  02E5  3007               	movlw	7
   867  02E6  120A  118A  249A  120A  118A  	fcall	_initOscilador
   868                           
   869                           ;mainMaster.c: 71:     ANSELH = 0;
   870  02EB  1683               	bsf	3,5	;RP0=1, select bank3
   871  02EC  1703               	bsf	3,6	;RP1=1, select bank3
   872  02ED  0189               	clrf	9	;volatile
   873                           
   874                           ;mainMaster.c: 72:     ANSEL = 0;
   875  02EE  0188               	clrf	8	;volatile
   876                           
   877                           ;mainMaster.c: 73:     TRISB = 0;
   878  02EF  1683               	bsf	3,5	;RP0=1, select bank1
   879  02F0  1303               	bcf	3,6	;RP1=0, select bank1
   880  02F1  0186               	clrf	6	;volatile
   881                           
   882                           ;mainMaster.c: 74:     TRISA = 0;
   883  02F2  0185               	clrf	5	;volatile
   884                           
   885                           ;mainMaster.c: 75:     PORTB = 0;
   886  02F3  1283               	bcf	3,5	;RP0=0, select bank0
   887  02F4  1303               	bcf	3,6	;RP1=0, select bank0
   888  02F5  0186               	clrf	6	;volatile
   889                           
   890                           ;mainMaster.c: 76:     PORTA = 0;
   891  02F6  0185               	clrf	5	;volatile
   892                           
   893                           ;mainMaster.c: 77:     Lcd_Init();
   894  02F7  120A  118A  24EF  120A  118A  	fcall	_Lcd_Init
   895                           
   896                           ;mainMaster.c: 78:     I2C_Master_Init(100000);
   897  02FC  3000               	movlw	0
   898  02FD  1283               	bcf	3,5	;RP0=0, select bank0
   899  02FE  1303               	bcf	3,6	;RP1=0, select bank0
   900  02FF  00A3               	movwf	I2C_Master_Init@c+3
   901  0300  3001               	movlw	1
   902  0301  00A2               	movwf	I2C_Master_Init@c+2
   903  0302  3086               	movlw	134
   904  0303  00A1               	movwf	I2C_Master_Init@c+1
   905  0304  30A0               	movlw	160
   906  0305  00A0               	movwf	I2C_Master_Init@c
   907  0306  120A  118A  2368   	fcall	_I2C_Master_Init
   908  0309  0008               	return
   909  030A                     __end_of_setup:	
   910                           
   911                           	psect	text2
   912  049A                     __ptext2:	
   913 ;; *************** function _initOscilador *****************
   914 ;; Defined at:
   915 ;;		line 11 in file "./Oscilador.h"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  option          1    wreg     unsigned char 
   918 ;; Auto vars:     Size  Location     Type
   919 ;;  option          1    2[COMMON] unsigned char 
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   929 ;;      Params:         0       0       0       0       0
   930 ;;      Locals:         1       0       0       0       0
   931 ;;      Temps:          2       0       0       0       0
   932 ;;      Totals:         3       0       0       0       0
   933 ;;Total ram usage:        3 bytes
   934 ;; Hardware stack levels used:    1
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		_setup
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           
   943                           ;psect for function _initOscilador
   944  049A                     _initOscilador:	
   945                           
   946                           ;incstack = 0
   947                           ; Regs used in _initOscilador: [wreg-fsr0h+status,2+status,0]
   948                           ;initOscilador@option stored from wreg
   949  049A  00F2               	movwf	initOscilador@option
   950                           
   951                           ;./Oscilador.h: 13: 
   952  049B  2CCB               	goto	l1461
   953  049C                     l1441:	
   954                           
   955                           ;./Oscilador.h: 16:         case 3:
   956  049C  308F               	movlw	-113
   957  049D  1683               	bsf	3,5	;RP0=1, select bank1
   958  049E  1303               	bcf	3,6	;RP1=0, select bank1
   959  049F  058F               	andwf	15,f	;volatile
   960                           
   961                           ;./Oscilador.h: 17: 
   962  04A0  2CED               	goto	l131
   963  04A1                     l1443:	
   964                           
   965                           ;./Oscilador.h: 20:         case 4:
   966  04A1  1683               	bsf	3,5	;RP0=1, select bank1
   967  04A2  1303               	bcf	3,6	;RP1=0, select bank1
   968  04A3  080F               	movf	15,w	;volatile
   969  04A4  398F               	andlw	-113
   970  04A5  3810               	iorlw	16
   971  04A6  2CC4               	goto	L6
   972  04A7                     l1445:	
   973                           ;./Oscilador.h: 21: 
   974                           
   975                           
   976                           ;./Oscilador.h: 24:         case 5:
   977  04A7  1683               	bsf	3,5	;RP0=1, select bank1
   978  04A8  1303               	bcf	3,6	;RP1=0, select bank1
   979  04A9  080F               	movf	15,w	;volatile
   980  04AA  398F               	andlw	-113
   981  04AB  3820               	iorlw	32
   982  04AC  2CC4               	goto	L6
   983  04AD                     l1447:	
   984                           ;./Oscilador.h: 25: 
   985                           
   986                           
   987                           ;./Oscilador.h: 28:         case 6:
   988  04AD  1683               	bsf	3,5	;RP0=1, select bank1
   989  04AE  1303               	bcf	3,6	;RP1=0, select bank1
   990  04AF  080F               	movf	15,w	;volatile
   991  04B0  398F               	andlw	-113
   992  04B1  3830               	iorlw	48
   993  04B2  2CC4               	goto	L6
   994  04B3                     l1449:	
   995                           ;./Oscilador.h: 29: 
   996                           
   997                           
   998                           ;./Oscilador.h: 32:         case 7:
   999  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  1000  04B4  1303               	bcf	3,6	;RP1=0, select bank1
  1001  04B5  080F               	movf	15,w	;volatile
  1002  04B6  398F               	andlw	-113
  1003  04B7  3840               	iorlw	64
  1004  04B8  2CC4               	goto	L6
  1005  04B9                     l1451:	
  1006                           ;./Oscilador.h: 33: 
  1007                           
  1008                           
  1009                           ;./Oscilador.h: 36:         default:
  1010  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  1011  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  1012  04BB  080F               	movf	15,w	;volatile
  1013  04BC  398F               	andlw	-113
  1014  04BD  3850               	iorlw	80
  1015  04BE  2CC4               	goto	L6
  1016  04BF                     l1453:	
  1017                           ;./Oscilador.h: 37: 
  1018                           
  1019                           
  1020                           ;./Oscilador.h: 40:     }
  1021  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  1022  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  1023  04C1  080F               	movf	15,w	;volatile
  1024  04C2  398F               	andlw	-113
  1025  04C3  3860               	iorlw	96
  1026  04C4                     L6:	
  1027  04C4  008F               	movwf	15	;volatile
  1028                           
  1029                           ;./Oscilador.h: 41:     OSCCONbits.SCS = 1;
  1030  04C5  2CED               	goto	l131
  1031  04C6                     l1455:	
  1032  04C6                     l1457:	
  1033  04C6  3070               	movlw	112
  1034  04C7  1683               	bsf	3,5	;RP0=1, select bank1
  1035  04C8  1303               	bcf	3,6	;RP1=0, select bank1
  1036  04C9  048F               	iorwf	15,f	;volatile
  1037  04CA  2CED               	goto	l131
  1038  04CB                     l1461:	
  1039  04CB  0872               	movf	initOscilador@option,w
  1040  04CC  00F0               	movwf	??_initOscilador
  1041  04CD  01F1               	clrf	??_initOscilador+1
  1042                           
  1043                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1044                           ; Switch size 1, requested type "simple"
  1045                           ; Number of cases is 1, Range of values is 0 to 0
  1046                           ; switch strategies available:
  1047                           ; Name         Instructions Cycles
  1048                           ; simple_byte            4     3 (average)
  1049                           ; direct_byte           11     8 (fixed)
  1050                           ; jumptable            260     6 (fixed)
  1051                           ;	Chosen strategy is simple_byte
  1052  04CE  0871               	movf	??_initOscilador+1,w
  1053  04CF  3A00               	xorlw	0	; case 0
  1054  04D0  1903               	skipnz
  1055  04D1  2CD3               	goto	l1719
  1056  04D2  2CC6               	goto	l1457
  1057  04D3                     l1719:	
  1058                           
  1059                           ; Switch size 1, requested type "simple"
  1060                           ; Number of cases is 8, Range of values is 0 to 7
  1061                           ; switch strategies available:
  1062                           ; Name         Instructions Cycles
  1063                           ; simple_byte           25    13 (average)
  1064                           ; direct_byte           32     8 (fixed)
  1065                           ; jumptable            260     6 (fixed)
  1066                           ;	Chosen strategy is simple_byte
  1067  04D3  0870               	movf	??_initOscilador,w
  1068  04D4  3A00               	xorlw	0	; case 0
  1069  04D5  1903               	skipnz
  1070  04D6  2C9C               	goto	l1441
  1071  04D7  3A01               	xorlw	1	; case 1
  1072  04D8  1903               	skipnz
  1073  04D9  2CA1               	goto	l1443
  1074  04DA  3A03               	xorlw	3	; case 2
  1075  04DB  1903               	skipnz
  1076  04DC  2CA7               	goto	l1445
  1077  04DD  3A01               	xorlw	1	; case 3
  1078  04DE  1903               	skipnz
  1079  04DF  2CAD               	goto	l1447
  1080  04E0  3A07               	xorlw	7	; case 4
  1081  04E1  1903               	skipnz
  1082  04E2  2CB3               	goto	l1449
  1083  04E3  3A01               	xorlw	1	; case 5
  1084  04E4  1903               	skipnz
  1085  04E5  2CB9               	goto	l1451
  1086  04E6  3A03               	xorlw	3	; case 6
  1087  04E7  1903               	skipnz
  1088  04E8  2CBF               	goto	l1453
  1089  04E9  3A01               	xorlw	1	; case 7
  1090  04EA  1903               	skipnz
  1091  04EB  2CC6               	goto	l1455
  1092  04EC  2CC6               	goto	l1457
  1093  04ED                     l131:	
  1094  04ED  140F               	bsf	15,0	;volatile
  1095  04EE  0008               	return
  1096  04EF                     __end_of_initOscilador:	
  1097                           
  1098                           	psect	text3
  1099  04EF                     __ptext3:	
  1100 ;; *************** function _Lcd_Init *****************
  1101 ;; Defined at:
  1102 ;;		line 65 in file "./LCD4bits.h"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;		None
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, status,2, status,0, pclath, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1116 ;;      Params:         0       0       0       0       0
  1117 ;;      Locals:         0       0       0       0       0
  1118 ;;      Temps:          2       0       0       0       0
  1119 ;;      Totals:         2       0       0       0       0
  1120 ;;Total ram usage:        2 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:    2
  1123 ;; This function calls:
  1124 ;;		_Lcd_Cmd
  1125 ;;		_Lcd_Port
  1126 ;; This function is called by:
  1127 ;;		_setup
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           
  1132                           ;psect for function _Lcd_Init
  1133  04EF                     _Lcd_Init:	
  1134                           
  1135                           ;./LCD4bits.h: 67:   Lcd_Port(0x00);
  1136                           
  1137                           ;incstack = 0
  1138                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1139  04EF  3000               	movlw	0
  1140  04F0  120A  118A  226E  120A  118A  	fcall	_Lcd_Port
  1141                           
  1142                           ;./LCD4bits.h: 68:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1143  04F5  3034               	movlw	52
  1144  04F6  00F5               	movwf	??_Lcd_Init+1
  1145  04F7  30F1               	movlw	241
  1146  04F8  00F4               	movwf	??_Lcd_Init
  1147  04F9                     u1057:	
  1148  04F9  0BF4               	decfsz	??_Lcd_Init,f
  1149  04FA  2CF9               	goto	u1057
  1150  04FB  0BF5               	decfsz	??_Lcd_Init+1,f
  1151  04FC  2CF9               	goto	u1057
  1152  04FD  2CFE               	nop2
  1153                           
  1154                           ;./LCD4bits.h: 69:   Lcd_Cmd(0x03);
  1155  04FE  3003               	movlw	3
  1156  04FF  120A  118A  2288  120A  118A  	fcall	_Lcd_Cmd
  1157                           
  1158                           ;./LCD4bits.h: 70:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1159  0504  300D               	movlw	13
  1160  0505  00F5               	movwf	??_Lcd_Init+1
  1161  0506  30FB               	movlw	251
  1162  0507  00F4               	movwf	??_Lcd_Init
  1163  0508                     u1067:	
  1164  0508  0BF4               	decfsz	??_Lcd_Init,f
  1165  0509  2D08               	goto	u1067
  1166  050A  0BF5               	decfsz	??_Lcd_Init+1,f
  1167  050B  2D08               	goto	u1067
  1168  050C  2D0D               	nop2
  1169                           
  1170                           ;./LCD4bits.h: 71:   Lcd_Cmd(0x03);
  1171  050D  3003               	movlw	3
  1172  050E  120A  118A  2288  120A  118A  	fcall	_Lcd_Cmd
  1173                           
  1174                           ;./LCD4bits.h: 72:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1175  0513  301D               	movlw	29
  1176  0514  00F5               	movwf	??_Lcd_Init+1
  1177  0515  3091               	movlw	145
  1178  0516  00F4               	movwf	??_Lcd_Init
  1179  0517                     u1077:	
  1180  0517  0BF4               	decfsz	??_Lcd_Init,f
  1181  0518  2D17               	goto	u1077
  1182  0519  0BF5               	decfsz	??_Lcd_Init+1,f
  1183  051A  2D17               	goto	u1077
  1184                           
  1185                           ;./LCD4bits.h: 73:   Lcd_Cmd(0x03);
  1186  051B  3003               	movlw	3
  1187  051C  120A  118A  2288  120A  118A  	fcall	_Lcd_Cmd
  1188                           
  1189                           ;./LCD4bits.h: 75:   Lcd_Cmd(0x02);
  1190  0521  3002               	movlw	2
  1191  0522  120A  118A  2288  120A  118A  	fcall	_Lcd_Cmd
  1192                           
  1193                           ;./LCD4bits.h: 76:   Lcd_Cmd(0x02);
  1194  0527  3002               	movlw	2
  1195  0528  120A  118A  2288  120A  118A  	fcall	_Lcd_Cmd
  1196                           
  1197                           ;./LCD4bits.h: 77:   Lcd_Cmd(0x08);
  1198  052D  3008               	movlw	8
  1199  052E  120A  118A  2288  120A  118A  	fcall	_Lcd_Cmd
  1200                           
  1201                           ;./LCD4bits.h: 78:   Lcd_Cmd(0x00);
  1202  0533  3000               	movlw	0
  1203  0534  120A  118A  2288  120A  118A  	fcall	_Lcd_Cmd
  1204                           
  1205                           ;./LCD4bits.h: 79:   Lcd_Cmd(0x0C);
  1206  0539  300C               	movlw	12
  1207  053A  120A  118A  2288  120A  118A  	fcall	_Lcd_Cmd
  1208                           
  1209                           ;./LCD4bits.h: 80:   Lcd_Cmd(0x00);
  1210  053F  3000               	movlw	0
  1211  0540  120A  118A  2288  120A  118A  	fcall	_Lcd_Cmd
  1212                           
  1213                           ;./LCD4bits.h: 81:   Lcd_Cmd(0x06);
  1214  0545  3006               	movlw	6
  1215  0546  120A  118A  2288   	fcall	_Lcd_Cmd
  1216  0549  0008               	return
  1217  054A                     __end_of_Lcd_Init:	
  1218                           
  1219                           	psect	text4
  1220  0368                     __ptext4:	
  1221 ;; *************** function _I2C_Master_Init *****************
  1222 ;; Defined at:
  1223 ;;		line 16 in file "./I2C.h"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;  c               4    0[BANK0 ] const unsigned long 
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg, status,2, status,0, pclath, cstack
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1237 ;;      Params:         0       4       0       0       0
  1238 ;;      Locals:         0       0       0       0       0
  1239 ;;      Temps:          0       4       0       0       0
  1240 ;;      Totals:         0       8       0       0       0
  1241 ;;Total ram usage:        8 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; Hardware stack levels required when called:    1
  1244 ;; This function calls:
  1245 ;;		___lldiv
  1246 ;; This function is called by:
  1247 ;;		_setup
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           
  1252                           ;psect for function _I2C_Master_Init
  1253  0368                     _I2C_Master_Init:	
  1254                           
  1255                           ;./I2C.h: 16: void I2C_Master_Init(const unsigned long c);./I2C.h: 17: {;./I2C.h: 18:   
      +                            SSPCON = 0b00101000;
  1256                           
  1257                           ;incstack = 0
  1258                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1259  0368  3028               	movlw	40
  1260  0369  1283               	bcf	3,5	;RP0=0, select bank0
  1261  036A  1303               	bcf	3,6	;RP1=0, select bank0
  1262  036B  0094               	movwf	20	;volatile
  1263                           
  1264                           ;./I2C.h: 19:     SSPCON2 = 0;
  1265  036C  1683               	bsf	3,5	;RP0=1, select bank1
  1266  036D  1303               	bcf	3,6	;RP1=0, select bank1
  1267  036E  0191               	clrf	17	;volatile
  1268                           
  1269                           ;./I2C.h: 20:     SSPADD = (8000000/(4*c))-1;
  1270  036F  1283               	bcf	3,5	;RP0=0, select bank0
  1271  0370  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0371  0820               	movf	I2C_Master_Init@c,w
  1273  0372  00A4               	movwf	??_I2C_Master_Init
  1274  0373  0821               	movf	I2C_Master_Init@c+1,w
  1275  0374  00A5               	movwf	??_I2C_Master_Init+1
  1276  0375  0822               	movf	I2C_Master_Init@c+2,w
  1277  0376  00A6               	movwf	??_I2C_Master_Init+2
  1278  0377  0823               	movf	I2C_Master_Init@c+3,w
  1279  0378  00A7               	movwf	??_I2C_Master_Init+3
  1280  0379  3002               	movlw	2
  1281  037A                     u795:	
  1282  037A  1003               	clrc
  1283  037B  0DA4               	rlf	??_I2C_Master_Init,f
  1284  037C  0DA5               	rlf	??_I2C_Master_Init+1,f
  1285  037D  0DA6               	rlf	??_I2C_Master_Init+2,f
  1286  037E  0DA7               	rlf	??_I2C_Master_Init+3,f
  1287  037F  3EFF               	addlw	-1
  1288  0380  1D03               	skipz
  1289  0381  2B7A               	goto	u795
  1290  0382  0827               	movf	??_I2C_Master_Init+3,w
  1291  0383  00F3               	movwf	___lldiv@divisor+3
  1292  0384  0826               	movf	??_I2C_Master_Init+2,w
  1293  0385  00F2               	movwf	___lldiv@divisor+2
  1294  0386  0825               	movf	??_I2C_Master_Init+1,w
  1295  0387  00F1               	movwf	___lldiv@divisor+1
  1296  0388  0824               	movf	??_I2C_Master_Init,w
  1297  0389  00F0               	movwf	___lldiv@divisor
  1298  038A  3000               	movlw	0
  1299  038B  00F7               	movwf	___lldiv@dividend+3
  1300  038C  307A               	movlw	122
  1301  038D  00F6               	movwf	___lldiv@dividend+2
  1302  038E  3012               	movlw	18
  1303  038F  00F5               	movwf	___lldiv@dividend+1
  1304  0390  3000               	movlw	0
  1305  0391  00F4               	movwf	___lldiv@dividend
  1306  0392  120A  118A  254A   	fcall	___lldiv
  1307  0395  0870               	movf	?___lldiv,w
  1308  0396  3EFF               	addlw	255
  1309  0397  1683               	bsf	3,5	;RP0=1, select bank1
  1310  0398  1303               	bcf	3,6	;RP1=0, select bank1
  1311  0399  0093               	movwf	19	;volatile
  1312                           
  1313                           ;./I2C.h: 21:     SSPSTAT = 0;
  1314  039A  0194               	clrf	20	;volatile
  1315                           
  1316                           ;./I2C.h: 22:     TRISC3 = 1;
  1317  039B  1587               	bsf	7,3	;volatile
  1318                           
  1319                           ;./I2C.h: 23:     TRISC4 = 1;
  1320  039C  1607               	bsf	7,4	;volatile
  1321  039D  0008               	return
  1322  039E                     __end_of_I2C_Master_Init:	
  1323                           
  1324                           	psect	text5
  1325  054A                     __ptext5:	
  1326 ;; *************** function ___lldiv *****************
  1327 ;; Defined at:
  1328 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  divisor         4    0[COMMON] unsigned long 
  1331 ;;  dividend        4    4[COMMON] unsigned long 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  quotient        4    9[COMMON] unsigned long 
  1334 ;;  counter         1   13[COMMON] unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  4    0[COMMON] unsigned long 
  1337 ;; Registers used:
  1338 ;;		wreg, status,2, status,0
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1344 ;;      Params:         8       0       0       0       0
  1345 ;;      Locals:         5       0       0       0       0
  1346 ;;      Temps:          1       0       0       0       0
  1347 ;;      Totals:        14       0       0       0       0
  1348 ;;Total ram usage:       14 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_I2C_Master_Init
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           
  1358                           ;psect for function ___lldiv
  1359  054A                     ___lldiv:	
  1360                           
  1361                           ;incstack = 0
  1362                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1363  054A  3000               	movlw	0
  1364  054B  00FC               	movwf	___lldiv@quotient+3
  1365  054C  3000               	movlw	0
  1366  054D  00FB               	movwf	___lldiv@quotient+2
  1367  054E  3000               	movlw	0
  1368  054F  00FA               	movwf	___lldiv@quotient+1
  1369  0550  3000               	movlw	0
  1370  0551  00F9               	movwf	___lldiv@quotient
  1371  0552  0873               	movf	___lldiv@divisor+3,w
  1372  0553  0472               	iorwf	___lldiv@divisor+2,w
  1373  0554  0471               	iorwf	___lldiv@divisor+1,w
  1374  0555  0470               	iorwf	___lldiv@divisor,w
  1375  0556  1903               	skipnz
  1376  0557  2D9F               	goto	l1313
  1377  0558  01FD               	clrf	___lldiv@counter
  1378  0559  0AFD               	incf	___lldiv@counter,f
  1379  055A                     l1299:	
  1380  055A  1BF3               	btfsc	___lldiv@divisor+3,7
  1381  055B  2D6A               	goto	l1301
  1382  055C  3001               	movlw	1
  1383  055D  00F8               	movwf	??___lldiv
  1384  055E                     u605:	
  1385  055E  1003               	clrc
  1386  055F  0DF0               	rlf	___lldiv@divisor,f
  1387  0560  0DF1               	rlf	___lldiv@divisor+1,f
  1388  0561  0DF2               	rlf	___lldiv@divisor+2,f
  1389  0562  0DF3               	rlf	___lldiv@divisor+3,f
  1390  0563  0BF8               	decfsz	??___lldiv,f
  1391  0564  2D5E               	goto	u605
  1392  0565  3001               	movlw	1
  1393  0566  00F8               	movwf	??___lldiv
  1394  0567  0878               	movf	??___lldiv,w
  1395  0568  07FD               	addwf	___lldiv@counter,f
  1396  0569  2D5A               	goto	l1299
  1397  056A                     l1301:	
  1398  056A  3001               	movlw	1
  1399  056B  00F8               	movwf	??___lldiv
  1400  056C                     u625:	
  1401  056C  1003               	clrc
  1402  056D  0DF9               	rlf	___lldiv@quotient,f
  1403  056E  0DFA               	rlf	___lldiv@quotient+1,f
  1404  056F  0DFB               	rlf	___lldiv@quotient+2,f
  1405  0570  0DFC               	rlf	___lldiv@quotient+3,f
  1406  0571  0BF8               	decfsz	??___lldiv,f
  1407  0572  2D6C               	goto	u625
  1408  0573  0873               	movf	___lldiv@divisor+3,w
  1409  0574  0277               	subwf	___lldiv@dividend+3,w
  1410  0575  1D03               	skipz
  1411  0576  2D81               	goto	u635
  1412  0577  0872               	movf	___lldiv@divisor+2,w
  1413  0578  0276               	subwf	___lldiv@dividend+2,w
  1414  0579  1D03               	skipz
  1415  057A  2D81               	goto	u635
  1416  057B  0871               	movf	___lldiv@divisor+1,w
  1417  057C  0275               	subwf	___lldiv@dividend+1,w
  1418  057D  1D03               	skipz
  1419  057E  2D81               	goto	u635
  1420  057F  0870               	movf	___lldiv@divisor,w
  1421  0580  0274               	subwf	___lldiv@dividend,w
  1422  0581                     u635:	
  1423  0581  1C03               	skipc
  1424  0582  2D92               	goto	l1309
  1425  0583  0870               	movf	___lldiv@divisor,w
  1426  0584  02F4               	subwf	___lldiv@dividend,f
  1427  0585  0871               	movf	___lldiv@divisor+1,w
  1428  0586  1C03               	skipc
  1429  0587  0F71               	incfsz	___lldiv@divisor+1,w
  1430  0588  02F5               	subwf	___lldiv@dividend+1,f
  1431  0589  0872               	movf	___lldiv@divisor+2,w
  1432  058A  1C03               	skipc
  1433  058B  0F72               	incfsz	___lldiv@divisor+2,w
  1434  058C  02F6               	subwf	___lldiv@dividend+2,f
  1435  058D  0873               	movf	___lldiv@divisor+3,w
  1436  058E  1C03               	skipc
  1437  058F  0F73               	incfsz	___lldiv@divisor+3,w
  1438  0590  02F7               	subwf	___lldiv@dividend+3,f
  1439  0591  1479               	bsf	___lldiv@quotient,0
  1440  0592                     l1309:	
  1441  0592  3001               	movlw	1
  1442  0593                     u645:	
  1443  0593  1003               	clrc
  1444  0594  0CF3               	rrf	___lldiv@divisor+3,f
  1445  0595  0CF2               	rrf	___lldiv@divisor+2,f
  1446  0596  0CF1               	rrf	___lldiv@divisor+1,f
  1447  0597  0CF0               	rrf	___lldiv@divisor,f
  1448  0598  3EFF               	addlw	-1
  1449  0599  1D03               	skipz
  1450  059A  2D93               	goto	u645
  1451  059B  3001               	movlw	1
  1452  059C  02FD               	subwf	___lldiv@counter,f
  1453  059D  1D03               	btfss	3,2
  1454  059E  2D6A               	goto	l1301
  1455  059F                     l1313:	
  1456  059F  087C               	movf	___lldiv@quotient+3,w
  1457  05A0  00F3               	movwf	?___lldiv+3
  1458  05A1  087B               	movf	___lldiv@quotient+2,w
  1459  05A2  00F2               	movwf	?___lldiv+2
  1460  05A3  087A               	movf	___lldiv@quotient+1,w
  1461  05A4  00F1               	movwf	?___lldiv+1
  1462  05A5  0879               	movf	___lldiv@quotient,w
  1463  05A6  00F0               	movwf	?___lldiv
  1464  05A7  0008               	return
  1465  05A8                     __end_of___lldiv:	
  1466                           
  1467                           	psect	text6
  1468  0611                     __ptext6:	
  1469 ;; *************** function _get_time *****************
  1470 ;; Defined at:
  1471 ;;		line 92 in file "mainMaster.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  string_time     6    0[BANK0 ] unsigned char [6]
  1476 ;;  min             1    7[BANK0 ] unsigned char 
  1477 ;;  hour            1    6[BANK0 ] unsigned char 
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      PTR unsigned char 
  1480 ;; Registers used:
  1481 ;;		wreg, status,2, status,0, pclath, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1487 ;;      Params:         0       0       0       0       0
  1488 ;;      Locals:         0       8       0       0       0
  1489 ;;      Temps:          2       0       0       0       0
  1490 ;;      Totals:         2       8       0       0       0
  1491 ;;Total ram usage:       10 bytes
  1492 ;; Hardware stack levels used:    1
  1493 ;; Hardware stack levels required when called:    2
  1494 ;; This function calls:
  1495 ;;		_I2C_Master_Read
  1496 ;;		_I2C_Master_RepeatedStart
  1497 ;;		_I2C_Master_Start
  1498 ;;		_I2C_Master_Stop
  1499 ;;		_I2C_Master_Write
  1500 ;; This function is called by:
  1501 ;;		_main
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           
  1506                           ;psect for function _get_time
  1507  0611                     _get_time:	
  1508                           
  1509                           ;mainMaster.c: 93:     char hour, min;;mainMaster.c: 94:     char string_time[6];;mainMa
      +                          ster.c: 96:     I2C_Master_Start();
  1510                           
  1511                           ;incstack = 0
  1512                           ; Regs used in _get_time: [wreg+status,2+status,0+pclath+cstack]
  1513  0611  120A  118A  222C  120A  118A  	fcall	_I2C_Master_Start
  1514                           
  1515                           ;mainMaster.c: 97:     I2C_Master_Write(0xD0);
  1516  0616  30D0               	movlw	208
  1517  0617  00F0               	movwf	I2C_Master_Write@d
  1518  0618  3000               	movlw	0
  1519  0619  00F1               	movwf	I2C_Master_Write@d+1
  1520  061A  120A  118A  2241  120A  118A  	fcall	_I2C_Master_Write
  1521                           
  1522                           ;mainMaster.c: 98:     I2C_Master_Write(0x01);
  1523  061F  3001               	movlw	1
  1524  0620  00F0               	movwf	I2C_Master_Write@d
  1525  0621  3000               	movlw	0
  1526  0622  00F1               	movwf	I2C_Master_Write@d+1
  1527  0623  120A  118A  2241  120A  118A  	fcall	_I2C_Master_Write
  1528                           
  1529                           ;mainMaster.c: 99:     I2C_Master_RepeatedStart();
  1530  0628  120A  118A  223A  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1531                           
  1532                           ;mainMaster.c: 100:     I2C_Master_Write(0xD1);
  1533  062D  30D1               	movlw	209
  1534  062E  00F0               	movwf	I2C_Master_Write@d
  1535  062F  3000               	movlw	0
  1536  0630  00F1               	movwf	I2C_Master_Write@d+1
  1537  0631  120A  118A  2241  120A  118A  	fcall	_I2C_Master_Write
  1538                           
  1539                           ;mainMaster.c: 101:     min = I2C_Master_Read(1);
  1540  0636  3001               	movlw	1
  1541  0637  00F0               	movwf	I2C_Master_Read@a
  1542  0638  3000               	movlw	0
  1543  0639  00F1               	movwf	I2C_Master_Read@a+1
  1544  063A  120A  118A  230A  120A  118A  	fcall	_I2C_Master_Read
  1545  063F  0870               	movf	?_I2C_Master_Read,w
  1546  0640  00F6               	movwf	??_get_time
  1547  0641  0876               	movf	??_get_time,w
  1548  0642  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0643  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0644  00A7               	movwf	get_time@min
  1551                           
  1552                           ;mainMaster.c: 102:     hour = I2C_Master_Read(0);
  1553  0645  3000               	movlw	0
  1554  0646  00F0               	movwf	I2C_Master_Read@a
  1555  0647  00F1               	movwf	I2C_Master_Read@a+1
  1556  0648  120A  118A  230A  120A  118A  	fcall	_I2C_Master_Read
  1557  064D  0870               	movf	?_I2C_Master_Read,w
  1558  064E  00F6               	movwf	??_get_time
  1559  064F  0876               	movf	??_get_time,w
  1560  0650  1283               	bcf	3,5	;RP0=0, select bank0
  1561  0651  1303               	bcf	3,6	;RP1=0, select bank0
  1562  0652  00A6               	movwf	get_time@hour
  1563                           
  1564                           ;mainMaster.c: 103:     I2C_Master_Stop();
  1565  0653  120A  118A  2233  120A  118A  	fcall	_I2C_Master_Stop
  1566                           
  1567                           ;mainMaster.c: 105:     string_time[0] = (hour >> 4) + '0';
  1568  0658  1283               	bcf	3,5	;RP0=0, select bank0
  1569  0659  1303               	bcf	3,6	;RP1=0, select bank0
  1570  065A  0826               	movf	get_time@hour,w
  1571  065B  00F6               	movwf	??_get_time
  1572  065C  3004               	movlw	4
  1573  065D                     u1005:	
  1574  065D  1003               	clrc
  1575  065E  0CF6               	rrf	??_get_time,f
  1576  065F  3EFF               	addlw	-1
  1577  0660  1D03               	skipz
  1578  0661  2E5D               	goto	u1005
  1579  0662  0876               	movf	??_get_time,w
  1580  0663  3E30               	addlw	48
  1581  0664  00F7               	movwf	??_get_time+1
  1582  0665  0877               	movf	??_get_time+1,w
  1583  0666  00A0               	movwf	get_time@string_time
  1584                           
  1585                           ;mainMaster.c: 106:     string_time[1] = (hour & 0x0F) + '0';
  1586  0667  0826               	movf	get_time@hour,w
  1587  0668  390F               	andlw	15
  1588  0669  3E30               	addlw	48
  1589  066A  00F6               	movwf	??_get_time
  1590  066B  0876               	movf	??_get_time,w
  1591  066C  00A1               	movwf	get_time@string_time+1
  1592                           
  1593                           ;mainMaster.c: 107:     string_time[2] = ':';
  1594  066D  303A               	movlw	58
  1595  066E  00F6               	movwf	??_get_time
  1596  066F  0876               	movf	??_get_time,w
  1597  0670  00A2               	movwf	get_time@string_time+2
  1598                           
  1599                           ;mainMaster.c: 108:     string_time[3] = (min >> 4) + '0';
  1600  0671  0827               	movf	get_time@min,w
  1601  0672  00F6               	movwf	??_get_time
  1602  0673  3004               	movlw	4
  1603  0674                     u1015:	
  1604  0674  1003               	clrc
  1605  0675  0CF6               	rrf	??_get_time,f
  1606  0676  3EFF               	addlw	-1
  1607  0677  1D03               	skipz
  1608  0678  2E74               	goto	u1015
  1609  0679  0876               	movf	??_get_time,w
  1610  067A  3E30               	addlw	48
  1611  067B  00F7               	movwf	??_get_time+1
  1612  067C  0877               	movf	??_get_time+1,w
  1613  067D  00A3               	movwf	get_time@string_time+3
  1614                           
  1615                           ;mainMaster.c: 109:     string_time[4] = (min & 0x0F) + '0';
  1616  067E  0827               	movf	get_time@min,w
  1617  067F  390F               	andlw	15
  1618  0680  3E30               	addlw	48
  1619  0681  00F6               	movwf	??_get_time
  1620  0682  0876               	movf	??_get_time,w
  1621  0683  00A4               	movwf	get_time@string_time+4
  1622                           
  1623                           ;mainMaster.c: 110:     string_time[5] = '\0';
  1624  0684  01A5               	clrf	get_time@string_time+5
  1625                           
  1626                           ;mainMaster.c: 112:     return (string_time);
  1627  0685  3020               	movlw	(low (get_time@string_time| 0))& (0+255)
  1628  0686  0008               	return
  1629  0687                     __end_of_get_time:	
  1630                           
  1631                           	psect	text7
  1632  0687                     __ptext7:	
  1633 ;; *************** function _get_temp *****************
  1634 ;; Defined at:
  1635 ;;		line 129 in file "mainMaster.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;		None
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  temperature     6   16[BANK0 ] unsigned char [6]
  1640 ;;  decimal         3   23[BANK0 ] unsigned char [3]
  1641 ;;  tempLSB         1   26[BANK0 ] unsigned char 
  1642 ;;  tempMSB         1   22[BANK0 ] unsigned char 
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      PTR unsigned char 
  1645 ;; Registers used:
  1646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1652 ;;      Params:         0       0       0       0       0
  1653 ;;      Locals:         0      11       0       0       0
  1654 ;;      Temps:          0       3       0       0       0
  1655 ;;      Totals:         0      14       0       0       0
  1656 ;;Total ram usage:       14 bytes
  1657 ;; Hardware stack levels used:    1
  1658 ;; Hardware stack levels required when called:    2
  1659 ;; This function calls:
  1660 ;;		_I2C_Master_Read
  1661 ;;		_I2C_Master_RepeatedStart
  1662 ;;		_I2C_Master_Start
  1663 ;;		_I2C_Master_Stop
  1664 ;;		_I2C_Master_Write
  1665 ;;		___bmul
  1666 ;;		_sprintf
  1667 ;;		_strcat
  1668 ;; This function is called by:
  1669 ;;		_main
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           
  1674                           ;psect for function _get_temp
  1675  0687                     _get_temp:	
  1676                           
  1677                           ;mainMaster.c: 130:     char tempLSB, tempMSB;;mainMaster.c: 131:     char temperature[6
      +                          ], decimal[3];;mainMaster.c: 133:     I2C_Master_Start();
  1678                           
  1679                           ;incstack = 0
  1680                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1681  0687  120A  118A  222C  120A  118A  	fcall	_I2C_Master_Start
  1682                           
  1683                           ;mainMaster.c: 134:     I2C_Master_Write(0xD0);
  1684  068C  30D0               	movlw	208
  1685  068D  00F0               	movwf	I2C_Master_Write@d
  1686  068E  3000               	movlw	0
  1687  068F  00F1               	movwf	I2C_Master_Write@d+1
  1688  0690  120A  118A  2241  120A  118A  	fcall	_I2C_Master_Write
  1689                           
  1690                           ;mainMaster.c: 135:     I2C_Master_Write(0x11);
  1691  0695  3011               	movlw	17
  1692  0696  00F0               	movwf	I2C_Master_Write@d
  1693  0697  3000               	movlw	0
  1694  0698  00F1               	movwf	I2C_Master_Write@d+1
  1695  0699  120A  118A  2241  120A  118A  	fcall	_I2C_Master_Write
  1696                           
  1697                           ;mainMaster.c: 136:     I2C_Master_RepeatedStart();
  1698  069E  120A  118A  223A  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1699                           
  1700                           ;mainMaster.c: 137:     I2C_Master_Write(0xD1);
  1701  06A3  30D1               	movlw	209
  1702  06A4  00F0               	movwf	I2C_Master_Write@d
  1703  06A5  3000               	movlw	0
  1704  06A6  00F1               	movwf	I2C_Master_Write@d+1
  1705  06A7  120A  118A  2241  120A  118A  	fcall	_I2C_Master_Write
  1706                           
  1707                           ;mainMaster.c: 138:     tempMSB = I2C_Master_Read(1);
  1708  06AC  3001               	movlw	1
  1709  06AD  00F0               	movwf	I2C_Master_Read@a
  1710  06AE  3000               	movlw	0
  1711  06AF  00F1               	movwf	I2C_Master_Read@a+1
  1712  06B0  120A  118A  230A  120A  118A  	fcall	_I2C_Master_Read
  1713  06B5  0870               	movf	?_I2C_Master_Read,w
  1714  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1715  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1716  06B8  00AD               	movwf	??_get_temp
  1717  06B9  082D               	movf	??_get_temp,w
  1718  06BA  00B6               	movwf	get_temp@tempMSB
  1719                           
  1720                           ;mainMaster.c: 139:     tempLSB = I2C_Master_Read(0);
  1721  06BB  3000               	movlw	0
  1722  06BC  00F0               	movwf	I2C_Master_Read@a
  1723  06BD  00F1               	movwf	I2C_Master_Read@a+1
  1724  06BE  120A  118A  230A  120A  118A  	fcall	_I2C_Master_Read
  1725  06C3  0870               	movf	?_I2C_Master_Read,w
  1726  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  1727  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  1728  06C6  00AD               	movwf	??_get_temp
  1729  06C7  082D               	movf	??_get_temp,w
  1730  06C8  00BA               	movwf	get_temp@tempLSB
  1731                           
  1732                           ;mainMaster.c: 140:     I2C_Master_Stop();
  1733  06C9  120A  118A  2233  120A  118A  	fcall	_I2C_Master_Stop
  1734                           
  1735                           ;mainMaster.c: 143:     tempLSB = (tempLSB >> 6) * 25;
  1736  06CE  3019               	movlw	25
  1737  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1738  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1739  06D1  00AD               	movwf	??_get_temp
  1740  06D2  082D               	movf	??_get_temp,w
  1741  06D3  00F0               	movwf	___bmul@multiplicand
  1742  06D4  083A               	movf	get_temp@tempLSB,w
  1743  06D5  00AE               	movwf	??_get_temp+1
  1744  06D6  3006               	movlw	6
  1745  06D7                     u1025:	
  1746  06D7  1003               	clrc
  1747  06D8  0CAE               	rrf	??_get_temp+1,f
  1748  06D9  3EFF               	addlw	-1
  1749  06DA  1D03               	skipz
  1750  06DB  2ED7               	goto	u1025
  1751  06DC  082E               	movf	??_get_temp+1,w
  1752  06DD  120A  118A  225D  120A  118A  	fcall	___bmul
  1753  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1754  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1755  06E4  00AF               	movwf	??_get_temp+2
  1756  06E5  082F               	movf	??_get_temp+2,w
  1757  06E6  00BA               	movwf	get_temp@tempLSB
  1758                           
  1759                           ;mainMaster.c: 144:     sprintf(temperature, "%d", tempMSB);
  1760  06E7  3023               	movlw	(low (((STR_5+1)-__stringbase)| (0+32768)))& (0+255)
  1761  06E8  00AD               	movwf	??_get_temp
  1762  06E9  082D               	movf	??_get_temp,w
  1763  06EA  00A0               	movwf	sprintf@f
  1764  06EB  0836               	movf	get_temp@tempMSB,w
  1765  06EC  00AE               	movwf	??_get_temp+1
  1766  06ED  01AF               	clrf	??_get_temp+2
  1767  06EE  082E               	movf	??_get_temp+1,w
  1768  06EF  00A1               	movwf	?_sprintf+1
  1769  06F0  082F               	movf	??_get_temp+2,w
  1770  06F1  00A2               	movwf	?_sprintf+2
  1771  06F2  3030               	movlw	(low (get_temp@temperature| 0))& (0+255)
  1772  06F3  120A  118A  271F  120A  118A  	fcall	_sprintf
  1773                           
  1774                           ;mainMaster.c: 145:     if (tempLSB == 0){
  1775  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  1776  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  1777  06FA  083A               	movf	get_temp@tempLSB,w
  1778  06FB  1D03               	btfss	3,2
  1779  06FC  2EFF               	goto	l1627
  1780                           
  1781                           ;mainMaster.c: 146:         sprintf(decimal, ".%d0", tempLSB);
  1782  06FD  301D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1783  06FE  2F00               	goto	L7
  1784  06FF                     l1627:	
  1785                           ;mainMaster.c: 147:     } else {
  1786                           
  1787                           
  1788                           ;mainMaster.c: 148:         sprintf(decimal, ".%d", tempLSB);
  1789  06FF  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1790  0700                     L7:	
  1791  0700  00AD               	movwf	??_get_temp
  1792  0701  082D               	movf	??_get_temp,w
  1793  0702  00A0               	movwf	sprintf@f
  1794  0703  083A               	movf	get_temp@tempLSB,w
  1795  0704  00AE               	movwf	??_get_temp+1
  1796  0705  01AF               	clrf	??_get_temp+2
  1797  0706  082E               	movf	??_get_temp+1,w
  1798  0707  00A1               	movwf	?_sprintf+1
  1799  0708  082F               	movf	??_get_temp+2,w
  1800  0709  00A2               	movwf	?_sprintf+2
  1801  070A  3037               	movlw	(low (get_temp@decimal| 0))& (0+255)
  1802  070B  120A  118A  271F  120A  118A  	fcall	_sprintf
  1803                           
  1804                           ;mainMaster.c: 150:     strcat(temperature, decimal);
  1805  0710  3037               	movlw	(low (get_temp@decimal| 0))& (0+255)
  1806  0711  1283               	bcf	3,5	;RP0=0, select bank0
  1807  0712  1303               	bcf	3,6	;RP1=0, select bank0
  1808  0713  00AD               	movwf	??_get_temp
  1809  0714  082D               	movf	??_get_temp,w
  1810  0715  00F0               	movwf	strcat@from
  1811  0716  3030               	movlw	(low (get_temp@temperature| 0))& (0+255)
  1812  0717  120A  118A  22C1   	fcall	_strcat
  1813                           
  1814                           ;mainMaster.c: 151:     temperature[5] = '\0';
  1815  071A  1283               	bcf	3,5	;RP0=0, select bank0
  1816  071B  1303               	bcf	3,6	;RP1=0, select bank0
  1817  071C  01B5               	clrf	get_temp@temperature+5
  1818                           
  1819                           ;mainMaster.c: 153:     return (temperature);
  1820  071D  3030               	movlw	(low (get_temp@temperature| 0))& (0+255)
  1821  071E  0008               	return
  1822  071F                     __end_of_get_temp:	
  1823                           
  1824                           	psect	text8
  1825  02C1                     __ptext8:	
  1826 ;; *************** function _strcat *****************
  1827 ;; Defined at:
  1828 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcat.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  to              1    wreg     PTR unsigned char 
  1831 ;;		 -> get_temp@temperature(6), 
  1832 ;;  from            1    0[COMMON] PTR const unsigned char 
  1833 ;;		 -> get_temp@decimal(3), 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  to              1    2[COMMON] PTR unsigned char 
  1836 ;;		 -> get_temp@temperature(6), 
  1837 ;;  cp              1    3[COMMON] PTR unsigned char 
  1838 ;;		 -> get_temp@temperature(6), 
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      PTR unsigned char 
  1841 ;; Registers used:
  1842 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1848 ;;      Params:         1       0       0       0       0
  1849 ;;      Locals:         2       0       0       0       0
  1850 ;;      Temps:          1       0       0       0       0
  1851 ;;      Totals:         4       0       0       0       0
  1852 ;;Total ram usage:        4 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; This function calls:
  1855 ;;		Nothing
  1856 ;; This function is called by:
  1857 ;;		_get_temp
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           
  1862                           ;psect for function _strcat
  1863  02C1                     _strcat:	
  1864                           
  1865                           ;incstack = 0
  1866                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  1867                           ;strcat@to stored from wreg
  1868  02C1  00F2               	movwf	strcat@to
  1869  02C2  0872               	movf	strcat@to,w
  1870  02C3  00F1               	movwf	??_strcat
  1871  02C4  0871               	movf	??_strcat,w
  1872  02C5  00F3               	movwf	strcat@cp
  1873  02C6                     l1533:	
  1874  02C6  0873               	movf	strcat@cp,w
  1875  02C7  0084               	movwf	4
  1876  02C8  1383               	bcf	3,7	;select IRP bank0
  1877  02C9  0800               	movf	0,w
  1878  02CA  1903               	btfsc	3,2
  1879  02CB  2AD9               	goto	l1537
  1880  02CC  3001               	movlw	1
  1881  02CD  00F1               	movwf	??_strcat
  1882  02CE  0871               	movf	??_strcat,w
  1883  02CF  07F3               	addwf	strcat@cp,f
  1884  02D0  2AC6               	goto	l1533
  1885  02D1                     l1535:	
  1886  02D1  3001               	movlw	1
  1887  02D2  00F1               	movwf	??_strcat
  1888  02D3  0871               	movf	??_strcat,w
  1889  02D4  07F3               	addwf	strcat@cp,f
  1890  02D5  3001               	movlw	1
  1891  02D6  00F1               	movwf	??_strcat
  1892  02D7  0871               	movf	??_strcat,w
  1893  02D8  07F0               	addwf	strcat@from,f
  1894  02D9                     l1537:	
  1895  02D9  0870               	movf	strcat@from,w
  1896  02DA  0084               	movwf	4
  1897  02DB  0800               	movf	0,w
  1898  02DC  00F1               	movwf	??_strcat
  1899  02DD  0873               	movf	strcat@cp,w
  1900  02DE  0084               	movwf	4
  1901  02DF  0871               	movf	??_strcat,w
  1902  02E0  0080               	movwf	0
  1903  02E1  0800               	movf	0,w
  1904  02E2  1903               	btfsc	3,2
  1905  02E3  0008               	return
  1906  02E4  2AD1               	goto	l1535
  1907  02E5                     __end_of_strcat:	
  1908                           
  1909                           	psect	text9
  1910  071F                     __ptext9:	
  1911 ;; *************** function _sprintf *****************
  1912 ;; Defined at:
  1913 ;;		line 500 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  sp              1    wreg     PTR unsigned char 
  1916 ;;		 -> get_temp@decimal(3), get_temp@temperature(6), 
  1917 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1918 ;;		 -> STR_5(4), STR_4(5), STR_3(3), 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1921 ;;		 -> get_temp@decimal(3), get_temp@temperature(6), 
  1922 ;;  tmpval          4    0        struct .
  1923 ;;  val             2    9[BANK0 ] unsigned int 
  1924 ;;  cp              2    0        PTR const unsigned char 
  1925 ;;  len             2    0        unsigned int 
  1926 ;;  c               1   12[BANK0 ] unsigned char 
  1927 ;;  prec            1    8[BANK0 ] char 
  1928 ;;  flag            1    7[BANK0 ] unsigned char 
  1929 ;;  ap              1    6[BANK0 ] PTR void [1]
  1930 ;;		 -> ?_sprintf(2), 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  2    0[BANK0 ] int 
  1933 ;; Registers used:
  1934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1940 ;;      Params:         0       3       0       0       0
  1941 ;;      Locals:         0       7       0       0       0
  1942 ;;      Temps:          0       3       0       0       0
  1943 ;;      Totals:         0      13       0       0       0
  1944 ;;Total ram usage:       13 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    1
  1947 ;; This function calls:
  1948 ;;		___lwdiv
  1949 ;;		___lwmod
  1950 ;; This function is called by:
  1951 ;;		_get_temp
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           
  1956                           ;psect for function _sprintf
  1957  071F                     _sprintf:	
  1958                           
  1959                           ;incstack = 0
  1960                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1961                           ;sprintf@sp stored from wreg
  1962  071F  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0720  1303               	bcf	3,6	;RP1=0, select bank0
  1964  0721  00AB               	movwf	sprintf@sp
  1965                           
  1966                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;D:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  1967  0722  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1968  0723  00A3               	movwf	??_sprintf
  1969  0724  0823               	movf	??_sprintf,w
  1970  0725  00A6               	movwf	sprintf@ap
  1971  0726                     l1519:	
  1972                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1973                           
  1974                           
  1975                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1976  0726  3001               	movlw	1
  1977  0727  07A0               	addwf	sprintf@f,f
  1978  0728  30FF               	movlw	-1
  1979  0729  0720               	addwf	sprintf@f,w
  1980  072A  0084               	movwf	4
  1981  072B  120A  118A  200D  120A  118A  	fcall	stringdir
  1982  0730  00A3               	movwf	??_sprintf
  1983  0731  0823               	movf	??_sprintf,w
  1984  0732  00AC               	movwf	sprintf@c
  1985  0733  082C               	movf	sprintf@c,w
  1986  0734  1903               	btfsc	3,2
  1987  0735  2FF2               	goto	l1521
  1988                           
  1989                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1990  0736  3025               	movlw	37
  1991  0737  062C               	xorwf	sprintf@c,w
  1992  0738  1903               	btfsc	3,2
  1993  0739  2F46               	goto	l1475
  1994                           
  1995                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;D:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1996  073A  082C               	movf	sprintf@c,w
  1997  073B  00A3               	movwf	??_sprintf
  1998  073C  082B               	movf	sprintf@sp,w
  1999  073D  0084               	movwf	4
  2000  073E  0823               	movf	??_sprintf,w
  2001  073F  1383               	bcf	3,7	;select IRP bank0
  2002  0740  0080               	movwf	0
  2003  0741  3001               	movlw	1
  2004  0742  00A3               	movwf	??_sprintf
  2005  0743  0823               	movf	??_sprintf,w
  2006  0744  07AB               	addwf	sprintf@sp,f
  2007                           
  2008                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  2009  0745  2F26               	goto	l1519
  2010  0746                     l1475:	
  2011                           
  2012                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  2013  0746  01A7               	clrf	sprintf@flag
  2014                           
  2015                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  2016  0747  3001               	movlw	1
  2017  0748  07A0               	addwf	sprintf@f,f
  2018  0749  30FF               	movlw	-1
  2019  074A  0720               	addwf	sprintf@f,w
  2020  074B  0084               	movwf	4
  2021  074C  120A  118A  200D  120A  118A  	fcall	stringdir
  2022  0751  00AC               	movwf	sprintf@c
  2023  0752  00A3               	movwf	??_sprintf
  2024  0753  01A4               	clrf	??_sprintf+1
  2025                           
  2026                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2027                           ; Switch size 1, requested type "simple"
  2028                           ; Number of cases is 1, Range of values is 0 to 0
  2029                           ; switch strategies available:
  2030                           ; Name         Instructions Cycles
  2031                           ; simple_byte            4     3 (average)
  2032                           ; direct_byte           11     8 (fixed)
  2033                           ; jumptable            260     6 (fixed)
  2034                           ;	Chosen strategy is simple_byte
  2035  0754  0824               	movf	??_sprintf+1,w
  2036  0755  3A00               	xorlw	0	; case 0
  2037  0756  1903               	skipnz
  2038  0757  2F59               	goto	l1721
  2039  0758  2F26               	goto	l1519
  2040  0759                     l1721:	
  2041                           
  2042                           ; Switch size 1, requested type "simple"
  2043                           ; Number of cases is 3, Range of values is 0 to 105
  2044                           ; switch strategies available:
  2045                           ; Name         Instructions Cycles
  2046                           ; simple_byte           10     6 (average)
  2047                           ; jumptable            260     6 (fixed)
  2048                           ;	Chosen strategy is simple_byte
  2049  0759  0823               	movf	??_sprintf,w
  2050  075A  3A00               	xorlw	0	; case 0
  2051  075B  1903               	skipnz
  2052  075C  2FF2               	goto	l1521
  2053  075D  3A64               	xorlw	100	; case 100
  2054  075E  1903               	skipnz
  2055  075F  2F64               	goto	l1481
  2056  0760  3A0D               	xorlw	13	; case 105
  2057  0761  1903               	skipnz
  2058  0762  2F64               	goto	l1481
  2059  0763  2F26               	goto	l1519
  2060  0764                     l1481:	
  2061                           
  2062                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2063  0764  0826               	movf	sprintf@ap,w
  2064  0765  0084               	movwf	4
  2065  0766  1383               	bcf	3,7	;select IRP bank0
  2066  0767  0800               	movf	0,w
  2067  0768  00A9               	movwf	sprintf@val
  2068  0769  0A84               	incf	4,f
  2069  076A  0800               	movf	0,w
  2070  076B  00AA               	movwf	sprintf@val+1
  2071  076C  3002               	movlw	2
  2072  076D  00A3               	movwf	??_sprintf
  2073  076E  0823               	movf	??_sprintf,w
  2074  076F  07A6               	addwf	sprintf@ap,f
  2075                           
  2076                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  2077  0770  1FAA               	btfss	sprintf@val+1,7
  2078  0771  2F7B               	goto	l1491
  2079                           
  2080                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  2081  0772  3003               	movlw	3
  2082  0773  00A3               	movwf	??_sprintf
  2083  0774  0823               	movf	??_sprintf,w
  2084  0775  04A7               	iorwf	sprintf@flag,f
  2085                           
  2086                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  2087  0776  09A9               	comf	sprintf@val,f
  2088  0777  09AA               	comf	sprintf@val+1,f
  2089  0778  0AA9               	incf	sprintf@val,f
  2090  0779  1903               	skipnz
  2091  077A  0AAA               	incf	sprintf@val+1,f
  2092  077B                     l1491:	
  2093                           
  2094                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2095  077B  01AC               	clrf	sprintf@c
  2096  077C  0AAC               	incf	sprintf@c,f
  2097  077D                     l1497:	
  2098                           
  2099                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  2100  077D  082C               	movf	sprintf@c,w
  2101  077E  00A3               	movwf	??_sprintf
  2102  077F  0723               	addwf	??_sprintf,w
  2103  0780  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2104  0781  0084               	movwf	4
  2105  0782  120A  118A  200D  120A  118A  	fcall	stringdir
  2106  0787  00A4               	movwf	??_sprintf+1
  2107  0788  120A  118A  200D  120A  118A  	fcall	stringdir
  2108  078D  00A5               	movwf	??_sprintf+2
  2109  078E  0825               	movf	??_sprintf+2,w
  2110  078F  022A               	subwf	sprintf@val+1,w
  2111  0790  1D03               	skipz
  2112  0791  2F94               	goto	u845
  2113  0792  0824               	movf	??_sprintf+1,w
  2114  0793  0229               	subwf	sprintf@val,w
  2115  0794                     u845:	
  2116  0794  1C03               	btfss	3,0
  2117  0795  2F9E               	goto	l1503
  2118  0796  3001               	movlw	1
  2119  0797  00A3               	movwf	??_sprintf
  2120  0798  0823               	movf	??_sprintf,w
  2121  0799  07AC               	addwf	sprintf@c,f
  2122  079A  3005               	movlw	5
  2123  079B  062C               	xorwf	sprintf@c,w
  2124  079C  1D03               	btfss	3,2
  2125  079D  2F7D               	goto	l1497
  2126  079E                     l1503:	
  2127                           
  2128                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  2129  079E  0827               	movf	sprintf@flag,w
  2130  079F  3903               	andlw	3
  2131  07A0  1903               	btfsc	3,2
  2132  07A1  2FAD               	goto	l1509
  2133                           
  2134                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  2135  07A2  302D               	movlw	45
  2136  07A3  00A3               	movwf	??_sprintf
  2137  07A4  082B               	movf	sprintf@sp,w
  2138  07A5  0084               	movwf	4
  2139  07A6  0823               	movf	??_sprintf,w
  2140  07A7  1383               	bcf	3,7	;select IRP bank0
  2141  07A8  0080               	movwf	0
  2142  07A9  3001               	movlw	1
  2143  07AA  00A3               	movwf	??_sprintf
  2144  07AB  0823               	movf	??_sprintf,w
  2145  07AC  07AB               	addwf	sprintf@sp,f
  2146  07AD                     l1509:	
  2147                           
  2148                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  2149  07AD  082C               	movf	sprintf@c,w
  2150  07AE  00A3               	movwf	??_sprintf
  2151  07AF  0823               	movf	??_sprintf,w
  2152  07B0  00A8               	movwf	sprintf@prec
  2153  07B1                     l1517:	
  2154                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2155                           
  2156                           
  2157                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2158  07B1  30FF               	movlw	255
  2159  07B2  00A3               	movwf	??_sprintf
  2160  07B3  0823               	movf	??_sprintf,w
  2161  07B4  07A8               	addwf	sprintf@prec,f
  2162  07B5  0A28               	incf	sprintf@prec,w
  2163  07B6  1903               	btfsc	3,2
  2164  07B7  2F26               	goto	l1519
  2165                           
  2166                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  2167  07B8  300A               	movlw	10
  2168  07B9  00F8               	movwf	___lwmod@divisor
  2169  07BA  3000               	movlw	0
  2170  07BB  00F9               	movwf	___lwmod@divisor+1
  2171  07BC  0828               	movf	sprintf@prec,w
  2172  07BD  00A3               	movwf	??_sprintf
  2173  07BE  0723               	addwf	??_sprintf,w
  2174  07BF  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2175  07C0  0084               	movwf	4
  2176  07C1  120A  118A  200D  120A  118A  	fcall	stringdir
  2177  07C6  00F0               	movwf	___lwdiv@divisor
  2178  07C7  120A  118A  200D  120A  118A  	fcall	stringdir
  2179  07CC  00F1               	movwf	___lwdiv@divisor+1
  2180  07CD  082A               	movf	sprintf@val+1,w
  2181  07CE  00F3               	movwf	___lwdiv@dividend+1
  2182  07CF  0829               	movf	sprintf@val,w
  2183  07D0  00F2               	movwf	___lwdiv@dividend
  2184  07D1  120A  118A  23D7  120A  118A  	fcall	___lwdiv
  2185  07D6  0871               	movf	?___lwdiv+1,w
  2186  07D7  00FB               	movwf	___lwmod@dividend+1
  2187  07D8  0870               	movf	?___lwdiv,w
  2188  07D9  00FA               	movwf	___lwmod@dividend
  2189  07DA  120A  118A  2336  120A  118A  	fcall	___lwmod
  2190  07DF  0878               	movf	?___lwmod,w
  2191  07E0  3E30               	addlw	48
  2192  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  2193  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  2194  07E3  00A4               	movwf	??_sprintf+1
  2195  07E4  0824               	movf	??_sprintf+1,w
  2196  07E5  00AC               	movwf	sprintf@c
  2197                           
  2198                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  2199  07E6  082C               	movf	sprintf@c,w
  2200  07E7  00A3               	movwf	??_sprintf
  2201  07E8  082B               	movf	sprintf@sp,w
  2202  07E9  0084               	movwf	4
  2203  07EA  0823               	movf	??_sprintf,w
  2204  07EB  1383               	bcf	3,7	;select IRP bank0
  2205  07EC  0080               	movwf	0
  2206  07ED  3001               	movlw	1
  2207  07EE  00A3               	movwf	??_sprintf
  2208  07EF  0823               	movf	??_sprintf,w
  2209  07F0  07AB               	addwf	sprintf@sp,f
  2210  07F1  2FB1               	goto	l1517
  2211  07F2                     l1521:	
  2212                           
  2213                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  2214  07F2  082B               	movf	sprintf@sp,w
  2215  07F3  0084               	movwf	4
  2216  07F4  1383               	bcf	3,7	;select IRP bank0
  2217  07F5  0180               	clrf	0
  2218  07F6  0008               	return
  2219  07F7                     __end_of_sprintf:	
  2220                           
  2221                           	psect	text10
  2222  0336                     __ptext10:	
  2223 ;; *************** function ___lwmod *****************
  2224 ;; Defined at:
  2225 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;  divisor         2    8[COMMON] unsigned int 
  2228 ;;  dividend        2   10[COMMON] unsigned int 
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;  counter         1   13[COMMON] unsigned char 
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  2    8[COMMON] unsigned int 
  2233 ;; Registers used:
  2234 ;;		wreg, status,2, status,0
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2240 ;;      Params:         4       0       0       0       0
  2241 ;;      Locals:         1       0       0       0       0
  2242 ;;      Temps:          1       0       0       0       0
  2243 ;;      Totals:         6       0       0       0       0
  2244 ;;Total ram usage:        6 bytes
  2245 ;; Hardware stack levels used:    1
  2246 ;; This function calls:
  2247 ;;		Nothing
  2248 ;; This function is called by:
  2249 ;;		_sprintf
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           
  2254                           ;psect for function ___lwmod
  2255  0336                     ___lwmod:	
  2256                           
  2257                           ;incstack = 0
  2258                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2259  0336  0878               	movf	___lwmod@divisor,w
  2260  0337  0479               	iorwf	___lwmod@divisor+1,w
  2261  0338  1903               	btfsc	3,2
  2262  0339  2B63               	goto	l1361
  2263  033A  01FD               	clrf	___lwmod@counter
  2264  033B  0AFD               	incf	___lwmod@counter,f
  2265  033C                     l1351:	
  2266  033C  1BF9               	btfsc	___lwmod@divisor+1,7
  2267  033D  2B4A               	goto	l1353
  2268  033E  3001               	movlw	1
  2269  033F                     u745:	
  2270  033F  1003               	clrc
  2271  0340  0DF8               	rlf	___lwmod@divisor,f
  2272  0341  0DF9               	rlf	___lwmod@divisor+1,f
  2273  0342  3EFF               	addlw	-1
  2274  0343  1D03               	skipz
  2275  0344  2B3F               	goto	u745
  2276  0345  3001               	movlw	1
  2277  0346  00FC               	movwf	??___lwmod
  2278  0347  087C               	movf	??___lwmod,w
  2279  0348  07FD               	addwf	___lwmod@counter,f
  2280  0349  2B3C               	goto	l1351
  2281  034A                     l1353:	
  2282  034A  0879               	movf	___lwmod@divisor+1,w
  2283  034B  027B               	subwf	___lwmod@dividend+1,w
  2284  034C  1D03               	skipz
  2285  034D  2B50               	goto	u765
  2286  034E  0878               	movf	___lwmod@divisor,w
  2287  034F  027A               	subwf	___lwmod@dividend,w
  2288  0350                     u765:	
  2289  0350  1C03               	skipc
  2290  0351  2B58               	goto	l1357
  2291  0352  0878               	movf	___lwmod@divisor,w
  2292  0353  02FA               	subwf	___lwmod@dividend,f
  2293  0354  0879               	movf	___lwmod@divisor+1,w
  2294  0355  1C03               	skipc
  2295  0356  03FB               	decf	___lwmod@dividend+1,f
  2296  0357  02FB               	subwf	___lwmod@dividend+1,f
  2297  0358                     l1357:	
  2298  0358  3001               	movlw	1
  2299  0359                     u775:	
  2300  0359  1003               	clrc
  2301  035A  0CF9               	rrf	___lwmod@divisor+1,f
  2302  035B  0CF8               	rrf	___lwmod@divisor,f
  2303  035C  3EFF               	addlw	-1
  2304  035D  1D03               	skipz
  2305  035E  2B59               	goto	u775
  2306  035F  3001               	movlw	1
  2307  0360  02FD               	subwf	___lwmod@counter,f
  2308  0361  1D03               	btfss	3,2
  2309  0362  2B4A               	goto	l1353
  2310  0363                     l1361:	
  2311  0363  087B               	movf	___lwmod@dividend+1,w
  2312  0364  00F9               	movwf	?___lwmod+1
  2313  0365  087A               	movf	___lwmod@dividend,w
  2314  0366  00F8               	movwf	?___lwmod
  2315  0367  0008               	return
  2316  0368                     __end_of___lwmod:	
  2317                           
  2318                           	psect	text11
  2319  03D7                     __ptext11:	
  2320 ;; *************** function ___lwdiv *****************
  2321 ;; Defined at:
  2322 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  divisor         2    0[COMMON] unsigned int 
  2325 ;;  dividend        2    2[COMMON] unsigned int 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  quotient        2    5[COMMON] unsigned int 
  2328 ;;  counter         1    7[COMMON] unsigned char 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  2    0[COMMON] unsigned int 
  2331 ;; Registers used:
  2332 ;;		wreg, status,2, status,0
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2338 ;;      Params:         4       0       0       0       0
  2339 ;;      Locals:         3       0       0       0       0
  2340 ;;      Temps:          1       0       0       0       0
  2341 ;;      Totals:         8       0       0       0       0
  2342 ;;Total ram usage:        8 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; This function calls:
  2345 ;;		Nothing
  2346 ;; This function is called by:
  2347 ;;		_sprintf
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           
  2352                           ;psect for function ___lwdiv
  2353  03D7                     ___lwdiv:	
  2354                           
  2355                           ;incstack = 0
  2356                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2357  03D7  01F5               	clrf	___lwdiv@quotient
  2358  03D8  01F6               	clrf	___lwdiv@quotient+1
  2359  03D9  0870               	movf	___lwdiv@divisor,w
  2360  03DA  0471               	iorwf	___lwdiv@divisor+1,w
  2361  03DB  1903               	btfsc	3,2
  2362  03DC  2C0E               	goto	l1339
  2363  03DD  01F7               	clrf	___lwdiv@counter
  2364  03DE  0AF7               	incf	___lwdiv@counter,f
  2365  03DF                     l1327:	
  2366  03DF  1BF1               	btfsc	___lwdiv@divisor+1,7
  2367  03E0  2BED               	goto	l1329
  2368  03E1  3001               	movlw	1
  2369  03E2                     u675:	
  2370  03E2  1003               	clrc
  2371  03E3  0DF0               	rlf	___lwdiv@divisor,f
  2372  03E4  0DF1               	rlf	___lwdiv@divisor+1,f
  2373  03E5  3EFF               	addlw	-1
  2374  03E6  1D03               	skipz
  2375  03E7  2BE2               	goto	u675
  2376  03E8  3001               	movlw	1
  2377  03E9  00F4               	movwf	??___lwdiv
  2378  03EA  0874               	movf	??___lwdiv,w
  2379  03EB  07F7               	addwf	___lwdiv@counter,f
  2380  03EC  2BDF               	goto	l1327
  2381  03ED                     l1329:	
  2382  03ED  3001               	movlw	1
  2383  03EE                     u695:	
  2384  03EE  1003               	clrc
  2385  03EF  0DF5               	rlf	___lwdiv@quotient,f
  2386  03F0  0DF6               	rlf	___lwdiv@quotient+1,f
  2387  03F1  3EFF               	addlw	-1
  2388  03F2  1D03               	skipz
  2389  03F3  2BEE               	goto	u695
  2390  03F4  0871               	movf	___lwdiv@divisor+1,w
  2391  03F5  0273               	subwf	___lwdiv@dividend+1,w
  2392  03F6  1D03               	skipz
  2393  03F7  2BFA               	goto	u705
  2394  03F8  0870               	movf	___lwdiv@divisor,w
  2395  03F9  0272               	subwf	___lwdiv@dividend,w
  2396  03FA                     u705:	
  2397  03FA  1C03               	skipc
  2398  03FB  2C03               	goto	l1335
  2399  03FC  0870               	movf	___lwdiv@divisor,w
  2400  03FD  02F2               	subwf	___lwdiv@dividend,f
  2401  03FE  0871               	movf	___lwdiv@divisor+1,w
  2402  03FF  1C03               	skipc
  2403  0400  03F3               	decf	___lwdiv@dividend+1,f
  2404  0401  02F3               	subwf	___lwdiv@dividend+1,f
  2405  0402  1475               	bsf	___lwdiv@quotient,0
  2406  0403                     l1335:	
  2407  0403  3001               	movlw	1
  2408  0404                     u715:	
  2409  0404  1003               	clrc
  2410  0405  0CF1               	rrf	___lwdiv@divisor+1,f
  2411  0406  0CF0               	rrf	___lwdiv@divisor,f
  2412  0407  3EFF               	addlw	-1
  2413  0408  1D03               	skipz
  2414  0409  2C04               	goto	u715
  2415  040A  3001               	movlw	1
  2416  040B  02F7               	subwf	___lwdiv@counter,f
  2417  040C  1D03               	btfss	3,2
  2418  040D  2BED               	goto	l1329
  2419  040E                     l1339:	
  2420  040E  0876               	movf	___lwdiv@quotient+1,w
  2421  040F  00F1               	movwf	?___lwdiv+1
  2422  0410  0875               	movf	___lwdiv@quotient,w
  2423  0411  00F0               	movwf	?___lwdiv
  2424  0412  0008               	return
  2425  0413                     __end_of___lwdiv:	
  2426                           
  2427                           	psect	text12
  2428  025D                     __ptext12:	
  2429 ;; *************** function ___bmul *****************
  2430 ;; Defined at:
  2431 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  multiplier      1    wreg     unsigned char 
  2434 ;;  multiplicand    1    0[COMMON] unsigned char 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  multiplier      1    3[COMMON] unsigned char 
  2437 ;;  product         1    2[COMMON] unsigned char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      unsigned char 
  2440 ;; Registers used:
  2441 ;;		wreg, status,2, status,0
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2447 ;;      Params:         1       0       0       0       0
  2448 ;;      Locals:         2       0       0       0       0
  2449 ;;      Temps:          1       0       0       0       0
  2450 ;;      Totals:         4       0       0       0       0
  2451 ;;Total ram usage:        4 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; This function calls:
  2454 ;;		Nothing
  2455 ;; This function is called by:
  2456 ;;		_get_temp
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           
  2461                           ;psect for function ___bmul
  2462  025D                     ___bmul:	
  2463                           
  2464                           ;incstack = 0
  2465                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2466                           ;___bmul@multiplier stored from wreg
  2467  025D  00F3               	movwf	___bmul@multiplier
  2468  025E  01F2               	clrf	___bmul@product
  2469  025F                     l1541:	
  2470  025F  1C73               	btfss	___bmul@multiplier,0
  2471  0260  2A65               	goto	l1545
  2472  0261  0870               	movf	___bmul@multiplicand,w
  2473  0262  00F1               	movwf	??___bmul
  2474  0263  0871               	movf	??___bmul,w
  2475  0264  07F2               	addwf	___bmul@product,f
  2476  0265                     l1545:	
  2477  0265  1003               	clrc
  2478  0266  0DF0               	rlf	___bmul@multiplicand,f
  2479  0267  1003               	clrc
  2480  0268  0CF3               	rrf	___bmul@multiplier,f
  2481  0269  0873               	movf	___bmul@multiplier,w
  2482  026A  1D03               	btfss	3,2
  2483  026B  2A5F               	goto	l1541
  2484  026C  0872               	movf	___bmul@product,w
  2485  026D  0008               	return
  2486  026E                     __end_of___bmul:	
  2487                           
  2488                           	psect	text13
  2489  023A                     __ptext13:	
  2490 ;; *************** function _I2C_Master_RepeatedStart *****************
  2491 ;; Defined at:
  2492 ;;		line 47 in file "./I2C.h"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;		None
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      void 
  2499 ;; Registers used:
  2500 ;;		wreg, status,2, status,0, pclath, cstack
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2506 ;;      Params:         0       0       0       0       0
  2507 ;;      Locals:         0       0       0       0       0
  2508 ;;      Temps:          0       0       0       0       0
  2509 ;;      Totals:         0       0       0       0       0
  2510 ;;Total ram usage:        0 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; Hardware stack levels required when called:    1
  2513 ;; This function calls:
  2514 ;;		_I2C_Master_Wait
  2515 ;; This function is called by:
  2516 ;;		_get_time
  2517 ;;		_get_temp
  2518 ;;		_get_day
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           
  2523                           ;psect for function _I2C_Master_RepeatedStart
  2524  023A                     _I2C_Master_RepeatedStart:	
  2525                           
  2526                           ;./I2C.h: 49:     I2C_Master_Wait();
  2527                           
  2528                           ;incstack = 0
  2529                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2530  023A  120A  118A  2249   	fcall	_I2C_Master_Wait
  2531                           
  2532                           ;./I2C.h: 50:     SSPCON2bits.RSEN = 1;
  2533  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2534  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2535  023F  1491               	bsf	17,1	;volatile
  2536  0240  0008               	return
  2537  0241                     __end_of_I2C_Master_RepeatedStart:	
  2538                           
  2539                           	psect	text14
  2540  02A2                     __ptext14:	
  2541 ;; *************** function _get_hall *****************
  2542 ;; Defined at:
  2543 ;;		line 156 in file "mainMaster.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;		None
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;  key             1    7[COMMON] unsigned char 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      unsigned char 
  2550 ;; Registers used:
  2551 ;;		wreg, status,2, status,0, pclath, cstack
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2557 ;;      Params:         0       0       0       0       0
  2558 ;;      Locals:         1       0       0       0       0
  2559 ;;      Temps:          1       0       0       0       0
  2560 ;;      Totals:         2       0       0       0       0
  2561 ;;Total ram usage:        2 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    2
  2564 ;; This function calls:
  2565 ;;		_I2C_Master_Read
  2566 ;;		_I2C_Master_Start
  2567 ;;		_I2C_Master_Stop
  2568 ;;		_I2C_Master_Write
  2569 ;; This function is called by:
  2570 ;;		_main
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           
  2575                           ;psect for function _get_hall
  2576  02A2                     _get_hall:	
  2577                           
  2578                           ;mainMaster.c: 157:     char key;;mainMaster.c: 159:     I2C_Master_Start();
  2579                           
  2580                           ;incstack = 0
  2581                           ; Regs used in _get_hall: [wreg+status,2+status,0+pclath+cstack]
  2582  02A2  120A  118A  222C  120A  118A  	fcall	_I2C_Master_Start
  2583                           
  2584                           ;mainMaster.c: 160:     I2C_Master_Write(0x11);
  2585  02A7  3011               	movlw	17
  2586  02A8  00F0               	movwf	I2C_Master_Write@d
  2587  02A9  3000               	movlw	0
  2588  02AA  00F1               	movwf	I2C_Master_Write@d+1
  2589  02AB  120A  118A  2241  120A  118A  	fcall	_I2C_Master_Write
  2590                           
  2591                           ;mainMaster.c: 161:     key = I2C_Master_Read(0);
  2592  02B0  3000               	movlw	0
  2593  02B1  00F0               	movwf	I2C_Master_Read@a
  2594  02B2  00F1               	movwf	I2C_Master_Read@a+1
  2595  02B3  120A  118A  230A  120A  118A  	fcall	_I2C_Master_Read
  2596  02B8  0870               	movf	?_I2C_Master_Read,w
  2597  02B9  00F6               	movwf	??_get_hall
  2598  02BA  0876               	movf	??_get_hall,w
  2599  02BB  00F7               	movwf	get_hall@key
  2600                           
  2601                           ;mainMaster.c: 162:     I2C_Master_Stop();
  2602  02BC  120A  118A  2233   	fcall	_I2C_Master_Stop
  2603                           
  2604                           ;mainMaster.c: 164:     return (key);
  2605  02BF  0877               	movf	get_hall@key,w
  2606  02C0  0008               	return
  2607  02C1                     __end_of_get_hall:	
  2608                           
  2609                           	psect	text15
  2610  0241                     __ptext15:	
  2611 ;; *************** function _I2C_Master_Write *****************
  2612 ;; Defined at:
  2613 ;;		line 65 in file "./I2C.h"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  d               2    0[COMMON] unsigned int 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;		None
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0, pclath, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2627 ;;      Params:         2       0       0       0       0
  2628 ;;      Locals:         0       0       0       0       0
  2629 ;;      Temps:          0       0       0       0       0
  2630 ;;      Totals:         2       0       0       0       0
  2631 ;;Total ram usage:        2 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:    1
  2634 ;; This function calls:
  2635 ;;		_I2C_Master_Wait
  2636 ;; This function is called by:
  2637 ;;		_get_time
  2638 ;;		_get_temp
  2639 ;;		_get_hall
  2640 ;;		_write_RTC
  2641 ;;		_get_day
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           
  2646                           ;psect for function _I2C_Master_Write
  2647  0241                     _I2C_Master_Write:	
  2648                           
  2649                           ;./I2C.h: 65: void I2C_Master_Write(unsigned d);./I2C.h: 66: {;./I2C.h: 67:     I2C_Mast
      +                          er_Wait();
  2650                           
  2651                           ;incstack = 0
  2652                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2653  0241  120A  118A  2249   	fcall	_I2C_Master_Wait
  2654                           
  2655                           ;./I2C.h: 68:     SSPBUF = d;
  2656  0244  0870               	movf	I2C_Master_Write@d,w
  2657  0245  1283               	bcf	3,5	;RP0=0, select bank0
  2658  0246  1303               	bcf	3,6	;RP1=0, select bank0
  2659  0247  0093               	movwf	19	;volatile
  2660  0248  0008               	return
  2661  0249                     __end_of_I2C_Master_Write:	
  2662                           
  2663                           	psect	text16
  2664  0233                     __ptext16:	
  2665 ;; *************** function _I2C_Master_Stop *****************
  2666 ;; Defined at:
  2667 ;;		line 55 in file "./I2C.h"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;		None
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      void 
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0, pclath, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2681 ;;      Params:         0       0       0       0       0
  2682 ;;      Locals:         0       0       0       0       0
  2683 ;;      Temps:          0       0       0       0       0
  2684 ;;      Totals:         0       0       0       0       0
  2685 ;;Total ram usage:        0 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    1
  2688 ;; This function calls:
  2689 ;;		_I2C_Master_Wait
  2690 ;; This function is called by:
  2691 ;;		_get_time
  2692 ;;		_get_temp
  2693 ;;		_get_hall
  2694 ;;		_write_RTC
  2695 ;;		_get_day
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           
  2700                           ;psect for function _I2C_Master_Stop
  2701  0233                     _I2C_Master_Stop:	
  2702                           
  2703                           ;./I2C.h: 57:     I2C_Master_Wait();
  2704                           
  2705                           ;incstack = 0
  2706                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2707  0233  120A  118A  2249   	fcall	_I2C_Master_Wait
  2708                           
  2709                           ;./I2C.h: 58:     SSPCON2bits.PEN = 1;
  2710  0236  1683               	bsf	3,5	;RP0=1, select bank1
  2711  0237  1303               	bcf	3,6	;RP1=0, select bank1
  2712  0238  1511               	bsf	17,2	;volatile
  2713  0239  0008               	return
  2714  023A                     __end_of_I2C_Master_Stop:	
  2715                           
  2716                           	psect	text17
  2717  022C                     __ptext17:	
  2718 ;; *************** function _I2C_Master_Start *****************
  2719 ;; Defined at:
  2720 ;;		line 39 in file "./I2C.h"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;		None
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;		None
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, status,2, status,0, pclath, cstack
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2734 ;;      Params:         0       0       0       0       0
  2735 ;;      Locals:         0       0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0
  2737 ;;      Totals:         0       0       0       0       0
  2738 ;;Total ram usage:        0 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:    1
  2741 ;; This function calls:
  2742 ;;		_I2C_Master_Wait
  2743 ;; This function is called by:
  2744 ;;		_get_time
  2745 ;;		_get_temp
  2746 ;;		_get_hall
  2747 ;;		_write_RTC
  2748 ;;		_get_day
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           
  2753                           ;psect for function _I2C_Master_Start
  2754  022C                     _I2C_Master_Start:	
  2755                           
  2756                           ;./I2C.h: 41:     I2C_Master_Wait();
  2757                           
  2758                           ;incstack = 0
  2759                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2760  022C  120A  118A  2249   	fcall	_I2C_Master_Wait
  2761                           
  2762                           ;./I2C.h: 42:     SSPCON2bits.SEN = 1;
  2763  022F  1683               	bsf	3,5	;RP0=1, select bank1
  2764  0230  1303               	bcf	3,6	;RP1=0, select bank1
  2765  0231  1411               	bsf	17,0	;volatile
  2766  0232  0008               	return
  2767  0233                     __end_of_I2C_Master_Start:	
  2768                           
  2769                           	psect	text18
  2770  030A                     __ptext18:	
  2771 ;; *************** function _I2C_Master_Read *****************
  2772 ;; Defined at:
  2773 ;;		line 74 in file "./I2C.h"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  a               2    0[COMMON] unsigned short 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  temp            2    4[COMMON] unsigned short 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  2    0[COMMON] unsigned short 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0, pclath, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2787 ;;      Params:         2       0       0       0       0
  2788 ;;      Locals:         2       0       0       0       0
  2789 ;;      Temps:          2       0       0       0       0
  2790 ;;      Totals:         6       0       0       0       0
  2791 ;;Total ram usage:        6 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    1
  2794 ;; This function calls:
  2795 ;;		_I2C_Master_Wait
  2796 ;; This function is called by:
  2797 ;;		_get_time
  2798 ;;		_get_temp
  2799 ;;		_get_hall
  2800 ;;		_get_day
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           
  2805                           ;psect for function _I2C_Master_Read
  2806  030A                     _I2C_Master_Read:	
  2807                           
  2808                           ;./I2C.h: 74: unsigned short I2C_Master_Read(unsigned short a);./I2C.h: 75: {;./I2C.h: 7
      +                          6:     unsigned short temp;;./I2C.h: 77:     I2C_Master_Wait();
  2809                           
  2810                           ;incstack = 0
  2811                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2812  030A  120A  118A  2249  120A  118A  	fcall	_I2C_Master_Wait
  2813                           
  2814                           ;./I2C.h: 78:     RCEN = 1;
  2815  030F  1683               	bsf	3,5	;RP0=1, select bank1
  2816  0310  1303               	bcf	3,6	;RP1=0, select bank1
  2817  0311  1591               	bsf	17,3	;volatile
  2818                           
  2819                           ;./I2C.h: 79:     I2C_Master_Wait();
  2820  0312  120A  118A  2249  120A  118A  	fcall	_I2C_Master_Wait
  2821                           
  2822                           ;./I2C.h: 80:     temp = SSPBUF;
  2823  0317  1283               	bcf	3,5	;RP0=0, select bank0
  2824  0318  1303               	bcf	3,6	;RP1=0, select bank0
  2825  0319  0813               	movf	19,w	;volatile
  2826  031A  00F2               	movwf	??_I2C_Master_Read
  2827  031B  01F3               	clrf	??_I2C_Master_Read+1
  2828  031C  0872               	movf	??_I2C_Master_Read,w
  2829  031D  00F4               	movwf	I2C_Master_Read@temp
  2830  031E  0873               	movf	??_I2C_Master_Read+1,w
  2831  031F  00F5               	movwf	I2C_Master_Read@temp+1
  2832                           
  2833                           ;./I2C.h: 81:     I2C_Master_Wait();
  2834  0320  120A  118A  2249  120A  118A  	fcall	_I2C_Master_Wait
  2835                           
  2836                           ;./I2C.h: 83:     if(a == 1){
  2837  0325  0370               	decf	I2C_Master_Read@a,w
  2838  0326  0471               	iorwf	I2C_Master_Read@a+1,w
  2839  0327  1D03               	btfss	3,2
  2840  0328  2B2D               	goto	l80
  2841                           
  2842                           ;./I2C.h: 84:         SSPCON2bits.ACKDT = 0;
  2843  0329  1683               	bsf	3,5	;RP0=1, select bank1
  2844  032A  1303               	bcf	3,6	;RP1=0, select bank1
  2845  032B  1291               	bcf	17,5	;volatile
  2846                           
  2847                           ;./I2C.h: 85:     }else{
  2848  032C  2B30               	goto	l81
  2849  032D                     l80:	
  2850                           
  2851                           ;./I2C.h: 86:         SSPCON2bits.ACKDT = 1;
  2852  032D  1683               	bsf	3,5	;RP0=1, select bank1
  2853  032E  1303               	bcf	3,6	;RP1=0, select bank1
  2854  032F  1691               	bsf	17,5	;volatile
  2855  0330                     l81:	
  2856                           ;./I2C.h: 87:     }
  2857                           
  2858                           
  2859                           ;./I2C.h: 88:     SSPCON2bits.ACKEN = 1;
  2860  0330  1611               	bsf	17,4	;volatile
  2861                           
  2862                           ;./I2C.h: 89:     return temp;
  2863  0331  0875               	movf	I2C_Master_Read@temp+1,w
  2864  0332  00F1               	movwf	?_I2C_Master_Read+1
  2865  0333  0874               	movf	I2C_Master_Read@temp,w
  2866  0334  00F0               	movwf	?_I2C_Master_Read
  2867  0335  0008               	return
  2868  0336                     __end_of_I2C_Master_Read:	
  2869                           
  2870                           	psect	text19
  2871  0249                     __ptext19:	
  2872 ;; *************** function _I2C_Master_Wait *****************
  2873 ;; Defined at:
  2874 ;;		line 32 in file "./I2C.h"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;		None
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;		None
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  1    wreg      void 
  2881 ;; Registers used:
  2882 ;;		wreg, status,2
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2888 ;;      Params:         0       0       0       0       0
  2889 ;;      Locals:         0       0       0       0       0
  2890 ;;      Temps:          0       0       0       0       0
  2891 ;;      Totals:         0       0       0       0       0
  2892 ;;Total ram usage:        0 bytes
  2893 ;; Hardware stack levels used:    1
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_I2C_Master_Start
  2898 ;;		_I2C_Master_RepeatedStart
  2899 ;;		_I2C_Master_Stop
  2900 ;;		_I2C_Master_Write
  2901 ;;		_I2C_Master_Read
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           
  2906                           ;psect for function _I2C_Master_Wait
  2907  0249                     _I2C_Master_Wait:	
  2908  0249                     l62:	
  2909                           ;./I2C.h: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2910                           
  2911                           ;incstack = 0
  2912                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2913                           
  2914  0249  1683               	bsf	3,5	;RP0=1, select bank1
  2915  024A  1303               	bcf	3,6	;RP1=0, select bank1
  2916  024B  1914               	btfsc	20,2	;volatile
  2917  024C  2A49               	goto	l62
  2918  024D  0811               	movf	17,w	;volatile
  2919  024E  391F               	andlw	31
  2920  024F  1903               	btfsc	3,2
  2921  0250  0008               	return
  2922  0251  2A49               	goto	l62
  2923  0252                     __end_of_I2C_Master_Wait:	
  2924                           
  2925                           	psect	text20
  2926  0413                     __ptext20:	
  2927 ;; *************** function _Lcd_Write_String *****************
  2928 ;; Defined at:
  2929 ;;		line 100 in file "./LCD4bits.h"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  a               2    5[COMMON] PTR unsigned char 
  2932 ;;		 -> NULL(0), get_temp@temperature(6), get_time@string_time(6), STR_2(9), 
  2933 ;;		 -> STR_1(9), 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  i               2   10[COMMON] int 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      void 
  2938 ;; Registers used:
  2939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2945 ;;      Params:         2       0       0       0       0
  2946 ;;      Locals:         2       0       0       0       0
  2947 ;;      Temps:          3       0       0       0       0
  2948 ;;      Totals:         7       0       0       0       0
  2949 ;;Total ram usage:        7 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    2
  2952 ;; This function calls:
  2953 ;;		_Lcd_Write_Char
  2954 ;; This function is called by:
  2955 ;;		_main
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           
  2960                           ;psect for function _Lcd_Write_String
  2961  0413                     _Lcd_Write_String:	
  2962                           
  2963                           ;./LCD4bits.h: 100: void Lcd_Write_String(char *a);./LCD4bits.h: 101: {;./LCD4bits.h: 10
      +                          2:  int i;;./LCD4bits.h: 103:  for(i=0;a[i]!='\0';i++)
  2964                           
  2965                           ;incstack = 0
  2966                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2967  0413  01FA               	clrf	Lcd_Write_String@i
  2968  0414  01FB               	clrf	Lcd_Write_String@i+1
  2969  0415                     l1581:	
  2970  0415  087A               	movf	Lcd_Write_String@i,w
  2971  0416  0775               	addwf	Lcd_Write_String@a,w
  2972  0417  00F8               	movwf	??_Lcd_Write_String+1
  2973  0418  0876               	movf	Lcd_Write_String@a+1,w
  2974  0419  00F7               	movwf	??_Lcd_Write_String
  2975  041A  1803               	skipnc
  2976  041B  0AF7               	incf	??_Lcd_Write_String,f
  2977  041C  1BFA               	btfsc	Lcd_Write_String@i,7
  2978  041D  03F7               	decf	??_Lcd_Write_String,f
  2979  041E  0877               	movf	??_Lcd_Write_String,w
  2980  041F  00F9               	movwf	??_Lcd_Write_String+2
  2981  0420  0879               	movf	??_Lcd_Write_String+2,w
  2982  0421  1283               	bcf	3,5	;RP0=0, select bank0
  2983  0422  1303               	bcf	3,6	;RP1=0, select bank0
  2984  0423  00FF               	movwf	127
  2985  0424  0878               	movf	??_Lcd_Write_String+1,w
  2986  0425  0084               	movwf	4
  2987  0426  120A  118A  2003  120A  118A  	fcall	stringtab
  2988  042B  3A00               	xorlw	0
  2989  042C  1903               	btfsc	3,2
  2990  042D  0008               	return
  2991                           
  2992                           ;./LCD4bits.h: 104:     Lcd_Write_Char(a[i]);
  2993  042E  087A               	movf	Lcd_Write_String@i,w
  2994  042F  0775               	addwf	Lcd_Write_String@a,w
  2995  0430  00F8               	movwf	??_Lcd_Write_String+1
  2996  0431  0876               	movf	Lcd_Write_String@a+1,w
  2997  0432  00F7               	movwf	??_Lcd_Write_String
  2998  0433  1803               	skipnc
  2999  0434  0AF7               	incf	??_Lcd_Write_String,f
  3000  0435  1BFA               	btfsc	Lcd_Write_String@i,7
  3001  0436  03F7               	decf	??_Lcd_Write_String,f
  3002  0437  0877               	movf	??_Lcd_Write_String,w
  3003  0438  00F9               	movwf	??_Lcd_Write_String+2
  3004  0439  0879               	movf	??_Lcd_Write_String+2,w
  3005  043A  1283               	bcf	3,5	;RP0=0, select bank0
  3006  043B  1303               	bcf	3,6	;RP1=0, select bank0
  3007  043C  00FF               	movwf	127
  3008  043D  0878               	movf	??_Lcd_Write_String+1,w
  3009  043E  0084               	movwf	4
  3010  043F  120A  118A  2003  120A  118A  	fcall	stringtab
  3011  0444  120A  118A  239E  120A  118A  	fcall	_Lcd_Write_Char
  3012  0449  3001               	movlw	1
  3013  044A  07FA               	addwf	Lcd_Write_String@i,f
  3014  044B  1803               	skipnc
  3015  044C  0AFB               	incf	Lcd_Write_String@i+1,f
  3016  044D  3000               	movlw	0
  3017  044E  07FB               	addwf	Lcd_Write_String@i+1,f
  3018  044F  2C15               	goto	l1581
  3019  0450                     __end_of_Lcd_Write_String:	
  3020                           
  3021                           	psect	text21
  3022  039E                     __ptext21:	
  3023 ;; *************** function _Lcd_Write_Char *****************
  3024 ;; Defined at:
  3025 ;;		line 84 in file "./LCD4bits.h"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  a               1    wreg     unsigned char 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;  a               1    4[COMMON] unsigned char 
  3030 ;;  y               1    3[COMMON] unsigned char 
  3031 ;;  temp            1    2[COMMON] unsigned char 
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  1    wreg      void 
  3034 ;; Registers used:
  3035 ;;		wreg, status,2, status,0, pclath, cstack
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3041 ;;      Params:         0       0       0       0       0
  3042 ;;      Locals:         3       0       0       0       0
  3043 ;;      Temps:          1       0       0       0       0
  3044 ;;      Totals:         4       0       0       0       0
  3045 ;;Total ram usage:        4 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; Hardware stack levels required when called:    1
  3048 ;; This function calls:
  3049 ;;		_Lcd_Port
  3050 ;; This function is called by:
  3051 ;;		_Lcd_Write_String
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           
  3056                           ;psect for function _Lcd_Write_Char
  3057  039E                     _Lcd_Write_Char:	
  3058                           
  3059                           ;incstack = 0
  3060                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3061                           ;Lcd_Write_Char@a stored from wreg
  3062  039E  00F4               	movwf	Lcd_Write_Char@a
  3063                           
  3064                           ;./LCD4bits.h: 84: void Lcd_Write_Char(char a);./LCD4bits.h: 85: {;./LCD4bits.h: 86:    
      +                          char temp,y;;./LCD4bits.h: 87:    temp = a&0x0F;
  3065  039F  0874               	movf	Lcd_Write_Char@a,w
  3066  03A0  390F               	andlw	15
  3067  03A1  00F1               	movwf	??_Lcd_Write_Char
  3068  03A2  0871               	movf	??_Lcd_Write_Char,w
  3069  03A3  00F2               	movwf	Lcd_Write_Char@temp
  3070                           
  3071                           ;./LCD4bits.h: 88:    y = a&0xF0;
  3072  03A4  0874               	movf	Lcd_Write_Char@a,w
  3073  03A5  39F0               	andlw	240
  3074  03A6  00F1               	movwf	??_Lcd_Write_Char
  3075  03A7  0871               	movf	??_Lcd_Write_Char,w
  3076  03A8  00F3               	movwf	Lcd_Write_Char@y
  3077                           
  3078                           ;./LCD4bits.h: 89:    PORTBbits.RB4 = 1;
  3079  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  3080  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  3081  03AB  1606               	bsf	6,4	;volatile
  3082                           
  3083                           ;./LCD4bits.h: 90:    Lcd_Port(y>>4);
  3084  03AC  0873               	movf	Lcd_Write_Char@y,w
  3085  03AD  00F1               	movwf	??_Lcd_Write_Char
  3086  03AE  3004               	movlw	4
  3087  03AF                     u815:	
  3088  03AF  1003               	clrc
  3089  03B0  0CF1               	rrf	??_Lcd_Write_Char,f
  3090  03B1  3EFF               	addlw	-1
  3091  03B2  1D03               	skipz
  3092  03B3  2BAF               	goto	u815
  3093  03B4  0871               	movf	??_Lcd_Write_Char,w
  3094  03B5  120A  118A  226E  120A  118A  	fcall	_Lcd_Port
  3095                           
  3096                           ;./LCD4bits.h: 91:    PORTBbits.RB5 = 1;
  3097  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  3098  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  3099  03BC  1686               	bsf	6,5	;volatile
  3100                           
  3101                           ;./LCD4bits.h: 92:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3102  03BD  301A               	movlw	26
  3103  03BE  00F1               	movwf	??_Lcd_Write_Char
  3104  03BF                     u1087:	
  3105  03BF  0BF1               	decfsz	??_Lcd_Write_Char,f
  3106  03C0  2BBF               	goto	u1087
  3107  03C1  0000               	nop
  3108                           
  3109                           ;./LCD4bits.h: 93:    PORTBbits.RB5 = 0;
  3110  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  3111  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  3112  03C4  1286               	bcf	6,5	;volatile
  3113                           
  3114                           ;./LCD4bits.h: 94:    Lcd_Port(temp);
  3115  03C5  0872               	movf	Lcd_Write_Char@temp,w
  3116  03C6  120A  118A  226E  120A  118A  	fcall	_Lcd_Port
  3117                           
  3118                           ;./LCD4bits.h: 95:    PORTBbits.RB5 = 1;
  3119  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  3120  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  3121  03CD  1686               	bsf	6,5	;volatile
  3122                           
  3123                           ;./LCD4bits.h: 96:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3124  03CE  301A               	movlw	26
  3125  03CF  00F1               	movwf	??_Lcd_Write_Char
  3126  03D0                     u1097:	
  3127  03D0  0BF1               	decfsz	??_Lcd_Write_Char,f
  3128  03D1  2BD0               	goto	u1097
  3129  03D2  0000               	nop
  3130                           
  3131                           ;./LCD4bits.h: 97:    PORTBbits.RB5 = 0;
  3132  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  3133  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  3134  03D5  1286               	bcf	6,5	;volatile
  3135  03D6  0008               	return
  3136  03D7                     __end_of_Lcd_Write_Char:	
  3137                           
  3138                           	psect	text22
  3139  0450                     __ptext22:	
  3140 ;; *************** function _Lcd_Set_Cursor *****************
  3141 ;; Defined at:
  3142 ;;		line 44 in file "./LCD4bits.h"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  a               1    wreg     unsigned char 
  3145 ;;  b               1    4[COMMON] unsigned char 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  a               1    7[COMMON] unsigned char 
  3148 ;;  temp            1   10[COMMON] unsigned char 
  3149 ;;  y               1    9[COMMON] unsigned char 
  3150 ;;  z               1    8[COMMON] unsigned char 
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0, pclath, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3160 ;;      Params:         1       0       0       0       0
  3161 ;;      Locals:         4       0       0       0       0
  3162 ;;      Temps:          2       0       0       0       0
  3163 ;;      Totals:         7       0       0       0       0
  3164 ;;Total ram usage:        7 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    2
  3167 ;; This function calls:
  3168 ;;		_Lcd_Cmd
  3169 ;; This function is called by:
  3170 ;;		_main
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           
  3175                           ;psect for function _Lcd_Set_Cursor
  3176  0450                     _Lcd_Set_Cursor:	
  3177                           
  3178                           ;incstack = 0
  3179                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3180                           ;Lcd_Set_Cursor@a stored from wreg
  3181  0450  00F7               	movwf	Lcd_Set_Cursor@a
  3182                           
  3183                           ;./LCD4bits.h: 44: void Lcd_Set_Cursor(char a, char b);./LCD4bits.h: 45: {;./LCD4bits.h:
      +                           46:  char temp,z,y;;./LCD4bits.h: 47:  if(a == 1)
  3184  0451  0377               	decf	Lcd_Set_Cursor@a,w
  3185  0452  1D03               	btfss	3,2
  3186  0453  2C75               	goto	l1565
  3187                           
  3188                           ;./LCD4bits.h: 48:  {;./LCD4bits.h: 49:    temp = 0x80 + b - 1;
  3189  0454  0874               	movf	Lcd_Set_Cursor@b,w
  3190  0455  3E7F               	addlw	127
  3191  0456  00F5               	movwf	??_Lcd_Set_Cursor
  3192  0457  0875               	movf	??_Lcd_Set_Cursor,w
  3193  0458  00FA               	movwf	Lcd_Set_Cursor@temp
  3194                           
  3195                           ;./LCD4bits.h: 50:   z = temp>>4;
  3196  0459  087A               	movf	Lcd_Set_Cursor@temp,w
  3197  045A  00F5               	movwf	??_Lcd_Set_Cursor
  3198  045B  3004               	movlw	4
  3199  045C                     u945:	
  3200  045C  1003               	clrc
  3201  045D  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3202  045E  3EFF               	addlw	-1
  3203  045F  1D03               	skipz
  3204  0460  2C5C               	goto	u945
  3205  0461  0875               	movf	??_Lcd_Set_Cursor,w
  3206  0462  00F6               	movwf	??_Lcd_Set_Cursor+1
  3207  0463  0876               	movf	??_Lcd_Set_Cursor+1,w
  3208  0464  00F8               	movwf	Lcd_Set_Cursor@z
  3209                           
  3210                           ;./LCD4bits.h: 51:   y = temp & 0x0F;
  3211  0465  087A               	movf	Lcd_Set_Cursor@temp,w
  3212  0466  390F               	andlw	15
  3213  0467  00F5               	movwf	??_Lcd_Set_Cursor
  3214  0468  0875               	movf	??_Lcd_Set_Cursor,w
  3215  0469  00F9               	movwf	Lcd_Set_Cursor@y
  3216                           
  3217                           ;./LCD4bits.h: 52:   Lcd_Cmd(z);
  3218  046A  0878               	movf	Lcd_Set_Cursor@z,w
  3219  046B  120A  118A  2288  120A  118A  	fcall	_Lcd_Cmd
  3220                           
  3221                           ;./LCD4bits.h: 53:   Lcd_Cmd(y);
  3222  0470  0879               	movf	Lcd_Set_Cursor@y,w
  3223  0471  120A  118A  2288   	fcall	_Lcd_Cmd
  3224                           
  3225                           ;./LCD4bits.h: 54:  }
  3226  0474  0008               	return
  3227  0475                     l1565:	
  3228  0475  3002               	movlw	2
  3229  0476  0677               	xorwf	Lcd_Set_Cursor@a,w
  3230  0477  1D03               	btfss	3,2
  3231  0478  0008               	return
  3232                           
  3233                           ;./LCD4bits.h: 56:  {;./LCD4bits.h: 57:   temp = 0xC0 + b - 1;
  3234  0479  0874               	movf	Lcd_Set_Cursor@b,w
  3235  047A  3EBF               	addlw	191
  3236  047B  00F5               	movwf	??_Lcd_Set_Cursor
  3237  047C  0875               	movf	??_Lcd_Set_Cursor,w
  3238  047D  00FA               	movwf	Lcd_Set_Cursor@temp
  3239                           
  3240                           ;./LCD4bits.h: 58:   z = temp>>4;
  3241  047E  087A               	movf	Lcd_Set_Cursor@temp,w
  3242  047F  00F5               	movwf	??_Lcd_Set_Cursor
  3243  0480  3004               	movlw	4
  3244  0481                     u965:	
  3245  0481  1003               	clrc
  3246  0482  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3247  0483  3EFF               	addlw	-1
  3248  0484  1D03               	skipz
  3249  0485  2C81               	goto	u965
  3250  0486  0875               	movf	??_Lcd_Set_Cursor,w
  3251  0487  00F6               	movwf	??_Lcd_Set_Cursor+1
  3252  0488  0876               	movf	??_Lcd_Set_Cursor+1,w
  3253  0489  00F8               	movwf	Lcd_Set_Cursor@z
  3254                           
  3255                           ;./LCD4bits.h: 59:   y = temp & 0x0F;
  3256  048A  087A               	movf	Lcd_Set_Cursor@temp,w
  3257  048B  390F               	andlw	15
  3258  048C  00F5               	movwf	??_Lcd_Set_Cursor
  3259  048D  0875               	movf	??_Lcd_Set_Cursor,w
  3260  048E  00F9               	movwf	Lcd_Set_Cursor@y
  3261                           
  3262                           ;./LCD4bits.h: 60:   Lcd_Cmd(z);
  3263  048F  0878               	movf	Lcd_Set_Cursor@z,w
  3264  0490  120A  118A  2288  120A  118A  	fcall	_Lcd_Cmd
  3265                           
  3266                           ;./LCD4bits.h: 61:   Lcd_Cmd(y);
  3267  0495  0879               	movf	Lcd_Set_Cursor@y,w
  3268  0496  120A  118A  2288   	fcall	_Lcd_Cmd
  3269  0499  0008               	return
  3270  049A                     __end_of_Lcd_Set_Cursor:	
  3271                           
  3272                           	psect	text23
  3273  0252                     __ptext23:	
  3274 ;; *************** function _Lcd_Clear *****************
  3275 ;; Defined at:
  3276 ;;		line 38 in file "./LCD4bits.h"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;		None
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;		None
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      void 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, status,0, pclath, cstack
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3290 ;;      Params:         0       0       0       0       0
  3291 ;;      Locals:         0       0       0       0       0
  3292 ;;      Temps:          0       0       0       0       0
  3293 ;;      Totals:         0       0       0       0       0
  3294 ;;Total ram usage:        0 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    2
  3297 ;; This function calls:
  3298 ;;		_Lcd_Cmd
  3299 ;; This function is called by:
  3300 ;;		_main
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           
  3305                           ;psect for function _Lcd_Clear
  3306  0252                     _Lcd_Clear:	
  3307                           
  3308                           ;./LCD4bits.h: 40:  Lcd_Cmd(0);
  3309                           
  3310                           ;incstack = 0
  3311                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3312  0252  3000               	movlw	0
  3313  0253  120A  118A  2288  120A  118A  	fcall	_Lcd_Cmd
  3314                           
  3315                           ;./LCD4bits.h: 41:  Lcd_Cmd(1);
  3316  0258  3001               	movlw	1
  3317  0259  120A  118A  2288   	fcall	_Lcd_Cmd
  3318  025C  0008               	return
  3319  025D                     __end_of_Lcd_Clear:	
  3320                           
  3321                           	psect	text24
  3322  0288                     __ptext24:	
  3323 ;; *************** function _Lcd_Cmd *****************
  3324 ;; Defined at:
  3325 ;;		line 29 in file "./LCD4bits.h"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  a               1    wreg     unsigned char 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  a               1    3[COMMON] unsigned char 
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  1    wreg      void 
  3332 ;; Registers used:
  3333 ;;		wreg, status,2, status,0, pclath, cstack
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3339 ;;      Params:         0       0       0       0       0
  3340 ;;      Locals:         1       0       0       0       0
  3341 ;;      Temps:          2       0       0       0       0
  3342 ;;      Totals:         3       0       0       0       0
  3343 ;;Total ram usage:        3 bytes
  3344 ;; Hardware stack levels used:    1
  3345 ;; Hardware stack levels required when called:    1
  3346 ;; This function calls:
  3347 ;;		_Lcd_Port
  3348 ;; This function is called by:
  3349 ;;		_Lcd_Clear
  3350 ;;		_Lcd_Set_Cursor
  3351 ;;		_Lcd_Init
  3352 ;;		_Lcd_Shift_Right
  3353 ;;		_Lcd_Shift_Left
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           
  3358                           ;psect for function _Lcd_Cmd
  3359  0288                     _Lcd_Cmd:	
  3360                           
  3361                           ;incstack = 0
  3362                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3363                           ;Lcd_Cmd@a stored from wreg
  3364  0288  00F3               	movwf	Lcd_Cmd@a
  3365                           
  3366                           ;./LCD4bits.h: 29: void Lcd_Cmd(char a);./LCD4bits.h: 30: {;./LCD4bits.h: 31:  PORTBbits
      +                          .RB4 = 0;
  3367  0289  1283               	bcf	3,5	;RP0=0, select bank0
  3368  028A  1303               	bcf	3,6	;RP1=0, select bank0
  3369  028B  1206               	bcf	6,4	;volatile
  3370                           
  3371                           ;./LCD4bits.h: 32:  Lcd_Port(a);
  3372  028C  0873               	movf	Lcd_Cmd@a,w
  3373  028D  120A  118A  226E  120A  118A  	fcall	_Lcd_Port
  3374                           
  3375                           ;./LCD4bits.h: 33:  PORTBbits.RB5 = 1;
  3376  0292  1283               	bcf	3,5	;RP0=0, select bank0
  3377  0293  1303               	bcf	3,6	;RP1=0, select bank0
  3378  0294  1686               	bsf	6,5	;volatile
  3379                           
  3380                           ;./LCD4bits.h: 34:         _delay((unsigned long)((4)*(8000000/4000.0)));
  3381  0295  300B               	movlw	11
  3382  0296  00F2               	movwf	??_Lcd_Cmd+1
  3383  0297  3062               	movlw	98
  3384  0298  00F1               	movwf	??_Lcd_Cmd
  3385  0299                     u1107:	
  3386  0299  0BF1               	decfsz	??_Lcd_Cmd,f
  3387  029A  2A99               	goto	u1107
  3388  029B  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3389  029C  2A99               	goto	u1107
  3390  029D  0000               	nop
  3391                           
  3392                           ;./LCD4bits.h: 35:         PORTBbits.RB5 = 0;
  3393  029E  1283               	bcf	3,5	;RP0=0, select bank0
  3394  029F  1303               	bcf	3,6	;RP1=0, select bank0
  3395  02A0  1286               	bcf	6,5	;volatile
  3396  02A1  0008               	return
  3397  02A2                     __end_of_Lcd_Cmd:	
  3398                           
  3399                           	psect	text25
  3400  026E                     __ptext25:	
  3401 ;; *************** function _Lcd_Port *****************
  3402 ;; Defined at:
  3403 ;;		line 7 in file "./LCD4bits.h"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;  a               1    wreg     unsigned char 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;  a               1    0[COMMON] unsigned char 
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3417 ;;      Params:         0       0       0       0       0
  3418 ;;      Locals:         1       0       0       0       0
  3419 ;;      Temps:          0       0       0       0       0
  3420 ;;      Totals:         1       0       0       0       0
  3421 ;;Total ram usage:        1 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_Lcd_Cmd
  3427 ;;		_Lcd_Init
  3428 ;;		_Lcd_Write_Char
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           
  3433                           ;psect for function _Lcd_Port
  3434  026E                     _Lcd_Port:	
  3435                           
  3436                           ;incstack = 0
  3437                           ; Regs used in _Lcd_Port: [wreg]
  3438                           ;Lcd_Port@a stored from wreg
  3439  026E  00F0               	movwf	Lcd_Port@a
  3440                           
  3441                           ;./LCD4bits.h: 7: void Lcd_Port(char a);./LCD4bits.h: 8: {;./LCD4bits.h: 9:  if(a & 1)
  3442  026F  1C70               	btfss	Lcd_Port@a,0
  3443  0270  2A75               	goto	l88
  3444                           
  3445                           ;./LCD4bits.h: 10:   PORTBbits.RB0 = 1;
  3446  0271  1283               	bcf	3,5	;RP0=0, select bank0
  3447  0272  1303               	bcf	3,6	;RP1=0, select bank0
  3448  0273  1406               	bsf	6,0	;volatile
  3449  0274  2A78               	goto	l89
  3450  0275                     l88:	
  3451                           ;./LCD4bits.h: 11:  else
  3452                           
  3453                           
  3454                           ;./LCD4bits.h: 12:   PORTBbits.RB0 = 0;
  3455  0275  1283               	bcf	3,5	;RP0=0, select bank0
  3456  0276  1303               	bcf	3,6	;RP1=0, select bank0
  3457  0277  1006               	bcf	6,0	;volatile
  3458  0278                     l89:	
  3459                           
  3460                           ;./LCD4bits.h: 14:  if(a & 2)
  3461  0278  1CF0               	btfss	Lcd_Port@a,1
  3462  0279  2A7C               	goto	l90
  3463                           
  3464                           ;./LCD4bits.h: 15:   PORTBbits.RB1 = 1;
  3465  027A  1486               	bsf	6,1	;volatile
  3466  027B  2A7D               	goto	l91
  3467  027C                     l90:	
  3468                           ;./LCD4bits.h: 16:  else
  3469                           
  3470                           
  3471                           ;./LCD4bits.h: 17:   PORTBbits.RB1 = 0;
  3472  027C  1086               	bcf	6,1	;volatile
  3473  027D                     l91:	
  3474                           
  3475                           ;./LCD4bits.h: 19:  if(a & 4)
  3476  027D  1D70               	btfss	Lcd_Port@a,2
  3477  027E  2A81               	goto	l92
  3478                           
  3479                           ;./LCD4bits.h: 20:   PORTBbits.RB2 = 1;
  3480  027F  1506               	bsf	6,2	;volatile
  3481  0280  2A82               	goto	l93
  3482  0281                     l92:	
  3483                           ;./LCD4bits.h: 21:  else
  3484                           
  3485                           
  3486                           ;./LCD4bits.h: 22:   PORTBbits.RB2 = 0;
  3487  0281  1106               	bcf	6,2	;volatile
  3488  0282                     l93:	
  3489                           
  3490                           ;./LCD4bits.h: 24:  if(a & 8)
  3491  0282  1DF0               	btfss	Lcd_Port@a,3
  3492  0283  2A86               	goto	l94
  3493                           
  3494                           ;./LCD4bits.h: 25:   PORTBbits.RB3 = 1;
  3495  0284  1586               	bsf	6,3	;volatile
  3496  0285  0008               	return
  3497  0286                     l94:	
  3498                           ;./LCD4bits.h: 26:  else
  3499                           
  3500                           
  3501                           ;./LCD4bits.h: 27:   PORTBbits.RB3 = 0;
  3502  0286  1186               	bcf	6,3	;volatile
  3503  0287  0008               	return
  3504  0288                     __end_of_Lcd_Port:	
  3505  007E                     btemp	set	126	;btemp
  3506  007E                     wtemp0	set	126


Data Sizes:
    Strings     27
    Constant    10
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 3
		 -> get_temp@decimal(BANK0[3]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_5(CODE[4]), STR_4(CODE[5]), STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@decimal(BANK0[3]), get_temp@temperature(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    sp__get_temp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    temp	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_temp@temperature(BANK0[6]), 

    sp__get_time	PTR unsigned char  size(1) Largest target is 6
		 -> get_time@string_time(BANK0[6]), 

    time	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_time@string_time(BANK0[6]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 9
		 -> NULL(NULL[0]), get_temp@temperature(BANK0[6]), get_time@string_time(BANK0[6]), STR_2(CODE[9]), 
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _get_time->_I2C_Master_Read
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _get_hall->_I2C_Master_Read
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_get_temp
    _setup->_I2C_Master_Init
    _get_temp->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    9492
                                             27 BANK0      1     1      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _get_hall
                           _get_temp
                           _get_time
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     632
                    _I2C_Master_Init
                           _Lcd_Init
                      _initOscilador
 ---------------------------------------------------------------------------------
 (2) _initOscilador                                        3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _get_time                                            10    10      0    1974
                                              6 COMMON     2     2      0
                                              0 BANK0      8     8      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            14    14      0    3834
                                             13 BANK0     14    14      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___bmul
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     3      1     207
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1429
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _get_hall                                             2     2      0    1762
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1238
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     501
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     572
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     608
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _get_hall
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _get_temp
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___bmul
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _strcat
   _get_time
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _initOscilador

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      1F       5       38.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2D      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Feb 23 18:38:30 2019

                                pc 0002                     ___bmul@product 0072  
                      __CFG_CP$OFF 0000                                 l62 0249  
                               l80 032D                                 l81 0330  
                               l90 027C                                 l91 027D  
                               l92 0281                        get_hall@key 0077  
                               l93 0282                                 l94 0286  
                               l88 0275                                 l89 0278  
                               fsr 0004                                l131 04ED  
                              _GIE 005F                       __CFG_CPD$OFF 0000  
                              u605 055E                                u705 03FA  
                              u625 056C                                u715 0404  
                              u635 0581                                u645 0593  
                              u815 03AF                                u745 033F  
                              u675 03E2                                u765 0350  
                              u845 0794                                u695 03EE  
                              u775 0359                                u945 045C  
                              u795 037A                                u965 0481  
                              _key 003C                                fsr0 0004  
                              indf 0000                       __CFG_LVP$OFF 0000  
                             l1301 056A                               l1313 059F  
                             l1309 0592                               l1335 0403  
                             l1327 03DF                               l1351 033C  
                             l1503 079E                               l1329 03ED  
                             l1353 034A                               l1361 0363  
                             l1521 07F2                               l1441 049C  
                             l1339 040E                               l1451 04B9  
                             l1443 04A1                               l1541 025F  
                             l1357 0358                               l1517 07B1  
                             l1509 07AD                               l1533 02C6  
                             l1453 04BF                               l1445 04A7  
                             l1461 04CB                               l1519 0726  
                             l1535 02D1                               l1455 04C6  
                             l1447 04AD                               l1545 0265  
                             l1481 0764                               l1721 0759  
                             l1537 02D9                               l1457 04C6  
                             l1449 04B3                               l1491 077B  
                             l1475 0746                               l1627 06FF  
                             l1299 055A                               l1651 05BC  
                             l1565 0475                               l1581 0415  
                             l1719 04D3                               l1497 077D  
                             l1669 05B3                               STR_1 001D  
                             STR_2 0026                        get_time@min 0027  
                             STR_3 0035                               STR_4 002F  
                             STR_5 0034                               u1005 065D  
                             u1015 0674                               u1025 06D7  
                             u1107 0299                               u1057 04F9  
                             u1067 0508                               u1077 0517  
                             u1087 03BF                               u1097 03D0  
                             _PEIE 005E                               _RCEN 048B  
                     __CFG_WRT$OFF 0000                  ?_Lcd_Write_String 0075  
 __end_of_I2C_Master_RepeatedStart 0241                               _main 05A8  
                             _temp 003D                               _time 003E  
                             btemp 007E                               start 0000  
               ??_Lcd_Write_String 0077                      __CFG_IESO$OFF 0000  
                  __end_of_Lcd_Cmd 02A2                  ___bmul@multiplier 0073  
                    __CFG_MCLRE$ON 0000                get_temp@temperature 0030  
                 ?_I2C_Master_Init 0020                   ?_I2C_Master_Read 0070  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                            ?_main 0070                      __CFG_WDTE$OFF 0000  
                     get_time@hour 0026                              _ANSEL 0188  
                  __end_of___lldiv 05A8                    __end_of___lwdiv 0413  
                  __end_of___lwmod 0368                              _PORTA 0005  
                            _PORTB 0006            __size_of_Lcd_Set_Cursor 004A  
                            _TRISA 0085                              _TRISB 0086  
                            _SSPIE 0463                              _SSPIF 0063  
                   __CFG_FCMEN$OFF 0000                    __end_of_dpowers 001D  
                            _setup 02E5                     __CFG_BOREN$OFF 0000  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 07F7  
                 __end_of_Lcd_Init 054A                   __end_of_Lcd_Port 0288  
                  __initialization 07F7                       __end_of_main 0611  
           __size_of_initOscilador 0055                             ??_main 003B  
               __size_of_Lcd_Clear 000B                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0070                 ??_I2C_Master_Start 0070  
               ??_I2C_Master_Write 0072                             ?_setup 0070  
                           _ANSELH 0189                          ??_Lcd_Cmd 0071  
          __size_of_Lcd_Write_Char 0039                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
                   __CFG_PWRTE$OFF 0000           _I2C_Master_RepeatedStart 023A  
                 __end_of_get_hall 02C1                   __end_of_get_temp 071F  
                 __end_of_get_time 0687                             ___bmul 025D  
                        ??___lldiv 0078                          ??___lwdiv 0074  
                        ??___lwmod 007C                             _strcat 02C1  
                        ??_sprintf 0023                    Lcd_Set_Cursor@a 0077  
                  Lcd_Set_Cursor@b 0074                    Lcd_Set_Cursor@y 0079  
                  Lcd_Set_Cursor@z 0078            __end_of__initialization 07FC  
                    _initOscilador 049A                  __end_of_Lcd_Clear 025D  
              ___bmul@multiplicand 0070                     __pcstackCOMMON 0070  
                    __end_of_setup 030A                     _Lcd_Set_Cursor 0450  
                        ?_Lcd_Init 0070                          ?_Lcd_Port 0070  
                          ??_setup 007E                         __pbssBANK0 003C  
                   ?_initOscilador 0070                         __pmaintext 05A8  
                          ?___bmul 0070          __size_of_Lcd_Write_String 003D  
           __end_of_Lcd_Set_Cursor 049A                            ?_strcat 0070  
                       ??_Lcd_Init 0074                         ??_Lcd_Port 0070  
                          _SSPCON2 0091                          ?_get_hall 0070  
                          _SSPSTAT 0094                          ?_get_temp 0070  
                        ?_get_time 0070                         __stringtab 0003  
              initOscilador@option 0072                     _Lcd_Write_Char 039E  
                          _Lcd_Cmd 0288                    __size_of___bmul 0011  
                          ___lldiv 054A                            ___lwdiv 03D7  
                          ___lwmod 0336                    ?_Lcd_Set_Cursor 0074  
                          __ptext1 02E5                            __ptext2 049A  
                          __ptext3 04EF                            __ptext4 0368  
                          __ptext5 054A                            __ptext6 0611  
                          __ptext7 0687                            __ptext8 02C1  
                          __ptext9 071F                    __size_of_strcat 0024  
                          _dpowers 0013           __size_of_I2C_Master_Init 0036  
         __size_of_I2C_Master_Read 002C           __size_of_I2C_Master_Wait 0009  
         __size_of_I2C_Master_Stop 0007                    ??_initOscilador 0070  
                       ??_get_hall 0076                            _sprintf 071F  
           __end_of_Lcd_Write_Char 03D7                         ??_get_temp 002D  
                       ??_get_time 0076               end_of_initialization 07FC  
       ??_I2C_Master_RepeatedStart 0070          __size_of_I2C_Master_Start 0007  
        __size_of_I2C_Master_Write 0008                    ___lldiv@divisor 0070  
                  ___lldiv@counter 007D                   I2C_Master_Init@c 0020  
                 I2C_Master_Read@a 0070                          Lcd_Port@a 0070  
                        _PORTBbits 0006                    ?_Lcd_Write_Char 0070  
                Lcd_Write_String@a 0075                  Lcd_Write_String@i 007A  
              get_time@string_time 0020                          _Lcd_Clear 0252  
                   __end_of___bmul 026E                   _Lcd_Write_String 0413  
                   __end_of_strcat 02E5                start_initialization 07F7  
                __size_of_Lcd_Init 005B                  __size_of_Lcd_Port 001A  
                ??_I2C_Master_Init 0024                  ??_I2C_Master_Read 0072  
                ??_I2C_Master_Wait 0070                  ??_I2C_Master_Stop 0070  
         __CFG_FOSC$INTRC_NOCLKOUT 0000                         ?_Lcd_Clear 0070  
                         ??___bmul 0071                    Lcd_Write_Char@a 0074  
                  Lcd_Write_Char@y 0073                           ??_strcat 0071  
                        ___latbits 0002                      __pcstackBANK0 0020  
                __size_of_get_hall 001F                           ?_Lcd_Cmd 0070  
                __size_of_get_temp 0098                  __size_of_get_time 0076  
                      sprintf@flag 0027                        sprintf@prec 0028  
                 _I2C_Master_Start 022C                   _I2C_Master_Write 0241  
                 ___lwdiv@dividend 0072                   ??_Lcd_Set_Cursor 0075  
                  get_temp@decimal 0037                           ?___lldiv 0070  
                         ?___lwdiv 0070                           ?___lwmod 0078  
                        __pstrings 0003                    get_temp@tempLSB 003A  
                  get_temp@tempMSB 0036                   ___lwdiv@quotient 0075  
                         ?_sprintf 0020                     __size_of_setup 0025  
                         Lcd_Cmd@a 0073                        ??_Lcd_Clear 0074  
                      __stringbase 0012                   ??_Lcd_Write_Char 0071  
                         _Lcd_Init 04EF                           _Lcd_Port 026E  
              I2C_Master_Read@temp 0074              __end_of_initOscilador 04EF  
         __end_of_Lcd_Write_String 0450                   __size_of_Lcd_Cmd 001A  
__size_of_I2C_Master_RepeatedStart 0007          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 005E                   __size_of___lwdiv 003C  
                 __size_of___lwmod 0032                 __end_of__stringtab 0013  
                       sprintf@val 0029                    _I2C_Master_Init 0368  
                  _I2C_Master_Read 030A                    _I2C_Master_Wait 0249  
                       strcat@from 0070                    _I2C_Master_Stop 0233  
                  ___lwdiv@divisor 0070                    ___lwdiv@counter 0077  
                         __ptext10 0336                           __ptext11 03D7  
                         __ptext20 0413                           __ptext12 025D  
                         __ptext21 039E                           __ptext13 023A  
                         __ptext22 0450                           __ptext14 02A2  
                         __ptext23 0252                           __ptext15 0241  
                         __ptext24 0288                           __ptext16 0233  
                         __ptext25 026E                           __ptext17 022C  
                         __ptext18 030A                           __ptext19 0249  
                __CFG_BOR4V$BOR40V 0000                           _get_hall 02A2  
                         _get_temp 0687                           _get_time 0611  
                 __size_of_sprintf 00D8                      __size_of_main 0069  
         __end_of_I2C_Master_Start 0233           __end_of_I2C_Master_Write 0249  
               Lcd_Write_Char@temp 0072                          sprintf@ap 0026  
                        sprintf@sp 002B                   ___lwmod@dividend 007A  
                 ___lldiv@dividend 0074                          stringcode 000D  
                       _OSCCONbits 008F            __end_of_I2C_Master_Init 039E  
          __end_of_I2C_Master_Read 0336            __end_of_I2C_Master_Wait 0252  
          __end_of_I2C_Master_Stop 023A                 Lcd_Set_Cursor@temp 007A  
                         sprintf@c 002C                           sprintf@f 0020  
                         strcat@cp 0073                           strcat@to 0072  
                 ___lldiv@quotient 0079                  I2C_Master_Write@d 0070  
                  ___lwmod@divisor 0078                    ___lwmod@counter 007D  
                         stringdir 000D                           stringtab 0003  
                      _SSPCON2bits 0091  
