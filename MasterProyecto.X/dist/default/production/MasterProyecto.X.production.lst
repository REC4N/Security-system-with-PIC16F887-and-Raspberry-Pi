

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Feb 26 13:23:44 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.05
    40                           ; Generated 20/12/2018 GMT
    41                           ; 
    42                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229                           
   230                           	psect	strings
   231  0003                     __pstrings:	
   232  0003                     stringtab:	
   233  0003                     __stringtab:	
   234                           
   235                           ;	String table - string pointers are 1 byte each
   236  0003  1BFF               	btfsc	btemp+1,7
   237  0004  280D               	ljmp	stringcode
   238  0005  1383               	bcf	3,7
   239  0006  187F               	btfsc	btemp+1,0
   240  0007  1783               	bsf	3,7
   241  0008  0800               	movf	0,w
   242  0009  0A84               	incf	4,f
   243  000A  1903               	skipnz
   244  000B  0AFF               	incf	btemp+1,f
   245  000C  0008               	return
   246  000D                     stringcode:	
   247  000D                     stringdir:	
   248  000D  3000               	movlw	high stringdir
   249  000E  008A               	movwf	10
   250  000F  0804               	movf	4,w
   251  0010  0A84               	incf	4,f
   252  0011  0782               	addwf	2,f
   253  0012                     __stringbase:	
   254  0012  3400               	retlw	0
   255  0013                     __end_of__stringtab:	
   256  0013                     _dpowers:	
   257  0013  3401               	retlw	1
   258  0014  3400               	retlw	0
   259  0015  340A               	retlw	10
   260  0016  3400               	retlw	0
   261  0017  3464               	retlw	100
   262  0018  3400               	retlw	0
   263  0019  34E8               	retlw	232
   264  001A  3403               	retlw	3
   265  001B  3410               	retlw	16
   266  001C  3427               	retlw	39
   267  001D                     __end_of_dpowers:	
   268  0005                     _PORTA	set	5
   269  0006                     _PORTB	set	6
   270  0005                     _PORTAbits	set	5
   271  0006                     _PORTBbits	set	6
   272  0013                     _SSPBUF	set	19
   273  0014                     _SSPCON	set	20
   274  0063                     _SSPIF	set	99
   275  005E                     _PEIE	set	94
   276  005F                     _GIE	set	95
   277  0085                     _TRISA	set	133
   278  0086                     _TRISB	set	134
   279  008F                     _OSCCONbits	set	143
   280  0091                     _SSPCON2bits	set	145
   281  0094                     _SSPSTAT	set	148
   282  0093                     _SSPADD	set	147
   283  0091                     _SSPCON2	set	145
   284  0463                     _SSPIE	set	1123
   285  048B                     _RCEN	set	1163
   286  043C                     _TRISC4	set	1084
   287  043B                     _TRISC3	set	1083
   288  0188                     _ANSEL	set	392
   289  0189                     _ANSELH	set	393
   290  001D                     STR_4:	
   291  001D  3454               	retlw	84	;'T'
   292  001E  3472               	retlw	114	;'r'
   293  001F  3469               	retlw	105	;'i'
   294  0020  3470               	retlw	112	;'p'
   295  0021  3420               	retlw	32	;' '
   296  0022  344F               	retlw	79	;'O'
   297  0023  344E               	retlw	78	;'N'
   298  0024  3420               	retlw	32	;' '
   299  0025  3400               	retlw	0
   300  0026                     STR_5:	
   301  0026  3454               	retlw	84	;'T'
   302  0027  3472               	retlw	114	;'r'
   303  0028  3469               	retlw	105	;'i'
   304  0029  3470               	retlw	112	;'p'
   305  002A  3420               	retlw	32	;' '
   306  002B  344F               	retlw	79	;'O'
   307  002C  3446               	retlw	70	;'F'
   308  002D  3446               	retlw	70	;'F'
   309  002E  3400               	retlw	0
   310  002F                     STR_1:	
   311  002F  344B               	retlw	75	;'K'
   312  0030  3465               	retlw	101	;'e'
   313  0031  3479               	retlw	121	;'y'
   314  0032  3420               	retlw	32	;' '
   315  0033  344F               	retlw	79	;'O'
   316  0034  344E               	retlw	78	;'N'
   317  0035  3420               	retlw	32	;' '
   318  0036  3400               	retlw	0
   319  0037                     STR_2:	
   320  0037  344B               	retlw	75	;'K'
   321  0038  3465               	retlw	101	;'e'
   322  0039  3479               	retlw	121	;'y'
   323  003A  3420               	retlw	32	;' '
   324  003B  344F               	retlw	79	;'O'
   325  003C  3446               	retlw	70	;'F'
   326  003D  3446               	retlw	70	;'F'
   327  003E  3400               	retlw	0
   328  003F                     STR_3:	
   329  003F  3432               	retlw	50	;'2'
   330  0040  3433               	retlw	51	;'3'
   331  0041  342E               	retlw	46	;'.'
   332  0042  3435               	retlw	53	;'5'
   333  0043  3430               	retlw	48	;'0'
   334  0044  3400               	retlw	0
   335  0045                     STR_7:	
   336  0045  342E               	retlw	46	;'.'
   337  0046  3425               	retlw	37	;'%'
   338  0047  3464               	retlw	100	;'d'
   339  0048  3430               	retlw	48	;'0'
   340  0049  3400               	retlw	0
   341  004A                     STR_8:	
   342  004A  342E               	retlw	46	;'.'
   343  004B  3425               	retlw	37	;'%'
   344  004C  3464               	retlw	100	;'d'
   345  004D  3400               	retlw	0
   346  004B                     
   347                           ; #config settings
   348  0000                     
   349                           	psect	cinit
   350  07F6                     start_initialization:	
   351  07F6                     __initialization:	
   352                           
   353                           ; Clear objects allocated to BANK0
   354  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   355  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   356  07F8  01BC               	clrf	__pbssBANK0& (0+127)
   357  07F9  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   358  07FA  01BE               	clrf	(__pbssBANK0+2)& (0+127)
   359  07FB  01BF               	clrf	(__pbssBANK0+3)& (0+127)
   360  07FC                     end_of_initialization:	
   361                           ;End of C runtime variable initialization code
   362                           
   363  07FC                     __end_of__initialization:	
   364  07FC  0183               	clrf	3
   365  07FD  120A  118A  2E5F   	ljmp	_main	;jump to C main() function
   366                           
   367                           	psect	bssBANK0
   368  003C                     __pbssBANK0:	
   369  003C                     _trip:	
   370  003C                     	ds	1
   371  003D                     _key:	
   372  003D                     	ds	1
   373  003E                     _temp:	
   374  003E                     	ds	1
   375  003F                     _time:	
   376  003F                     	ds	1
   377                           
   378                           	psect	cstackCOMMON
   379  0070                     __pcstackCOMMON:	
   380  0070                     ?_setup:	
   381  0070                     ?_get_time:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_get_temp:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ?_get_hall:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ?_get_tripwire:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ?_strcat:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ?_I2C_Master_Wait:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ??_I2C_Master_Wait:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_I2C_Master_Start:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ??_I2C_Master_Start:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_I2C_Master_RepeatedStart:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ??_I2C_Master_RepeatedStart:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_I2C_Master_Stop:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ??_I2C_Master_Stop:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_I2C_Master_Write:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_Lcd_Port:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ??_Lcd_Port:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_Lcd_Cmd:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_Lcd_Clear:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_Lcd_Init:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_Lcd_Write_Char:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_initOscilador:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ??_initOscilador:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_main:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?___bmul:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_strcmp:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_I2C_Master_Read:	
   457                           ; 2 bytes @ 0x0
   458                           
   459  0070                     ?___lwdiv:	
   460                           ; 2 bytes @ 0x0
   461                           
   462  0070                     ?___lldiv:	
   463                           ; 2 bytes @ 0x0
   464                           
   465  0070                     Lcd_Port@a:	
   466                           ; 4 bytes @ 0x0
   467                           
   468  0070                     ___bmul@multiplicand:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     strcat@from:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     strcmp@s2:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     I2C_Master_Write@d:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     I2C_Master_Read@a:	
   481                           ; 2 bytes @ 0x0
   482                           
   483  0070                     ___lwdiv@divisor:	
   484                           ; 2 bytes @ 0x0
   485                           
   486  0070                     ___lldiv@divisor:	
   487                           ; 2 bytes @ 0x0
   488                           
   489                           
   490                           ; 4 bytes @ 0x0
   491  0070                     	ds	1
   492  0071                     ??_strcat:	
   493  0071                     ??_Lcd_Cmd:	
   494                           ; 1 bytes @ 0x1
   495                           
   496  0071                     ??_Lcd_Write_Char:	
   497                           ; 1 bytes @ 0x1
   498                           
   499  0071                     ??___bmul:	
   500                           ; 1 bytes @ 0x1
   501                           
   502                           
   503                           ; 1 bytes @ 0x1
   504  0071                     	ds	1
   505  0072                     ??_strcmp:	
   506  0072                     ??_I2C_Master_Write:	
   507                           ; 1 bytes @ 0x2
   508                           
   509  0072                     ??_I2C_Master_Read:	
   510                           ; 1 bytes @ 0x2
   511                           
   512  0072                     Lcd_Write_Char@temp:	
   513                           ; 1 bytes @ 0x2
   514                           
   515  0072                     initOscilador@option:	
   516                           ; 1 bytes @ 0x2
   517                           
   518  0072                     ___bmul@product:	
   519                           ; 1 bytes @ 0x2
   520                           
   521  0072                     strcat@to:	
   522                           ; 1 bytes @ 0x2
   523                           
   524  0072                     ___lwdiv@dividend:	
   525                           ; 1 bytes @ 0x2
   526                           
   527                           
   528                           ; 2 bytes @ 0x2
   529  0072                     	ds	1
   530  0073                     Lcd_Cmd@a:	
   531  0073                     Lcd_Write_Char@y:	
   532                           ; 1 bytes @ 0x3
   533                           
   534  0073                     ___bmul@multiplier:	
   535                           ; 1 bytes @ 0x3
   536                           
   537  0073                     strcat@cp:	
   538                           ; 1 bytes @ 0x3
   539                           
   540                           
   541                           ; 1 bytes @ 0x3
   542  0073                     	ds	1
   543  0074                     ??_Lcd_Clear:	
   544  0074                     ?_Lcd_Set_Cursor:	
   545                           ; 1 bytes @ 0x4
   546                           
   547  0074                     ??_Lcd_Init:	
   548                           ; 1 bytes @ 0x4
   549                           
   550  0074                     ??___lwdiv:	
   551                           ; 1 bytes @ 0x4
   552                           
   553  0074                     Lcd_Set_Cursor@b:	
   554                           ; 1 bytes @ 0x4
   555                           
   556  0074                     Lcd_Write_Char@a:	
   557                           ; 1 bytes @ 0x4
   558                           
   559  0074                     I2C_Master_Read@temp:	
   560                           ; 1 bytes @ 0x4
   561                           
   562  0074                     ___lldiv@dividend:	
   563                           ; 2 bytes @ 0x4
   564                           
   565                           
   566                           ; 4 bytes @ 0x4
   567  0074                     	ds	1
   568  0075                     ??_Lcd_Set_Cursor:	
   569  0075                     ?_Lcd_Write_String:	
   570                           ; 1 bytes @ 0x5
   571                           
   572  0075                     strcmp@r:	
   573                           ; 1 bytes @ 0x5
   574                           
   575  0075                     Lcd_Write_String@a:	
   576                           ; 1 bytes @ 0x5
   577                           
   578  0075                     ___lwdiv@quotient:	
   579                           ; 2 bytes @ 0x5
   580                           
   581                           
   582                           ; 2 bytes @ 0x5
   583  0075                     	ds	1
   584  0076                     ??_get_time:	
   585  0076                     ??_get_hall:	
   586                           ; 1 bytes @ 0x6
   587                           
   588  0076                     ??_get_tripwire:	
   589                           ; 1 bytes @ 0x6
   590                           
   591  0076                     strcmp@s1:	
   592                           ; 1 bytes @ 0x6
   593                           
   594                           
   595                           ; 1 bytes @ 0x6
   596  0076                     	ds	1
   597  0077                     ??_Lcd_Write_String:	
   598  0077                     Lcd_Set_Cursor@a:	
   599                           ; 1 bytes @ 0x7
   600                           
   601  0077                     get_hall@key:	
   602                           ; 1 bytes @ 0x7
   603                           
   604  0077                     get_tripwire@trip:	
   605                           ; 1 bytes @ 0x7
   606                           
   607  0077                     ___lwdiv@counter:	
   608                           ; 1 bytes @ 0x7
   609                           
   610                           
   611                           ; 1 bytes @ 0x7
   612  0077                     	ds	1
   613  0078                     ??___lldiv:	
   614  0078                     ?___lwmod:	
   615                           ; 1 bytes @ 0x8
   616                           
   617  0078                     Lcd_Set_Cursor@z:	
   618                           ; 2 bytes @ 0x8
   619                           
   620  0078                     ___lwmod@divisor:	
   621                           ; 1 bytes @ 0x8
   622                           
   623                           
   624                           ; 2 bytes @ 0x8
   625  0078                     	ds	1
   626  0079                     Lcd_Set_Cursor@y:	
   627  0079                     ___lldiv@quotient:	
   628                           ; 1 bytes @ 0x9
   629                           
   630                           
   631                           ; 4 bytes @ 0x9
   632  0079                     	ds	1
   633  007A                     Lcd_Set_Cursor@temp:	
   634  007A                     Lcd_Write_String@i:	
   635                           ; 1 bytes @ 0xA
   636                           
   637  007A                     ___lwmod@dividend:	
   638                           ; 2 bytes @ 0xA
   639                           
   640                           
   641                           ; 2 bytes @ 0xA
   642  007A                     	ds	2
   643  007C                     ??___lwmod:	
   644                           
   645                           ; 1 bytes @ 0xC
   646  007C                     	ds	1
   647  007D                     ___lldiv@counter:	
   648  007D                     ___lwmod@counter:	
   649                           ; 1 bytes @ 0xD
   650                           
   651                           
   652                           ; 1 bytes @ 0xD
   653  007D                     	ds	1
   654  007E                     ??_setup:	
   655                           
   656                           	psect	cstackBANK0
   657  0020                     __pcstackBANK0:	
   658                           ; 1 bytes @ 0xE
   659                           
   660  0020                     ?_I2C_Master_Init:	
   661  0020                     ?_sprintf:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0020                     sprintf@f:	
   665                           ; 2 bytes @ 0x0
   666                           
   667  0020                     I2C_Master_Init@c:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0020                     get_time@string_time:	
   671                           ; 4 bytes @ 0x0
   672                           
   673                           
   674                           ; 6 bytes @ 0x0
   675  0020                     	ds	3
   676  0023                     ??_sprintf:	
   677                           
   678                           ; 1 bytes @ 0x3
   679  0023                     	ds	1
   680  0024                     ??_I2C_Master_Init:	
   681                           
   682                           ; 1 bytes @ 0x4
   683  0024                     	ds	2
   684  0026                     get_time@hour:	
   685  0026                     sprintf@ap:	
   686                           ; 1 bytes @ 0x6
   687                           
   688                           
   689                           ; 1 bytes @ 0x6
   690  0026                     	ds	1
   691  0027                     get_time@min:	
   692  0027                     sprintf@flag:	
   693                           ; 1 bytes @ 0x7
   694                           
   695                           
   696                           ; 1 bytes @ 0x7
   697  0027                     	ds	1
   698  0028                     sprintf@prec:	
   699                           
   700                           ; 1 bytes @ 0x8
   701  0028                     	ds	1
   702  0029                     sprintf@val:	
   703                           
   704                           ; 2 bytes @ 0x9
   705  0029                     	ds	2
   706  002B                     sprintf@sp:	
   707                           
   708                           ; 1 bytes @ 0xB
   709  002B                     	ds	1
   710  002C                     sprintf@c:	
   711                           
   712                           ; 1 bytes @ 0xC
   713  002C                     	ds	1
   714  002D                     ??_get_temp:	
   715                           
   716                           ; 1 bytes @ 0xD
   717  002D                     	ds	3
   718  0030                     get_temp@temperature:	
   719                           
   720                           ; 6 bytes @ 0x10
   721  0030                     	ds	6
   722  0036                     get_temp@decimal:	
   723                           
   724                           ; 3 bytes @ 0x16
   725  0036                     	ds	3
   726  0039                     get_temp@tempMSB:	
   727                           
   728                           ; 1 bytes @ 0x19
   729  0039                     	ds	1
   730  003A                     get_temp@tempLSB:	
   731                           
   732                           ; 1 bytes @ 0x1A
   733  003A                     	ds	1
   734  003B                     ??_main:	
   735                           
   736                           ; 1 bytes @ 0x1B
   737  003B                     	ds	1
   738                           
   739                           	psect	maintext
   740  065F                     __pmaintext:	
   741 ;;
   742 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   743 ;;
   744 ;; *************** function _main *****************
   745 ;; Defined at:
   746 ;;		line 49 in file "mainMaster.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   755 ;; Tracked objects:
   756 ;;		On entry : B00/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   760 ;;      Params:         0       0       0       0       0
   761 ;;      Locals:         0       0       0       0       0
   762 ;;      Temps:          0       1       0       0       0
   763 ;;      Totals:         0       1       0       0       0
   764 ;;Total ram usage:        1 bytes
   765 ;; Hardware stack levels required when called:    4
   766 ;; This function calls:
   767 ;;		_Lcd_Clear
   768 ;;		_Lcd_Set_Cursor
   769 ;;		_Lcd_Write_Char
   770 ;;		_Lcd_Write_String
   771 ;;		_get_hall
   772 ;;		_get_temp
   773 ;;		_get_time
   774 ;;		_get_tripwire
   775 ;;		_setup
   776 ;;		_strcmp
   777 ;; This function is called by:
   778 ;;		Startup code after reset
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           
   783                           ;psect for function _main
   784  065F                     _main:	
   785                           
   786                           ;mainMaster.c: 50:     setup();
   787                           
   788                           ;incstack = 0
   789                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   790  065F  120A  118A  225F  120A  118A  	fcall	_setup
   791                           
   792                           ;mainMaster.c: 51:     Lcd_Clear();
   793  0664  120A  118A  21AD  120A  118A  	fcall	_Lcd_Clear
   794  0669                     l1736:	
   795                           
   796                           ;mainMaster.c: 54:         time = get_time();
   797  0669  120A  118A  254C  120A  118A  	fcall	_get_time
   798  066E  1283               	bcf	3,5	;RP0=0, select bank0
   799  066F  1303               	bcf	3,6	;RP1=0, select bank0
   800  0670  00BB               	movwf	??_main
   801  0671  083B               	movf	??_main,w
   802  0672  00BF               	movwf	_time
   803                           
   804                           ;mainMaster.c: 55:         Lcd_Set_Cursor(1,1);
   805  0673  01F4               	clrf	Lcd_Set_Cursor@b
   806  0674  0AF4               	incf	Lcd_Set_Cursor@b,f
   807  0675  3001               	movlw	1
   808  0676  120A  118A  23F4  120A  118A  	fcall	_Lcd_Set_Cursor
   809                           
   810                           ;mainMaster.c: 56:         Lcd_Write_String(time);
   811  067B  1283               	bcf	3,5	;RP0=0, select bank0
   812  067C  1303               	bcf	3,6	;RP1=0, select bank0
   813  067D  083F               	movf	_time,w
   814  067E  00F5               	movwf	Lcd_Write_String@a
   815  067F  3000               	movlw	0
   816  0680  00F6               	movwf	Lcd_Write_String@a+1
   817  0681  120A  118A  23B7  120A  118A  	fcall	_Lcd_Write_String
   818                           
   819                           ;mainMaster.c: 57:         temp = get_temp();
   820  0686  120A  118A  25C2  120A  118A  	fcall	_get_temp
   821  068B  1283               	bcf	3,5	;RP0=0, select bank0
   822  068C  1303               	bcf	3,6	;RP1=0, select bank0
   823  068D  00BB               	movwf	??_main
   824  068E  083B               	movf	??_main,w
   825  068F  00BE               	movwf	_temp
   826                           
   827                           ;mainMaster.c: 58:         Lcd_Set_Cursor(2,1);
   828  0690  01F4               	clrf	Lcd_Set_Cursor@b
   829  0691  0AF4               	incf	Lcd_Set_Cursor@b,f
   830  0692  3002               	movlw	2
   831  0693  120A  118A  23F4  120A  118A  	fcall	_Lcd_Set_Cursor
   832                           
   833                           ;mainMaster.c: 59:         Lcd_Write_String(temp);
   834  0698  1283               	bcf	3,5	;RP0=0, select bank0
   835  0699  1303               	bcf	3,6	;RP1=0, select bank0
   836  069A  083E               	movf	_temp,w
   837  069B  00F5               	movwf	Lcd_Write_String@a
   838  069C  3000               	movlw	0
   839  069D  00F6               	movwf	Lcd_Write_String@a+1
   840  069E  120A  118A  23B7  120A  118A  	fcall	_Lcd_Write_String
   841                           
   842                           ;mainMaster.c: 60:         Lcd_Write_Char(223);
   843  06A3  30DF               	movlw	223
   844  06A4  120A  118A  2342  120A  118A  	fcall	_Lcd_Write_Char
   845                           
   846                           ;mainMaster.c: 61:         Lcd_Write_Char('C');
   847  06A9  3043               	movlw	67
   848  06AA  120A  118A  2342  120A  118A  	fcall	_Lcd_Write_Char
   849                           
   850                           ;mainMaster.c: 62:         key = get_hall();
   851  06AF  120A  118A  21FD  120A  118A  	fcall	_get_hall
   852  06B4  1283               	bcf	3,5	;RP0=0, select bank0
   853  06B5  1303               	bcf	3,6	;RP1=0, select bank0
   854  06B6  00BB               	movwf	??_main
   855  06B7  083B               	movf	??_main,w
   856  06B8  00BD               	movwf	_key
   857                           
   858                           ;mainMaster.c: 63:         Lcd_Set_Cursor(1,7);
   859  06B9  3007               	movlw	7
   860  06BA  00BB               	movwf	??_main
   861  06BB  083B               	movf	??_main,w
   862  06BC  00F4               	movwf	Lcd_Set_Cursor@b
   863  06BD  3001               	movlw	1
   864  06BE  120A  118A  23F4  120A  118A  	fcall	_Lcd_Set_Cursor
   865                           
   866                           ;mainMaster.c: 64:         if (key == 1){
   867  06C3  1283               	bcf	3,5	;RP0=0, select bank0
   868  06C4  1303               	bcf	3,6	;RP1=0, select bank0
   869  06C5  033D               	decf	_key,w
   870  06C6  1D03               	btfss	3,2
   871  06C7  2ECA               	goto	l1760
   872                           
   873                           ;mainMaster.c: 65:             Lcd_Write_String("Key ON ");
   874  06C8  301D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   875  06C9  2ECB               	goto	L1
   876  06CA                     l1760:	
   877                           ;mainMaster.c: 66:         } else {
   878                           
   879                           
   880                           ;mainMaster.c: 67:             Lcd_Write_String("Key OFF");
   881  06CA  3025               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   882  06CB                     L1:	
   883  06CB  00F5               	movwf	Lcd_Write_String@a
   884  06CC  3080               	movlw	128
   885  06CD  00F6               	movwf	Lcd_Write_String@a+1
   886  06CE  120A  118A  23B7  120A  118A  	fcall	_Lcd_Write_String
   887                           
   888                           ;mainMaster.c: 70:         if (strcmp(temp,"23.50") > 0){
   889                           
   890                           ;mainMaster.c: 68:         }
   891  06D3  302D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   892  06D4  1283               	bcf	3,5	;RP0=0, select bank0
   893  06D5  1303               	bcf	3,6	;RP1=0, select bank0
   894  06D6  00BB               	movwf	??_main
   895  06D7  083B               	movf	??_main,w
   896  06D8  00F0               	movwf	strcmp@s2
   897  06D9  083E               	movf	_temp,w
   898  06DA  120A  118A  2284  120A  118A  	fcall	_strcmp
   899  06DF  0871               	movf	?_strcmp+1,w
   900  06E0  3A80               	xorlw	128
   901  06E1  00FF               	movwf	127
   902  06E2  3080               	movlw	128
   903  06E3  027F               	subwf	127,w
   904  06E4  1D03               	skipz
   905  06E5  2EE8               	goto	u1115
   906  06E6  3001               	movlw	1
   907  06E7  0270               	subwf	?_strcmp,w
   908  06E8                     u1115:	
   909  06E8  1C03               	skipc
   910  06E9  2EEE               	goto	l162
   911                           
   912                           ;mainMaster.c: 71:             PORTAbits.RA0 = 1;
   913  06EA  1283               	bcf	3,5	;RP0=0, select bank0
   914  06EB  1303               	bcf	3,6	;RP1=0, select bank0
   915  06EC  1405               	bsf	5,0	;volatile
   916                           
   917                           ;mainMaster.c: 72:         } else {
   918  06ED  2EF1               	goto	l1764
   919  06EE                     l162:	
   920                           
   921                           ;mainMaster.c: 73:             PORTAbits.RA0 = 0;
   922  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   923  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   924  06F0  1005               	bcf	5,0	;volatile
   925  06F1                     l1764:	
   926                           
   927                           ;mainMaster.c: 75:         trip = get_tripwire();
   928  06F1  120A  118A  221C  120A  118A  	fcall	_get_tripwire
   929  06F6  1283               	bcf	3,5	;RP0=0, select bank0
   930  06F7  1303               	bcf	3,6	;RP1=0, select bank0
   931  06F8  00BB               	movwf	??_main
   932  06F9  083B               	movf	??_main,w
   933  06FA  00BC               	movwf	_trip
   934                           
   935                           ;mainMaster.c: 76:         Lcd_Set_Cursor(2,9);
   936  06FB  3009               	movlw	9
   937  06FC  00BB               	movwf	??_main
   938  06FD  083B               	movf	??_main,w
   939  06FE  00F4               	movwf	Lcd_Set_Cursor@b
   940  06FF  3002               	movlw	2
   941  0700  120A  118A  23F4  120A  118A  	fcall	_Lcd_Set_Cursor
   942                           
   943                           ;mainMaster.c: 77:         if (trip == 1){
   944  0705  1283               	bcf	3,5	;RP0=0, select bank0
   945  0706  1303               	bcf	3,6	;RP1=0, select bank0
   946  0707  033C               	decf	_trip,w
   947  0708  1D03               	btfss	3,2
   948  0709  2F14               	goto	l1770
   949                           
   950                           ;mainMaster.c: 78:             Lcd_Write_String("Trip ON ");
   951  070A  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   952  070B  00F5               	movwf	Lcd_Write_String@a
   953  070C  3080               	movlw	128
   954  070D  00F6               	movwf	Lcd_Write_String@a+1
   955  070E  120A  118A  23B7  120A  118A  	fcall	_Lcd_Write_String
   956                           
   957                           ;mainMaster.c: 79:         } else {
   958  0713  2E69               	goto	l1736
   959  0714                     l1770:	
   960                           
   961                           ;mainMaster.c: 80:             Lcd_Write_String("Trip OFF");
   962  0714  3014               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   963  0715  00F5               	movwf	Lcd_Write_String@a
   964  0716  3080               	movlw	128
   965  0717  00F6               	movwf	Lcd_Write_String@a+1
   966  0718  120A  118A  23B7  120A  118A  	fcall	_Lcd_Write_String
   967  071D  2E69               	goto	l1736
   968  071E                     __end_of_main:	
   969                           
   970                           	psect	text1
   971  0284                     __ptext1:	
   972 ;; *************** function _strcmp *****************
   973 ;; Defined at:
   974 ;;		line 33 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcmp.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  s1              1    wreg     PTR const unsigned char 
   977 ;;		 -> NULL(0), get_temp@temperature(6), 
   978 ;;  s2              1    0[COMMON] PTR const unsigned char 
   979 ;;		 -> STR_3(6), 
   980 ;; Auto vars:     Size  Location     Type
   981 ;;  s1              1    6[COMMON] PTR const unsigned char 
   982 ;;		 -> NULL(0), get_temp@temperature(6), 
   983 ;;  r               1    5[COMMON] char 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  2    0[COMMON] int 
   986 ;; Registers used:
   987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   993 ;;      Params:         2       0       0       0       0
   994 ;;      Locals:         2       0       0       0       0
   995 ;;      Temps:          3       0       0       0       0
   996 ;;      Totals:         7       0       0       0       0
   997 ;;Total ram usage:        7 bytes
   998 ;; Hardware stack levels used:    2
   999 ;; This function calls:
  1000 ;;		Nothing
  1001 ;; This function is called by:
  1002 ;;		_main
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           
  1007                           ;psect for function _strcmp
  1008  0284                     _strcmp:	
  1009                           
  1010                           ;incstack = 0
  1011                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+pclath]
  1012                           ;strcmp@s1 stored from wreg
  1013  0284  00F6               	movwf	strcmp@s1
  1014  0285  2A93               	goto	l1714
  1015  0286                     l1716:	
  1016  0286  0876               	movf	strcmp@s1,w
  1017  0287  0084               	movwf	4
  1018  0288  0800               	movf	0,w
  1019  0289  1903               	btfsc	3,2
  1020  028A  2AA8               	goto	l1718
  1021  028B  3001               	movlw	1
  1022  028C  00F2               	movwf	??_strcmp
  1023  028D  0872               	movf	??_strcmp,w
  1024  028E  07F6               	addwf	strcmp@s1,f
  1025  028F  3001               	movlw	1
  1026  0290  00F2               	movwf	??_strcmp
  1027  0291  0872               	movf	??_strcmp,w
  1028  0292  07F0               	addwf	strcmp@s2,f
  1029  0293                     l1714:	
  1030  0293  0870               	movf	strcmp@s2,w
  1031  0294  0084               	movwf	4
  1032  0295  120A  118A  200D  120A  118A  	fcall	stringdir
  1033  029A  00F2               	movwf	??_strcmp
  1034  029B  0876               	movf	strcmp@s1,w
  1035  029C  0084               	movwf	4
  1036  029D  1383               	bcf	3,7	;select IRP bank0
  1037  029E  0800               	movf	0,w
  1038  029F  00F3               	movwf	??_strcmp+1
  1039  02A0  0872               	movf	??_strcmp,w
  1040  02A1  0273               	subwf	??_strcmp+1,w
  1041  02A2  00F4               	movwf	??_strcmp+2
  1042  02A3  0874               	movf	??_strcmp+2,w
  1043  02A4  00F5               	movwf	strcmp@r
  1044  02A5  0875               	movf	strcmp@r,w
  1045  02A6  1903               	btfsc	3,2
  1046  02A7  2A86               	goto	l1716
  1047  02A8                     l1718:	
  1048  02A8  0875               	movf	strcmp@r,w
  1049  02A9  00F0               	movwf	?_strcmp
  1050  02AA  01F1               	clrf	?_strcmp+1
  1051  02AB  1BF0               	btfsc	?_strcmp,7
  1052  02AC  03F1               	decf	?_strcmp+1,f
  1053  02AD  0008               	return
  1054  02AE                     __end_of_strcmp:	
  1055                           
  1056                           	psect	text2
  1057  025F                     __ptext2:	
  1058 ;; *************** function _setup *****************
  1059 ;; Defined at:
  1060 ;;		line 86 in file "mainMaster.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;		None
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;		None
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1074 ;;      Params:         0       0       0       0       0
  1075 ;;      Locals:         0       0       0       0       0
  1076 ;;      Temps:          0       0       0       0       0
  1077 ;;      Totals:         0       0       0       0       0
  1078 ;;Total ram usage:        0 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; Hardware stack levels required when called:    3
  1081 ;; This function calls:
  1082 ;;		_I2C_Master_Init
  1083 ;;		_Lcd_Init
  1084 ;;		_initOscilador
  1085 ;; This function is called by:
  1086 ;;		_main
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           
  1091                           ;psect for function _setup
  1092  025F                     _setup:	
  1093                           
  1094                           ;mainMaster.c: 87:     initOscilador(7);
  1095                           
  1096                           ;incstack = 0
  1097                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1098  025F  3007               	movlw	7
  1099  0260  120A  118A  243E  120A  118A  	fcall	_initOscilador
  1100                           
  1101                           ;mainMaster.c: 88:     ANSELH = 0;
  1102  0265  1683               	bsf	3,5	;RP0=1, select bank3
  1103  0266  1703               	bsf	3,6	;RP1=1, select bank3
  1104  0267  0189               	clrf	9	;volatile
  1105                           
  1106                           ;mainMaster.c: 89:     ANSEL = 0;
  1107  0268  0188               	clrf	8	;volatile
  1108                           
  1109                           ;mainMaster.c: 90:     TRISB = 0;
  1110  0269  1683               	bsf	3,5	;RP0=1, select bank1
  1111  026A  1303               	bcf	3,6	;RP1=0, select bank1
  1112  026B  0186               	clrf	6	;volatile
  1113                           
  1114                           ;mainMaster.c: 91:     TRISA = 0;
  1115  026C  0185               	clrf	5	;volatile
  1116                           
  1117                           ;mainMaster.c: 92:     PORTB = 0;
  1118  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1119  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1120  026F  0186               	clrf	6	;volatile
  1121                           
  1122                           ;mainMaster.c: 93:     PORTA = 0;
  1123  0270  0185               	clrf	5	;volatile
  1124                           
  1125                           ;mainMaster.c: 94:     Lcd_Init();
  1126  0271  120A  118A  2493  120A  118A  	fcall	_Lcd_Init
  1127                           
  1128                           ;mainMaster.c: 95:     I2C_Master_Init(100000);
  1129  0276  3000               	movlw	0
  1130  0277  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0278  1303               	bcf	3,6	;RP1=0, select bank0
  1132  0279  00A3               	movwf	I2C_Master_Init@c+3
  1133  027A  3001               	movlw	1
  1134  027B  00A2               	movwf	I2C_Master_Init@c+2
  1135  027C  3086               	movlw	134
  1136  027D  00A1               	movwf	I2C_Master_Init@c+1
  1137  027E  30A0               	movlw	160
  1138  027F  00A0               	movwf	I2C_Master_Init@c
  1139  0280  120A  118A  230C   	fcall	_I2C_Master_Init
  1140  0283  0008               	return
  1141  0284                     __end_of_setup:	
  1142                           
  1143                           	psect	text3
  1144  043E                     __ptext3:	
  1145 ;; *************** function _initOscilador *****************
  1146 ;; Defined at:
  1147 ;;		line 11 in file "./Oscilador.h"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  option          1    wreg     unsigned char 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  option          1    2[COMMON] unsigned char 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         0       0       0       0       0
  1162 ;;      Locals:         1       0       0       0       0
  1163 ;;      Temps:          2       0       0       0       0
  1164 ;;      Totals:         3       0       0       0       0
  1165 ;;Total ram usage:        3 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_setup
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function _initOscilador
  1176  043E                     _initOscilador:	
  1177                           
  1178                           ;incstack = 0
  1179                           ; Regs used in _initOscilador: [wreg-fsr0h+status,2+status,0]
  1180                           ;initOscilador@option stored from wreg
  1181  043E  00F2               	movwf	initOscilador@option
  1182                           
  1183                           ;./Oscilador.h: 13: 
  1184  043F  2C6F               	goto	l1522
  1185  0440                     l1502:	
  1186                           
  1187                           ;./Oscilador.h: 16:         case 3:
  1188  0440  308F               	movlw	-113
  1189  0441  1683               	bsf	3,5	;RP0=1, select bank1
  1190  0442  1303               	bcf	3,6	;RP1=0, select bank1
  1191  0443  058F               	andwf	15,f	;volatile
  1192                           
  1193                           ;./Oscilador.h: 17: 
  1194  0444  2C91               	goto	l137
  1195  0445                     l1504:	
  1196                           
  1197                           ;./Oscilador.h: 20:         case 4:
  1198  0445  1683               	bsf	3,5	;RP0=1, select bank1
  1199  0446  1303               	bcf	3,6	;RP1=0, select bank1
  1200  0447  080F               	movf	15,w	;volatile
  1201  0448  398F               	andlw	-113
  1202  0449  3810               	iorlw	16
  1203  044A  2C68               	goto	L6
  1204  044B                     l1506:	
  1205                           ;./Oscilador.h: 21: 
  1206                           
  1207                           
  1208                           ;./Oscilador.h: 24:         case 5:
  1209  044B  1683               	bsf	3,5	;RP0=1, select bank1
  1210  044C  1303               	bcf	3,6	;RP1=0, select bank1
  1211  044D  080F               	movf	15,w	;volatile
  1212  044E  398F               	andlw	-113
  1213  044F  3820               	iorlw	32
  1214  0450  2C68               	goto	L6
  1215  0451                     l1508:	
  1216                           ;./Oscilador.h: 25: 
  1217                           
  1218                           
  1219                           ;./Oscilador.h: 28:         case 6:
  1220  0451  1683               	bsf	3,5	;RP0=1, select bank1
  1221  0452  1303               	bcf	3,6	;RP1=0, select bank1
  1222  0453  080F               	movf	15,w	;volatile
  1223  0454  398F               	andlw	-113
  1224  0455  3830               	iorlw	48
  1225  0456  2C68               	goto	L6
  1226  0457                     l1510:	
  1227                           ;./Oscilador.h: 29: 
  1228                           
  1229                           
  1230                           ;./Oscilador.h: 32:         case 7:
  1231  0457  1683               	bsf	3,5	;RP0=1, select bank1
  1232  0458  1303               	bcf	3,6	;RP1=0, select bank1
  1233  0459  080F               	movf	15,w	;volatile
  1234  045A  398F               	andlw	-113
  1235  045B  3840               	iorlw	64
  1236  045C  2C68               	goto	L6
  1237  045D                     l1512:	
  1238                           ;./Oscilador.h: 33: 
  1239                           
  1240                           
  1241                           ;./Oscilador.h: 36:         default:
  1242  045D  1683               	bsf	3,5	;RP0=1, select bank1
  1243  045E  1303               	bcf	3,6	;RP1=0, select bank1
  1244  045F  080F               	movf	15,w	;volatile
  1245  0460  398F               	andlw	-113
  1246  0461  3850               	iorlw	80
  1247  0462  2C68               	goto	L6
  1248  0463                     l1514:	
  1249                           ;./Oscilador.h: 37: 
  1250                           
  1251                           
  1252                           ;./Oscilador.h: 40:     }
  1253  0463  1683               	bsf	3,5	;RP0=1, select bank1
  1254  0464  1303               	bcf	3,6	;RP1=0, select bank1
  1255  0465  080F               	movf	15,w	;volatile
  1256  0466  398F               	andlw	-113
  1257  0467  3860               	iorlw	96
  1258  0468                     L6:	
  1259  0468  008F               	movwf	15	;volatile
  1260                           
  1261                           ;./Oscilador.h: 41:     OSCCONbits.SCS = 1;
  1262  0469  2C91               	goto	l137
  1263  046A                     l1516:	
  1264  046A                     l1518:	
  1265  046A  3070               	movlw	112
  1266  046B  1683               	bsf	3,5	;RP0=1, select bank1
  1267  046C  1303               	bcf	3,6	;RP1=0, select bank1
  1268  046D  048F               	iorwf	15,f	;volatile
  1269  046E  2C91               	goto	l137
  1270  046F                     l1522:	
  1271  046F  0872               	movf	initOscilador@option,w
  1272  0470  00F0               	movwf	??_initOscilador
  1273  0471  01F1               	clrf	??_initOscilador+1
  1274                           
  1275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1276                           ; Switch size 1, requested type "simple"
  1277                           ; Number of cases is 1, Range of values is 0 to 0
  1278                           ; switch strategies available:
  1279                           ; Name         Instructions Cycles
  1280                           ; simple_byte            4     3 (average)
  1281                           ; direct_byte           11     8 (fixed)
  1282                           ; jumptable            260     6 (fixed)
  1283                           ;	Chosen strategy is simple_byte
  1284  0472  0871               	movf	??_initOscilador+1,w
  1285  0473  3A00               	xorlw	0	; case 0
  1286  0474  1903               	skipnz
  1287  0475  2C77               	goto	l1818
  1288  0476  2C6A               	goto	l1518
  1289  0477                     l1818:	
  1290                           
  1291                           ; Switch size 1, requested type "simple"
  1292                           ; Number of cases is 8, Range of values is 0 to 7
  1293                           ; switch strategies available:
  1294                           ; Name         Instructions Cycles
  1295                           ; simple_byte           25    13 (average)
  1296                           ; direct_byte           32     8 (fixed)
  1297                           ; jumptable            260     6 (fixed)
  1298                           ;	Chosen strategy is simple_byte
  1299  0477  0870               	movf	??_initOscilador,w
  1300  0478  3A00               	xorlw	0	; case 0
  1301  0479  1903               	skipnz
  1302  047A  2C40               	goto	l1502
  1303  047B  3A01               	xorlw	1	; case 1
  1304  047C  1903               	skipnz
  1305  047D  2C45               	goto	l1504
  1306  047E  3A03               	xorlw	3	; case 2
  1307  047F  1903               	skipnz
  1308  0480  2C4B               	goto	l1506
  1309  0481  3A01               	xorlw	1	; case 3
  1310  0482  1903               	skipnz
  1311  0483  2C51               	goto	l1508
  1312  0484  3A07               	xorlw	7	; case 4
  1313  0485  1903               	skipnz
  1314  0486  2C57               	goto	l1510
  1315  0487  3A01               	xorlw	1	; case 5
  1316  0488  1903               	skipnz
  1317  0489  2C5D               	goto	l1512
  1318  048A  3A03               	xorlw	3	; case 6
  1319  048B  1903               	skipnz
  1320  048C  2C63               	goto	l1514
  1321  048D  3A01               	xorlw	1	; case 7
  1322  048E  1903               	skipnz
  1323  048F  2C6A               	goto	l1516
  1324  0490  2C6A               	goto	l1518
  1325  0491                     l137:	
  1326  0491  140F               	bsf	15,0	;volatile
  1327  0492  0008               	return
  1328  0493                     __end_of_initOscilador:	
  1329                           
  1330                           	psect	text4
  1331  0493                     __ptext4:	
  1332 ;; *************** function _Lcd_Init *****************
  1333 ;; Defined at:
  1334 ;;		line 65 in file "./LCD4bits.h"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, status,2, status,0, pclath, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1348 ;;      Params:         0       0       0       0       0
  1349 ;;      Locals:         0       0       0       0       0
  1350 ;;      Temps:          2       0       0       0       0
  1351 ;;      Totals:         2       0       0       0       0
  1352 ;;Total ram usage:        2 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    2
  1355 ;; This function calls:
  1356 ;;		_Lcd_Cmd
  1357 ;;		_Lcd_Port
  1358 ;; This function is called by:
  1359 ;;		_setup
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           
  1364                           ;psect for function _Lcd_Init
  1365  0493                     _Lcd_Init:	
  1366                           
  1367                           ;./LCD4bits.h: 67:   Lcd_Port(0x00);
  1368                           
  1369                           ;incstack = 0
  1370                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1371  0493  3000               	movlw	0
  1372  0494  120A  118A  21C9  120A  118A  	fcall	_Lcd_Port
  1373                           
  1374                           ;./LCD4bits.h: 68:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1375  0499  3034               	movlw	52
  1376  049A  00F5               	movwf	??_Lcd_Init+1
  1377  049B  30F1               	movlw	241
  1378  049C  00F4               	movwf	??_Lcd_Init
  1379  049D                     u1137:	
  1380  049D  0BF4               	decfsz	??_Lcd_Init,f
  1381  049E  2C9D               	goto	u1137
  1382  049F  0BF5               	decfsz	??_Lcd_Init+1,f
  1383  04A0  2C9D               	goto	u1137
  1384  04A1  2CA2               	nop2
  1385                           
  1386                           ;./LCD4bits.h: 69:   Lcd_Cmd(0x03);
  1387  04A2  3003               	movlw	3
  1388  04A3  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  1389                           
  1390                           ;./LCD4bits.h: 70:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1391  04A8  300D               	movlw	13
  1392  04A9  00F5               	movwf	??_Lcd_Init+1
  1393  04AA  30FB               	movlw	251
  1394  04AB  00F4               	movwf	??_Lcd_Init
  1395  04AC                     u1147:	
  1396  04AC  0BF4               	decfsz	??_Lcd_Init,f
  1397  04AD  2CAC               	goto	u1147
  1398  04AE  0BF5               	decfsz	??_Lcd_Init+1,f
  1399  04AF  2CAC               	goto	u1147
  1400  04B0  2CB1               	nop2
  1401                           
  1402                           ;./LCD4bits.h: 71:   Lcd_Cmd(0x03);
  1403  04B1  3003               	movlw	3
  1404  04B2  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  1405                           
  1406                           ;./LCD4bits.h: 72:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1407  04B7  301D               	movlw	29
  1408  04B8  00F5               	movwf	??_Lcd_Init+1
  1409  04B9  3091               	movlw	145
  1410  04BA  00F4               	movwf	??_Lcd_Init
  1411  04BB                     u1157:	
  1412  04BB  0BF4               	decfsz	??_Lcd_Init,f
  1413  04BC  2CBB               	goto	u1157
  1414  04BD  0BF5               	decfsz	??_Lcd_Init+1,f
  1415  04BE  2CBB               	goto	u1157
  1416                           
  1417                           ;./LCD4bits.h: 73:   Lcd_Cmd(0x03);
  1418  04BF  3003               	movlw	3
  1419  04C0  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  1420                           
  1421                           ;./LCD4bits.h: 75:   Lcd_Cmd(0x02);
  1422  04C5  3002               	movlw	2
  1423  04C6  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  1424                           
  1425                           ;./LCD4bits.h: 76:   Lcd_Cmd(0x02);
  1426  04CB  3002               	movlw	2
  1427  04CC  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  1428                           
  1429                           ;./LCD4bits.h: 77:   Lcd_Cmd(0x08);
  1430  04D1  3008               	movlw	8
  1431  04D2  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  1432                           
  1433                           ;./LCD4bits.h: 78:   Lcd_Cmd(0x00);
  1434  04D7  3000               	movlw	0
  1435  04D8  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  1436                           
  1437                           ;./LCD4bits.h: 79:   Lcd_Cmd(0x0C);
  1438  04DD  300C               	movlw	12
  1439  04DE  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  1440                           
  1441                           ;./LCD4bits.h: 80:   Lcd_Cmd(0x00);
  1442  04E3  3000               	movlw	0
  1443  04E4  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  1444                           
  1445                           ;./LCD4bits.h: 81:   Lcd_Cmd(0x06);
  1446  04E9  3006               	movlw	6
  1447  04EA  120A  118A  21E3   	fcall	_Lcd_Cmd
  1448  04ED  0008               	return
  1449  04EE                     __end_of_Lcd_Init:	
  1450                           
  1451                           	psect	text5
  1452  030C                     __ptext5:	
  1453 ;; *************** function _I2C_Master_Init *****************
  1454 ;; Defined at:
  1455 ;;		line 16 in file "./I2C.h"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  c               4    0[BANK0 ] const unsigned long 
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;		None
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		wreg, status,2, status,0, pclath, cstack
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1469 ;;      Params:         0       4       0       0       0
  1470 ;;      Locals:         0       0       0       0       0
  1471 ;;      Temps:          0       4       0       0       0
  1472 ;;      Totals:         0       8       0       0       0
  1473 ;;Total ram usage:        8 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:    1
  1476 ;; This function calls:
  1477 ;;		___lldiv
  1478 ;; This function is called by:
  1479 ;;		_setup
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           
  1484                           ;psect for function _I2C_Master_Init
  1485  030C                     _I2C_Master_Init:	
  1486                           
  1487                           ;./I2C.h: 16: void I2C_Master_Init(const unsigned long c);./I2C.h: 17: {;./I2C.h: 18:   
      +                            SSPCON = 0b00101000;
  1488                           
  1489                           ;incstack = 0
  1490                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1491  030C  3028               	movlw	40
  1492  030D  1283               	bcf	3,5	;RP0=0, select bank0
  1493  030E  1303               	bcf	3,6	;RP1=0, select bank0
  1494  030F  0094               	movwf	20	;volatile
  1495                           
  1496                           ;./I2C.h: 19:     SSPCON2 = 0;
  1497  0310  1683               	bsf	3,5	;RP0=1, select bank1
  1498  0311  1303               	bcf	3,6	;RP1=0, select bank1
  1499  0312  0191               	clrf	17	;volatile
  1500                           
  1501                           ;./I2C.h: 20:     SSPADD = (8000000/(4*c))-1;
  1502  0313  1283               	bcf	3,5	;RP0=0, select bank0
  1503  0314  1303               	bcf	3,6	;RP1=0, select bank0
  1504  0315  0820               	movf	I2C_Master_Init@c,w
  1505  0316  00A4               	movwf	??_I2C_Master_Init
  1506  0317  0821               	movf	I2C_Master_Init@c+1,w
  1507  0318  00A5               	movwf	??_I2C_Master_Init+1
  1508  0319  0822               	movf	I2C_Master_Init@c+2,w
  1509  031A  00A6               	movwf	??_I2C_Master_Init+2
  1510  031B  0823               	movf	I2C_Master_Init@c+3,w
  1511  031C  00A7               	movwf	??_I2C_Master_Init+3
  1512  031D  3002               	movlw	2
  1513  031E                     u835:	
  1514  031E  1003               	clrc
  1515  031F  0DA4               	rlf	??_I2C_Master_Init,f
  1516  0320  0DA5               	rlf	??_I2C_Master_Init+1,f
  1517  0321  0DA6               	rlf	??_I2C_Master_Init+2,f
  1518  0322  0DA7               	rlf	??_I2C_Master_Init+3,f
  1519  0323  3EFF               	addlw	-1
  1520  0324  1D03               	skipz
  1521  0325  2B1E               	goto	u835
  1522  0326  0827               	movf	??_I2C_Master_Init+3,w
  1523  0327  00F3               	movwf	___lldiv@divisor+3
  1524  0328  0826               	movf	??_I2C_Master_Init+2,w
  1525  0329  00F2               	movwf	___lldiv@divisor+2
  1526  032A  0825               	movf	??_I2C_Master_Init+1,w
  1527  032B  00F1               	movwf	___lldiv@divisor+1
  1528  032C  0824               	movf	??_I2C_Master_Init,w
  1529  032D  00F0               	movwf	___lldiv@divisor
  1530  032E  3000               	movlw	0
  1531  032F  00F7               	movwf	___lldiv@dividend+3
  1532  0330  307A               	movlw	122
  1533  0331  00F6               	movwf	___lldiv@dividend+2
  1534  0332  3012               	movlw	18
  1535  0333  00F5               	movwf	___lldiv@dividend+1
  1536  0334  3000               	movlw	0
  1537  0335  00F4               	movwf	___lldiv@dividend
  1538  0336  120A  118A  24EE   	fcall	___lldiv
  1539  0339  0870               	movf	?___lldiv,w
  1540  033A  3EFF               	addlw	255
  1541  033B  1683               	bsf	3,5	;RP0=1, select bank1
  1542  033C  1303               	bcf	3,6	;RP1=0, select bank1
  1543  033D  0093               	movwf	19	;volatile
  1544                           
  1545                           ;./I2C.h: 21:     SSPSTAT = 0;
  1546  033E  0194               	clrf	20	;volatile
  1547                           
  1548                           ;./I2C.h: 22:     TRISC3 = 1;
  1549  033F  1587               	bsf	7,3	;volatile
  1550                           
  1551                           ;./I2C.h: 23:     TRISC4 = 1;
  1552  0340  1607               	bsf	7,4	;volatile
  1553  0341  0008               	return
  1554  0342                     __end_of_I2C_Master_Init:	
  1555                           
  1556                           	psect	text6
  1557  04EE                     __ptext6:	
  1558 ;; *************** function ___lldiv *****************
  1559 ;; Defined at:
  1560 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  divisor         4    0[COMMON] unsigned long 
  1563 ;;  dividend        4    4[COMMON] unsigned long 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  quotient        4    9[COMMON] unsigned long 
  1566 ;;  counter         1   13[COMMON] unsigned char 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  4    0[COMMON] unsigned long 
  1569 ;; Registers used:
  1570 ;;		wreg, status,2, status,0
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1576 ;;      Params:         8       0       0       0       0
  1577 ;;      Locals:         5       0       0       0       0
  1578 ;;      Temps:          1       0       0       0       0
  1579 ;;      Totals:        14       0       0       0       0
  1580 ;;Total ram usage:       14 bytes
  1581 ;; Hardware stack levels used:    1
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_I2C_Master_Init
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           
  1590                           ;psect for function ___lldiv
  1591  04EE                     ___lldiv:	
  1592                           
  1593                           ;incstack = 0
  1594                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1595  04EE  3000               	movlw	0
  1596  04EF  00FC               	movwf	___lldiv@quotient+3
  1597  04F0  3000               	movlw	0
  1598  04F1  00FB               	movwf	___lldiv@quotient+2
  1599  04F2  3000               	movlw	0
  1600  04F3  00FA               	movwf	___lldiv@quotient+1
  1601  04F4  3000               	movlw	0
  1602  04F5  00F9               	movwf	___lldiv@quotient
  1603  04F6  0873               	movf	___lldiv@divisor+3,w
  1604  04F7  0472               	iorwf	___lldiv@divisor+2,w
  1605  04F8  0471               	iorwf	___lldiv@divisor+1,w
  1606  04F9  0470               	iorwf	___lldiv@divisor,w
  1607  04FA  1903               	skipnz
  1608  04FB  2D43               	goto	l1374
  1609  04FC  01FD               	clrf	___lldiv@counter
  1610  04FD  0AFD               	incf	___lldiv@counter,f
  1611  04FE                     l1360:	
  1612  04FE  1BF3               	btfsc	___lldiv@divisor+3,7
  1613  04FF  2D0E               	goto	l1362
  1614  0500  3001               	movlw	1
  1615  0501  00F8               	movwf	??___lldiv
  1616  0502                     u645:	
  1617  0502  1003               	clrc
  1618  0503  0DF0               	rlf	___lldiv@divisor,f
  1619  0504  0DF1               	rlf	___lldiv@divisor+1,f
  1620  0505  0DF2               	rlf	___lldiv@divisor+2,f
  1621  0506  0DF3               	rlf	___lldiv@divisor+3,f
  1622  0507  0BF8               	decfsz	??___lldiv,f
  1623  0508  2D02               	goto	u645
  1624  0509  3001               	movlw	1
  1625  050A  00F8               	movwf	??___lldiv
  1626  050B  0878               	movf	??___lldiv,w
  1627  050C  07FD               	addwf	___lldiv@counter,f
  1628  050D  2CFE               	goto	l1360
  1629  050E                     l1362:	
  1630  050E  3001               	movlw	1
  1631  050F  00F8               	movwf	??___lldiv
  1632  0510                     u665:	
  1633  0510  1003               	clrc
  1634  0511  0DF9               	rlf	___lldiv@quotient,f
  1635  0512  0DFA               	rlf	___lldiv@quotient+1,f
  1636  0513  0DFB               	rlf	___lldiv@quotient+2,f
  1637  0514  0DFC               	rlf	___lldiv@quotient+3,f
  1638  0515  0BF8               	decfsz	??___lldiv,f
  1639  0516  2D10               	goto	u665
  1640  0517  0873               	movf	___lldiv@divisor+3,w
  1641  0518  0277               	subwf	___lldiv@dividend+3,w
  1642  0519  1D03               	skipz
  1643  051A  2D25               	goto	u675
  1644  051B  0872               	movf	___lldiv@divisor+2,w
  1645  051C  0276               	subwf	___lldiv@dividend+2,w
  1646  051D  1D03               	skipz
  1647  051E  2D25               	goto	u675
  1648  051F  0871               	movf	___lldiv@divisor+1,w
  1649  0520  0275               	subwf	___lldiv@dividend+1,w
  1650  0521  1D03               	skipz
  1651  0522  2D25               	goto	u675
  1652  0523  0870               	movf	___lldiv@divisor,w
  1653  0524  0274               	subwf	___lldiv@dividend,w
  1654  0525                     u675:	
  1655  0525  1C03               	skipc
  1656  0526  2D36               	goto	l1370
  1657  0527  0870               	movf	___lldiv@divisor,w
  1658  0528  02F4               	subwf	___lldiv@dividend,f
  1659  0529  0871               	movf	___lldiv@divisor+1,w
  1660  052A  1C03               	skipc
  1661  052B  0F71               	incfsz	___lldiv@divisor+1,w
  1662  052C  02F5               	subwf	___lldiv@dividend+1,f
  1663  052D  0872               	movf	___lldiv@divisor+2,w
  1664  052E  1C03               	skipc
  1665  052F  0F72               	incfsz	___lldiv@divisor+2,w
  1666  0530  02F6               	subwf	___lldiv@dividend+2,f
  1667  0531  0873               	movf	___lldiv@divisor+3,w
  1668  0532  1C03               	skipc
  1669  0533  0F73               	incfsz	___lldiv@divisor+3,w
  1670  0534  02F7               	subwf	___lldiv@dividend+3,f
  1671  0535  1479               	bsf	___lldiv@quotient,0
  1672  0536                     l1370:	
  1673  0536  3001               	movlw	1
  1674  0537                     u685:	
  1675  0537  1003               	clrc
  1676  0538  0CF3               	rrf	___lldiv@divisor+3,f
  1677  0539  0CF2               	rrf	___lldiv@divisor+2,f
  1678  053A  0CF1               	rrf	___lldiv@divisor+1,f
  1679  053B  0CF0               	rrf	___lldiv@divisor,f
  1680  053C  3EFF               	addlw	-1
  1681  053D  1D03               	skipz
  1682  053E  2D37               	goto	u685
  1683  053F  3001               	movlw	1
  1684  0540  02FD               	subwf	___lldiv@counter,f
  1685  0541  1D03               	btfss	3,2
  1686  0542  2D0E               	goto	l1362
  1687  0543                     l1374:	
  1688  0543  087C               	movf	___lldiv@quotient+3,w
  1689  0544  00F3               	movwf	?___lldiv+3
  1690  0545  087B               	movf	___lldiv@quotient+2,w
  1691  0546  00F2               	movwf	?___lldiv+2
  1692  0547  087A               	movf	___lldiv@quotient+1,w
  1693  0548  00F1               	movwf	?___lldiv+1
  1694  0549  0879               	movf	___lldiv@quotient,w
  1695  054A  00F0               	movwf	?___lldiv
  1696  054B  0008               	return
  1697  054C                     __end_of___lldiv:	
  1698                           
  1699                           	psect	text7
  1700  021C                     __ptext7:	
  1701 ;; *************** function _get_tripwire *****************
  1702 ;; Defined at:
  1703 ;;		line 184 in file "mainMaster.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;		None
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  trip            1    7[COMMON] unsigned char 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      unsigned char 
  1710 ;; Registers used:
  1711 ;;		wreg, status,2, status,0, pclath, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1717 ;;      Params:         0       0       0       0       0
  1718 ;;      Locals:         1       0       0       0       0
  1719 ;;      Temps:          1       0       0       0       0
  1720 ;;      Totals:         2       0       0       0       0
  1721 ;;Total ram usage:        2 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:    2
  1724 ;; This function calls:
  1725 ;;		_I2C_Master_Read
  1726 ;;		_I2C_Master_Start
  1727 ;;		_I2C_Master_Stop
  1728 ;;		_I2C_Master_Write
  1729 ;; This function is called by:
  1730 ;;		_main
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           
  1735                           ;psect for function _get_tripwire
  1736  021C                     _get_tripwire:	
  1737                           
  1738                           ;mainMaster.c: 185:     char trip;;mainMaster.c: 187:     I2C_Master_Start();
  1739                           
  1740                           ;incstack = 0
  1741                           ; Regs used in _get_tripwire: [wreg+status,2+status,0+pclath+cstack]
  1742  021C  120A  118A  2187  120A  118A  	fcall	_I2C_Master_Start
  1743                           
  1744                           ;mainMaster.c: 188:     I2C_Master_Write(0x21);
  1745  0221  3021               	movlw	33
  1746  0222  00F0               	movwf	I2C_Master_Write@d
  1747  0223  3000               	movlw	0
  1748  0224  00F1               	movwf	I2C_Master_Write@d+1
  1749  0225  120A  118A  219C  120A  118A  	fcall	_I2C_Master_Write
  1750                           
  1751                           ;mainMaster.c: 189:     trip = I2C_Master_Read(0);
  1752  022A  3000               	movlw	0
  1753  022B  00F0               	movwf	I2C_Master_Read@a
  1754  022C  00F1               	movwf	I2C_Master_Read@a+1
  1755  022D  120A  118A  22AE  120A  118A  	fcall	_I2C_Master_Read
  1756  0232  0870               	movf	?_I2C_Master_Read,w
  1757  0233  00F6               	movwf	??_get_tripwire
  1758  0234  0876               	movf	??_get_tripwire,w
  1759  0235  00F7               	movwf	get_tripwire@trip
  1760                           
  1761                           ;mainMaster.c: 190:     I2C_Master_Stop();
  1762  0236  120A  118A  218E   	fcall	_I2C_Master_Stop
  1763                           
  1764                           ;mainMaster.c: 192:     return (trip);
  1765  0239  0877               	movf	get_tripwire@trip,w
  1766  023A  0008               	return
  1767  023B                     __end_of_get_tripwire:	
  1768                           
  1769                           	psect	text8
  1770  054C                     __ptext8:	
  1771 ;; *************** function _get_time *****************
  1772 ;; Defined at:
  1773 ;;		line 109 in file "mainMaster.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  string_time     6    0[BANK0 ] unsigned char [6]
  1778 ;;  min             1    7[BANK0 ] unsigned char 
  1779 ;;  hour            1    6[BANK0 ] unsigned char 
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      PTR unsigned char 
  1782 ;; Registers used:
  1783 ;;		wreg, status,2, status,0, pclath, cstack
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1789 ;;      Params:         0       0       0       0       0
  1790 ;;      Locals:         0       8       0       0       0
  1791 ;;      Temps:          2       0       0       0       0
  1792 ;;      Totals:         2       8       0       0       0
  1793 ;;Total ram usage:       10 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; Hardware stack levels required when called:    2
  1796 ;; This function calls:
  1797 ;;		_I2C_Master_Read
  1798 ;;		_I2C_Master_RepeatedStart
  1799 ;;		_I2C_Master_Start
  1800 ;;		_I2C_Master_Stop
  1801 ;;		_I2C_Master_Write
  1802 ;; This function is called by:
  1803 ;;		_main
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           
  1808                           ;psect for function _get_time
  1809  054C                     _get_time:	
  1810                           
  1811                           ;mainMaster.c: 110:     char hour, min;;mainMaster.c: 111:     char string_time[6];;main
      +                          Master.c: 113:     I2C_Master_Start();
  1812                           
  1813                           ;incstack = 0
  1814                           ; Regs used in _get_time: [wreg+status,2+status,0+pclath+cstack]
  1815  054C  120A  118A  2187  120A  118A  	fcall	_I2C_Master_Start
  1816                           
  1817                           ;mainMaster.c: 114:     I2C_Master_Write(0xD0);
  1818  0551  30D0               	movlw	208
  1819  0552  00F0               	movwf	I2C_Master_Write@d
  1820  0553  3000               	movlw	0
  1821  0554  00F1               	movwf	I2C_Master_Write@d+1
  1822  0555  120A  118A  219C  120A  118A  	fcall	_I2C_Master_Write
  1823                           
  1824                           ;mainMaster.c: 115:     I2C_Master_Write(0x01);
  1825  055A  3001               	movlw	1
  1826  055B  00F0               	movwf	I2C_Master_Write@d
  1827  055C  3000               	movlw	0
  1828  055D  00F1               	movwf	I2C_Master_Write@d+1
  1829  055E  120A  118A  219C  120A  118A  	fcall	_I2C_Master_Write
  1830                           
  1831                           ;mainMaster.c: 116:     I2C_Master_RepeatedStart();
  1832  0563  120A  118A  2195  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1833                           
  1834                           ;mainMaster.c: 117:     I2C_Master_Write(0xD1);
  1835  0568  30D1               	movlw	209
  1836  0569  00F0               	movwf	I2C_Master_Write@d
  1837  056A  3000               	movlw	0
  1838  056B  00F1               	movwf	I2C_Master_Write@d+1
  1839  056C  120A  118A  219C  120A  118A  	fcall	_I2C_Master_Write
  1840                           
  1841                           ;mainMaster.c: 118:     min = I2C_Master_Read(1);
  1842  0571  3001               	movlw	1
  1843  0572  00F0               	movwf	I2C_Master_Read@a
  1844  0573  3000               	movlw	0
  1845  0574  00F1               	movwf	I2C_Master_Read@a+1
  1846  0575  120A  118A  22AE  120A  118A  	fcall	_I2C_Master_Read
  1847  057A  0870               	movf	?_I2C_Master_Read,w
  1848  057B  00F6               	movwf	??_get_time
  1849  057C  0876               	movf	??_get_time,w
  1850  057D  1283               	bcf	3,5	;RP0=0, select bank0
  1851  057E  1303               	bcf	3,6	;RP1=0, select bank0
  1852  057F  00A7               	movwf	get_time@min
  1853                           
  1854                           ;mainMaster.c: 119:     hour = I2C_Master_Read(0);
  1855  0580  3000               	movlw	0
  1856  0581  00F0               	movwf	I2C_Master_Read@a
  1857  0582  00F1               	movwf	I2C_Master_Read@a+1
  1858  0583  120A  118A  22AE  120A  118A  	fcall	_I2C_Master_Read
  1859  0588  0870               	movf	?_I2C_Master_Read,w
  1860  0589  00F6               	movwf	??_get_time
  1861  058A  0876               	movf	??_get_time,w
  1862  058B  1283               	bcf	3,5	;RP0=0, select bank0
  1863  058C  1303               	bcf	3,6	;RP1=0, select bank0
  1864  058D  00A6               	movwf	get_time@hour
  1865                           
  1866                           ;mainMaster.c: 120:     I2C_Master_Stop();
  1867  058E  120A  118A  218E  120A  118A  	fcall	_I2C_Master_Stop
  1868                           
  1869                           ;mainMaster.c: 122:     string_time[0] = (hour >> 4) + '0';
  1870  0593  1283               	bcf	3,5	;RP0=0, select bank0
  1871  0594  1303               	bcf	3,6	;RP1=0, select bank0
  1872  0595  0826               	movf	get_time@hour,w
  1873  0596  00F6               	movwf	??_get_time
  1874  0597  3004               	movlw	4
  1875  0598                     u1045:	
  1876  0598  1003               	clrc
  1877  0599  0CF6               	rrf	??_get_time,f
  1878  059A  3EFF               	addlw	-1
  1879  059B  1D03               	skipz
  1880  059C  2D98               	goto	u1045
  1881  059D  0876               	movf	??_get_time,w
  1882  059E  3E30               	addlw	48
  1883  059F  00F7               	movwf	??_get_time+1
  1884  05A0  0877               	movf	??_get_time+1,w
  1885  05A1  00A0               	movwf	get_time@string_time
  1886                           
  1887                           ;mainMaster.c: 123:     string_time[1] = (hour & 0x0F) + '0';
  1888  05A2  0826               	movf	get_time@hour,w
  1889  05A3  390F               	andlw	15
  1890  05A4  3E30               	addlw	48
  1891  05A5  00F6               	movwf	??_get_time
  1892  05A6  0876               	movf	??_get_time,w
  1893  05A7  00A1               	movwf	get_time@string_time+1
  1894                           
  1895                           ;mainMaster.c: 124:     string_time[2] = ':';
  1896  05A8  303A               	movlw	58
  1897  05A9  00F6               	movwf	??_get_time
  1898  05AA  0876               	movf	??_get_time,w
  1899  05AB  00A2               	movwf	get_time@string_time+2
  1900                           
  1901                           ;mainMaster.c: 125:     string_time[3] = (min >> 4) + '0';
  1902  05AC  0827               	movf	get_time@min,w
  1903  05AD  00F6               	movwf	??_get_time
  1904  05AE  3004               	movlw	4
  1905  05AF                     u1055:	
  1906  05AF  1003               	clrc
  1907  05B0  0CF6               	rrf	??_get_time,f
  1908  05B1  3EFF               	addlw	-1
  1909  05B2  1D03               	skipz
  1910  05B3  2DAF               	goto	u1055
  1911  05B4  0876               	movf	??_get_time,w
  1912  05B5  3E30               	addlw	48
  1913  05B6  00F7               	movwf	??_get_time+1
  1914  05B7  0877               	movf	??_get_time+1,w
  1915  05B8  00A3               	movwf	get_time@string_time+3
  1916                           
  1917                           ;mainMaster.c: 126:     string_time[4] = (min & 0x0F) + '0';
  1918  05B9  0827               	movf	get_time@min,w
  1919  05BA  390F               	andlw	15
  1920  05BB  3E30               	addlw	48
  1921  05BC  00F6               	movwf	??_get_time
  1922  05BD  0876               	movf	??_get_time,w
  1923  05BE  00A4               	movwf	get_time@string_time+4
  1924                           
  1925                           ;mainMaster.c: 127:     string_time[5] = '\0';
  1926  05BF  01A5               	clrf	get_time@string_time+5
  1927                           
  1928                           ;mainMaster.c: 129:     return (string_time);
  1929  05C0  3020               	movlw	(low (get_time@string_time| 0))& (0+255)
  1930  05C1  0008               	return
  1931  05C2                     __end_of_get_time:	
  1932                           
  1933                           	psect	text9
  1934  05C2                     __ptext9:	
  1935 ;; *************** function _get_temp *****************
  1936 ;; Defined at:
  1937 ;;		line 146 in file "mainMaster.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  temperature     6   16[BANK0 ] unsigned char [6]
  1942 ;;  decimal         3   22[BANK0 ] unsigned char [3]
  1943 ;;  tempLSB         1   26[BANK0 ] unsigned char 
  1944 ;;  tempMSB         1   25[BANK0 ] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      PTR unsigned char 
  1947 ;; Registers used:
  1948 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1954 ;;      Params:         0       0       0       0       0
  1955 ;;      Locals:         0      11       0       0       0
  1956 ;;      Temps:          0       3       0       0       0
  1957 ;;      Totals:         0      14       0       0       0
  1958 ;;Total ram usage:       14 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    2
  1961 ;; This function calls:
  1962 ;;		_I2C_Master_Read
  1963 ;;		_I2C_Master_RepeatedStart
  1964 ;;		_I2C_Master_Start
  1965 ;;		_I2C_Master_Stop
  1966 ;;		_I2C_Master_Write
  1967 ;;		___bmul
  1968 ;;		_sprintf
  1969 ;;		_strcat
  1970 ;; This function is called by:
  1971 ;;		_main
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           
  1976                           ;psect for function _get_temp
  1977  05C2                     _get_temp:	
  1978                           
  1979                           ;mainMaster.c: 147:     char tempLSB, tempMSB;;mainMaster.c: 148:     char temperature[6
      +                          ], decimal[3];;mainMaster.c: 150:     I2C_Master_Start();
  1980                           
  1981                           ;incstack = 0
  1982                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1983  05C2  120A  118A  2187  120A  118A  	fcall	_I2C_Master_Start
  1984                           
  1985                           ;mainMaster.c: 151:     I2C_Master_Write(0xD0);
  1986  05C7  30D0               	movlw	208
  1987  05C8  00F0               	movwf	I2C_Master_Write@d
  1988  05C9  3000               	movlw	0
  1989  05CA  00F1               	movwf	I2C_Master_Write@d+1
  1990  05CB  120A  118A  219C  120A  118A  	fcall	_I2C_Master_Write
  1991                           
  1992                           ;mainMaster.c: 152:     I2C_Master_Write(0x11);
  1993  05D0  3011               	movlw	17
  1994  05D1  00F0               	movwf	I2C_Master_Write@d
  1995  05D2  3000               	movlw	0
  1996  05D3  00F1               	movwf	I2C_Master_Write@d+1
  1997  05D4  120A  118A  219C  120A  118A  	fcall	_I2C_Master_Write
  1998                           
  1999                           ;mainMaster.c: 153:     I2C_Master_RepeatedStart();
  2000  05D9  120A  118A  2195  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2001                           
  2002                           ;mainMaster.c: 154:     I2C_Master_Write(0xD1);
  2003  05DE  30D1               	movlw	209
  2004  05DF  00F0               	movwf	I2C_Master_Write@d
  2005  05E0  3000               	movlw	0
  2006  05E1  00F1               	movwf	I2C_Master_Write@d+1
  2007  05E2  120A  118A  219C  120A  118A  	fcall	_I2C_Master_Write
  2008                           
  2009                           ;mainMaster.c: 155:     tempMSB = I2C_Master_Read(1);
  2010  05E7  3001               	movlw	1
  2011  05E8  00F0               	movwf	I2C_Master_Read@a
  2012  05E9  3000               	movlw	0
  2013  05EA  00F1               	movwf	I2C_Master_Read@a+1
  2014  05EB  120A  118A  22AE  120A  118A  	fcall	_I2C_Master_Read
  2015  05F0  0870               	movf	?_I2C_Master_Read,w
  2016  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  2017  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  2018  05F3  00AD               	movwf	??_get_temp
  2019  05F4  082D               	movf	??_get_temp,w
  2020  05F5  00B9               	movwf	get_temp@tempMSB
  2021                           
  2022                           ;mainMaster.c: 156:     tempLSB = I2C_Master_Read(0);
  2023  05F6  3000               	movlw	0
  2024  05F7  00F0               	movwf	I2C_Master_Read@a
  2025  05F8  00F1               	movwf	I2C_Master_Read@a+1
  2026  05F9  120A  118A  22AE  120A  118A  	fcall	_I2C_Master_Read
  2027  05FE  0870               	movf	?_I2C_Master_Read,w
  2028  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0600  1303               	bcf	3,6	;RP1=0, select bank0
  2030  0601  00AD               	movwf	??_get_temp
  2031  0602  082D               	movf	??_get_temp,w
  2032  0603  00BA               	movwf	get_temp@tempLSB
  2033                           
  2034                           ;mainMaster.c: 157:     I2C_Master_Stop();
  2035  0604  120A  118A  218E  120A  118A  	fcall	_I2C_Master_Stop
  2036                           
  2037                           ;mainMaster.c: 159:     tempMSB = tempMSB - 4;
  2038  0609  1283               	bcf	3,5	;RP0=0, select bank0
  2039  060A  1303               	bcf	3,6	;RP1=0, select bank0
  2040  060B  0839               	movf	get_temp@tempMSB,w
  2041  060C  3EFC               	addlw	252
  2042  060D  00AD               	movwf	??_get_temp
  2043  060E  082D               	movf	??_get_temp,w
  2044  060F  00B9               	movwf	get_temp@tempMSB
  2045                           
  2046                           ;mainMaster.c: 160:     tempLSB = (tempLSB >> 6) * 25;
  2047  0610  3019               	movlw	25
  2048  0611  00AD               	movwf	??_get_temp
  2049  0612  082D               	movf	??_get_temp,w
  2050  0613  00F0               	movwf	___bmul@multiplicand
  2051  0614  083A               	movf	get_temp@tempLSB,w
  2052  0615  00AE               	movwf	??_get_temp+1
  2053  0616  3006               	movlw	6
  2054  0617                     u1065:	
  2055  0617  1003               	clrc
  2056  0618  0CAE               	rrf	??_get_temp+1,f
  2057  0619  3EFF               	addlw	-1
  2058  061A  1D03               	skipz
  2059  061B  2E17               	goto	u1065
  2060  061C  082E               	movf	??_get_temp+1,w
  2061  061D  120A  118A  21B8  120A  118A  	fcall	___bmul
  2062  0622  1283               	bcf	3,5	;RP0=0, select bank0
  2063  0623  1303               	bcf	3,6	;RP1=0, select bank0
  2064  0624  00AF               	movwf	??_get_temp+2
  2065  0625  082F               	movf	??_get_temp+2,w
  2066  0626  00BA               	movwf	get_temp@tempLSB
  2067                           
  2068                           ;mainMaster.c: 161:     sprintf(temperature, "%d", tempMSB);
  2069  0627  3039               	movlw	(low (((STR_8+1)-__stringbase)| (0+32768)))& (0+255)
  2070  0628  00AD               	movwf	??_get_temp
  2071  0629  082D               	movf	??_get_temp,w
  2072  062A  00A0               	movwf	sprintf@f
  2073  062B  0839               	movf	get_temp@tempMSB,w
  2074  062C  00AE               	movwf	??_get_temp+1
  2075  062D  01AF               	clrf	??_get_temp+2
  2076  062E  082E               	movf	??_get_temp+1,w
  2077  062F  00A1               	movwf	?_sprintf+1
  2078  0630  082F               	movf	??_get_temp+2,w
  2079  0631  00A2               	movwf	?_sprintf+2
  2080  0632  3030               	movlw	(low (get_temp@temperature| 0))& (0+255)
  2081  0633  120A  118A  271E  120A  118A  	fcall	_sprintf
  2082                           
  2083                           ;mainMaster.c: 162:     if (tempLSB == 0){
  2084  0638  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0639  1303               	bcf	3,6	;RP1=0, select bank0
  2086  063A  083A               	movf	get_temp@tempLSB,w
  2087  063B  1D03               	btfss	3,2
  2088  063C  2E3F               	goto	l1692
  2089                           
  2090                           ;mainMaster.c: 163:         sprintf(decimal, ".%d0", tempLSB);
  2091  063D  3033               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2092  063E  2E40               	goto	L7
  2093  063F                     l1692:	
  2094                           ;mainMaster.c: 164:     } else {
  2095                           
  2096                           
  2097                           ;mainMaster.c: 165:         sprintf(decimal, ".%d", tempLSB);
  2098  063F  3038               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2099  0640                     L7:	
  2100  0640  00AD               	movwf	??_get_temp
  2101  0641  082D               	movf	??_get_temp,w
  2102  0642  00A0               	movwf	sprintf@f
  2103  0643  083A               	movf	get_temp@tempLSB,w
  2104  0644  00AE               	movwf	??_get_temp+1
  2105  0645  01AF               	clrf	??_get_temp+2
  2106  0646  082E               	movf	??_get_temp+1,w
  2107  0647  00A1               	movwf	?_sprintf+1
  2108  0648  082F               	movf	??_get_temp+2,w
  2109  0649  00A2               	movwf	?_sprintf+2
  2110  064A  3036               	movlw	(low (get_temp@decimal| 0))& (0+255)
  2111  064B  120A  118A  271E  120A  118A  	fcall	_sprintf
  2112                           
  2113                           ;mainMaster.c: 167:     strcat(temperature, decimal);
  2114  0650  3036               	movlw	(low (get_temp@decimal| 0))& (0+255)
  2115  0651  1283               	bcf	3,5	;RP0=0, select bank0
  2116  0652  1303               	bcf	3,6	;RP1=0, select bank0
  2117  0653  00AD               	movwf	??_get_temp
  2118  0654  082D               	movf	??_get_temp,w
  2119  0655  00F0               	movwf	strcat@from
  2120  0656  3030               	movlw	(low (get_temp@temperature| 0))& (0+255)
  2121  0657  120A  118A  223B   	fcall	_strcat
  2122                           
  2123                           ;mainMaster.c: 168:     temperature[5] = '\0';
  2124  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2125  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2126  065C  01B5               	clrf	get_temp@temperature+5
  2127                           
  2128                           ;mainMaster.c: 170:     return (temperature);
  2129  065D  3030               	movlw	(low (get_temp@temperature| 0))& (0+255)
  2130  065E  0008               	return
  2131  065F                     __end_of_get_temp:	
  2132                           
  2133                           	psect	text10
  2134  023B                     __ptext10:	
  2135 ;; *************** function _strcat *****************
  2136 ;; Defined at:
  2137 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcat.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  to              1    wreg     PTR unsigned char 
  2140 ;;		 -> get_temp@temperature(6), 
  2141 ;;  from            1    0[COMMON] PTR const unsigned char 
  2142 ;;		 -> get_temp@decimal(3), 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;  to              1    2[COMMON] PTR unsigned char 
  2145 ;;		 -> get_temp@temperature(6), 
  2146 ;;  cp              1    3[COMMON] PTR unsigned char 
  2147 ;;		 -> get_temp@temperature(6), 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      PTR unsigned char 
  2150 ;; Registers used:
  2151 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2157 ;;      Params:         1       0       0       0       0
  2158 ;;      Locals:         2       0       0       0       0
  2159 ;;      Temps:          1       0       0       0       0
  2160 ;;      Totals:         4       0       0       0       0
  2161 ;;Total ram usage:        4 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_get_temp
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           
  2171                           ;psect for function _strcat
  2172  023B                     _strcat:	
  2173                           
  2174                           ;incstack = 0
  2175                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2176                           ;strcat@to stored from wreg
  2177  023B  00F2               	movwf	strcat@to
  2178  023C  0872               	movf	strcat@to,w
  2179  023D  00F1               	movwf	??_strcat
  2180  023E  0871               	movf	??_strcat,w
  2181  023F  00F3               	movwf	strcat@cp
  2182  0240                     l1594:	
  2183  0240  0873               	movf	strcat@cp,w
  2184  0241  0084               	movwf	4
  2185  0242  1383               	bcf	3,7	;select IRP bank0
  2186  0243  0800               	movf	0,w
  2187  0244  1903               	btfsc	3,2
  2188  0245  2A53               	goto	l1598
  2189  0246  3001               	movlw	1
  2190  0247  00F1               	movwf	??_strcat
  2191  0248  0871               	movf	??_strcat,w
  2192  0249  07F3               	addwf	strcat@cp,f
  2193  024A  2A40               	goto	l1594
  2194  024B                     l1596:	
  2195  024B  3001               	movlw	1
  2196  024C  00F1               	movwf	??_strcat
  2197  024D  0871               	movf	??_strcat,w
  2198  024E  07F3               	addwf	strcat@cp,f
  2199  024F  3001               	movlw	1
  2200  0250  00F1               	movwf	??_strcat
  2201  0251  0871               	movf	??_strcat,w
  2202  0252  07F0               	addwf	strcat@from,f
  2203  0253                     l1598:	
  2204  0253  0870               	movf	strcat@from,w
  2205  0254  0084               	movwf	4
  2206  0255  0800               	movf	0,w
  2207  0256  00F1               	movwf	??_strcat
  2208  0257  0873               	movf	strcat@cp,w
  2209  0258  0084               	movwf	4
  2210  0259  0871               	movf	??_strcat,w
  2211  025A  0080               	movwf	0
  2212  025B  0800               	movf	0,w
  2213  025C  1903               	btfsc	3,2
  2214  025D  0008               	return
  2215  025E  2A4B               	goto	l1596
  2216  025F                     __end_of_strcat:	
  2217                           
  2218                           	psect	text11
  2219  071E                     __ptext11:	
  2220 ;; *************** function _sprintf *****************
  2221 ;; Defined at:
  2222 ;;		line 500 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  sp              1    wreg     PTR unsigned char 
  2225 ;;		 -> get_temp@decimal(3), get_temp@temperature(6), 
  2226 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2227 ;;		 -> STR_8(4), STR_7(5), STR_6(3), 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2230 ;;		 -> get_temp@decimal(3), get_temp@temperature(6), 
  2231 ;;  tmpval          4    0        struct .
  2232 ;;  val             2    9[BANK0 ] unsigned int 
  2233 ;;  cp              2    0        PTR const unsigned char 
  2234 ;;  len             2    0        unsigned int 
  2235 ;;  c               1   12[BANK0 ] unsigned char 
  2236 ;;  prec            1    8[BANK0 ] char 
  2237 ;;  flag            1    7[BANK0 ] unsigned char 
  2238 ;;  ap              1    6[BANK0 ] PTR void [1]
  2239 ;;		 -> ?_sprintf(2), 
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  2    0[BANK0 ] int 
  2242 ;; Registers used:
  2243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2249 ;;      Params:         0       3       0       0       0
  2250 ;;      Locals:         0       7       0       0       0
  2251 ;;      Temps:          0       3       0       0       0
  2252 ;;      Totals:         0      13       0       0       0
  2253 ;;Total ram usage:       13 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; Hardware stack levels required when called:    1
  2256 ;; This function calls:
  2257 ;;		___lwdiv
  2258 ;;		___lwmod
  2259 ;; This function is called by:
  2260 ;;		_get_temp
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           
  2265                           ;psect for function _sprintf
  2266  071E                     _sprintf:	
  2267                           
  2268                           ;incstack = 0
  2269                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2270                           ;sprintf@sp stored from wreg
  2271  071E  1283               	bcf	3,5	;RP0=0, select bank0
  2272  071F  1303               	bcf	3,6	;RP1=0, select bank0
  2273  0720  00AB               	movwf	sprintf@sp
  2274                           
  2275                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;D:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  2276  0721  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2277  0722  00A3               	movwf	??_sprintf
  2278  0723  0823               	movf	??_sprintf,w
  2279  0724  00A6               	movwf	sprintf@ap
  2280  0725                     l1580:	
  2281                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2282                           
  2283                           
  2284                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2285  0725  3001               	movlw	1
  2286  0726  07A0               	addwf	sprintf@f,f
  2287  0727  30FF               	movlw	-1
  2288  0728  0720               	addwf	sprintf@f,w
  2289  0729  0084               	movwf	4
  2290  072A  120A  118A  200D  120A  118A  	fcall	stringdir
  2291  072F  00A3               	movwf	??_sprintf
  2292  0730  0823               	movf	??_sprintf,w
  2293  0731  00AC               	movwf	sprintf@c
  2294  0732  082C               	movf	sprintf@c,w
  2295  0733  1903               	btfsc	3,2
  2296  0734  2FF1               	goto	l1582
  2297                           
  2298                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  2299  0735  3025               	movlw	37
  2300  0736  062C               	xorwf	sprintf@c,w
  2301  0737  1903               	btfsc	3,2
  2302  0738  2F45               	goto	l1536
  2303                           
  2304                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;D:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  2305  0739  082C               	movf	sprintf@c,w
  2306  073A  00A3               	movwf	??_sprintf
  2307  073B  082B               	movf	sprintf@sp,w
  2308  073C  0084               	movwf	4
  2309  073D  0823               	movf	??_sprintf,w
  2310  073E  1383               	bcf	3,7	;select IRP bank0
  2311  073F  0080               	movwf	0
  2312  0740  3001               	movlw	1
  2313  0741  00A3               	movwf	??_sprintf
  2314  0742  0823               	movf	??_sprintf,w
  2315  0743  07AB               	addwf	sprintf@sp,f
  2316                           
  2317                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  2318  0744  2F25               	goto	l1580
  2319  0745                     l1536:	
  2320                           
  2321                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  2322  0745  01A7               	clrf	sprintf@flag
  2323                           
  2324                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  2325  0746  3001               	movlw	1
  2326  0747  07A0               	addwf	sprintf@f,f
  2327  0748  30FF               	movlw	-1
  2328  0749  0720               	addwf	sprintf@f,w
  2329  074A  0084               	movwf	4
  2330  074B  120A  118A  200D  120A  118A  	fcall	stringdir
  2331  0750  00AC               	movwf	sprintf@c
  2332  0751  00A3               	movwf	??_sprintf
  2333  0752  01A4               	clrf	??_sprintf+1
  2334                           
  2335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2336                           ; Switch size 1, requested type "simple"
  2337                           ; Number of cases is 1, Range of values is 0 to 0
  2338                           ; switch strategies available:
  2339                           ; Name         Instructions Cycles
  2340                           ; simple_byte            4     3 (average)
  2341                           ; direct_byte           11     8 (fixed)
  2342                           ; jumptable            260     6 (fixed)
  2343                           ;	Chosen strategy is simple_byte
  2344  0753  0824               	movf	??_sprintf+1,w
  2345  0754  3A00               	xorlw	0	; case 0
  2346  0755  1903               	skipnz
  2347  0756  2F58               	goto	l1820
  2348  0757  2F25               	goto	l1580
  2349  0758                     l1820:	
  2350                           
  2351                           ; Switch size 1, requested type "simple"
  2352                           ; Number of cases is 3, Range of values is 0 to 105
  2353                           ; switch strategies available:
  2354                           ; Name         Instructions Cycles
  2355                           ; simple_byte           10     6 (average)
  2356                           ; jumptable            260     6 (fixed)
  2357                           ;	Chosen strategy is simple_byte
  2358  0758  0823               	movf	??_sprintf,w
  2359  0759  3A00               	xorlw	0	; case 0
  2360  075A  1903               	skipnz
  2361  075B  2FF1               	goto	l1582
  2362  075C  3A64               	xorlw	100	; case 100
  2363  075D  1903               	skipnz
  2364  075E  2F63               	goto	l1542
  2365  075F  3A0D               	xorlw	13	; case 105
  2366  0760  1903               	skipnz
  2367  0761  2F63               	goto	l1542
  2368  0762  2F25               	goto	l1580
  2369  0763                     l1542:	
  2370                           
  2371                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2372  0763  0826               	movf	sprintf@ap,w
  2373  0764  0084               	movwf	4
  2374  0765  1383               	bcf	3,7	;select IRP bank0
  2375  0766  0800               	movf	0,w
  2376  0767  00A9               	movwf	sprintf@val
  2377  0768  0A84               	incf	4,f
  2378  0769  0800               	movf	0,w
  2379  076A  00AA               	movwf	sprintf@val+1
  2380  076B  3002               	movlw	2
  2381  076C  00A3               	movwf	??_sprintf
  2382  076D  0823               	movf	??_sprintf,w
  2383  076E  07A6               	addwf	sprintf@ap,f
  2384                           
  2385                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  2386  076F  1FAA               	btfss	sprintf@val+1,7
  2387  0770  2F7A               	goto	l1552
  2388                           
  2389                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  2390  0771  3003               	movlw	3
  2391  0772  00A3               	movwf	??_sprintf
  2392  0773  0823               	movf	??_sprintf,w
  2393  0774  04A7               	iorwf	sprintf@flag,f
  2394                           
  2395                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  2396  0775  09A9               	comf	sprintf@val,f
  2397  0776  09AA               	comf	sprintf@val+1,f
  2398  0777  0AA9               	incf	sprintf@val,f
  2399  0778  1903               	skipnz
  2400  0779  0AAA               	incf	sprintf@val+1,f
  2401  077A                     l1552:	
  2402                           
  2403                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2404  077A  01AC               	clrf	sprintf@c
  2405  077B  0AAC               	incf	sprintf@c,f
  2406  077C                     l1558:	
  2407                           
  2408                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  2409  077C  082C               	movf	sprintf@c,w
  2410  077D  00A3               	movwf	??_sprintf
  2411  077E  0723               	addwf	??_sprintf,w
  2412  077F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2413  0780  0084               	movwf	4
  2414  0781  120A  118A  200D  120A  118A  	fcall	stringdir
  2415  0786  00A4               	movwf	??_sprintf+1
  2416  0787  120A  118A  200D  120A  118A  	fcall	stringdir
  2417  078C  00A5               	movwf	??_sprintf+2
  2418  078D  0825               	movf	??_sprintf+2,w
  2419  078E  022A               	subwf	sprintf@val+1,w
  2420  078F  1D03               	skipz
  2421  0790  2F93               	goto	u885
  2422  0791  0824               	movf	??_sprintf+1,w
  2423  0792  0229               	subwf	sprintf@val,w
  2424  0793                     u885:	
  2425  0793  1C03               	btfss	3,0
  2426  0794  2F9D               	goto	l1564
  2427  0795  3001               	movlw	1
  2428  0796  00A3               	movwf	??_sprintf
  2429  0797  0823               	movf	??_sprintf,w
  2430  0798  07AC               	addwf	sprintf@c,f
  2431  0799  3005               	movlw	5
  2432  079A  062C               	xorwf	sprintf@c,w
  2433  079B  1D03               	btfss	3,2
  2434  079C  2F7C               	goto	l1558
  2435  079D                     l1564:	
  2436                           
  2437                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  2438  079D  0827               	movf	sprintf@flag,w
  2439  079E  3903               	andlw	3
  2440  079F  1903               	btfsc	3,2
  2441  07A0  2FAC               	goto	l1570
  2442                           
  2443                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  2444  07A1  302D               	movlw	45
  2445  07A2  00A3               	movwf	??_sprintf
  2446  07A3  082B               	movf	sprintf@sp,w
  2447  07A4  0084               	movwf	4
  2448  07A5  0823               	movf	??_sprintf,w
  2449  07A6  1383               	bcf	3,7	;select IRP bank0
  2450  07A7  0080               	movwf	0
  2451  07A8  3001               	movlw	1
  2452  07A9  00A3               	movwf	??_sprintf
  2453  07AA  0823               	movf	??_sprintf,w
  2454  07AB  07AB               	addwf	sprintf@sp,f
  2455  07AC                     l1570:	
  2456                           
  2457                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  2458  07AC  082C               	movf	sprintf@c,w
  2459  07AD  00A3               	movwf	??_sprintf
  2460  07AE  0823               	movf	??_sprintf,w
  2461  07AF  00A8               	movwf	sprintf@prec
  2462  07B0                     l1578:	
  2463                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2464                           
  2465                           
  2466                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2467  07B0  30FF               	movlw	255
  2468  07B1  00A3               	movwf	??_sprintf
  2469  07B2  0823               	movf	??_sprintf,w
  2470  07B3  07A8               	addwf	sprintf@prec,f
  2471  07B4  0A28               	incf	sprintf@prec,w
  2472  07B5  1903               	btfsc	3,2
  2473  07B6  2F25               	goto	l1580
  2474                           
  2475                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  2476  07B7  300A               	movlw	10
  2477  07B8  00F8               	movwf	___lwmod@divisor
  2478  07B9  3000               	movlw	0
  2479  07BA  00F9               	movwf	___lwmod@divisor+1
  2480  07BB  0828               	movf	sprintf@prec,w
  2481  07BC  00A3               	movwf	??_sprintf
  2482  07BD  0723               	addwf	??_sprintf,w
  2483  07BE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2484  07BF  0084               	movwf	4
  2485  07C0  120A  118A  200D  120A  118A  	fcall	stringdir
  2486  07C5  00F0               	movwf	___lwdiv@divisor
  2487  07C6  120A  118A  200D  120A  118A  	fcall	stringdir
  2488  07CB  00F1               	movwf	___lwdiv@divisor+1
  2489  07CC  082A               	movf	sprintf@val+1,w
  2490  07CD  00F3               	movwf	___lwdiv@dividend+1
  2491  07CE  0829               	movf	sprintf@val,w
  2492  07CF  00F2               	movwf	___lwdiv@dividend
  2493  07D0  120A  118A  237B  120A  118A  	fcall	___lwdiv
  2494  07D5  0871               	movf	?___lwdiv+1,w
  2495  07D6  00FB               	movwf	___lwmod@dividend+1
  2496  07D7  0870               	movf	?___lwdiv,w
  2497  07D8  00FA               	movwf	___lwmod@dividend
  2498  07D9  120A  118A  22DA  120A  118A  	fcall	___lwmod
  2499  07DE  0878               	movf	?___lwmod,w
  2500  07DF  3E30               	addlw	48
  2501  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  2502  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  2503  07E2  00A4               	movwf	??_sprintf+1
  2504  07E3  0824               	movf	??_sprintf+1,w
  2505  07E4  00AC               	movwf	sprintf@c
  2506                           
  2507                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  2508  07E5  082C               	movf	sprintf@c,w
  2509  07E6  00A3               	movwf	??_sprintf
  2510  07E7  082B               	movf	sprintf@sp,w
  2511  07E8  0084               	movwf	4
  2512  07E9  0823               	movf	??_sprintf,w
  2513  07EA  1383               	bcf	3,7	;select IRP bank0
  2514  07EB  0080               	movwf	0
  2515  07EC  3001               	movlw	1
  2516  07ED  00A3               	movwf	??_sprintf
  2517  07EE  0823               	movf	??_sprintf,w
  2518  07EF  07AB               	addwf	sprintf@sp,f
  2519  07F0  2FB0               	goto	l1578
  2520  07F1                     l1582:	
  2521                           
  2522                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  2523  07F1  082B               	movf	sprintf@sp,w
  2524  07F2  0084               	movwf	4
  2525  07F3  1383               	bcf	3,7	;select IRP bank0
  2526  07F4  0180               	clrf	0
  2527  07F5  0008               	return
  2528  07F6                     __end_of_sprintf:	
  2529                           
  2530                           	psect	text12
  2531  02DA                     __ptext12:	
  2532 ;; *************** function ___lwmod *****************
  2533 ;; Defined at:
  2534 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;  divisor         2    8[COMMON] unsigned int 
  2537 ;;  dividend        2   10[COMMON] unsigned int 
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  counter         1   13[COMMON] unsigned char 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  2    8[COMMON] unsigned int 
  2542 ;; Registers used:
  2543 ;;		wreg, status,2, status,0
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2549 ;;      Params:         4       0       0       0       0
  2550 ;;      Locals:         1       0       0       0       0
  2551 ;;      Temps:          1       0       0       0       0
  2552 ;;      Totals:         6       0       0       0       0
  2553 ;;Total ram usage:        6 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_sprintf
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           
  2563                           ;psect for function ___lwmod
  2564  02DA                     ___lwmod:	
  2565                           
  2566                           ;incstack = 0
  2567                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2568  02DA  0878               	movf	___lwmod@divisor,w
  2569  02DB  0479               	iorwf	___lwmod@divisor+1,w
  2570  02DC  1903               	btfsc	3,2
  2571  02DD  2B07               	goto	l1422
  2572  02DE  01FD               	clrf	___lwmod@counter
  2573  02DF  0AFD               	incf	___lwmod@counter,f
  2574  02E0                     l1412:	
  2575  02E0  1BF9               	btfsc	___lwmod@divisor+1,7
  2576  02E1  2AEE               	goto	l1414
  2577  02E2  3001               	movlw	1
  2578  02E3                     u785:	
  2579  02E3  1003               	clrc
  2580  02E4  0DF8               	rlf	___lwmod@divisor,f
  2581  02E5  0DF9               	rlf	___lwmod@divisor+1,f
  2582  02E6  3EFF               	addlw	-1
  2583  02E7  1D03               	skipz
  2584  02E8  2AE3               	goto	u785
  2585  02E9  3001               	movlw	1
  2586  02EA  00FC               	movwf	??___lwmod
  2587  02EB  087C               	movf	??___lwmod,w
  2588  02EC  07FD               	addwf	___lwmod@counter,f
  2589  02ED  2AE0               	goto	l1412
  2590  02EE                     l1414:	
  2591  02EE  0879               	movf	___lwmod@divisor+1,w
  2592  02EF  027B               	subwf	___lwmod@dividend+1,w
  2593  02F0  1D03               	skipz
  2594  02F1  2AF4               	goto	u805
  2595  02F2  0878               	movf	___lwmod@divisor,w
  2596  02F3  027A               	subwf	___lwmod@dividend,w
  2597  02F4                     u805:	
  2598  02F4  1C03               	skipc
  2599  02F5  2AFC               	goto	l1418
  2600  02F6  0878               	movf	___lwmod@divisor,w
  2601  02F7  02FA               	subwf	___lwmod@dividend,f
  2602  02F8  0879               	movf	___lwmod@divisor+1,w
  2603  02F9  1C03               	skipc
  2604  02FA  03FB               	decf	___lwmod@dividend+1,f
  2605  02FB  02FB               	subwf	___lwmod@dividend+1,f
  2606  02FC                     l1418:	
  2607  02FC  3001               	movlw	1
  2608  02FD                     u815:	
  2609  02FD  1003               	clrc
  2610  02FE  0CF9               	rrf	___lwmod@divisor+1,f
  2611  02FF  0CF8               	rrf	___lwmod@divisor,f
  2612  0300  3EFF               	addlw	-1
  2613  0301  1D03               	skipz
  2614  0302  2AFD               	goto	u815
  2615  0303  3001               	movlw	1
  2616  0304  02FD               	subwf	___lwmod@counter,f
  2617  0305  1D03               	btfss	3,2
  2618  0306  2AEE               	goto	l1414
  2619  0307                     l1422:	
  2620  0307  087B               	movf	___lwmod@dividend+1,w
  2621  0308  00F9               	movwf	?___lwmod+1
  2622  0309  087A               	movf	___lwmod@dividend,w
  2623  030A  00F8               	movwf	?___lwmod
  2624  030B  0008               	return
  2625  030C                     __end_of___lwmod:	
  2626                           
  2627                           	psect	text13
  2628  037B                     __ptext13:	
  2629 ;; *************** function ___lwdiv *****************
  2630 ;; Defined at:
  2631 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  divisor         2    0[COMMON] unsigned int 
  2634 ;;  dividend        2    2[COMMON] unsigned int 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  quotient        2    5[COMMON] unsigned int 
  2637 ;;  counter         1    7[COMMON] unsigned char 
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  2    0[COMMON] unsigned int 
  2640 ;; Registers used:
  2641 ;;		wreg, status,2, status,0
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2647 ;;      Params:         4       0       0       0       0
  2648 ;;      Locals:         3       0       0       0       0
  2649 ;;      Temps:          1       0       0       0       0
  2650 ;;      Totals:         8       0       0       0       0
  2651 ;;Total ram usage:        8 bytes
  2652 ;; Hardware stack levels used:    1
  2653 ;; This function calls:
  2654 ;;		Nothing
  2655 ;; This function is called by:
  2656 ;;		_sprintf
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           
  2661                           ;psect for function ___lwdiv
  2662  037B                     ___lwdiv:	
  2663                           
  2664                           ;incstack = 0
  2665                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2666  037B  01F5               	clrf	___lwdiv@quotient
  2667  037C  01F6               	clrf	___lwdiv@quotient+1
  2668  037D  0870               	movf	___lwdiv@divisor,w
  2669  037E  0471               	iorwf	___lwdiv@divisor+1,w
  2670  037F  1903               	btfsc	3,2
  2671  0380  2BB2               	goto	l1400
  2672  0381  01F7               	clrf	___lwdiv@counter
  2673  0382  0AF7               	incf	___lwdiv@counter,f
  2674  0383                     l1388:	
  2675  0383  1BF1               	btfsc	___lwdiv@divisor+1,7
  2676  0384  2B91               	goto	l1390
  2677  0385  3001               	movlw	1
  2678  0386                     u715:	
  2679  0386  1003               	clrc
  2680  0387  0DF0               	rlf	___lwdiv@divisor,f
  2681  0388  0DF1               	rlf	___lwdiv@divisor+1,f
  2682  0389  3EFF               	addlw	-1
  2683  038A  1D03               	skipz
  2684  038B  2B86               	goto	u715
  2685  038C  3001               	movlw	1
  2686  038D  00F4               	movwf	??___lwdiv
  2687  038E  0874               	movf	??___lwdiv,w
  2688  038F  07F7               	addwf	___lwdiv@counter,f
  2689  0390  2B83               	goto	l1388
  2690  0391                     l1390:	
  2691  0391  3001               	movlw	1
  2692  0392                     u735:	
  2693  0392  1003               	clrc
  2694  0393  0DF5               	rlf	___lwdiv@quotient,f
  2695  0394  0DF6               	rlf	___lwdiv@quotient+1,f
  2696  0395  3EFF               	addlw	-1
  2697  0396  1D03               	skipz
  2698  0397  2B92               	goto	u735
  2699  0398  0871               	movf	___lwdiv@divisor+1,w
  2700  0399  0273               	subwf	___lwdiv@dividend+1,w
  2701  039A  1D03               	skipz
  2702  039B  2B9E               	goto	u745
  2703  039C  0870               	movf	___lwdiv@divisor,w
  2704  039D  0272               	subwf	___lwdiv@dividend,w
  2705  039E                     u745:	
  2706  039E  1C03               	skipc
  2707  039F  2BA7               	goto	l1396
  2708  03A0  0870               	movf	___lwdiv@divisor,w
  2709  03A1  02F2               	subwf	___lwdiv@dividend,f
  2710  03A2  0871               	movf	___lwdiv@divisor+1,w
  2711  03A3  1C03               	skipc
  2712  03A4  03F3               	decf	___lwdiv@dividend+1,f
  2713  03A5  02F3               	subwf	___lwdiv@dividend+1,f
  2714  03A6  1475               	bsf	___lwdiv@quotient,0
  2715  03A7                     l1396:	
  2716  03A7  3001               	movlw	1
  2717  03A8                     u755:	
  2718  03A8  1003               	clrc
  2719  03A9  0CF1               	rrf	___lwdiv@divisor+1,f
  2720  03AA  0CF0               	rrf	___lwdiv@divisor,f
  2721  03AB  3EFF               	addlw	-1
  2722  03AC  1D03               	skipz
  2723  03AD  2BA8               	goto	u755
  2724  03AE  3001               	movlw	1
  2725  03AF  02F7               	subwf	___lwdiv@counter,f
  2726  03B0  1D03               	btfss	3,2
  2727  03B1  2B91               	goto	l1390
  2728  03B2                     l1400:	
  2729  03B2  0876               	movf	___lwdiv@quotient+1,w
  2730  03B3  00F1               	movwf	?___lwdiv+1
  2731  03B4  0875               	movf	___lwdiv@quotient,w
  2732  03B5  00F0               	movwf	?___lwdiv
  2733  03B6  0008               	return
  2734  03B7                     __end_of___lwdiv:	
  2735                           
  2736                           	psect	text14
  2737  01B8                     __ptext14:	
  2738 ;; *************** function ___bmul *****************
  2739 ;; Defined at:
  2740 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  multiplier      1    wreg     unsigned char 
  2743 ;;  multiplicand    1    0[COMMON] unsigned char 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  multiplier      1    3[COMMON] unsigned char 
  2746 ;;  product         1    2[COMMON] unsigned char 
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      unsigned char 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2756 ;;      Params:         1       0       0       0       0
  2757 ;;      Locals:         2       0       0       0       0
  2758 ;;      Temps:          1       0       0       0       0
  2759 ;;      Totals:         4       0       0       0       0
  2760 ;;Total ram usage:        4 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_get_temp
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           
  2770                           ;psect for function ___bmul
  2771  01B8                     ___bmul:	
  2772                           
  2773                           ;incstack = 0
  2774                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2775                           ;___bmul@multiplier stored from wreg
  2776  01B8  00F3               	movwf	___bmul@multiplier
  2777  01B9  01F2               	clrf	___bmul@product
  2778  01BA                     l1602:	
  2779  01BA  1C73               	btfss	___bmul@multiplier,0
  2780  01BB  29C0               	goto	l1606
  2781  01BC  0870               	movf	___bmul@multiplicand,w
  2782  01BD  00F1               	movwf	??___bmul
  2783  01BE  0871               	movf	??___bmul,w
  2784  01BF  07F2               	addwf	___bmul@product,f
  2785  01C0                     l1606:	
  2786  01C0  1003               	clrc
  2787  01C1  0DF0               	rlf	___bmul@multiplicand,f
  2788  01C2  1003               	clrc
  2789  01C3  0CF3               	rrf	___bmul@multiplier,f
  2790  01C4  0873               	movf	___bmul@multiplier,w
  2791  01C5  1D03               	btfss	3,2
  2792  01C6  29BA               	goto	l1602
  2793  01C7  0872               	movf	___bmul@product,w
  2794  01C8  0008               	return
  2795  01C9                     __end_of___bmul:	
  2796                           
  2797                           	psect	text15
  2798  0195                     __ptext15:	
  2799 ;; *************** function _I2C_Master_RepeatedStart *****************
  2800 ;; Defined at:
  2801 ;;		line 47 in file "./I2C.h"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;		None
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, status,2, status,0, pclath, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2815 ;;      Params:         0       0       0       0       0
  2816 ;;      Locals:         0       0       0       0       0
  2817 ;;      Temps:          0       0       0       0       0
  2818 ;;      Totals:         0       0       0       0       0
  2819 ;;Total ram usage:        0 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    1
  2822 ;; This function calls:
  2823 ;;		_I2C_Master_Wait
  2824 ;; This function is called by:
  2825 ;;		_get_time
  2826 ;;		_get_temp
  2827 ;;		_get_day
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           
  2832                           ;psect for function _I2C_Master_RepeatedStart
  2833  0195                     _I2C_Master_RepeatedStart:	
  2834                           
  2835                           ;./I2C.h: 49:     I2C_Master_Wait();
  2836                           
  2837                           ;incstack = 0
  2838                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2839  0195  120A  118A  21A4   	fcall	_I2C_Master_Wait
  2840                           
  2841                           ;./I2C.h: 50:     SSPCON2bits.RSEN = 1;
  2842  0198  1683               	bsf	3,5	;RP0=1, select bank1
  2843  0199  1303               	bcf	3,6	;RP1=0, select bank1
  2844  019A  1491               	bsf	17,1	;volatile
  2845  019B  0008               	return
  2846  019C                     __end_of_I2C_Master_RepeatedStart:	
  2847                           
  2848                           	psect	text16
  2849  01FD                     __ptext16:	
  2850 ;; *************** function _get_hall *****************
  2851 ;; Defined at:
  2852 ;;		line 173 in file "mainMaster.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;		None
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  key             1    7[COMMON] unsigned char 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  1    wreg      unsigned char 
  2859 ;; Registers used:
  2860 ;;		wreg, status,2, status,0, pclath, cstack
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2866 ;;      Params:         0       0       0       0       0
  2867 ;;      Locals:         1       0       0       0       0
  2868 ;;      Temps:          1       0       0       0       0
  2869 ;;      Totals:         2       0       0       0       0
  2870 ;;Total ram usage:        2 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; Hardware stack levels required when called:    2
  2873 ;; This function calls:
  2874 ;;		_I2C_Master_Read
  2875 ;;		_I2C_Master_Start
  2876 ;;		_I2C_Master_Stop
  2877 ;;		_I2C_Master_Write
  2878 ;; This function is called by:
  2879 ;;		_main
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           
  2884                           ;psect for function _get_hall
  2885  01FD                     _get_hall:	
  2886                           
  2887                           ;mainMaster.c: 174:     char key;;mainMaster.c: 176:     I2C_Master_Start();
  2888                           
  2889                           ;incstack = 0
  2890                           ; Regs used in _get_hall: [wreg+status,2+status,0+pclath+cstack]
  2891  01FD  120A  118A  2187  120A  118A  	fcall	_I2C_Master_Start
  2892                           
  2893                           ;mainMaster.c: 177:     I2C_Master_Write(0x11);
  2894  0202  3011               	movlw	17
  2895  0203  00F0               	movwf	I2C_Master_Write@d
  2896  0204  3000               	movlw	0
  2897  0205  00F1               	movwf	I2C_Master_Write@d+1
  2898  0206  120A  118A  219C  120A  118A  	fcall	_I2C_Master_Write
  2899                           
  2900                           ;mainMaster.c: 178:     key = I2C_Master_Read(0);
  2901  020B  3000               	movlw	0
  2902  020C  00F0               	movwf	I2C_Master_Read@a
  2903  020D  00F1               	movwf	I2C_Master_Read@a+1
  2904  020E  120A  118A  22AE  120A  118A  	fcall	_I2C_Master_Read
  2905  0213  0870               	movf	?_I2C_Master_Read,w
  2906  0214  00F6               	movwf	??_get_hall
  2907  0215  0876               	movf	??_get_hall,w
  2908  0216  00F7               	movwf	get_hall@key
  2909                           
  2910                           ;mainMaster.c: 179:     I2C_Master_Stop();
  2911  0217  120A  118A  218E   	fcall	_I2C_Master_Stop
  2912                           
  2913                           ;mainMaster.c: 181:     return (key);
  2914  021A  0877               	movf	get_hall@key,w
  2915  021B  0008               	return
  2916  021C                     __end_of_get_hall:	
  2917                           
  2918                           	psect	text17
  2919  019C                     __ptext17:	
  2920 ;; *************** function _I2C_Master_Write *****************
  2921 ;; Defined at:
  2922 ;;		line 65 in file "./I2C.h"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  d               2    0[COMMON] unsigned int 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0, pclath, cstack
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2936 ;;      Params:         2       0       0       0       0
  2937 ;;      Locals:         0       0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0
  2939 ;;      Totals:         2       0       0       0       0
  2940 ;;Total ram usage:        2 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:    1
  2943 ;; This function calls:
  2944 ;;		_I2C_Master_Wait
  2945 ;; This function is called by:
  2946 ;;		_get_time
  2947 ;;		_get_temp
  2948 ;;		_get_hall
  2949 ;;		_get_tripwire
  2950 ;;		_write_RTC
  2951 ;;		_get_day
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _I2C_Master_Write
  2957  019C                     _I2C_Master_Write:	
  2958                           
  2959                           ;./I2C.h: 65: void I2C_Master_Write(unsigned d);./I2C.h: 66: {;./I2C.h: 67:     I2C_Mast
      +                          er_Wait();
  2960                           
  2961                           ;incstack = 0
  2962                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2963  019C  120A  118A  21A4   	fcall	_I2C_Master_Wait
  2964                           
  2965                           ;./I2C.h: 68:     SSPBUF = d;
  2966  019F  0870               	movf	I2C_Master_Write@d,w
  2967  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  2968  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  2969  01A2  0093               	movwf	19	;volatile
  2970  01A3  0008               	return
  2971  01A4                     __end_of_I2C_Master_Write:	
  2972                           
  2973                           	psect	text18
  2974  018E                     __ptext18:	
  2975 ;; *************** function _I2C_Master_Stop *****************
  2976 ;; Defined at:
  2977 ;;		line 55 in file "./I2C.h"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;		None
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		wreg, status,2, status,0, pclath, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2991 ;;      Params:         0       0       0       0       0
  2992 ;;      Locals:         0       0       0       0       0
  2993 ;;      Temps:          0       0       0       0       0
  2994 ;;      Totals:         0       0       0       0       0
  2995 ;;Total ram usage:        0 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; Hardware stack levels required when called:    1
  2998 ;; This function calls:
  2999 ;;		_I2C_Master_Wait
  3000 ;; This function is called by:
  3001 ;;		_get_time
  3002 ;;		_get_temp
  3003 ;;		_get_hall
  3004 ;;		_get_tripwire
  3005 ;;		_write_RTC
  3006 ;;		_get_day
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           
  3011                           ;psect for function _I2C_Master_Stop
  3012  018E                     _I2C_Master_Stop:	
  3013                           
  3014                           ;./I2C.h: 57:     I2C_Master_Wait();
  3015                           
  3016                           ;incstack = 0
  3017                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3018  018E  120A  118A  21A4   	fcall	_I2C_Master_Wait
  3019                           
  3020                           ;./I2C.h: 58:     SSPCON2bits.PEN = 1;
  3021  0191  1683               	bsf	3,5	;RP0=1, select bank1
  3022  0192  1303               	bcf	3,6	;RP1=0, select bank1
  3023  0193  1511               	bsf	17,2	;volatile
  3024  0194  0008               	return
  3025  0195                     __end_of_I2C_Master_Stop:	
  3026                           
  3027                           	psect	text19
  3028  0187                     __ptext19:	
  3029 ;; *************** function _I2C_Master_Start *****************
  3030 ;; Defined at:
  3031 ;;		line 39 in file "./I2C.h"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;		None
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0, pclath, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3045 ;;      Params:         0       0       0       0       0
  3046 ;;      Locals:         0       0       0       0       0
  3047 ;;      Temps:          0       0       0       0       0
  3048 ;;      Totals:         0       0       0       0       0
  3049 ;;Total ram usage:        0 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    1
  3052 ;; This function calls:
  3053 ;;		_I2C_Master_Wait
  3054 ;; This function is called by:
  3055 ;;		_get_time
  3056 ;;		_get_temp
  3057 ;;		_get_hall
  3058 ;;		_get_tripwire
  3059 ;;		_write_RTC
  3060 ;;		_get_day
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           
  3065                           ;psect for function _I2C_Master_Start
  3066  0187                     _I2C_Master_Start:	
  3067                           
  3068                           ;./I2C.h: 41:     I2C_Master_Wait();
  3069                           
  3070                           ;incstack = 0
  3071                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3072  0187  120A  118A  21A4   	fcall	_I2C_Master_Wait
  3073                           
  3074                           ;./I2C.h: 42:     SSPCON2bits.SEN = 1;
  3075  018A  1683               	bsf	3,5	;RP0=1, select bank1
  3076  018B  1303               	bcf	3,6	;RP1=0, select bank1
  3077  018C  1411               	bsf	17,0	;volatile
  3078  018D  0008               	return
  3079  018E                     __end_of_I2C_Master_Start:	
  3080                           
  3081                           	psect	text20
  3082  02AE                     __ptext20:	
  3083 ;; *************** function _I2C_Master_Read *****************
  3084 ;; Defined at:
  3085 ;;		line 74 in file "./I2C.h"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  a               2    0[COMMON] unsigned short 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  temp            2    4[COMMON] unsigned short 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  2    0[COMMON] unsigned short 
  3092 ;; Registers used:
  3093 ;;		wreg, status,2, status,0, pclath, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3099 ;;      Params:         2       0       0       0       0
  3100 ;;      Locals:         2       0       0       0       0
  3101 ;;      Temps:          2       0       0       0       0
  3102 ;;      Totals:         6       0       0       0       0
  3103 ;;Total ram usage:        6 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    1
  3106 ;; This function calls:
  3107 ;;		_I2C_Master_Wait
  3108 ;; This function is called by:
  3109 ;;		_get_time
  3110 ;;		_get_temp
  3111 ;;		_get_hall
  3112 ;;		_get_tripwire
  3113 ;;		_get_day
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           
  3118                           ;psect for function _I2C_Master_Read
  3119  02AE                     _I2C_Master_Read:	
  3120                           
  3121                           ;./I2C.h: 74: unsigned short I2C_Master_Read(unsigned short a);./I2C.h: 75: {;./I2C.h: 7
      +                          6:     unsigned short temp;;./I2C.h: 77:     I2C_Master_Wait();
  3122                           
  3123                           ;incstack = 0
  3124                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3125  02AE  120A  118A  21A4  120A  118A  	fcall	_I2C_Master_Wait
  3126                           
  3127                           ;./I2C.h: 78:     RCEN = 1;
  3128  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  3129  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  3130  02B5  1591               	bsf	17,3	;volatile
  3131                           
  3132                           ;./I2C.h: 79:     I2C_Master_Wait();
  3133  02B6  120A  118A  21A4  120A  118A  	fcall	_I2C_Master_Wait
  3134                           
  3135                           ;./I2C.h: 80:     temp = SSPBUF;
  3136  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  3137  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  3138  02BD  0813               	movf	19,w	;volatile
  3139  02BE  00F2               	movwf	??_I2C_Master_Read
  3140  02BF  01F3               	clrf	??_I2C_Master_Read+1
  3141  02C0  0872               	movf	??_I2C_Master_Read,w
  3142  02C1  00F4               	movwf	I2C_Master_Read@temp
  3143  02C2  0873               	movf	??_I2C_Master_Read+1,w
  3144  02C3  00F5               	movwf	I2C_Master_Read@temp+1
  3145                           
  3146                           ;./I2C.h: 81:     I2C_Master_Wait();
  3147  02C4  120A  118A  21A4  120A  118A  	fcall	_I2C_Master_Wait
  3148                           
  3149                           ;./I2C.h: 83:     if(a == 1){
  3150  02C9  0370               	decf	I2C_Master_Read@a,w
  3151  02CA  0471               	iorwf	I2C_Master_Read@a+1,w
  3152  02CB  1D03               	btfss	3,2
  3153  02CC  2AD1               	goto	l86
  3154                           
  3155                           ;./I2C.h: 84:         SSPCON2bits.ACKDT = 0;
  3156  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  3157  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  3158  02CF  1291               	bcf	17,5	;volatile
  3159                           
  3160                           ;./I2C.h: 85:     }else{
  3161  02D0  2AD4               	goto	l87
  3162  02D1                     l86:	
  3163                           
  3164                           ;./I2C.h: 86:         SSPCON2bits.ACKDT = 1;
  3165  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  3166  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  3167  02D3  1691               	bsf	17,5	;volatile
  3168  02D4                     l87:	
  3169                           ;./I2C.h: 87:     }
  3170                           
  3171                           
  3172                           ;./I2C.h: 88:     SSPCON2bits.ACKEN = 1;
  3173  02D4  1611               	bsf	17,4	;volatile
  3174                           
  3175                           ;./I2C.h: 89:     return temp;
  3176  02D5  0875               	movf	I2C_Master_Read@temp+1,w
  3177  02D6  00F1               	movwf	?_I2C_Master_Read+1
  3178  02D7  0874               	movf	I2C_Master_Read@temp,w
  3179  02D8  00F0               	movwf	?_I2C_Master_Read
  3180  02D9  0008               	return
  3181  02DA                     __end_of_I2C_Master_Read:	
  3182                           
  3183                           	psect	text21
  3184  01A4                     __ptext21:	
  3185 ;; *************** function _I2C_Master_Wait *****************
  3186 ;; Defined at:
  3187 ;;		line 32 in file "./I2C.h"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;		None
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg, status,2
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3201 ;;      Params:         0       0       0       0       0
  3202 ;;      Locals:         0       0       0       0       0
  3203 ;;      Temps:          0       0       0       0       0
  3204 ;;      Totals:         0       0       0       0       0
  3205 ;;Total ram usage:        0 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; This function calls:
  3208 ;;		Nothing
  3209 ;; This function is called by:
  3210 ;;		_I2C_Master_Start
  3211 ;;		_I2C_Master_RepeatedStart
  3212 ;;		_I2C_Master_Stop
  3213 ;;		_I2C_Master_Write
  3214 ;;		_I2C_Master_Read
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           
  3219                           ;psect for function _I2C_Master_Wait
  3220  01A4                     _I2C_Master_Wait:	
  3221  01A4                     l68:	
  3222                           ;./I2C.h: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3223                           
  3224                           ;incstack = 0
  3225                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3226                           
  3227  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  3228  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  3229  01A6  1914               	btfsc	20,2	;volatile
  3230  01A7  29A4               	goto	l68
  3231  01A8  0811               	movf	17,w	;volatile
  3232  01A9  391F               	andlw	31
  3233  01AA  1903               	btfsc	3,2
  3234  01AB  0008               	return
  3235  01AC  29A4               	goto	l68
  3236  01AD                     __end_of_I2C_Master_Wait:	
  3237                           
  3238                           	psect	text22
  3239  03B7                     __ptext22:	
  3240 ;; *************** function _Lcd_Write_String *****************
  3241 ;; Defined at:
  3242 ;;		line 100 in file "./LCD4bits.h"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;  a               2    5[COMMON] PTR unsigned char 
  3245 ;;		 -> NULL(0), get_temp@temperature(6), get_time@string_time(6), STR_5(9), 
  3246 ;;		 -> STR_4(9), STR_2(8), STR_1(8), 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  i               2   10[COMMON] int 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3258 ;;      Params:         2       0       0       0       0
  3259 ;;      Locals:         2       0       0       0       0
  3260 ;;      Temps:          3       0       0       0       0
  3261 ;;      Totals:         7       0       0       0       0
  3262 ;;Total ram usage:        7 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    2
  3265 ;; This function calls:
  3266 ;;		_Lcd_Write_Char
  3267 ;; This function is called by:
  3268 ;;		_main
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           
  3273                           ;psect for function _Lcd_Write_String
  3274  03B7                     _Lcd_Write_String:	
  3275                           
  3276                           ;./LCD4bits.h: 100: void Lcd_Write_String(char *a);./LCD4bits.h: 101: {;./LCD4bits.h: 10
      +                          2:  int i;;./LCD4bits.h: 103:  for(i=0;a[i]!='\0';i++)
  3277                           
  3278                           ;incstack = 0
  3279                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3280  03B7  01FA               	clrf	Lcd_Write_String@i
  3281  03B8  01FB               	clrf	Lcd_Write_String@i+1
  3282  03B9                     l1642:	
  3283  03B9  087A               	movf	Lcd_Write_String@i,w
  3284  03BA  0775               	addwf	Lcd_Write_String@a,w
  3285  03BB  00F8               	movwf	??_Lcd_Write_String+1
  3286  03BC  0876               	movf	Lcd_Write_String@a+1,w
  3287  03BD  00F7               	movwf	??_Lcd_Write_String
  3288  03BE  1803               	skipnc
  3289  03BF  0AF7               	incf	??_Lcd_Write_String,f
  3290  03C0  1BFA               	btfsc	Lcd_Write_String@i,7
  3291  03C1  03F7               	decf	??_Lcd_Write_String,f
  3292  03C2  0877               	movf	??_Lcd_Write_String,w
  3293  03C3  00F9               	movwf	??_Lcd_Write_String+2
  3294  03C4  0879               	movf	??_Lcd_Write_String+2,w
  3295  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  3296  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  3297  03C7  00FF               	movwf	127
  3298  03C8  0878               	movf	??_Lcd_Write_String+1,w
  3299  03C9  0084               	movwf	4
  3300  03CA  120A  118A  2003  120A  118A  	fcall	stringtab
  3301  03CF  3A00               	xorlw	0
  3302  03D0  1903               	btfsc	3,2
  3303  03D1  0008               	return
  3304                           
  3305                           ;./LCD4bits.h: 104:     Lcd_Write_Char(a[i]);
  3306  03D2  087A               	movf	Lcd_Write_String@i,w
  3307  03D3  0775               	addwf	Lcd_Write_String@a,w
  3308  03D4  00F8               	movwf	??_Lcd_Write_String+1
  3309  03D5  0876               	movf	Lcd_Write_String@a+1,w
  3310  03D6  00F7               	movwf	??_Lcd_Write_String
  3311  03D7  1803               	skipnc
  3312  03D8  0AF7               	incf	??_Lcd_Write_String,f
  3313  03D9  1BFA               	btfsc	Lcd_Write_String@i,7
  3314  03DA  03F7               	decf	??_Lcd_Write_String,f
  3315  03DB  0877               	movf	??_Lcd_Write_String,w
  3316  03DC  00F9               	movwf	??_Lcd_Write_String+2
  3317  03DD  0879               	movf	??_Lcd_Write_String+2,w
  3318  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  3319  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  3320  03E0  00FF               	movwf	127
  3321  03E1  0878               	movf	??_Lcd_Write_String+1,w
  3322  03E2  0084               	movwf	4
  3323  03E3  120A  118A  2003  120A  118A  	fcall	stringtab
  3324  03E8  120A  118A  2342  120A  118A  	fcall	_Lcd_Write_Char
  3325  03ED  3001               	movlw	1
  3326  03EE  07FA               	addwf	Lcd_Write_String@i,f
  3327  03EF  1803               	skipnc
  3328  03F0  0AFB               	incf	Lcd_Write_String@i+1,f
  3329  03F1  3000               	movlw	0
  3330  03F2  07FB               	addwf	Lcd_Write_String@i+1,f
  3331  03F3  2BB9               	goto	l1642
  3332  03F4                     __end_of_Lcd_Write_String:	
  3333                           
  3334                           	psect	text23
  3335  0342                     __ptext23:	
  3336 ;; *************** function _Lcd_Write_Char *****************
  3337 ;; Defined at:
  3338 ;;		line 84 in file "./LCD4bits.h"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;  a               1    wreg     unsigned char 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  a               1    4[COMMON] unsigned char 
  3343 ;;  y               1    3[COMMON] unsigned char 
  3344 ;;  temp            1    2[COMMON] unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      void 
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0, pclath, cstack
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3354 ;;      Params:         0       0       0       0       0
  3355 ;;      Locals:         3       0       0       0       0
  3356 ;;      Temps:          1       0       0       0       0
  3357 ;;      Totals:         4       0       0       0       0
  3358 ;;Total ram usage:        4 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    1
  3361 ;; This function calls:
  3362 ;;		_Lcd_Port
  3363 ;; This function is called by:
  3364 ;;		_Lcd_Write_String
  3365 ;;		_main
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           
  3370                           ;psect for function _Lcd_Write_Char
  3371  0342                     _Lcd_Write_Char:	
  3372                           
  3373                           ;incstack = 0
  3374                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3375                           ;Lcd_Write_Char@a stored from wreg
  3376  0342  00F4               	movwf	Lcd_Write_Char@a
  3377                           
  3378                           ;./LCD4bits.h: 84: void Lcd_Write_Char(char a);./LCD4bits.h: 85: {;./LCD4bits.h: 86:    
      +                          char temp,y;;./LCD4bits.h: 87:    temp = a&0x0F;
  3379  0343  0874               	movf	Lcd_Write_Char@a,w
  3380  0344  390F               	andlw	15
  3381  0345  00F1               	movwf	??_Lcd_Write_Char
  3382  0346  0871               	movf	??_Lcd_Write_Char,w
  3383  0347  00F2               	movwf	Lcd_Write_Char@temp
  3384                           
  3385                           ;./LCD4bits.h: 88:    y = a&0xF0;
  3386  0348  0874               	movf	Lcd_Write_Char@a,w
  3387  0349  39F0               	andlw	240
  3388  034A  00F1               	movwf	??_Lcd_Write_Char
  3389  034B  0871               	movf	??_Lcd_Write_Char,w
  3390  034C  00F3               	movwf	Lcd_Write_Char@y
  3391                           
  3392                           ;./LCD4bits.h: 89:    PORTBbits.RB4 = 1;
  3393  034D  1283               	bcf	3,5	;RP0=0, select bank0
  3394  034E  1303               	bcf	3,6	;RP1=0, select bank0
  3395  034F  1606               	bsf	6,4	;volatile
  3396                           
  3397                           ;./LCD4bits.h: 90:    Lcd_Port(y>>4);
  3398  0350  0873               	movf	Lcd_Write_Char@y,w
  3399  0351  00F1               	movwf	??_Lcd_Write_Char
  3400  0352  3004               	movlw	4
  3401  0353                     u855:	
  3402  0353  1003               	clrc
  3403  0354  0CF1               	rrf	??_Lcd_Write_Char,f
  3404  0355  3EFF               	addlw	-1
  3405  0356  1D03               	skipz
  3406  0357  2B53               	goto	u855
  3407  0358  0871               	movf	??_Lcd_Write_Char,w
  3408  0359  120A  118A  21C9  120A  118A  	fcall	_Lcd_Port
  3409                           
  3410                           ;./LCD4bits.h: 91:    PORTBbits.RB5 = 1;
  3411  035E  1283               	bcf	3,5	;RP0=0, select bank0
  3412  035F  1303               	bcf	3,6	;RP1=0, select bank0
  3413  0360  1686               	bsf	6,5	;volatile
  3414                           
  3415                           ;./LCD4bits.h: 92:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3416  0361  301A               	movlw	26
  3417  0362  00F1               	movwf	??_Lcd_Write_Char
  3418  0363                     u1167:	
  3419  0363  0BF1               	decfsz	??_Lcd_Write_Char,f
  3420  0364  2B63               	goto	u1167
  3421  0365  0000               	nop
  3422                           
  3423                           ;./LCD4bits.h: 93:    PORTBbits.RB5 = 0;
  3424  0366  1283               	bcf	3,5	;RP0=0, select bank0
  3425  0367  1303               	bcf	3,6	;RP1=0, select bank0
  3426  0368  1286               	bcf	6,5	;volatile
  3427                           
  3428                           ;./LCD4bits.h: 94:    Lcd_Port(temp);
  3429  0369  0872               	movf	Lcd_Write_Char@temp,w
  3430  036A  120A  118A  21C9  120A  118A  	fcall	_Lcd_Port
  3431                           
  3432                           ;./LCD4bits.h: 95:    PORTBbits.RB5 = 1;
  3433  036F  1283               	bcf	3,5	;RP0=0, select bank0
  3434  0370  1303               	bcf	3,6	;RP1=0, select bank0
  3435  0371  1686               	bsf	6,5	;volatile
  3436                           
  3437                           ;./LCD4bits.h: 96:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3438  0372  301A               	movlw	26
  3439  0373  00F1               	movwf	??_Lcd_Write_Char
  3440  0374                     u1177:	
  3441  0374  0BF1               	decfsz	??_Lcd_Write_Char,f
  3442  0375  2B74               	goto	u1177
  3443  0376  0000               	nop
  3444                           
  3445                           ;./LCD4bits.h: 97:    PORTBbits.RB5 = 0;
  3446  0377  1283               	bcf	3,5	;RP0=0, select bank0
  3447  0378  1303               	bcf	3,6	;RP1=0, select bank0
  3448  0379  1286               	bcf	6,5	;volatile
  3449  037A  0008               	return
  3450  037B                     __end_of_Lcd_Write_Char:	
  3451                           
  3452                           	psect	text24
  3453  03F4                     __ptext24:	
  3454 ;; *************** function _Lcd_Set_Cursor *****************
  3455 ;; Defined at:
  3456 ;;		line 44 in file "./LCD4bits.h"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  a               1    wreg     unsigned char 
  3459 ;;  b               1    4[COMMON] unsigned char 
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;  a               1    7[COMMON] unsigned char 
  3462 ;;  temp            1   10[COMMON] unsigned char 
  3463 ;;  y               1    9[COMMON] unsigned char 
  3464 ;;  z               1    8[COMMON] unsigned char 
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2, status,0, pclath, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3474 ;;      Params:         1       0       0       0       0
  3475 ;;      Locals:         4       0       0       0       0
  3476 ;;      Temps:          2       0       0       0       0
  3477 ;;      Totals:         7       0       0       0       0
  3478 ;;Total ram usage:        7 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    2
  3481 ;; This function calls:
  3482 ;;		_Lcd_Cmd
  3483 ;; This function is called by:
  3484 ;;		_main
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           
  3489                           ;psect for function _Lcd_Set_Cursor
  3490  03F4                     _Lcd_Set_Cursor:	
  3491                           
  3492                           ;incstack = 0
  3493                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3494                           ;Lcd_Set_Cursor@a stored from wreg
  3495  03F4  00F7               	movwf	Lcd_Set_Cursor@a
  3496                           
  3497                           ;./LCD4bits.h: 44: void Lcd_Set_Cursor(char a, char b);./LCD4bits.h: 45: {;./LCD4bits.h:
      +                           46:  char temp,z,y;;./LCD4bits.h: 47:  if(a == 1)
  3498  03F5  0377               	decf	Lcd_Set_Cursor@a,w
  3499  03F6  1D03               	btfss	3,2
  3500  03F7  2C19               	goto	l1626
  3501                           
  3502                           ;./LCD4bits.h: 48:  {;./LCD4bits.h: 49:    temp = 0x80 + b - 1;
  3503  03F8  0874               	movf	Lcd_Set_Cursor@b,w
  3504  03F9  3E7F               	addlw	127
  3505  03FA  00F5               	movwf	??_Lcd_Set_Cursor
  3506  03FB  0875               	movf	??_Lcd_Set_Cursor,w
  3507  03FC  00FA               	movwf	Lcd_Set_Cursor@temp
  3508                           
  3509                           ;./LCD4bits.h: 50:   z = temp>>4;
  3510  03FD  087A               	movf	Lcd_Set_Cursor@temp,w
  3511  03FE  00F5               	movwf	??_Lcd_Set_Cursor
  3512  03FF  3004               	movlw	4
  3513  0400                     u985:	
  3514  0400  1003               	clrc
  3515  0401  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3516  0402  3EFF               	addlw	-1
  3517  0403  1D03               	skipz
  3518  0404  2C00               	goto	u985
  3519  0405  0875               	movf	??_Lcd_Set_Cursor,w
  3520  0406  00F6               	movwf	??_Lcd_Set_Cursor+1
  3521  0407  0876               	movf	??_Lcd_Set_Cursor+1,w
  3522  0408  00F8               	movwf	Lcd_Set_Cursor@z
  3523                           
  3524                           ;./LCD4bits.h: 51:   y = temp & 0x0F;
  3525  0409  087A               	movf	Lcd_Set_Cursor@temp,w
  3526  040A  390F               	andlw	15
  3527  040B  00F5               	movwf	??_Lcd_Set_Cursor
  3528  040C  0875               	movf	??_Lcd_Set_Cursor,w
  3529  040D  00F9               	movwf	Lcd_Set_Cursor@y
  3530                           
  3531                           ;./LCD4bits.h: 52:   Lcd_Cmd(z);
  3532  040E  0878               	movf	Lcd_Set_Cursor@z,w
  3533  040F  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  3534                           
  3535                           ;./LCD4bits.h: 53:   Lcd_Cmd(y);
  3536  0414  0879               	movf	Lcd_Set_Cursor@y,w
  3537  0415  120A  118A  21E3   	fcall	_Lcd_Cmd
  3538                           
  3539                           ;./LCD4bits.h: 54:  }
  3540  0418  0008               	return
  3541  0419                     l1626:	
  3542  0419  3002               	movlw	2
  3543  041A  0677               	xorwf	Lcd_Set_Cursor@a,w
  3544  041B  1D03               	btfss	3,2
  3545  041C  0008               	return
  3546                           
  3547                           ;./LCD4bits.h: 56:  {;./LCD4bits.h: 57:   temp = 0xC0 + b - 1;
  3548  041D  0874               	movf	Lcd_Set_Cursor@b,w
  3549  041E  3EBF               	addlw	191
  3550  041F  00F5               	movwf	??_Lcd_Set_Cursor
  3551  0420  0875               	movf	??_Lcd_Set_Cursor,w
  3552  0421  00FA               	movwf	Lcd_Set_Cursor@temp
  3553                           
  3554                           ;./LCD4bits.h: 58:   z = temp>>4;
  3555  0422  087A               	movf	Lcd_Set_Cursor@temp,w
  3556  0423  00F5               	movwf	??_Lcd_Set_Cursor
  3557  0424  3004               	movlw	4
  3558  0425                     u1005:	
  3559  0425  1003               	clrc
  3560  0426  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3561  0427  3EFF               	addlw	-1
  3562  0428  1D03               	skipz
  3563  0429  2C25               	goto	u1005
  3564  042A  0875               	movf	??_Lcd_Set_Cursor,w
  3565  042B  00F6               	movwf	??_Lcd_Set_Cursor+1
  3566  042C  0876               	movf	??_Lcd_Set_Cursor+1,w
  3567  042D  00F8               	movwf	Lcd_Set_Cursor@z
  3568                           
  3569                           ;./LCD4bits.h: 59:   y = temp & 0x0F;
  3570  042E  087A               	movf	Lcd_Set_Cursor@temp,w
  3571  042F  390F               	andlw	15
  3572  0430  00F5               	movwf	??_Lcd_Set_Cursor
  3573  0431  0875               	movf	??_Lcd_Set_Cursor,w
  3574  0432  00F9               	movwf	Lcd_Set_Cursor@y
  3575                           
  3576                           ;./LCD4bits.h: 60:   Lcd_Cmd(z);
  3577  0433  0878               	movf	Lcd_Set_Cursor@z,w
  3578  0434  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  3579                           
  3580                           ;./LCD4bits.h: 61:   Lcd_Cmd(y);
  3581  0439  0879               	movf	Lcd_Set_Cursor@y,w
  3582  043A  120A  118A  21E3   	fcall	_Lcd_Cmd
  3583  043D  0008               	return
  3584  043E                     __end_of_Lcd_Set_Cursor:	
  3585                           
  3586                           	psect	text25
  3587  01AD                     __ptext25:	
  3588 ;; *************** function _Lcd_Clear *****************
  3589 ;; Defined at:
  3590 ;;		line 38 in file "./LCD4bits.h"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;		None
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;		None
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  1    wreg      void 
  3597 ;; Registers used:
  3598 ;;		wreg, status,2, status,0, pclath, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3604 ;;      Params:         0       0       0       0       0
  3605 ;;      Locals:         0       0       0       0       0
  3606 ;;      Temps:          0       0       0       0       0
  3607 ;;      Totals:         0       0       0       0       0
  3608 ;;Total ram usage:        0 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:    2
  3611 ;; This function calls:
  3612 ;;		_Lcd_Cmd
  3613 ;; This function is called by:
  3614 ;;		_main
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           
  3619                           ;psect for function _Lcd_Clear
  3620  01AD                     _Lcd_Clear:	
  3621                           
  3622                           ;./LCD4bits.h: 40:  Lcd_Cmd(0);
  3623                           
  3624                           ;incstack = 0
  3625                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3626  01AD  3000               	movlw	0
  3627  01AE  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  3628                           
  3629                           ;./LCD4bits.h: 41:  Lcd_Cmd(1);
  3630  01B3  3001               	movlw	1
  3631  01B4  120A  118A  21E3   	fcall	_Lcd_Cmd
  3632  01B7  0008               	return
  3633  01B8                     __end_of_Lcd_Clear:	
  3634                           
  3635                           	psect	text26
  3636  01E3                     __ptext26:	
  3637 ;; *************** function _Lcd_Cmd *****************
  3638 ;; Defined at:
  3639 ;;		line 29 in file "./LCD4bits.h"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  a               1    wreg     unsigned char 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  a               1    3[COMMON] unsigned char 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, status,2, status,0, pclath, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3653 ;;      Params:         0       0       0       0       0
  3654 ;;      Locals:         1       0       0       0       0
  3655 ;;      Temps:          2       0       0       0       0
  3656 ;;      Totals:         3       0       0       0       0
  3657 ;;Total ram usage:        3 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    1
  3660 ;; This function calls:
  3661 ;;		_Lcd_Port
  3662 ;; This function is called by:
  3663 ;;		_Lcd_Clear
  3664 ;;		_Lcd_Set_Cursor
  3665 ;;		_Lcd_Init
  3666 ;;		_Lcd_Shift_Right
  3667 ;;		_Lcd_Shift_Left
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           
  3672                           ;psect for function _Lcd_Cmd
  3673  01E3                     _Lcd_Cmd:	
  3674                           
  3675                           ;incstack = 0
  3676                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3677                           ;Lcd_Cmd@a stored from wreg
  3678  01E3  00F3               	movwf	Lcd_Cmd@a
  3679                           
  3680                           ;./LCD4bits.h: 29: void Lcd_Cmd(char a);./LCD4bits.h: 30: {;./LCD4bits.h: 31:  PORTBbits
      +                          .RB4 = 0;
  3681  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  3682  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  3683  01E6  1206               	bcf	6,4	;volatile
  3684                           
  3685                           ;./LCD4bits.h: 32:  Lcd_Port(a);
  3686  01E7  0873               	movf	Lcd_Cmd@a,w
  3687  01E8  120A  118A  21C9  120A  118A  	fcall	_Lcd_Port
  3688                           
  3689                           ;./LCD4bits.h: 33:  PORTBbits.RB5 = 1;
  3690  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  3691  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  3692  01EF  1686               	bsf	6,5	;volatile
  3693                           
  3694                           ;./LCD4bits.h: 34:         _delay((unsigned long)((4)*(8000000/4000.0)));
  3695  01F0  300B               	movlw	11
  3696  01F1  00F2               	movwf	??_Lcd_Cmd+1
  3697  01F2  3062               	movlw	98
  3698  01F3  00F1               	movwf	??_Lcd_Cmd
  3699  01F4                     u1187:	
  3700  01F4  0BF1               	decfsz	??_Lcd_Cmd,f
  3701  01F5  29F4               	goto	u1187
  3702  01F6  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3703  01F7  29F4               	goto	u1187
  3704  01F8  0000               	nop
  3705                           
  3706                           ;./LCD4bits.h: 35:         PORTBbits.RB5 = 0;
  3707  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  3708  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  3709  01FB  1286               	bcf	6,5	;volatile
  3710  01FC  0008               	return
  3711  01FD                     __end_of_Lcd_Cmd:	
  3712                           
  3713                           	psect	text27
  3714  01C9                     __ptext27:	
  3715 ;; *************** function _Lcd_Port *****************
  3716 ;; Defined at:
  3717 ;;		line 7 in file "./LCD4bits.h"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  a               1    wreg     unsigned char 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;  a               1    0[COMMON] unsigned char 
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  1    wreg      void 
  3724 ;; Registers used:
  3725 ;;		wreg
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3731 ;;      Params:         0       0       0       0       0
  3732 ;;      Locals:         1       0       0       0       0
  3733 ;;      Temps:          0       0       0       0       0
  3734 ;;      Totals:         1       0       0       0       0
  3735 ;;Total ram usage:        1 bytes
  3736 ;; Hardware stack levels used:    1
  3737 ;; This function calls:
  3738 ;;		Nothing
  3739 ;; This function is called by:
  3740 ;;		_Lcd_Cmd
  3741 ;;		_Lcd_Init
  3742 ;;		_Lcd_Write_Char
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           
  3747                           ;psect for function _Lcd_Port
  3748  01C9                     _Lcd_Port:	
  3749                           
  3750                           ;incstack = 0
  3751                           ; Regs used in _Lcd_Port: [wreg]
  3752                           ;Lcd_Port@a stored from wreg
  3753  01C9  00F0               	movwf	Lcd_Port@a
  3754                           
  3755                           ;./LCD4bits.h: 7: void Lcd_Port(char a);./LCD4bits.h: 8: {;./LCD4bits.h: 9:  if(a & 1)
  3756  01CA  1C70               	btfss	Lcd_Port@a,0
  3757  01CB  29D0               	goto	l94
  3758                           
  3759                           ;./LCD4bits.h: 10:   PORTBbits.RB0 = 1;
  3760  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3761  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3762  01CE  1406               	bsf	6,0	;volatile
  3763  01CF  29D3               	goto	l95
  3764  01D0                     l94:	
  3765                           ;./LCD4bits.h: 11:  else
  3766                           
  3767                           
  3768                           ;./LCD4bits.h: 12:   PORTBbits.RB0 = 0;
  3769  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  3770  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  3771  01D2  1006               	bcf	6,0	;volatile
  3772  01D3                     l95:	
  3773                           
  3774                           ;./LCD4bits.h: 14:  if(a & 2)
  3775  01D3  1CF0               	btfss	Lcd_Port@a,1
  3776  01D4  29D7               	goto	l96
  3777                           
  3778                           ;./LCD4bits.h: 15:   PORTBbits.RB1 = 1;
  3779  01D5  1486               	bsf	6,1	;volatile
  3780  01D6  29D8               	goto	l97
  3781  01D7                     l96:	
  3782                           ;./LCD4bits.h: 16:  else
  3783                           
  3784                           
  3785                           ;./LCD4bits.h: 17:   PORTBbits.RB1 = 0;
  3786  01D7  1086               	bcf	6,1	;volatile
  3787  01D8                     l97:	
  3788                           
  3789                           ;./LCD4bits.h: 19:  if(a & 4)
  3790  01D8  1D70               	btfss	Lcd_Port@a,2
  3791  01D9  29DC               	goto	l98
  3792                           
  3793                           ;./LCD4bits.h: 20:   PORTBbits.RB2 = 1;
  3794  01DA  1506               	bsf	6,2	;volatile
  3795  01DB  29DD               	goto	l99
  3796  01DC                     l98:	
  3797                           ;./LCD4bits.h: 21:  else
  3798                           
  3799                           
  3800                           ;./LCD4bits.h: 22:   PORTBbits.RB2 = 0;
  3801  01DC  1106               	bcf	6,2	;volatile
  3802  01DD                     l99:	
  3803                           
  3804                           ;./LCD4bits.h: 24:  if(a & 8)
  3805  01DD  1DF0               	btfss	Lcd_Port@a,3
  3806  01DE  29E1               	goto	l100
  3807                           
  3808                           ;./LCD4bits.h: 25:   PORTBbits.RB3 = 1;
  3809  01DF  1586               	bsf	6,3	;volatile
  3810  01E0  0008               	return
  3811  01E1                     l100:	
  3812                           ;./LCD4bits.h: 26:  else
  3813                           
  3814                           
  3815                           ;./LCD4bits.h: 27:   PORTBbits.RB3 = 0;
  3816  01E1  1186               	bcf	6,3	;volatile
  3817  01E2  0008               	return
  3818  01E3                     __end_of_Lcd_Port:	
  3819  007E                     btemp	set	126	;btemp
  3820  007E                     wtemp0	set	126


Data Sizes:
    Strings     49
    Constant    10
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_3(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_temp@temperature(BANK0[6]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 3
		 -> get_temp@decimal(BANK0[3]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_8(CODE[4]), STR_7(CODE[5]), STR_6(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@decimal(BANK0[3]), get_temp@temperature(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    sp__get_temp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    temp	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_temp@temperature(BANK0[6]), 

    sp__get_time	PTR unsigned char  size(1) Largest target is 6
		 -> get_time@string_time(BANK0[6]), 

    time	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_time@string_time(BANK0[6]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 9
		 -> NULL(NULL[0]), get_temp@temperature(BANK0[6]), get_time@string_time(BANK0[6]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_2(CODE[8]), STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _get_tripwire->_I2C_Master_Read
    _get_time->_I2C_Master_Read
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _get_hall->_I2C_Master_Read
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_get_temp
    _setup->_I2C_Master_Init
    _get_temp->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   12493
                                             27 BANK0      1     1      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _get_hall
                           _get_temp
                           _get_time
                       _get_tripwire
                              _setup
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               7     5      2     200
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     632
                    _I2C_Master_Init
                           _Lcd_Init
                      _initOscilador
 ---------------------------------------------------------------------------------
 (2) _initOscilador                                        3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _get_tripwire                                         2     2      0    1914
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_time                                            10    10      0    2126
                                              6 COMMON     2     2      0
                                              0 BANK0      8     8      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            14    14      0    4011
                                             13 BANK0     14    14      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___bmul
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     3      1     207
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1429
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _get_hall                                             2     2      0    1914
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1314
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     577
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     724
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     684
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _get_hall
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _get_temp
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___bmul
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _strcat
   _get_time
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _get_tripwire
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _initOscilador
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      20       5       40.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2E      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Feb 26 13:23:44 2019

                                pc 0002                     ___bmul@product 0072  
                      __CFG_CP$OFF 0000                                 l68 01A4  
                      get_hall@key 0077                                 l94 01D0  
                               l86 02D1                                 l95 01D3  
                               l87 02D4                                 l96 01D7  
                               l97 01D8                                 l98 01DC  
                               l99 01DD                                 fsr 0004  
                              l100 01E1                                l137 0491  
                              l162 06EE                                _GIE 005F  
                     __CFG_CPD$OFF 0000                                u715 0386  
                              u805 02F4                                u645 0502  
                              u735 0392                                u815 02FD  
                              u745 039E                                u665 0510  
                              u755 03A8                                u675 0525  
                              u835 031E                                u685 0537  
                              u855 0353                                u785 02E3  
                              u885 0793                                u985 0400  
                    ?_get_tripwire 0070                                _key 003D  
                              fsr0 0004                                indf 0000  
                     __CFG_LVP$OFF 0000                               l1400 03B2  
                             l1412 02E0                               l1414 02EE  
                             l1422 0307                               l1510 0457  
                             l1502 0440                               l1360 04FE  
                             l1512 045D                               l1504 0445  
                             l1602 01BA                               l1418 02FC  
                             l1370 0536                               l1362 050E  
                             l1514 0463                               l1506 044B  
                             l1522 046F                               l1516 046A  
                             l1508 0451                               l1606 01C0  
                             l1390 0391                               l1542 0763  
                             l1374 0543                               l1518 046A  
                             l1552 077A                               l1536 0745  
                             l1626 0419                               l1642 03B9  
                             l1570 07AC                               l1714 0293  
                             l1396 03A7                               l1388 0383  
                             l1564 079D                               l1820 0758  
                             l1580 0725                               l1716 0286  
                             l1558 077C                               l1582 07F1  
                             l1718 02A8                               l1760 06CA  
                             l1736 0669                               l1578 07B0  
                             l1594 0240                               l1818 0477  
                             l1770 0714                               l1596 024B  
                             l1692 063F                               l1764 06F1  
                             l1598 0253                               STR_1 002F  
                             STR_2 0037                        get_time@min 0027  
                             STR_3 003F                               STR_4 001D  
                             STR_5 0026                               STR_6 004B  
                             STR_7 0045                               STR_8 004A  
                             u1005 0425                               u1115 06E8  
                             u1045 0598                               u1055 05AF  
                             u1065 0617                               u1137 049D  
                             u1147 04AC                               u1157 04BB  
                             u1167 0363                               u1177 0374  
                             u1187 01F4                               _PEIE 005E  
                             _RCEN 048B                       __CFG_WRT$OFF 0000  
                ?_Lcd_Write_String 0075   __end_of_I2C_Master_RepeatedStart 019C  
                             _main 065F                               _temp 003E  
                             _time 003F                               _trip 003C  
                             btemp 007E                               start 0000  
               ??_Lcd_Write_String 0077                      __CFG_IESO$OFF 0000  
                  __end_of_Lcd_Cmd 01FD                  ___bmul@multiplier 0073  
                    __CFG_MCLRE$ON 0000                get_temp@temperature 0030  
                 ?_I2C_Master_Init 0020                   ?_I2C_Master_Read 0070  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                            ?_main 0070                      __CFG_WDTE$OFF 0000  
                     get_time@hour 0026                              _ANSEL 0188  
                  __end_of___lldiv 054C                     ??_get_tripwire 0076  
                  __end_of___lwdiv 03B7                    __end_of___lwmod 030C  
                            _PORTA 0005                              _PORTB 0006  
          __size_of_Lcd_Set_Cursor 004A                              _TRISA 0085  
                            _TRISB 0086                              _SSPIE 0463  
                            _SSPIF 0063                     __CFG_FCMEN$OFF 0000  
                  __end_of_dpowers 001D                              _setup 025F  
                   __CFG_BOREN$OFF 0000                              pclath 000A  
                            status 0003                              wtemp0 007E  
                  __end_of_sprintf 07F6                   __end_of_Lcd_Init 04EE  
                 __end_of_Lcd_Port 01E3                    __initialization 07F6  
                     __end_of_main 071E             __size_of_initOscilador 0055  
                           ??_main 003B                 __size_of_Lcd_Clear 000B  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0070  
               ??_I2C_Master_Start 0070                 ??_I2C_Master_Write 0072  
                           ?_setup 0070                             _ANSELH 0189  
                        ??_Lcd_Cmd 0071            __size_of_Lcd_Write_Char 0039  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013                     __CFG_PWRTE$OFF 0000  
         _I2C_Master_RepeatedStart 0195                   __end_of_get_hall 021C  
                 __end_of_get_temp 065F                   __end_of_get_time 05C2  
                           ___bmul 01B8                          ??___lldiv 0078  
                        ??___lwdiv 0074                          ??___lwmod 007C  
                           _strcat 023B                             _strcmp 0284  
                        ??_sprintf 0023                    Lcd_Set_Cursor@a 0077  
                  Lcd_Set_Cursor@b 0074                    Lcd_Set_Cursor@y 0079  
                  Lcd_Set_Cursor@z 0078            __end_of__initialization 07FC  
                    _initOscilador 043E                  __end_of_Lcd_Clear 01B8  
             __end_of_get_tripwire 023B                ___bmul@multiplicand 0070  
                   __pcstackCOMMON 0070                      __end_of_setup 0284  
                   _Lcd_Set_Cursor 03F4                          ?_Lcd_Init 0070  
                        ?_Lcd_Port 0070                            ??_setup 007E  
                       __pbssBANK0 003C                     ?_initOscilador 0070  
                       __pmaintext 065F                            ?___bmul 0070  
        __size_of_Lcd_Write_String 003D             __end_of_Lcd_Set_Cursor 043E  
                          ?_strcat 0070                            ?_strcmp 0070  
                       ??_Lcd_Init 0074                         ??_Lcd_Port 0070  
                          _SSPCON2 0091                          ?_get_hall 0070  
                          _SSPSTAT 0094                          ?_get_temp 0070  
                        ?_get_time 0070                         __stringtab 0003  
              initOscilador@option 0072                     _Lcd_Write_Char 0342  
                          _Lcd_Cmd 01E3                    __size_of___bmul 0011  
                          ___lldiv 04EE                            ___lwdiv 037B  
                          ___lwmod 02DA                    ?_Lcd_Set_Cursor 0074  
                          __ptext1 0284                            __ptext2 025F  
                          __ptext3 043E                            __ptext4 0493  
                          __ptext5 030C                            __ptext6 04EE  
                          __ptext7 021C                            __ptext8 054C  
                          __ptext9 05C2                    __size_of_strcat 0024  
                  __size_of_strcmp 002A                            _dpowers 0013  
         __size_of_I2C_Master_Init 0036           __size_of_I2C_Master_Read 002C  
         __size_of_I2C_Master_Wait 0009           __size_of_I2C_Master_Stop 0007  
                  ??_initOscilador 0070                         ??_get_hall 0076  
                          _sprintf 071E             __end_of_Lcd_Write_Char 037B  
                       ??_get_temp 002D                         ??_get_time 0076  
             end_of_initialization 07FC              __size_of_get_tripwire 001F  
       ??_I2C_Master_RepeatedStart 0070          __size_of_I2C_Master_Start 0007  
        __size_of_I2C_Master_Write 0008                    ___lldiv@divisor 0070  
                  ___lldiv@counter 007D                   I2C_Master_Init@c 0020  
                 I2C_Master_Read@a 0070                          Lcd_Port@a 0070  
                          strcmp@r 0075                          _PORTAbits 0005  
                        _PORTBbits 0006                       _get_tripwire 021C  
                  ?_Lcd_Write_Char 0070                  Lcd_Write_String@a 0075  
                Lcd_Write_String@i 007A                get_time@string_time 0020  
                        _Lcd_Clear 01AD                     __end_of___bmul 01C9  
                 _Lcd_Write_String 03B7                     __end_of_strcat 025F  
                   __end_of_strcmp 02AE                start_initialization 07F6  
                __size_of_Lcd_Init 005B                  __size_of_Lcd_Port 001A  
                ??_I2C_Master_Init 0024                  ??_I2C_Master_Read 0072  
                ??_I2C_Master_Wait 0070                  ??_I2C_Master_Stop 0070  
         __CFG_FOSC$INTRC_NOCLKOUT 0000                         ?_Lcd_Clear 0070  
                         ??___bmul 0071                    Lcd_Write_Char@a 0074  
                  Lcd_Write_Char@y 0073                           ??_strcat 0071  
                         ??_strcmp 0072                          ___latbits 0002  
                    __pcstackBANK0 0020                  __size_of_get_hall 001F  
                         ?_Lcd_Cmd 0070                  __size_of_get_temp 009D  
                __size_of_get_time 0076                        sprintf@flag 0027  
                      sprintf@prec 0028                   _I2C_Master_Start 0187  
                 _I2C_Master_Write 019C                   ___lwdiv@dividend 0072  
                 ??_Lcd_Set_Cursor 0075                    get_temp@decimal 0036  
                         ?___lldiv 0070                           ?___lwdiv 0070  
                         ?___lwmod 0078                          __pstrings 0003  
                  get_temp@tempLSB 003A                    get_temp@tempMSB 0039  
                 ___lwdiv@quotient 0075                           ?_sprintf 0020  
                   __size_of_setup 0025                           Lcd_Cmd@a 0073  
                      ??_Lcd_Clear 0074                        __stringbase 0012  
                 ??_Lcd_Write_Char 0071                           _Lcd_Init 0493  
                         _Lcd_Port 01C9                I2C_Master_Read@temp 0074  
            __end_of_initOscilador 0493           __end_of_Lcd_Write_String 03F4  
                 __size_of_Lcd_Cmd 001A  __size_of_I2C_Master_RepeatedStart 0007  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 005E  
                 __size_of___lwdiv 003C                   __size_of___lwmod 0032  
               __end_of__stringtab 0013                         sprintf@val 0029  
                  _I2C_Master_Init 030C                    _I2C_Master_Read 02AE  
                  _I2C_Master_Wait 01A4                         strcat@from 0070  
                  _I2C_Master_Stop 018E                    ___lwdiv@divisor 0070  
                  ___lwdiv@counter 0077                           __ptext10 023B  
                         __ptext11 071E                           __ptext20 02AE  
                         __ptext12 02DA                           __ptext21 01A4  
                         __ptext13 037B                           __ptext22 03B7  
                         __ptext14 01B8                           __ptext23 0342  
                         __ptext15 0195                           __ptext24 03F4  
                         __ptext16 01FD                           __ptext25 01AD  
                         __ptext17 019C                           __ptext26 01E3  
                         __ptext18 018E                           __ptext27 01C9  
                         __ptext19 0187                  __CFG_BOR4V$BOR40V 0000  
                         _get_hall 01FD                           _get_temp 05C2  
                         _get_time 054C                   __size_of_sprintf 00D8  
                    __size_of_main 00BF           __end_of_I2C_Master_Start 018E  
         __end_of_I2C_Master_Write 01A4                 Lcd_Write_Char@temp 0072  
                        sprintf@ap 0026                          sprintf@sp 002B  
                 ___lwmod@dividend 007A                   ___lldiv@dividend 0074  
                        stringcode 000D                         _OSCCONbits 008F  
          __end_of_I2C_Master_Init 0342            __end_of_I2C_Master_Read 02DA  
          __end_of_I2C_Master_Wait 01AD            __end_of_I2C_Master_Stop 0195  
               Lcd_Set_Cursor@temp 007A                           sprintf@c 002C  
                         sprintf@f 0020                           strcat@cp 0073  
                         strcat@to 0072                           strcmp@s1 0076  
                         strcmp@s2 0070                   ___lldiv@quotient 0079  
                I2C_Master_Write@d 0070                    ___lwmod@divisor 0078  
                  ___lwmod@counter 007D                           stringdir 000D  
                 get_tripwire@trip 0077                           stringtab 0003  
                      _SSPCON2bits 0091  
