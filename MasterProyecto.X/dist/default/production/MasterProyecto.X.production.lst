

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Mar 05 22:42:27 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	text34,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.05
    48                           ; Generated 20/12/2018 GMT
    49                           ; 
    50                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  008F                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  0105                     	;# 
   145  0107                     	;# 
   146  0108                     	;# 
   147  0109                     	;# 
   148  010C                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0185                     	;# 
   154  0187                     	;# 
   155  0188                     	;# 
   156  0189                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001B                     	;# 
   189  001B                     	;# 
   190  001C                     	;# 
   191  001D                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  0086                     	;# 
   197  0087                     	;# 
   198  0088                     	;# 
   199  0089                     	;# 
   200  008C                     	;# 
   201  008D                     	;# 
   202  008E                     	;# 
   203  008F                     	;# 
   204  0090                     	;# 
   205  0091                     	;# 
   206  0092                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0097                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  0105                     	;# 
   223  0107                     	;# 
   224  0108                     	;# 
   225  0109                     	;# 
   226  010C                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  0185                     	;# 
   232  0187                     	;# 
   233  0188                     	;# 
   234  0189                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237                           
   238                           	psect	strings
   239  0003                     __pstrings:	
   240  0003                     stringtab:	
   241  0003                     __stringtab:	
   242                           
   243                           ;	String table - string pointers are 1 byte each
   244  0003  1BFF               	btfsc	btemp+1,7
   245  0004  280D               	ljmp	stringcode
   246  0005  1383               	bcf	3,7
   247  0006  187F               	btfsc	btemp+1,0
   248  0007  1783               	bsf	3,7
   249  0008  0800               	movf	0,w
   250  0009  0A84               	incf	4,f
   251  000A  1903               	skipnz
   252  000B  0AFF               	incf	btemp+1,f
   253  000C  0008               	return
   254  000D                     stringcode:	
   255  000D                     stringdir:	
   256  000D  3000               	movlw	high stringdir
   257  000E  008A               	movwf	10
   258  000F  0804               	movf	4,w
   259  0010  0A84               	incf	4,f
   260  0011  0782               	addwf	2,f
   261  0012                     __stringbase:	
   262  0012  3400               	retlw	0
   263  0013                     __end_of__stringtab:	
   264  0013                     _dpowers:	
   265  0013  3401               	retlw	1
   266  0014  3400               	retlw	0
   267  0015  340A               	retlw	10
   268  0016  3400               	retlw	0
   269  0017  3464               	retlw	100
   270  0018  3400               	retlw	0
   271  0019  34E8               	retlw	232
   272  001A  3403               	retlw	3
   273  001B  3410               	retlw	16
   274  001C  3427               	retlw	39
   275  001D                     __end_of_dpowers:	
   276  0007                     _PORTC	set	7
   277  0005                     _PORTA	set	5
   278  0006                     _PORTB	set	6
   279  0007                     _PORTCbits	set	7
   280  0005                     _PORTAbits	set	5
   281  0014                     _SSPCONbits	set	20
   282  0018                     _RCSTAbits	set	24
   283  0019                     _TXREG	set	25
   284  001A                     _RCREG	set	26
   285  0006                     _PORTBbits	set	6
   286  0013                     _SSPBUF	set	19
   287  0014                     _SSPCON	set	20
   288  0065                     _RCIF	set	101
   289  00C4                     _CREN	set	196
   290  00C7                     _SPEN	set	199
   291  0063                     _SSPIF	set	99
   292  005E                     _PEIE	set	94
   293  005F                     _GIE	set	95
   294  0087                     _TRISC	set	135
   295  0088                     _TRISD	set	136
   296  0085                     _TRISA	set	133
   297  0086                     _TRISB	set	134
   298  0099                     _SPBRG	set	153
   299  008F                     _OSCCONbits	set	143
   300  0091                     _SSPCON2bits	set	145
   301  0087                     _TRISCbits	set	135
   302  0094                     _SSPSTAT	set	148
   303  0093                     _SSPADD	set	147
   304  0091                     _SSPCON2	set	145
   305  04C1                     _TRMT	set	1217
   306  04C5                     _TXEN	set	1221
   307  043E                     _TRISC6	set	1086
   308  043F                     _TRISC7	set	1087
   309  04C4                     _SYNC	set	1220
   310  04C2                     _BRGH	set	1218
   311  0463                     _SSPIE	set	1123
   312  043C                     _TRISC4	set	1084
   313  043B                     _TRISC3	set	1083
   314  048B                     _RCEN	set	1163
   315  0188                     _ANSEL	set	392
   316  0189                     _ANSELH	set	393
   317  001D                     STR_10:	
   318  001D  3444               	retlw	68	;'D'
   319  001E  346F               	retlw	111	;'o'
   320  001F  346F               	retlw	111	;'o'
   321  0020  3472               	retlw	114	;'r'
   322  0021  3420               	retlw	32	;' '
   323  0022  344F               	retlw	79	;'O'
   324  0023  3450               	retlw	80	;'P'
   325  0024  3445               	retlw	69	;'E'
   326  0025  344E               	retlw	78	;'N'
   327  0026  3420               	retlw	32	;' '
   328  0027  3420               	retlw	32	;' '
   329  0028  3400               	retlw	0
   330  0029                     STR_11:	
   331  0029  3444               	retlw	68	;'D'
   332  002A  346F               	retlw	111	;'o'
   333  002B  346F               	retlw	111	;'o'
   334  002C  3472               	retlw	114	;'r'
   335  002D  3420               	retlw	32	;' '
   336  002E  3443               	retlw	67	;'C'
   337  002F  344C               	retlw	76	;'L'
   338  0030  344F               	retlw	79	;'O'
   339  0031  3453               	retlw	83	;'S'
   340  0032  3445               	retlw	69	;'E'
   341  0033  3444               	retlw	68	;'D'
   342  0034  3400               	retlw	0
   343  0035                     STR_8:	
   344  0035  3420               	retlw	32	;' '
   345  0036  3420               	retlw	32	;' '
   346  0037  3420               	retlw	32	;' '
   347  0038  3420               	retlw	32	;' '
   348  0039  3420               	retlw	32	;' '
   349  003A  3420               	retlw	32	;' '
   350  003B  3420               	retlw	32	;' '
   351  003C  3420               	retlw	32	;' '
   352  003D  3420               	retlw	32	;' '
   353  003E  3400               	retlw	0
   354  003F                     STR_1:	
   355  003F  344C               	retlw	76	;'L'
   356  0040  3455               	retlw	85	;'U'
   357  0041  344E               	retlw	78	;'N'
   358  0042  3445               	retlw	69	;'E'
   359  0043  3453               	retlw	83	;'S'
   360  0044  3420               	retlw	32	;' '
   361  0045  3420               	retlw	32	;' '
   362  0046  3420               	retlw	32	;' '
   363  0047  3420               	retlw	32	;' '
   364  0048  3400               	retlw	0
   365  0049                     STR_6:	
   366  0049  3453               	retlw	83	;'S'
   367  004A  3441               	retlw	65	;'A'
   368  004B  3442               	retlw	66	;'B'
   369  004C  3441               	retlw	65	;'A'
   370  004D  3444               	retlw	68	;'D'
   371  004E  344F               	retlw	79	;'O'
   372  004F  3420               	retlw	32	;' '
   373  0050  3420               	retlw	32	;' '
   374  0051  3420               	retlw	32	;' '
   375  0052  3400               	retlw	0
   376  0053                     STR_2:	
   377  0053  344D               	retlw	77	;'M'
   378  0054  3441               	retlw	65	;'A'
   379  0055  3452               	retlw	82	;'R'
   380  0056  3454               	retlw	84	;'T'
   381  0057  3445               	retlw	69	;'E'
   382  0058  3453               	retlw	83	;'S'
   383  0059  3420               	retlw	32	;' '
   384  005A  3420               	retlw	32	;' '
   385  005B  3420               	retlw	32	;' '
   386  005C  3400               	retlw	0
   387  005D                     STR_4:	
   388  005D  344A               	retlw	74	;'J'
   389  005E  3455               	retlw	85	;'U'
   390  005F  3445               	retlw	69	;'E'
   391  0060  3456               	retlw	86	;'V'
   392  0061  3445               	retlw	69	;'E'
   393  0062  3453               	retlw	83	;'S'
   394  0063  3420               	retlw	32	;' '
   395  0064  3420               	retlw	32	;' '
   396  0065  3420               	retlw	32	;' '
   397  0066  3400               	retlw	0
   398  0067                     STR_7:	
   399  0067  3444               	retlw	68	;'D'
   400  0068  344F               	retlw	79	;'O'
   401  0069  344D               	retlw	77	;'M'
   402  006A  3449               	retlw	73	;'I'
   403  006B  344E               	retlw	78	;'N'
   404  006C  3447               	retlw	71	;'G'
   405  006D  344F               	retlw	79	;'O'
   406  006E  3420               	retlw	32	;' '
   407  006F  3420               	retlw	32	;' '
   408  0070  3400               	retlw	0
   409  0071                     STR_5:	
   410  0071  3456               	retlw	86	;'V'
   411  0072  3449               	retlw	73	;'I'
   412  0073  3445               	retlw	69	;'E'
   413  0074  3452               	retlw	82	;'R'
   414  0075  344E               	retlw	78	;'N'
   415  0076  3445               	retlw	69	;'E'
   416  0077  3453               	retlw	83	;'S'
   417  0078  3420               	retlw	32	;' '
   418  0079  3420               	retlw	32	;' '
   419  007A  3400               	retlw	0
   420  007B                     STR_3:	
   421  007B  344D               	retlw	77	;'M'
   422  007C  3449               	retlw	73	;'I'
   423  007D  3445               	retlw	69	;'E'
   424  007E  3452               	retlw	82	;'R'
   425  007F  3443               	retlw	67	;'C'
   426  0080  344F               	retlw	79	;'O'
   427  0081  344C               	retlw	76	;'L'
   428  0082  3445               	retlw	69	;'E'
   429  0083  3453               	retlw	83	;'S'
   430  0084  3400               	retlw	0
   431  0085                     STR_12:	
   432  0085  3454               	retlw	84	;'T'
   433  0086  3472               	retlw	114	;'r'
   434  0087  3469               	retlw	105	;'i'
   435  0088  3470               	retlw	112	;'p'
   436  0089  3420               	retlw	32	;' '
   437  008A  344F               	retlw	79	;'O'
   438  008B  344E               	retlw	78	;'N'
   439  008C  3420               	retlw	32	;' '
   440  008D  3400               	retlw	0
   441  008E                     STR_13:	
   442  008E  3454               	retlw	84	;'T'
   443  008F  3472               	retlw	114	;'r'
   444  0090  3469               	retlw	105	;'i'
   445  0091  3470               	retlw	112	;'p'
   446  0092  3420               	retlw	32	;' '
   447  0093  344F               	retlw	79	;'O'
   448  0094  3446               	retlw	70	;'F'
   449  0095  3446               	retlw	70	;'F'
   450  0096  3400               	retlw	0
   451  0097                     STR_14:	
   452  0097  3450               	retlw	80	;'P'
   453  0098  3449               	retlw	73	;'I'
   454  0099  3452               	retlw	82	;'R'
   455  009A  3420               	retlw	32	;' '
   456  009B  344F               	retlw	79	;'O'
   457  009C  344E               	retlw	78	;'N'
   458  009D  3420               	retlw	32	;' '
   459  009E  3400               	retlw	0
   460  009F                     STR_15:	
   461  009F  3450               	retlw	80	;'P'
   462  00A0  3449               	retlw	73	;'I'
   463  00A1  3452               	retlw	82	;'R'
   464  00A2  3420               	retlw	32	;' '
   465  00A3  344F               	retlw	79	;'O'
   466  00A4  3446               	retlw	70	;'F'
   467  00A5  3446               	retlw	70	;'F'
   468  00A6  3400               	retlw	0
   469  00A7                     STR_9:	
   470  00A7  3432               	retlw	50	;'2'
   471  00A8  3433               	retlw	51	;'3'
   472  00A9  342E               	retlw	46	;'.'
   473  00AA  3435               	retlw	53	;'5'
   474  00AB  3430               	retlw	48	;'0'
   475  00AC  3400               	retlw	0
   476  00AD                     STR_19:	
   477  00AD  342E               	retlw	46	;'.'
   478  00AE  3425               	retlw	37	;'%'
   479  00AF  3464               	retlw	100	;'d'
   480  00B0  3430               	retlw	48	;'0'
   481  00B1  3400               	retlw	0
   482  00B2                     STR_20:	
   483  00B2  342E               	retlw	46	;'.'
   484  00B3  3425               	retlw	37	;'%'
   485  00B4  3464               	retlw	100	;'d'
   486  00B5  3400               	retlw	0
   487  0098                     
   488                           ; #config settings
   489  0000                     
   490                           	psect	cinit
   491  07F5                     start_initialization:	
   492  07F5                     __initialization:	
   493                           
   494                           ; Clear objects allocated to BANK0
   495  07F5  1383               	bcf	3,7	;select IRP bank0
   496  07F6  3038               	movlw	low __pbssBANK0
   497  07F7  0084               	movwf	4
   498  07F8  304E               	movlw	low (__pbssBANK0+22)
   499  07F9  120A  158A  2502   	fcall	clear_ram0
   500  07FC                     end_of_initialization:	
   501                           ;End of C runtime variable initialization code
   502                           
   503  07FC                     __end_of__initialization:	
   504  07FC  0183               	clrf	3
   505  07FD  120A  118A  2D63   	ljmp	_main	;jump to C main() function
   506                           
   507                           	psect	bssBANK0
   508  0038                     __pbssBANK0:	
   509  0038                     _change:	
   510  0038                     	ds	1
   511  0039                     _j:	
   512  0039                     	ds	1
   513  003A                     _day2:	
   514  003A                     	ds	1
   515  003B                     _day1:	
   516  003B                     	ds	1
   517  003C                     _sent:	
   518  003C                     	ds	1
   519  003D                     _state:	
   520  003D                     	ds	1
   521  003E                     _IR:	
   522  003E                     	ds	1
   523  003F                     _PIR:	
   524  003F                     	ds	1
   525  0040                     _trip:	
   526  0040                     	ds	1
   527  0041                     _door:	
   528  0041                     	ds	1
   529  0042                     _temp:	
   530  0042                     	ds	6
   531  0048                     _time:	
   532  0048                     	ds	6
   533                           
   534                           	psect	clrtext
   535  0D02                     clear_ram0:	
   536                           ;	Called with FSR containing the base address, and
   537                           ;	W with the last address+1
   538                           
   539  0D02  0064               	clrwdt	;clear the watchdog before getting into this loop
   540  0D03                     clrloop0:	
   541  0D03  0180               	clrf	0	;clear RAM location pointed to by FSR
   542  0D04  0A84               	incf	4,f	;increment pointer
   543  0D05  0604               	xorwf	4,w	;XOR with final address
   544  0D06  1903               	btfsc	3,2	;have we reached the end yet?
   545  0D07  3400               	retlw	0	;all done for this memory range, return
   546  0D08  0604               	xorwf	4,w	;XOR again to restore value
   547  0D09  2D03               	goto	clrloop0	;do the next byte
   548                           
   549                           	psect	cstackCOMMON
   550  0070                     __pcstackCOMMON:	
   551  0070                     ?_setup:	
   552  0070                     ?_get_temp:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_get_hall:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_get_tripwire:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_get_PIR:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_get_IR:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_get_time:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_get_day:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_strcat:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_I2C_Master_Wait:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ??_I2C_Master_Wait:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_I2C_Master_Start:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ??_I2C_Master_Start:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_I2C_Master_RepeatedStart:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ??_I2C_Master_RepeatedStart:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_I2C_Master_Stop:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ??_I2C_Master_Stop:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_I2C_Master_Write:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_Lcd_Port:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ??_Lcd_Port:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_Lcd_Cmd:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_Lcd_Clear:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_Lcd_Init:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_Lcd_Write_Char:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_initOscilador:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ??_initOscilador:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_UART_TX_Empty:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ??_UART_TX_Empty:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_UART_Write:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ??_UART_Write:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_main:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?___bmul:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_strcmp:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_I2C_Master_Read:	
   649                           ; 2 bytes @ 0x0
   650                           
   651  0070                     ?___lwdiv:	
   652                           ; 2 bytes @ 0x0
   653                           
   654  0070                     ?___lldiv:	
   655                           ; 2 bytes @ 0x0
   656                           
   657  0070                     ?___aldiv:	
   658                           ; 4 bytes @ 0x0
   659                           
   660  0070                     Lcd_Port@a:	
   661                           ; 4 bytes @ 0x0
   662                           
   663  0070                     UART_Write@data:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ___bmul@multiplicand:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     strcat@from:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     strcmp@s2:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     I2C_Master_Write@d:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     I2C_Master_Read@a:	
   679                           ; 2 bytes @ 0x0
   680                           
   681  0070                     ___lwdiv@divisor:	
   682                           ; 2 bytes @ 0x0
   683                           
   684  0070                     ___lldiv@divisor:	
   685                           ; 2 bytes @ 0x0
   686                           
   687  0070                     ___aldiv@divisor:	
   688                           ; 4 bytes @ 0x0
   689                           
   690                           
   691                           ; 4 bytes @ 0x0
   692  0070                     	ds	1
   693  0071                     ??_strcat:	
   694  0071                     ??_Lcd_Cmd:	
   695                           ; 1 bytes @ 0x1
   696                           
   697  0071                     ??_Lcd_Write_Char:	
   698                           ; 1 bytes @ 0x1
   699                           
   700  0071                     ??___bmul:	
   701                           ; 1 bytes @ 0x1
   702                           
   703                           
   704                           ; 1 bytes @ 0x1
   705  0071                     	ds	1
   706  0072                     ??_strcmp:	
   707  0072                     ??_I2C_Master_Write:	
   708                           ; 1 bytes @ 0x2
   709                           
   710  0072                     ??_I2C_Master_Read:	
   711                           ; 1 bytes @ 0x2
   712                           
   713  0072                     Lcd_Write_Char@temp:	
   714                           ; 1 bytes @ 0x2
   715                           
   716  0072                     initOscilador@option:	
   717                           ; 1 bytes @ 0x2
   718                           
   719  0072                     ___bmul@product:	
   720                           ; 1 bytes @ 0x2
   721                           
   722  0072                     strcat@to:	
   723                           ; 1 bytes @ 0x2
   724                           
   725  0072                     ___lwdiv@dividend:	
   726                           ; 1 bytes @ 0x2
   727                           
   728                           
   729                           ; 2 bytes @ 0x2
   730  0072                     	ds	1
   731  0073                     Lcd_Cmd@a:	
   732  0073                     Lcd_Write_Char@y:	
   733                           ; 1 bytes @ 0x3
   734                           
   735  0073                     ___bmul@multiplier:	
   736                           ; 1 bytes @ 0x3
   737                           
   738  0073                     strcat@cp:	
   739                           ; 1 bytes @ 0x3
   740                           
   741                           
   742                           ; 1 bytes @ 0x3
   743  0073                     	ds	1
   744  0074                     ??_Lcd_Clear:	
   745  0074                     ?_Lcd_Set_Cursor:	
   746                           ; 1 bytes @ 0x4
   747                           
   748  0074                     ??_Lcd_Init:	
   749                           ; 1 bytes @ 0x4
   750                           
   751  0074                     ??___lwdiv:	
   752                           ; 1 bytes @ 0x4
   753                           
   754  0074                     Lcd_Set_Cursor@b:	
   755                           ; 1 bytes @ 0x4
   756                           
   757  0074                     Lcd_Write_Char@a:	
   758                           ; 1 bytes @ 0x4
   759                           
   760  0074                     I2C_Master_Read@temp:	
   761                           ; 1 bytes @ 0x4
   762                           
   763  0074                     ___lldiv@dividend:	
   764                           ; 2 bytes @ 0x4
   765                           
   766  0074                     ___aldiv@dividend:	
   767                           ; 4 bytes @ 0x4
   768                           
   769                           
   770                           ; 4 bytes @ 0x4
   771  0074                     	ds	1
   772  0075                     ??_Lcd_Set_Cursor:	
   773  0075                     ?_Lcd_Write_String:	
   774                           ; 1 bytes @ 0x5
   775                           
   776  0075                     strcmp@r:	
   777                           ; 1 bytes @ 0x5
   778                           
   779  0075                     Lcd_Write_String@a:	
   780                           ; 1 bytes @ 0x5
   781                           
   782  0075                     ___lwdiv@quotient:	
   783                           ; 2 bytes @ 0x5
   784                           
   785                           
   786                           ; 2 bytes @ 0x5
   787  0075                     	ds	1
   788  0076                     ??_get_hall:	
   789  0076                     ??_get_tripwire:	
   790                           ; 1 bytes @ 0x6
   791                           
   792  0076                     ??_get_PIR:	
   793                           ; 1 bytes @ 0x6
   794                           
   795  0076                     ??_get_IR:	
   796                           ; 1 bytes @ 0x6
   797                           
   798  0076                     ??_get_time:	
   799                           ; 1 bytes @ 0x6
   800                           
   801  0076                     ??_get_day:	
   802                           ; 1 bytes @ 0x6
   803                           
   804  0076                     strcmp@s1:	
   805                           ; 1 bytes @ 0x6
   806                           
   807                           
   808                           ; 1 bytes @ 0x6
   809  0076                     	ds	1
   810  0077                     ??_Lcd_Write_String:	
   811  0077                     Lcd_Set_Cursor@a:	
   812                           ; 1 bytes @ 0x7
   813                           
   814  0077                     get_day@d:	
   815                           ; 1 bytes @ 0x7
   816                           
   817  0077                     get_hall@key:	
   818                           ; 1 bytes @ 0x7
   819                           
   820  0077                     get_tripwire@trip:	
   821                           ; 1 bytes @ 0x7
   822                           
   823  0077                     get_PIR@PIR:	
   824                           ; 1 bytes @ 0x7
   825                           
   826  0077                     get_IR@IR:	
   827                           ; 1 bytes @ 0x7
   828                           
   829  0077                     ___lwdiv@counter:	
   830                           ; 1 bytes @ 0x7
   831                           
   832                           
   833                           ; 1 bytes @ 0x7
   834  0077                     	ds	1
   835  0078                     ??___lldiv:	
   836  0078                     ??___aldiv:	
   837                           ; 1 bytes @ 0x8
   838                           
   839  0078                     ?___lwmod:	
   840                           ; 1 bytes @ 0x8
   841                           
   842  0078                     Lcd_Set_Cursor@z:	
   843                           ; 2 bytes @ 0x8
   844                           
   845  0078                     get_time@hour:	
   846                           ; 1 bytes @ 0x8
   847                           
   848  0078                     ___lwmod@divisor:	
   849                           ; 1 bytes @ 0x8
   850                           
   851                           
   852                           ; 2 bytes @ 0x8
   853  0078                     	ds	1
   854  0079                     Lcd_Set_Cursor@y:	
   855  0079                     get_time@min:	
   856                           ; 1 bytes @ 0x9
   857                           
   858  0079                     UART_Init@x:	
   859                           ; 1 bytes @ 0x9
   860                           
   861  0079                     ___lldiv@quotient:	
   862                           ; 2 bytes @ 0x9
   863                           
   864                           
   865                           ; 4 bytes @ 0x9
   866  0079                     	ds	1
   867  007A                     Lcd_Set_Cursor@temp:	
   868  007A                     get_time@time_string:	
   869                           ; 1 bytes @ 0xA
   870                           
   871  007A                     Lcd_Write_String@i:	
   872                           ; 1 bytes @ 0xA
   873                           
   874  007A                     ___lwmod@dividend:	
   875                           ; 2 bytes @ 0xA
   876                           
   877                           
   878                           ; 2 bytes @ 0xA
   879  007A                     	ds	2
   880  007C                     ??___lwmod:	
   881                           
   882                           ; 1 bytes @ 0xC
   883  007C                     	ds	1
   884  007D                     ___lldiv@counter:	
   885  007D                     ___lwmod@counter:	
   886                           ; 1 bytes @ 0xD
   887                           
   888                           
   889                           ; 1 bytes @ 0xD
   890  007D                     	ds	1
   891  007E                     ??_setup:	
   892                           
   893                           	psect	cstackBANK0
   894  0020                     __pcstackBANK0:	
   895                           ; 1 bytes @ 0xE
   896                           
   897  0020                     ?_I2C_Master_Init:	
   898  0020                     ?_sprintf:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0020                     sprintf@f:	
   902                           ; 2 bytes @ 0x0
   903                           
   904  0020                     ___aldiv@counter:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0020                     I2C_Master_Init@c:	
   908                           ; 1 bytes @ 0x0
   909                           
   910                           
   911                           ; 4 bytes @ 0x0
   912  0020                     	ds	1
   913  0021                     ___aldiv@sign:	
   914                           
   915                           ; 1 bytes @ 0x1
   916  0021                     	ds	1
   917  0022                     ___aldiv@quotient:	
   918                           
   919                           ; 4 bytes @ 0x2
   920  0022                     	ds	1
   921  0023                     ??_sprintf:	
   922                           
   923                           ; 1 bytes @ 0x3
   924  0023                     	ds	1
   925  0024                     ??_I2C_Master_Init:	
   926                           
   927                           ; 1 bytes @ 0x4
   928  0024                     	ds	2
   929  0026                     ?_UART_Init:	
   930  0026                     sprintf@ap:	
   931                           ; 1 bytes @ 0x6
   932                           
   933  0026                     UART_Init@baudrate:	
   934                           ; 1 bytes @ 0x6
   935                           
   936                           
   937                           ; 4 bytes @ 0x6
   938  0026                     	ds	1
   939  0027                     sprintf@flag:	
   940                           
   941                           ; 1 bytes @ 0x7
   942  0027                     	ds	1
   943  0028                     sprintf@prec:	
   944                           
   945                           ; 1 bytes @ 0x8
   946  0028                     	ds	1
   947  0029                     sprintf@val:	
   948                           
   949                           ; 2 bytes @ 0x9
   950  0029                     	ds	1
   951  002A                     ??_UART_Init:	
   952                           
   953                           ; 1 bytes @ 0xA
   954  002A                     	ds	1
   955  002B                     sprintf@sp:	
   956                           
   957                           ; 1 bytes @ 0xB
   958  002B                     	ds	1
   959  002C                     sprintf@c:	
   960                           
   961                           ; 1 bytes @ 0xC
   962  002C                     	ds	1
   963  002D                     ??_get_temp:	
   964                           
   965                           ; 1 bytes @ 0xD
   966  002D                     	ds	3
   967  0030                     get_temp@decimal:	
   968                           
   969                           ; 3 bytes @ 0x10
   970  0030                     	ds	3
   971  0033                     get_temp@tempMSB:	
   972                           
   973                           ; 1 bytes @ 0x13
   974  0033                     	ds	1
   975  0034                     get_temp@temp_string:	
   976                           
   977                           ; 1 bytes @ 0x14
   978  0034                     	ds	1
   979  0035                     get_temp@tempLSB:	
   980                           
   981                           ; 1 bytes @ 0x15
   982  0035                     	ds	1
   983  0036                     ??_main:	
   984                           
   985                           ; 1 bytes @ 0x16
   986  0036                     	ds	2
   987                           
   988                           	psect	maintext
   989  0563                     __pmaintext:	
   990 ;;
   991 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   992 ;;
   993 ;; *************** function _main *****************
   994 ;; Defined at:
   995 ;;		line 53 in file "mainMaster.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : B00/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0
  1011 ;;      Temps:          0       2       0       0       0
  1012 ;;      Totals:         0       2       0       0       0
  1013 ;;Total ram usage:        2 bytes
  1014 ;; Hardware stack levels required when called:    4
  1015 ;; This function calls:
  1016 ;;		_Lcd_Clear
  1017 ;;		_Lcd_Set_Cursor
  1018 ;;		_Lcd_Write_Char
  1019 ;;		_Lcd_Write_String
  1020 ;;		_UART_TX_Empty
  1021 ;;		_UART_Write
  1022 ;;		_get_IR
  1023 ;;		_get_PIR
  1024 ;;		_get_day
  1025 ;;		_get_hall
  1026 ;;		_get_temp
  1027 ;;		_get_time
  1028 ;;		_get_tripwire
  1029 ;;		_setup
  1030 ;;		_strcmp
  1031 ;; This function is called by:
  1032 ;;		Startup code after reset
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           
  1037                           ;psect for function _main
  1038  0563                     _main:	
  1039                           
  1040                           ;mainMaster.c: 54:     setup();
  1041                           
  1042                           ;incstack = 0
  1043                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1044  0563  120A  158A  2776  120A  118A  	fcall	_setup
  1045                           
  1046                           ;mainMaster.c: 55:     state = 0;
  1047  0568  1283               	bcf	3,5	;RP0=0, select bank0
  1048  0569  1303               	bcf	3,6	;RP1=0, select bank0
  1049  056A  01BD               	clrf	_state
  1050                           
  1051                           ;mainMaster.c: 56:     Lcd_Clear();
  1052  056B  120A  158A  251D  120A  118A  	fcall	_Lcd_Clear
  1053  0570                     l2240:	
  1054                           
  1055                           ;mainMaster.c: 60:         RCSTAbits.SPEN = 0;
  1056  0570  1283               	bcf	3,5	;RP0=0, select bank0
  1057  0571  1303               	bcf	3,6	;RP1=0, select bank0
  1058  0572  1398               	bcf	24,7	;volatile
  1059                           
  1060                           ;mainMaster.c: 61:         SSPCONbits.SSPEN = 1;
  1061  0573  1694               	bsf	20,5	;volatile
  1062                           
  1063                           ;mainMaster.c: 63:         get_temp(temp);
  1064  0574  3042               	movlw	(low (_temp| 0))& (0+255)
  1065  0575  120A  118A  2312  120A  118A  	fcall	_get_temp
  1066                           
  1067                           ;mainMaster.c: 64:         door = get_hall();
  1068  057A  120A  158A  25AB  120A  118A  	fcall	_get_hall
  1069  057F  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0580  1303               	bcf	3,6	;RP1=0, select bank0
  1071  0581  00B6               	movwf	??_main
  1072  0582  0836               	movf	??_main,w
  1073  0583  00C1               	movwf	_door
  1074                           
  1075                           ;mainMaster.c: 65:         trip = get_tripwire();
  1076  0584  120A  158A  25CA  120A  118A  	fcall	_get_tripwire
  1077  0589  1283               	bcf	3,5	;RP0=0, select bank0
  1078  058A  1303               	bcf	3,6	;RP1=0, select bank0
  1079  058B  00B6               	movwf	??_main
  1080  058C  0836               	movf	??_main,w
  1081  058D  00C0               	movwf	_trip
  1082                           
  1083                           ;mainMaster.c: 66:         PIR = get_PIR();
  1084  058E  120A  158A  258C  120A  118A  	fcall	_get_PIR
  1085  0593  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0594  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0595  00B6               	movwf	??_main
  1088  0596  0836               	movf	??_main,w
  1089  0597  00BF               	movwf	_PIR
  1090                           
  1091                           ;mainMaster.c: 67:         IR = get_IR();
  1092  0598  120A  158A  256D  120A  118A  	fcall	_get_IR
  1093  059D  1283               	bcf	3,5	;RP0=0, select bank0
  1094  059E  1303               	bcf	3,6	;RP1=0, select bank0
  1095  059F  00B6               	movwf	??_main
  1096  05A0  0836               	movf	??_main,w
  1097  05A1  00BE               	movwf	_IR
  1098                           
  1099                           ;mainMaster.c: 68:         get_time(time);
  1100  05A2  3048               	movlw	(low (_time| 0))& (0+255)
  1101  05A3  120A  118A  2202  120A  118A  	fcall	_get_time
  1102                           
  1103                           ;mainMaster.c: 69:         day1 = get_day();
  1104  05A8  120A  158A  2695  120A  118A  	fcall	_get_day
  1105  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  1106  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  1107  05AF  00B6               	movwf	??_main
  1108  05B0  0836               	movf	??_main,w
  1109  05B1  00BB               	movwf	_day1
  1110                           
  1111                           ;mainMaster.c: 71:         SSPCONbits.SSPEN = 0;
  1112  05B2  1294               	bcf	20,5	;volatile
  1113                           
  1114                           ;mainMaster.c: 72:         RCSTAbits.SPEN = 1;
  1115  05B3  1798               	bsf	24,7	;volatile
  1116                           
  1117                           ;mainMaster.c: 74:         if (UART_TX_Empty()){
  1118  05B4  120A  158A  24DF  120A  118A  	fcall	_UART_TX_Empty
  1119  05B9  3A00               	xorlw	0
  1120  05BA  1903               	skipnz
  1121  05BB  2ED2               	goto	l2322
  1122                           
  1123                           ;mainMaster.c: 75:             UART_Write(temp[0]);
  1124  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  1125  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  1126  05BE  0842               	movf	_temp,w
  1127  05BF  120A  158A  2513  120A  118A  	fcall	_UART_Write
  1128                           
  1129                           ;mainMaster.c: 76:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1130  05C4  3003               	movlw	3
  1131  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1132  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1133  05C7  00B7               	movwf	??_main+1
  1134  05C8  3097               	movlw	151
  1135  05C9  00B6               	movwf	??_main
  1136  05CA                     u1757:	
  1137  05CA  0BB6               	decfsz	??_main,f
  1138  05CB  2DCA               	goto	u1757
  1139  05CC  0BB7               	decfsz	??_main+1,f
  1140  05CD  2DCA               	goto	u1757
  1141                           
  1142                           ;mainMaster.c: 77:             UART_Write(temp[1]);
  1143  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  1144  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  1145  05D0  0843               	movf	_temp+1,w
  1146  05D1  120A  158A  2513  120A  118A  	fcall	_UART_Write
  1147                           
  1148                           ;mainMaster.c: 78:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1149  05D6  3003               	movlw	3
  1150  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1151  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1152  05D9  00B7               	movwf	??_main+1
  1153  05DA  3097               	movlw	151
  1154  05DB  00B6               	movwf	??_main
  1155  05DC                     u1767:	
  1156  05DC  0BB6               	decfsz	??_main,f
  1157  05DD  2DDC               	goto	u1767
  1158  05DE  0BB7               	decfsz	??_main+1,f
  1159  05DF  2DDC               	goto	u1767
  1160                           
  1161                           ;mainMaster.c: 79:             UART_Write(temp[2]);
  1162  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  1163  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  1164  05E2  0844               	movf	_temp+2,w
  1165  05E3  120A  158A  2513  120A  118A  	fcall	_UART_Write
  1166                           
  1167                           ;mainMaster.c: 80:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1168  05E8  3003               	movlw	3
  1169  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  1170  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  1171  05EB  00B7               	movwf	??_main+1
  1172  05EC  3097               	movlw	151
  1173  05ED  00B6               	movwf	??_main
  1174  05EE                     u1777:	
  1175  05EE  0BB6               	decfsz	??_main,f
  1176  05EF  2DEE               	goto	u1777
  1177  05F0  0BB7               	decfsz	??_main+1,f
  1178  05F1  2DEE               	goto	u1777
  1179                           
  1180                           ;mainMaster.c: 81:             UART_Write(temp[3]);
  1181  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1182  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  1183  05F4  0845               	movf	_temp+3,w
  1184  05F5  120A  158A  2513  120A  118A  	fcall	_UART_Write
  1185                           
  1186                           ;mainMaster.c: 82:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1187  05FA  3003               	movlw	3
  1188  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1189  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1190  05FD  00B7               	movwf	??_main+1
  1191  05FE  3097               	movlw	151
  1192  05FF  00B6               	movwf	??_main
  1193  0600                     u1787:	
  1194  0600  0BB6               	decfsz	??_main,f
  1195  0601  2E00               	goto	u1787
  1196  0602  0BB7               	decfsz	??_main+1,f
  1197  0603  2E00               	goto	u1787
  1198                           
  1199                           ;mainMaster.c: 83:             UART_Write(temp[4]);
  1200  0604  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0605  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0606  0846               	movf	_temp+4,w
  1203  0607  120A  158A  2513  120A  118A  	fcall	_UART_Write
  1204                           
  1205                           ;mainMaster.c: 84:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1206  060C  3003               	movlw	3
  1207  060D  1283               	bcf	3,5	;RP0=0, select bank0
  1208  060E  1303               	bcf	3,6	;RP1=0, select bank0
  1209  060F  00B7               	movwf	??_main+1
  1210  0610  3097               	movlw	151
  1211  0611  00B6               	movwf	??_main
  1212  0612                     u1797:	
  1213  0612  0BB6               	decfsz	??_main,f
  1214  0613  2E12               	goto	u1797
  1215  0614  0BB7               	decfsz	??_main+1,f
  1216  0615  2E12               	goto	u1797
  1217                           
  1218                           ;mainMaster.c: 85:             UART_Write(time[0]);
  1219  0616  1283               	bcf	3,5	;RP0=0, select bank0
  1220  0617  1303               	bcf	3,6	;RP1=0, select bank0
  1221  0618  0848               	movf	_time,w
  1222  0619  120A  158A  2513  120A  118A  	fcall	_UART_Write
  1223                           
  1224                           ;mainMaster.c: 86:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1225  061E  3003               	movlw	3
  1226  061F  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0620  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0621  00B7               	movwf	??_main+1
  1229  0622  3097               	movlw	151
  1230  0623  00B6               	movwf	??_main
  1231  0624                     u1807:	
  1232  0624  0BB6               	decfsz	??_main,f
  1233  0625  2E24               	goto	u1807
  1234  0626  0BB7               	decfsz	??_main+1,f
  1235  0627  2E24               	goto	u1807
  1236                           
  1237                           ;mainMaster.c: 87:             UART_Write(time[1]);
  1238  0628  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0629  1303               	bcf	3,6	;RP1=0, select bank0
  1240  062A  0849               	movf	_time+1,w
  1241  062B  120A  158A  2513  120A  118A  	fcall	_UART_Write
  1242                           
  1243                           ;mainMaster.c: 88:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1244  0630  3003               	movlw	3
  1245  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0633  00B7               	movwf	??_main+1
  1248  0634  3097               	movlw	151
  1249  0635  00B6               	movwf	??_main
  1250  0636                     u1817:	
  1251  0636  0BB6               	decfsz	??_main,f
  1252  0637  2E36               	goto	u1817
  1253  0638  0BB7               	decfsz	??_main+1,f
  1254  0639  2E36               	goto	u1817
  1255                           
  1256                           ;mainMaster.c: 89:             UART_Write(time[2]);
  1257  063A  1283               	bcf	3,5	;RP0=0, select bank0
  1258  063B  1303               	bcf	3,6	;RP1=0, select bank0
  1259  063C  084A               	movf	_time+2,w
  1260  063D  120A  158A  2513  120A  118A  	fcall	_UART_Write
  1261                           
  1262                           ;mainMaster.c: 90:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1263  0642  3003               	movlw	3
  1264  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1265  0644  1303               	bcf	3,6	;RP1=0, select bank0
  1266  0645  00B7               	movwf	??_main+1
  1267  0646  3097               	movlw	151
  1268  0647  00B6               	movwf	??_main
  1269  0648                     u1827:	
  1270  0648  0BB6               	decfsz	??_main,f
  1271  0649  2E48               	goto	u1827
  1272  064A  0BB7               	decfsz	??_main+1,f
  1273  064B  2E48               	goto	u1827
  1274                           
  1275                           ;mainMaster.c: 91:             UART_Write(time[3]);
  1276  064C  1283               	bcf	3,5	;RP0=0, select bank0
  1277  064D  1303               	bcf	3,6	;RP1=0, select bank0
  1278  064E  084B               	movf	_time+3,w
  1279  064F  120A  158A  2513  120A  118A  	fcall	_UART_Write
  1280                           
  1281                           ;mainMaster.c: 92:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1282  0654  3003               	movlw	3
  1283  0655  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0656  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0657  00B7               	movwf	??_main+1
  1286  0658  3097               	movlw	151
  1287  0659  00B6               	movwf	??_main
  1288  065A                     u1837:	
  1289  065A  0BB6               	decfsz	??_main,f
  1290  065B  2E5A               	goto	u1837
  1291  065C  0BB7               	decfsz	??_main+1,f
  1292  065D  2E5A               	goto	u1837
  1293                           
  1294                           ;mainMaster.c: 93:             UART_Write(time[4]);
  1295  065E  1283               	bcf	3,5	;RP0=0, select bank0
  1296  065F  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0660  084C               	movf	_time+4,w
  1298  0661  120A  158A  2513  120A  118A  	fcall	_UART_Write
  1299                           
  1300                           ;mainMaster.c: 94:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1301  0666  3003               	movlw	3
  1302  0667  1283               	bcf	3,5	;RP0=0, select bank0
  1303  0668  1303               	bcf	3,6	;RP1=0, select bank0
  1304  0669  00B7               	movwf	??_main+1
  1305  066A  3097               	movlw	151
  1306  066B  00B6               	movwf	??_main
  1307  066C                     u1847:	
  1308  066C  0BB6               	decfsz	??_main,f
  1309  066D  2E6C               	goto	u1847
  1310  066E  0BB7               	decfsz	??_main+1,f
  1311  066F  2E6C               	goto	u1847
  1312                           
  1313                           ;mainMaster.c: 95:             UART_Write(door);
  1314  0670  1283               	bcf	3,5	;RP0=0, select bank0
  1315  0671  1303               	bcf	3,6	;RP1=0, select bank0
  1316  0672  0841               	movf	_door,w
  1317  0673  120A  158A  2513  120A  118A  	fcall	_UART_Write
  1318                           
  1319                           ;mainMaster.c: 96:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1320  0678  3003               	movlw	3
  1321  0679  1283               	bcf	3,5	;RP0=0, select bank0
  1322  067A  1303               	bcf	3,6	;RP1=0, select bank0
  1323  067B  00B7               	movwf	??_main+1
  1324  067C  3097               	movlw	151
  1325  067D  00B6               	movwf	??_main
  1326  067E                     u1857:	
  1327  067E  0BB6               	decfsz	??_main,f
  1328  067F  2E7E               	goto	u1857
  1329  0680  0BB7               	decfsz	??_main+1,f
  1330  0681  2E7E               	goto	u1857
  1331                           
  1332                           ;mainMaster.c: 97:             UART_Write(trip);
  1333  0682  1283               	bcf	3,5	;RP0=0, select bank0
  1334  0683  1303               	bcf	3,6	;RP1=0, select bank0
  1335  0684  0840               	movf	_trip,w
  1336  0685  120A  158A  2513  120A  118A  	fcall	_UART_Write
  1337                           
  1338                           ;mainMaster.c: 98:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1339  068A  3003               	movlw	3
  1340  068B  1283               	bcf	3,5	;RP0=0, select bank0
  1341  068C  1303               	bcf	3,6	;RP1=0, select bank0
  1342  068D  00B7               	movwf	??_main+1
  1343  068E  3097               	movlw	151
  1344  068F  00B6               	movwf	??_main
  1345  0690                     u1867:	
  1346  0690  0BB6               	decfsz	??_main,f
  1347  0691  2E90               	goto	u1867
  1348  0692  0BB7               	decfsz	??_main+1,f
  1349  0693  2E90               	goto	u1867
  1350                           
  1351                           ;mainMaster.c: 99:             UART_Write(PIR);
  1352  0694  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0695  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0696  083F               	movf	_PIR,w
  1355  0697  120A  158A  2513  120A  118A  	fcall	_UART_Write
  1356                           
  1357                           ;mainMaster.c: 100:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1358  069C  3003               	movlw	3
  1359  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1360  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1361  069F  00B7               	movwf	??_main+1
  1362  06A0  3097               	movlw	151
  1363  06A1  00B6               	movwf	??_main
  1364  06A2                     u1877:	
  1365  06A2  0BB6               	decfsz	??_main,f
  1366  06A3  2EA2               	goto	u1877
  1367  06A4  0BB7               	decfsz	??_main+1,f
  1368  06A5  2EA2               	goto	u1877
  1369                           
  1370                           ;mainMaster.c: 101:             UART_Write(IR);
  1371  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  1372  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  1373  06A8  083E               	movf	_IR,w
  1374  06A9  120A  158A  2513  120A  118A  	fcall	_UART_Write
  1375                           
  1376                           ;mainMaster.c: 102:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1377  06AE  3003               	movlw	3
  1378  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  1379  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  1380  06B1  00B7               	movwf	??_main+1
  1381  06B2  3097               	movlw	151
  1382  06B3  00B6               	movwf	??_main
  1383  06B4                     u1887:	
  1384  06B4  0BB6               	decfsz	??_main,f
  1385  06B5  2EB4               	goto	u1887
  1386  06B6  0BB7               	decfsz	??_main+1,f
  1387  06B7  2EB4               	goto	u1887
  1388                           
  1389                           ;mainMaster.c: 103:             UART_Write('A');
  1390  06B8  3041               	movlw	65
  1391  06B9  120A  158A  2513  120A  118A  	fcall	_UART_Write
  1392  06BE  2ED2               	goto	l2322
  1393  06BF                     l2304:	
  1394                           
  1395                           ;mainMaster.c: 108:                 day2 = "LUNES    ";
  1396  06BF  302D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1397  06C0  2ECE               	goto	L7
  1398  06C1                     l2306:	
  1399                           ;mainMaster.c: 109:                 break;
  1400                           
  1401                           
  1402                           ;mainMaster.c: 111:                 day2 = "MARTES   ";
  1403  06C1  3041               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1404  06C2  2ECE               	goto	L7
  1405  06C3                     l2308:	
  1406                           ;mainMaster.c: 112:                 break;
  1407                           
  1408                           
  1409                           ;mainMaster.c: 114:                 day2 = "MIERCOLES";
  1410  06C3  3069               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1411  06C4  2ECE               	goto	L7
  1412  06C5                     l2310:	
  1413                           ;mainMaster.c: 115:                 break;
  1414                           
  1415                           
  1416                           ;mainMaster.c: 117:                 day2 = "JUEVES   ";
  1417  06C5  304B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1418  06C6  2ECE               	goto	L7
  1419  06C7                     l2312:	
  1420                           ;mainMaster.c: 118:                 break;
  1421                           
  1422                           
  1423                           ;mainMaster.c: 120:                 day2 = "VIERNES  ";
  1424  06C7  305F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1425  06C8  2ECE               	goto	L7
  1426  06C9                     l2314:	
  1427                           ;mainMaster.c: 121:                 break;
  1428                           
  1429                           
  1430                           ;mainMaster.c: 123:                 day2 = "SABADO   ";
  1431  06C9  3037               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1432  06CA  2ECE               	goto	L7
  1433  06CB                     l2316:	
  1434                           ;mainMaster.c: 124:                 break;
  1435                           
  1436                           
  1437                           ;mainMaster.c: 126:                 day2 = "DOMINGO  ";
  1438  06CB  3055               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1439  06CC  2ECE               	goto	L7
  1440  06CD                     l2318:	
  1441                           ;mainMaster.c: 127:                 break;
  1442                           
  1443                           
  1444                           ;mainMaster.c: 129:                 day2 = "         ";
  1445  06CD  3023               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1446  06CE                     L7:	
  1447  06CE  00B6               	movwf	??_main
  1448  06CF  0836               	movf	??_main,w
  1449  06D0  00BA               	movwf	_day2
  1450                           
  1451                           ;mainMaster.c: 130:                 break;
  1452  06D1  2EF3               	goto	l2324
  1453  06D2                     l2322:	
  1454  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1455  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1456  06D4  083B               	movf	_day1,w
  1457  06D5  00B6               	movwf	??_main
  1458  06D6  01B7               	clrf	??_main+1
  1459                           
  1460                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1461                           ; Switch size 1, requested type "simple"
  1462                           ; Number of cases is 1, Range of values is 0 to 0
  1463                           ; switch strategies available:
  1464                           ; Name         Instructions Cycles
  1465                           ; simple_byte            4     3 (average)
  1466                           ; direct_byte           11     8 (fixed)
  1467                           ; jumptable            260     6 (fixed)
  1468                           ;	Chosen strategy is simple_byte
  1469  06D7  0837               	movf	??_main+1,w
  1470  06D8  3A00               	xorlw	0	; case 0
  1471  06D9  1903               	skipnz
  1472  06DA  2EDC               	goto	l2462
  1473  06DB  2ECD               	goto	l2318
  1474  06DC                     l2462:	
  1475                           
  1476                           ; Switch size 1, requested type "simple"
  1477                           ; Number of cases is 7, Range of values is 1 to 7
  1478                           ; switch strategies available:
  1479                           ; Name         Instructions Cycles
  1480                           ; simple_byte           22    12 (average)
  1481                           ; direct_byte           32    11 (fixed)
  1482                           ; jumptable            263     9 (fixed)
  1483                           ;	Chosen strategy is simple_byte
  1484  06DC  0836               	movf	??_main,w
  1485  06DD  3A01               	xorlw	1	; case 1
  1486  06DE  1903               	skipnz
  1487  06DF  2EBF               	goto	l2304
  1488  06E0  3A03               	xorlw	3	; case 2
  1489  06E1  1903               	skipnz
  1490  06E2  2EC1               	goto	l2306
  1491  06E3  3A01               	xorlw	1	; case 3
  1492  06E4  1903               	skipnz
  1493  06E5  2EC3               	goto	l2308
  1494  06E6  3A07               	xorlw	7	; case 4
  1495  06E7  1903               	skipnz
  1496  06E8  2EC5               	goto	l2310
  1497  06E9  3A01               	xorlw	1	; case 5
  1498  06EA  1903               	skipnz
  1499  06EB  2EC7               	goto	l2312
  1500  06EC  3A03               	xorlw	3	; case 6
  1501  06ED  1903               	skipnz
  1502  06EE  2EC9               	goto	l2314
  1503  06EF  3A01               	xorlw	1	; case 7
  1504  06F0  1903               	skipnz
  1505  06F1  2ECB               	goto	l2316
  1506  06F2  2ECD               	goto	l2318
  1507  06F3                     l2324:	
  1508                           
  1509                           ;mainMaster.c: 134:         if (strcmp(temp,"23.50") > 0){
  1510  06F3  3095               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1511  06F4  00B6               	movwf	??_main
  1512  06F5  0836               	movf	??_main,w
  1513  06F6  00F0               	movwf	strcmp@s2
  1514  06F7  3042               	movlw	(low (_temp| 0))& (0+255)
  1515  06F8  120A  158A  260D  120A  118A  	fcall	_strcmp
  1516  06FD  0871               	movf	?_strcmp+1,w
  1517  06FE  3A80               	xorlw	128
  1518  06FF  00FF               	movwf	127
  1519  0700  3080               	movlw	128
  1520  0701  027F               	subwf	127,w
  1521  0702  1D03               	skipz
  1522  0703  2F06               	goto	u1635
  1523  0704  3001               	movlw	1
  1524  0705  0270               	subwf	?_strcmp,w
  1525  0706                     u1635:	
  1526  0706  1C03               	skipc
  1527  0707  2F0C               	goto	l266
  1528                           
  1529                           ;mainMaster.c: 135:             PORTAbits.RA0 = 1;
  1530  0708  1283               	bcf	3,5	;RP0=0, select bank0
  1531  0709  1303               	bcf	3,6	;RP1=0, select bank0
  1532  070A  1405               	bsf	5,0	;volatile
  1533                           
  1534                           ;mainMaster.c: 136:         } else {
  1535  070B  2F0F               	goto	l267
  1536  070C                     l266:	
  1537                           
  1538                           ;mainMaster.c: 137:             PORTAbits.RA0 = 0;
  1539  070C  1283               	bcf	3,5	;RP0=0, select bank0
  1540  070D  1303               	bcf	3,6	;RP1=0, select bank0
  1541  070E  1005               	bcf	5,0	;volatile
  1542  070F                     l267:	
  1543                           ;mainMaster.c: 138:         }
  1544                           
  1545                           
  1546                           ;mainMaster.c: 141:         if(PORTCbits.RC0 == 1){
  1547  070F  1C07               	btfss	7,0	;volatile
  1548  0710  2F30               	goto	l2346
  1549                           
  1550                           ;mainMaster.c: 142:             if (change == 0){
  1551  0711  0838               	movf	_change,w
  1552  0712  1D03               	btfss	3,2
  1553  0713  2F31               	goto	l2348
  1554                           
  1555                           ;mainMaster.c: 143:                 state++;
  1556  0714  3001               	movlw	1
  1557  0715  00B6               	movwf	??_main
  1558  0716  0836               	movf	??_main,w
  1559  0717  07BD               	addwf	_state,f
  1560                           
  1561                           ;mainMaster.c: 144:                 Lcd_Clear();
  1562  0718  120A  158A  251D  120A  118A  	fcall	_Lcd_Clear
  1563                           
  1564                           ;mainMaster.c: 145:                 if (state > 2){
  1565  071D  3003               	movlw	3
  1566  071E  1283               	bcf	3,5	;RP0=0, select bank0
  1567  071F  1303               	bcf	3,6	;RP1=0, select bank0
  1568  0720  023D               	subwf	_state,w
  1569  0721  1803               	btfsc	3,0
  1570                           
  1571                           ;mainMaster.c: 146:                     state = 0;
  1572  0722  01BD               	clrf	_state
  1573  0723                     l2340:	
  1574                           
  1575                           ;mainMaster.c: 148:                 while(j < 50){
  1576  0723  3032               	movlw	50
  1577  0724  0239               	subwf	_j,w
  1578  0725  1803               	btfsc	3,0
  1579  0726  2F2C               	goto	l2342
  1580                           
  1581                           ;mainMaster.c: 149:                     j++;
  1582  0727  3001               	movlw	1
  1583  0728  00B6               	movwf	??_main
  1584  0729  0836               	movf	??_main,w
  1585  072A  07B9               	addwf	_j,f
  1586  072B  2F23               	goto	l2340
  1587  072C                     l2342:	
  1588                           
  1589                           ;mainMaster.c: 151:                 j = 0;
  1590  072C  01B9               	clrf	_j
  1591                           
  1592                           ;mainMaster.c: 152:                 change = 1;
  1593  072D  01B8               	clrf	_change
  1594  072E  0AB8               	incf	_change,f
  1595  072F  2F31               	goto	l2348
  1596  0730                     l2346:	
  1597                           
  1598                           ;mainMaster.c: 155:             change =0;
  1599  0730  01B8               	clrf	_change
  1600  0731                     l2348:	
  1601                           
  1602                           ;mainMaster.c: 159:         if (state == 0){
  1603  0731  083D               	movf	_state,w
  1604  0732  1D03               	btfss	3,2
  1605  0733  2F7C               	goto	l2360
  1606                           
  1607                           ;mainMaster.c: 161:             Lcd_Set_Cursor(1,1);
  1608  0734  01F4               	clrf	Lcd_Set_Cursor@b
  1609  0735  0AF4               	incf	Lcd_Set_Cursor@b,f
  1610  0736  3001               	movlw	1
  1611  0737  120A  158A  27B6  120A  118A  	fcall	_Lcd_Set_Cursor
  1612                           
  1613                           ;mainMaster.c: 162:             Lcd_Write_String(time);
  1614  073C  3048               	movlw	(low (_time| 0))& (0+255)
  1615  073D  00F5               	movwf	Lcd_Write_String@a
  1616  073E  3000               	movlw	0
  1617  073F  00F6               	movwf	Lcd_Write_String@a+1
  1618  0740  120A  118A  20B7  120A  118A  	fcall	_Lcd_Write_String
  1619                           
  1620                           ;mainMaster.c: 164:             Lcd_Set_Cursor(1,7);
  1621  0745  3007               	movlw	7
  1622  0746  1283               	bcf	3,5	;RP0=0, select bank0
  1623  0747  1303               	bcf	3,6	;RP1=0, select bank0
  1624  0748  00B6               	movwf	??_main
  1625  0749  0836               	movf	??_main,w
  1626  074A  00F4               	movwf	Lcd_Set_Cursor@b
  1627  074B  3001               	movlw	1
  1628  074C  120A  158A  27B6  120A  118A  	fcall	_Lcd_Set_Cursor
  1629                           
  1630                           ;mainMaster.c: 165:             Lcd_Write_String(day2);
  1631  0751  1283               	bcf	3,5	;RP0=0, select bank0
  1632  0752  1303               	bcf	3,6	;RP1=0, select bank0
  1633  0753  083A               	movf	_day2,w
  1634  0754  00F5               	movwf	Lcd_Write_String@a
  1635  0755  3000               	movlw	0
  1636  0756  1D03               	btfss	3,2
  1637  0757  3080               	movlw	128
  1638  0758  00F6               	movwf	Lcd_Write_String@a+1
  1639  0759  120A  118A  20B7  120A  118A  	fcall	_Lcd_Write_String
  1640                           
  1641                           ;mainMaster.c: 167:             Lcd_Set_Cursor(2,1);
  1642  075E  01F4               	clrf	Lcd_Set_Cursor@b
  1643  075F  0AF4               	incf	Lcd_Set_Cursor@b,f
  1644  0760  3002               	movlw	2
  1645  0761  120A  158A  27B6  120A  118A  	fcall	_Lcd_Set_Cursor
  1646                           
  1647                           ;mainMaster.c: 168:             Lcd_Write_String(temp);
  1648  0766  3042               	movlw	(low (_temp| 0))& (0+255)
  1649  0767  00F5               	movwf	Lcd_Write_String@a
  1650  0768  3000               	movlw	0
  1651  0769  00F6               	movwf	Lcd_Write_String@a+1
  1652  076A  120A  118A  20B7  120A  118A  	fcall	_Lcd_Write_String
  1653                           
  1654                           ;mainMaster.c: 169:             Lcd_Write_Char(223);
  1655  076F  30DF               	movlw	223
  1656  0770  120A  158A  2701  120A  118A  	fcall	_Lcd_Write_Char
  1657                           
  1658                           ;mainMaster.c: 170:             Lcd_Write_Char('C');
  1659  0775  3043               	movlw	67
  1660  0776  120A  158A  2701  120A  118A  	fcall	_Lcd_Write_Char
  1661                           
  1662                           ;mainMaster.c: 172:         } else if (state == 1){
  1663  077B  2D70               	goto	l2240
  1664  077C                     l2360:	
  1665  077C  033D               	decf	_state,w
  1666  077D  1D03               	btfss	3,2
  1667  077E  2FB8               	goto	l2378
  1668                           
  1669                           ;mainMaster.c: 174:             Lcd_Set_Cursor(1,1);
  1670  077F  01F4               	clrf	Lcd_Set_Cursor@b
  1671  0780  0AF4               	incf	Lcd_Set_Cursor@b,f
  1672  0781  3001               	movlw	1
  1673  0782  120A  158A  27B6  120A  118A  	fcall	_Lcd_Set_Cursor
  1674                           
  1675                           ;mainMaster.c: 175:             if (door == 1){
  1676  0787  1283               	bcf	3,5	;RP0=0, select bank0
  1677  0788  1303               	bcf	3,6	;RP1=0, select bank0
  1678  0789  0341               	decf	_door,w
  1679  078A  1D03               	btfss	3,2
  1680  078B  2F8E               	goto	l2368
  1681                           
  1682                           ;mainMaster.c: 176:                 Lcd_Write_String("Door OPEN  ");
  1683  078C  300B               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1684  078D  2F8F               	goto	L8
  1685  078E                     l2368:	
  1686                           ;mainMaster.c: 177:             } else {
  1687                           
  1688                           
  1689                           ;mainMaster.c: 178:                 Lcd_Write_String("Door CLOSED");
  1690  078E  3017               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1691  078F                     L8:	
  1692  078F  00F5               	movwf	Lcd_Write_String@a
  1693  0790  3080               	movlw	128
  1694  0791  00F6               	movwf	Lcd_Write_String@a+1
  1695  0792  120A  118A  20B7  120A  118A  	fcall	_Lcd_Write_String
  1696                           
  1697                           ;mainMaster.c: 181:             Lcd_Set_Cursor(2,1);
  1698  0797  01F4               	clrf	Lcd_Set_Cursor@b
  1699  0798  0AF4               	incf	Lcd_Set_Cursor@b,f
  1700  0799  3002               	movlw	2
  1701  079A  120A  158A  27B6  120A  118A  	fcall	_Lcd_Set_Cursor
  1702                           
  1703                           ;mainMaster.c: 182:             if (trip == 1){
  1704  079F  1283               	bcf	3,5	;RP0=0, select bank0
  1705  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1706  07A1  0340               	decf	_trip,w
  1707  07A2  1D03               	btfss	3,2
  1708  07A3  2FAE               	goto	l2376
  1709                           
  1710                           ;mainMaster.c: 183:                 Lcd_Write_String("Trip ON ");
  1711  07A4  3073               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1712  07A5  00F5               	movwf	Lcd_Write_String@a
  1713  07A6  3080               	movlw	128
  1714  07A7  00F6               	movwf	Lcd_Write_String@a+1
  1715  07A8  120A  118A  20B7  120A  118A  	fcall	_Lcd_Write_String
  1716                           
  1717                           ;mainMaster.c: 184:             } else {
  1718  07AD  2D70               	goto	l2240
  1719  07AE                     l2376:	
  1720                           
  1721                           ;mainMaster.c: 185:                 Lcd_Write_String("Trip OFF");
  1722  07AE  307C               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1723  07AF  00F5               	movwf	Lcd_Write_String@a
  1724  07B0  3080               	movlw	128
  1725  07B1  00F6               	movwf	Lcd_Write_String@a+1
  1726  07B2  120A  118A  20B7  120A  118A  	fcall	_Lcd_Write_String
  1727  07B7  2D70               	goto	l2240
  1728  07B8                     l2378:	
  1729  07B8  3002               	movlw	2
  1730  07B9  063D               	xorwf	_state,w
  1731  07BA  1D03               	btfss	3,2
  1732  07BB  2D70               	goto	l2240
  1733                           
  1734                           ;mainMaster.c: 190:             Lcd_Set_Cursor(1,1);
  1735  07BC  01F4               	clrf	Lcd_Set_Cursor@b
  1736  07BD  0AF4               	incf	Lcd_Set_Cursor@b,f
  1737  07BE  3001               	movlw	1
  1738  07BF  120A  158A  27B6  120A  118A  	fcall	_Lcd_Set_Cursor
  1739                           
  1740                           ;mainMaster.c: 191:             if (PIR == 1){
  1741  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  1742  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  1743  07C6  033F               	decf	_PIR,w
  1744  07C7  1D03               	btfss	3,2
  1745  07C8  2FCB               	goto	l2386
  1746                           
  1747                           ;mainMaster.c: 192:                 Lcd_Write_String("PIR ON ");
  1748  07C9  3085               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1749  07CA  2FCC               	goto	L9
  1750  07CB                     l2386:	
  1751                           ;mainMaster.c: 193:             } else {
  1752                           
  1753                           
  1754                           ;mainMaster.c: 194:                 Lcd_Write_String("PIR OFF");
  1755  07CB  308D               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1756  07CC                     L9:	
  1757  07CC  00F5               	movwf	Lcd_Write_String@a
  1758  07CD  3080               	movlw	128
  1759  07CE  00F6               	movwf	Lcd_Write_String@a+1
  1760  07CF  120A  118A  20B7  120A  118A  	fcall	_Lcd_Write_String
  1761                           
  1762                           ;mainMaster.c: 197:             Lcd_Set_Cursor(2,1);
  1763  07D4  01F4               	clrf	Lcd_Set_Cursor@b
  1764  07D5  0AF4               	incf	Lcd_Set_Cursor@b,f
  1765  07D6  3002               	movlw	2
  1766  07D7  120A  158A  27B6  120A  118A  	fcall	_Lcd_Set_Cursor
  1767                           
  1768                           ;mainMaster.c: 198:             if (IR == 1){
  1769  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1770  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1771  07DE  033E               	decf	_IR,w
  1772  07DF  1D03               	btfss	3,2
  1773  07E0  2FEB               	goto	l2394
  1774                           
  1775                           ;mainMaster.c: 199:                 Lcd_Write_String("IR ON ");
  1776  07E1  3086               	movlw	(low (((STR_14+1)-__stringbase)| (0+32768)))& (0+255)
  1777  07E2  00F5               	movwf	Lcd_Write_String@a
  1778  07E3  3080               	movlw	128
  1779  07E4  00F6               	movwf	Lcd_Write_String@a+1
  1780  07E5  120A  118A  20B7  120A  118A  	fcall	_Lcd_Write_String
  1781                           
  1782                           ;mainMaster.c: 200:             } else {
  1783  07EA  2D70               	goto	l2240
  1784  07EB                     l2394:	
  1785                           
  1786                           ;mainMaster.c: 201:                 Lcd_Write_String("IR OFF");
  1787  07EB  308E               	movlw	(low (((STR_15+1)-__stringbase)| (0+32768)))& (0+255)
  1788  07EC  00F5               	movwf	Lcd_Write_String@a
  1789  07ED  3080               	movlw	128
  1790  07EE  00F6               	movwf	Lcd_Write_String@a+1
  1791  07EF  120A  118A  20B7  120A  118A  	fcall	_Lcd_Write_String
  1792  07F4  2D70               	goto	l2240
  1793  07F5                     __end_of_main:	
  1794                           
  1795                           	psect	text1
  1796  0E0D                     __ptext1:	
  1797 ;; *************** function _strcmp *****************
  1798 ;; Defined at:
  1799 ;;		line 33 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcmp.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  s1              1    wreg     PTR const unsigned char 
  1802 ;;		 -> temp(6), 
  1803 ;;  s2              1    0[COMMON] PTR const unsigned char 
  1804 ;;		 -> STR_9(6), 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  s1              1    6[COMMON] PTR const unsigned char 
  1807 ;;		 -> temp(6), 
  1808 ;;  r               1    5[COMMON] char 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  2    0[COMMON] int 
  1811 ;; Registers used:
  1812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1818 ;;      Params:         2       0       0       0       0
  1819 ;;      Locals:         2       0       0       0       0
  1820 ;;      Temps:          3       0       0       0       0
  1821 ;;      Totals:         7       0       0       0       0
  1822 ;;Total ram usage:        7 bytes
  1823 ;; Hardware stack levels used:    2
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_main
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           
  1832                           ;psect for function _strcmp
  1833  0E0D                     _strcmp:	
  1834                           
  1835                           ;incstack = 0
  1836                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+pclath]
  1837                           ;strcmp@s1 stored from wreg
  1838  0E0D  00F6               	movwf	strcmp@s1
  1839  0E0E  2E1C               	goto	l2214
  1840  0E0F                     l2216:	
  1841  0E0F  0876               	movf	strcmp@s1,w
  1842  0E10  0084               	movwf	4
  1843  0E11  0800               	movf	0,w
  1844  0E12  1903               	btfsc	3,2
  1845  0E13  2E31               	goto	l2218
  1846  0E14  3001               	movlw	1
  1847  0E15  00F2               	movwf	??_strcmp
  1848  0E16  0872               	movf	??_strcmp,w
  1849  0E17  07F6               	addwf	strcmp@s1,f
  1850  0E18  3001               	movlw	1
  1851  0E19  00F2               	movwf	??_strcmp
  1852  0E1A  0872               	movf	??_strcmp,w
  1853  0E1B  07F0               	addwf	strcmp@s2,f
  1854  0E1C                     l2214:	
  1855  0E1C  0870               	movf	strcmp@s2,w
  1856  0E1D  0084               	movwf	4
  1857  0E1E  120A  118A  200D  120A  158A  	fcall	stringdir
  1858  0E23  00F2               	movwf	??_strcmp
  1859  0E24  0876               	movf	strcmp@s1,w
  1860  0E25  0084               	movwf	4
  1861  0E26  1383               	bcf	3,7	;select IRP bank0
  1862  0E27  0800               	movf	0,w
  1863  0E28  00F3               	movwf	??_strcmp+1
  1864  0E29  0872               	movf	??_strcmp,w
  1865  0E2A  0273               	subwf	??_strcmp+1,w
  1866  0E2B  00F4               	movwf	??_strcmp+2
  1867  0E2C  0874               	movf	??_strcmp+2,w
  1868  0E2D  00F5               	movwf	strcmp@r
  1869  0E2E  0875               	movf	strcmp@r,w
  1870  0E2F  1903               	btfsc	3,2
  1871  0E30  2E0F               	goto	l2216
  1872  0E31                     l2218:	
  1873  0E31  0875               	movf	strcmp@r,w
  1874  0E32  00F0               	movwf	?_strcmp
  1875  0E33  01F1               	clrf	?_strcmp+1
  1876  0E34  1BF0               	btfsc	?_strcmp,7
  1877  0E35  03F1               	decf	?_strcmp+1,f
  1878  0E36  0008               	return
  1879  0E37                     __end_of_strcmp:	
  1880                           
  1881                           	psect	text2
  1882  0F76                     __ptext2:	
  1883 ;; *************** function _setup *****************
  1884 ;; Defined at:
  1885 ;;		line 207 in file "mainMaster.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1899 ;;      Params:         0       0       0       0       0
  1900 ;;      Locals:         0       0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0
  1902 ;;      Totals:         0       0       0       0       0
  1903 ;;Total ram usage:        0 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; Hardware stack levels required when called:    3
  1906 ;; This function calls:
  1907 ;;		_I2C_Master_Init
  1908 ;;		_Lcd_Init
  1909 ;;		_UART_Init
  1910 ;;		_initOscilador
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           
  1917                           ;psect for function _setup
  1918  0F76                     _setup:	
  1919                           
  1920                           ;mainMaster.c: 208:     initOscilador(7);
  1921                           
  1922                           ;incstack = 0
  1923                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1924  0F76  3007               	movlw	7
  1925  0F77  120A  118A  20F4  120A  158A  	fcall	_initOscilador
  1926                           
  1927                           ;mainMaster.c: 209:     ANSELH = 0;
  1928  0F7C  1683               	bsf	3,5	;RP0=1, select bank3
  1929  0F7D  1703               	bsf	3,6	;RP1=1, select bank3
  1930  0F7E  0189               	clrf	9	;volatile
  1931                           
  1932                           ;mainMaster.c: 210:     ANSEL = 0;
  1933  0F7F  0188               	clrf	8	;volatile
  1934                           
  1935                           ;mainMaster.c: 211:     TRISB = 0;
  1936  0F80  1683               	bsf	3,5	;RP0=1, select bank1
  1937  0F81  1303               	bcf	3,6	;RP1=0, select bank1
  1938  0F82  0186               	clrf	6	;volatile
  1939                           
  1940                           ;mainMaster.c: 212:     TRISA = 0;
  1941  0F83  0185               	clrf	5	;volatile
  1942                           
  1943                           ;mainMaster.c: 213:     TRISD = 0;
  1944  0F84  0188               	clrf	8	;volatile
  1945                           
  1946                           ;mainMaster.c: 214:     PORTB = 0;
  1947  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  1948  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  1949  0F87  0186               	clrf	6	;volatile
  1950                           
  1951                           ;mainMaster.c: 215:     PORTA = 0;
  1952  0F88  0185               	clrf	5	;volatile
  1953                           
  1954                           ;mainMaster.c: 216:     TRISC = 0x01;
  1955  0F89  3001               	movlw	1
  1956  0F8A  1683               	bsf	3,5	;RP0=1, select bank1
  1957  0F8B  1303               	bcf	3,6	;RP1=0, select bank1
  1958  0F8C  0087               	movwf	7	;volatile
  1959                           
  1960                           ;mainMaster.c: 217:     PORTC = 0;
  1961  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  1962  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  1963  0F8F  0187               	clrf	7	;volatile
  1964                           
  1965                           ;mainMaster.c: 218:     door = 0;
  1966  0F90  01C1               	clrf	_door
  1967                           
  1968                           ;mainMaster.c: 219:     trip = 0;
  1969  0F91  01C0               	clrf	_trip
  1970                           
  1971                           ;mainMaster.c: 220:     IR = 0;
  1972  0F92  01BE               	clrf	_IR
  1973                           
  1974                           ;mainMaster.c: 221:     PIR = 0;
  1975  0F93  01BF               	clrf	_PIR
  1976                           
  1977                           ;mainMaster.c: 222:     Lcd_Init();
  1978  0F94  120A  118A  2149  120A  158A  	fcall	_Lcd_Init
  1979                           
  1980                           ;mainMaster.c: 223:     UART_Init(9600);
  1981  0F99  3000               	movlw	0
  1982  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  1983  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  1984  0F9C  00A9               	movwf	UART_Init@baudrate+3
  1985  0F9D  3000               	movlw	0
  1986  0F9E  00A8               	movwf	UART_Init@baudrate+2
  1987  0F9F  3025               	movlw	37
  1988  0FA0  00A7               	movwf	UART_Init@baudrate+1
  1989  0FA1  3080               	movlw	128
  1990  0FA2  00A6               	movwf	UART_Init@baudrate
  1991  0FA3  120A  118A  23B5  120A  158A  	fcall	_UART_Init
  1992                           
  1993                           ;mainMaster.c: 224:     I2C_Master_Init(100000);
  1994  0FA8  3000               	movlw	0
  1995  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  1996  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  1997  0FAB  00A3               	movwf	I2C_Master_Init@c+3
  1998  0FAC  3001               	movlw	1
  1999  0FAD  00A2               	movwf	I2C_Master_Init@c+2
  2000  0FAE  3086               	movlw	134
  2001  0FAF  00A1               	movwf	I2C_Master_Init@c+1
  2002  0FB0  30A0               	movlw	160
  2003  0FB1  00A0               	movwf	I2C_Master_Init@c
  2004  0FB2  120A  158A  26CB   	fcall	_I2C_Master_Init
  2005  0FB5  0008               	return
  2006  0FB6                     __end_of_setup:	
  2007                           
  2008                           	psect	text3
  2009  00F4                     __ptext3:	
  2010 ;; *************** function _initOscilador *****************
  2011 ;; Defined at:
  2012 ;;		line 11 in file "./Oscilador.h"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  option          1    wreg     unsigned char 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  option          1    2[COMMON] unsigned char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2026 ;;      Params:         0       0       0       0       0
  2027 ;;      Locals:         1       0       0       0       0
  2028 ;;      Temps:          2       0       0       0       0
  2029 ;;      Totals:         3       0       0       0       0
  2030 ;;Total ram usage:        3 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_setup
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           
  2040                           ;psect for function _initOscilador
  2041  00F4                     _initOscilador:	
  2042                           
  2043                           ;incstack = 0
  2044                           ; Regs used in _initOscilador: [wreg-fsr0h+status,2+status,0]
  2045                           ;initOscilador@option stored from wreg
  2046  00F4  00F2               	movwf	initOscilador@option
  2047                           
  2048                           ;./Oscilador.h: 13: 
  2049  00F5  2925               	goto	l1956
  2050  00F6                     l1936:	
  2051                           
  2052                           ;./Oscilador.h: 16:         case 3:
  2053  00F6  308F               	movlw	-113
  2054  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  2055  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  2056  00F9  058F               	andwf	15,f	;volatile
  2057                           
  2058                           ;./Oscilador.h: 17: 
  2059  00FA  2947               	goto	l181
  2060  00FB                     l1938:	
  2061                           
  2062                           ;./Oscilador.h: 20:         case 4:
  2063  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  2064  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  2065  00FD  080F               	movf	15,w	;volatile
  2066  00FE  398F               	andlw	-113
  2067  00FF  3810               	iorlw	16
  2068  0100  291E               	goto	L14
  2069  0101                     l1940:	
  2070                           ;./Oscilador.h: 21: 
  2071                           
  2072                           
  2073                           ;./Oscilador.h: 24:         case 5:
  2074  0101  1683               	bsf	3,5	;RP0=1, select bank1
  2075  0102  1303               	bcf	3,6	;RP1=0, select bank1
  2076  0103  080F               	movf	15,w	;volatile
  2077  0104  398F               	andlw	-113
  2078  0105  3820               	iorlw	32
  2079  0106  291E               	goto	L14
  2080  0107                     l1942:	
  2081                           ;./Oscilador.h: 25: 
  2082                           
  2083                           
  2084                           ;./Oscilador.h: 28:         case 6:
  2085  0107  1683               	bsf	3,5	;RP0=1, select bank1
  2086  0108  1303               	bcf	3,6	;RP1=0, select bank1
  2087  0109  080F               	movf	15,w	;volatile
  2088  010A  398F               	andlw	-113
  2089  010B  3830               	iorlw	48
  2090  010C  291E               	goto	L14
  2091  010D                     l1944:	
  2092                           ;./Oscilador.h: 29: 
  2093                           
  2094                           
  2095                           ;./Oscilador.h: 32:         case 7:
  2096  010D  1683               	bsf	3,5	;RP0=1, select bank1
  2097  010E  1303               	bcf	3,6	;RP1=0, select bank1
  2098  010F  080F               	movf	15,w	;volatile
  2099  0110  398F               	andlw	-113
  2100  0111  3840               	iorlw	64
  2101  0112  291E               	goto	L14
  2102  0113                     l1946:	
  2103                           ;./Oscilador.h: 33: 
  2104                           
  2105                           
  2106                           ;./Oscilador.h: 36:         default:
  2107  0113  1683               	bsf	3,5	;RP0=1, select bank1
  2108  0114  1303               	bcf	3,6	;RP1=0, select bank1
  2109  0115  080F               	movf	15,w	;volatile
  2110  0116  398F               	andlw	-113
  2111  0117  3850               	iorlw	80
  2112  0118  291E               	goto	L14
  2113  0119                     l1948:	
  2114                           ;./Oscilador.h: 37: 
  2115                           
  2116                           
  2117                           ;./Oscilador.h: 40:     }
  2118  0119  1683               	bsf	3,5	;RP0=1, select bank1
  2119  011A  1303               	bcf	3,6	;RP1=0, select bank1
  2120  011B  080F               	movf	15,w	;volatile
  2121  011C  398F               	andlw	-113
  2122  011D  3860               	iorlw	96
  2123  011E                     L14:	
  2124  011E  008F               	movwf	15	;volatile
  2125                           
  2126                           ;./Oscilador.h: 41:     OSCCONbits.SCS = 1;
  2127  011F  2947               	goto	l181
  2128  0120                     l1950:	
  2129  0120                     l1952:	
  2130  0120  3070               	movlw	112
  2131  0121  1683               	bsf	3,5	;RP0=1, select bank1
  2132  0122  1303               	bcf	3,6	;RP1=0, select bank1
  2133  0123  048F               	iorwf	15,f	;volatile
  2134  0124  2947               	goto	l181
  2135  0125                     l1956:	
  2136  0125  0872               	movf	initOscilador@option,w
  2137  0126  00F0               	movwf	??_initOscilador
  2138  0127  01F1               	clrf	??_initOscilador+1
  2139                           
  2140                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2141                           ; Switch size 1, requested type "simple"
  2142                           ; Number of cases is 1, Range of values is 0 to 0
  2143                           ; switch strategies available:
  2144                           ; Name         Instructions Cycles
  2145                           ; simple_byte            4     3 (average)
  2146                           ; direct_byte           11     8 (fixed)
  2147                           ; jumptable            260     6 (fixed)
  2148                           ;	Chosen strategy is simple_byte
  2149  0128  0871               	movf	??_initOscilador+1,w
  2150  0129  3A00               	xorlw	0	; case 0
  2151  012A  1903               	skipnz
  2152  012B  292D               	goto	l2464
  2153  012C  2920               	goto	l1952
  2154  012D                     l2464:	
  2155                           
  2156                           ; Switch size 1, requested type "simple"
  2157                           ; Number of cases is 8, Range of values is 0 to 7
  2158                           ; switch strategies available:
  2159                           ; Name         Instructions Cycles
  2160                           ; simple_byte           25    13 (average)
  2161                           ; direct_byte           32     8 (fixed)
  2162                           ; jumptable            260     6 (fixed)
  2163                           ;	Chosen strategy is simple_byte
  2164  012D  0870               	movf	??_initOscilador,w
  2165  012E  3A00               	xorlw	0	; case 0
  2166  012F  1903               	skipnz
  2167  0130  28F6               	goto	l1936
  2168  0131  3A01               	xorlw	1	; case 1
  2169  0132  1903               	skipnz
  2170  0133  28FB               	goto	l1938
  2171  0134  3A03               	xorlw	3	; case 2
  2172  0135  1903               	skipnz
  2173  0136  2901               	goto	l1940
  2174  0137  3A01               	xorlw	1	; case 3
  2175  0138  1903               	skipnz
  2176  0139  2907               	goto	l1942
  2177  013A  3A07               	xorlw	7	; case 4
  2178  013B  1903               	skipnz
  2179  013C  290D               	goto	l1944
  2180  013D  3A01               	xorlw	1	; case 5
  2181  013E  1903               	skipnz
  2182  013F  2913               	goto	l1946
  2183  0140  3A03               	xorlw	3	; case 6
  2184  0141  1903               	skipnz
  2185  0142  2919               	goto	l1948
  2186  0143  3A01               	xorlw	1	; case 7
  2187  0144  1903               	skipnz
  2188  0145  2920               	goto	l1950
  2189  0146  2920               	goto	l1952
  2190  0147                     l181:	
  2191  0147  140F               	bsf	15,0	;volatile
  2192  0148  0008               	return
  2193  0149                     __end_of_initOscilador:	
  2194                           
  2195                           	psect	text4
  2196  03B5                     __ptext4:	
  2197 ;; *************** function _UART_Init *****************
  2198 ;; Defined at:
  2199 ;;		line 8 in file "./UART.h"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  baudrate        4    6[BANK0 ] const long 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;  x               2    9[COMMON] unsigned int 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      unsigned char 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0, pclath, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2213 ;;      Params:         0       4       0       0       0
  2214 ;;      Locals:         2       0       0       0       0
  2215 ;;      Temps:          0      12       0       0       0
  2216 ;;      Totals:         2      16       0       0       0
  2217 ;;Total ram usage:       18 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    1
  2220 ;; This function calls:
  2221 ;;		___aldiv
  2222 ;; This function is called by:
  2223 ;;		_setup
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           
  2228                           ;psect for function _UART_Init
  2229  03B5                     _UART_Init:	
  2230                           
  2231                           ;./UART.h: 8: char UART_Init(const long int baudrate);./UART.h: 9: {;./UART.h: 10:  unsi
      +                          gned int x;;./UART.h: 11:  x = (8000000 - baudrate*64)/(baudrate*64);
  2232                           
  2233                           ;incstack = 0
  2234                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  2235  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  2236  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  2237  03B7  0826               	movf	UART_Init@baudrate,w
  2238  03B8  00AA               	movwf	??_UART_Init
  2239  03B9  0827               	movf	UART_Init@baudrate+1,w
  2240  03BA  00AB               	movwf	??_UART_Init+1
  2241  03BB  0828               	movf	UART_Init@baudrate+2,w
  2242  03BC  00AC               	movwf	??_UART_Init+2
  2243  03BD  0829               	movf	UART_Init@baudrate+3,w
  2244  03BE  00AD               	movwf	??_UART_Init+3
  2245  03BF  3006               	movlw	6
  2246  03C0                     u1285:	
  2247  03C0  1003               	clrc
  2248  03C1  0DAA               	rlf	??_UART_Init,f
  2249  03C2  0DAB               	rlf	??_UART_Init+1,f
  2250  03C3  0DAC               	rlf	??_UART_Init+2,f
  2251  03C4  0DAD               	rlf	??_UART_Init+3,f
  2252  03C5  3EFF               	addlw	-1
  2253  03C6  1D03               	skipz
  2254  03C7  2BC0               	goto	u1285
  2255  03C8  082D               	movf	??_UART_Init+3,w
  2256  03C9  00F3               	movwf	___aldiv@divisor+3
  2257  03CA  082C               	movf	??_UART_Init+2,w
  2258  03CB  00F2               	movwf	___aldiv@divisor+2
  2259  03CC  082B               	movf	??_UART_Init+1,w
  2260  03CD  00F1               	movwf	___aldiv@divisor+1
  2261  03CE  082A               	movf	??_UART_Init,w
  2262  03CF  00F0               	movwf	___aldiv@divisor
  2263  03D0  0826               	movf	UART_Init@baudrate,w
  2264  03D1  00AE               	movwf	??_UART_Init+4
  2265  03D2  0827               	movf	UART_Init@baudrate+1,w
  2266  03D3  00AF               	movwf	??_UART_Init+5
  2267  03D4  0828               	movf	UART_Init@baudrate+2,w
  2268  03D5  00B0               	movwf	??_UART_Init+6
  2269  03D6  0829               	movf	UART_Init@baudrate+3,w
  2270  03D7  00B1               	movwf	??_UART_Init+7
  2271  03D8  3006               	movlw	6
  2272  03D9                     u1295:	
  2273  03D9  1003               	clrc
  2274  03DA  0DAE               	rlf	??_UART_Init+4,f
  2275  03DB  0DAF               	rlf	??_UART_Init+5,f
  2276  03DC  0DB0               	rlf	??_UART_Init+6,f
  2277  03DD  0DB1               	rlf	??_UART_Init+7,f
  2278  03DE  3EFF               	addlw	-1
  2279  03DF  1D03               	skipz
  2280  03E0  2BD9               	goto	u1295
  2281  03E1  3000               	movlw	0
  2282  03E2  00B2               	movwf	??_UART_Init+8
  2283  03E3  3012               	movlw	18
  2284  03E4  00B3               	movwf	??_UART_Init+9
  2285  03E5  307A               	movlw	122
  2286  03E6  00B4               	movwf	??_UART_Init+10
  2287  03E7  3000               	movlw	0
  2288  03E8  00B5               	movwf	??_UART_Init+11
  2289  03E9  082E               	movf	??_UART_Init+4,w
  2290  03EA  02B2               	subwf	??_UART_Init+8,f
  2291  03EB  082F               	movf	??_UART_Init+5,w
  2292  03EC  1C03               	skipc
  2293  03ED  0F2F               	incfsz	??_UART_Init+5,w
  2294  03EE  2BF0               	goto	u1301
  2295  03EF  2BF1               	goto	u1302
  2296  03F0                     u1301:	
  2297  03F0  02B3               	subwf	??_UART_Init+9,f
  2298  03F1                     u1302:	
  2299  03F1  0830               	movf	??_UART_Init+6,w
  2300  03F2  1C03               	skipc
  2301  03F3  0F30               	incfsz	??_UART_Init+6,w
  2302  03F4  2BF6               	goto	u1303
  2303  03F5  2BF7               	goto	u1304
  2304  03F6                     u1303:	
  2305  03F6  02B4               	subwf	??_UART_Init+10,f
  2306  03F7                     u1304:	
  2307  03F7  0831               	movf	??_UART_Init+7,w
  2308  03F8  1C03               	skipc
  2309  03F9  0F31               	incfsz	??_UART_Init+7,w
  2310  03FA  2BFC               	goto	u1305
  2311  03FB  2BFD               	goto	u1306
  2312  03FC                     u1305:	
  2313  03FC  02B5               	subwf	??_UART_Init+11,f
  2314  03FD                     u1306:	
  2315  03FD  0835               	movf	??_UART_Init+11,w
  2316  03FE  00F7               	movwf	___aldiv@dividend+3
  2317  03FF  0834               	movf	??_UART_Init+10,w
  2318  0400  00F6               	movwf	___aldiv@dividend+2
  2319  0401  0833               	movf	??_UART_Init+9,w
  2320  0402  00F5               	movwf	___aldiv@dividend+1
  2321  0403  0832               	movf	??_UART_Init+8,w
  2322  0404  00F4               	movwf	___aldiv@dividend
  2323  0405  120A  118A  2283  120A  118A  	fcall	___aldiv
  2324  040A  0871               	movf	?___aldiv+1,w
  2325  040B  00FA               	movwf	UART_Init@x+1
  2326  040C  0870               	movf	?___aldiv,w
  2327  040D  00F9               	movwf	UART_Init@x
  2328                           
  2329                           ;./UART.h: 12:  if(x>255)
  2330  040E  3001               	movlw	1
  2331  040F  027A               	subwf	UART_Init@x+1,w
  2332  0410  3000               	movlw	0
  2333  0411  1903               	skipnz
  2334  0412  0279               	subwf	UART_Init@x,w
  2335  0413  1C03               	skipc
  2336  0414  2C71               	goto	l1970
  2337                           
  2338                           ;./UART.h: 13:  {;./UART.h: 14:   x = (8000000 - baudrate*16)/(baudrate*16);
  2339  0415  1283               	bcf	3,5	;RP0=0, select bank0
  2340  0416  1303               	bcf	3,6	;RP1=0, select bank0
  2341  0417  0826               	movf	UART_Init@baudrate,w
  2342  0418  00AA               	movwf	??_UART_Init
  2343  0419  0827               	movf	UART_Init@baudrate+1,w
  2344  041A  00AB               	movwf	??_UART_Init+1
  2345  041B  0828               	movf	UART_Init@baudrate+2,w
  2346  041C  00AC               	movwf	??_UART_Init+2
  2347  041D  0829               	movf	UART_Init@baudrate+3,w
  2348  041E  00AD               	movwf	??_UART_Init+3
  2349  041F  3004               	movlw	4
  2350  0420                     u1325:	
  2351  0420  1003               	clrc
  2352  0421  0DAA               	rlf	??_UART_Init,f
  2353  0422  0DAB               	rlf	??_UART_Init+1,f
  2354  0423  0DAC               	rlf	??_UART_Init+2,f
  2355  0424  0DAD               	rlf	??_UART_Init+3,f
  2356  0425  3EFF               	addlw	-1
  2357  0426  1D03               	skipz
  2358  0427  2C20               	goto	u1325
  2359  0428  082D               	movf	??_UART_Init+3,w
  2360  0429  00F3               	movwf	___aldiv@divisor+3
  2361  042A  082C               	movf	??_UART_Init+2,w
  2362  042B  00F2               	movwf	___aldiv@divisor+2
  2363  042C  082B               	movf	??_UART_Init+1,w
  2364  042D  00F1               	movwf	___aldiv@divisor+1
  2365  042E  082A               	movf	??_UART_Init,w
  2366  042F  00F0               	movwf	___aldiv@divisor
  2367  0430  0826               	movf	UART_Init@baudrate,w
  2368  0431  00AE               	movwf	??_UART_Init+4
  2369  0432  0827               	movf	UART_Init@baudrate+1,w
  2370  0433  00AF               	movwf	??_UART_Init+5
  2371  0434  0828               	movf	UART_Init@baudrate+2,w
  2372  0435  00B0               	movwf	??_UART_Init+6
  2373  0436  0829               	movf	UART_Init@baudrate+3,w
  2374  0437  00B1               	movwf	??_UART_Init+7
  2375  0438  3004               	movlw	4
  2376  0439                     u1335:	
  2377  0439  1003               	clrc
  2378  043A  0DAE               	rlf	??_UART_Init+4,f
  2379  043B  0DAF               	rlf	??_UART_Init+5,f
  2380  043C  0DB0               	rlf	??_UART_Init+6,f
  2381  043D  0DB1               	rlf	??_UART_Init+7,f
  2382  043E  3EFF               	addlw	-1
  2383  043F  1D03               	skipz
  2384  0440  2C39               	goto	u1335
  2385  0441  3000               	movlw	0
  2386  0442  00B2               	movwf	??_UART_Init+8
  2387  0443  3012               	movlw	18
  2388  0444  00B3               	movwf	??_UART_Init+9
  2389  0445  307A               	movlw	122
  2390  0446  00B4               	movwf	??_UART_Init+10
  2391  0447  3000               	movlw	0
  2392  0448  00B5               	movwf	??_UART_Init+11
  2393  0449  082E               	movf	??_UART_Init+4,w
  2394  044A  02B2               	subwf	??_UART_Init+8,f
  2395  044B  082F               	movf	??_UART_Init+5,w
  2396  044C  1C03               	skipc
  2397  044D  0F2F               	incfsz	??_UART_Init+5,w
  2398  044E  2C50               	goto	u1341
  2399  044F  2C51               	goto	u1342
  2400  0450                     u1341:	
  2401  0450  02B3               	subwf	??_UART_Init+9,f
  2402  0451                     u1342:	
  2403  0451  0830               	movf	??_UART_Init+6,w
  2404  0452  1C03               	skipc
  2405  0453  0F30               	incfsz	??_UART_Init+6,w
  2406  0454  2C56               	goto	u1343
  2407  0455  2C57               	goto	u1344
  2408  0456                     u1343:	
  2409  0456  02B4               	subwf	??_UART_Init+10,f
  2410  0457                     u1344:	
  2411  0457  0831               	movf	??_UART_Init+7,w
  2412  0458  1C03               	skipc
  2413  0459  0F31               	incfsz	??_UART_Init+7,w
  2414  045A  2C5C               	goto	u1345
  2415  045B  2C5D               	goto	u1346
  2416  045C                     u1345:	
  2417  045C  02B5               	subwf	??_UART_Init+11,f
  2418  045D                     u1346:	
  2419  045D  0835               	movf	??_UART_Init+11,w
  2420  045E  00F7               	movwf	___aldiv@dividend+3
  2421  045F  0834               	movf	??_UART_Init+10,w
  2422  0460  00F6               	movwf	___aldiv@dividend+2
  2423  0461  0833               	movf	??_UART_Init+9,w
  2424  0462  00F5               	movwf	___aldiv@dividend+1
  2425  0463  0832               	movf	??_UART_Init+8,w
  2426  0464  00F4               	movwf	___aldiv@dividend
  2427  0465  120A  118A  2283  120A  118A  	fcall	___aldiv
  2428  046A  0871               	movf	?___aldiv+1,w
  2429  046B  00FA               	movwf	UART_Init@x+1
  2430  046C  0870               	movf	?___aldiv,w
  2431  046D  00F9               	movwf	UART_Init@x
  2432                           
  2433                           ;./UART.h: 15:   BRGH = 1;
  2434  046E  1683               	bsf	3,5	;RP0=1, select bank1
  2435  046F  1303               	bcf	3,6	;RP1=0, select bank1
  2436  0470  1518               	bsf	24,2	;volatile
  2437  0471                     l1970:	
  2438                           
  2439                           ;./UART.h: 17:  if(x<256)
  2440  0471  3001               	movlw	1
  2441  0472  027A               	subwf	UART_Init@x+1,w
  2442  0473  3000               	movlw	0
  2443  0474  1903               	skipnz
  2444  0475  0279               	subwf	UART_Init@x,w
  2445  0476  1803               	skipnc
  2446  0477  0008               	return
  2447                           
  2448                           ;./UART.h: 18:  {;./UART.h: 19:    SPBRG = x;
  2449  0478  0879               	movf	UART_Init@x,w
  2450  0479  1683               	bsf	3,5	;RP0=1, select bank1
  2451  047A  1303               	bcf	3,6	;RP1=0, select bank1
  2452  047B  0099               	movwf	25	;volatile
  2453                           
  2454                           ;./UART.h: 20:    SYNC = 0;
  2455  047C  1218               	bcf	24,4	;volatile
  2456                           
  2457                           ;./UART.h: 21:    SPEN = 1;
  2458  047D  1283               	bcf	3,5	;RP0=0, select bank0
  2459  047E  1303               	bcf	3,6	;RP1=0, select bank0
  2460  047F  1798               	bsf	24,7	;volatile
  2461                           
  2462                           ;./UART.h: 22:           TRISC7 = 1;
  2463  0480  1683               	bsf	3,5	;RP0=1, select bank1
  2464  0481  1303               	bcf	3,6	;RP1=0, select bank1
  2465  0482  1787               	bsf	7,7	;volatile
  2466                           
  2467                           ;./UART.h: 23:           TRISC6 = 1;
  2468  0483  1707               	bsf	7,6	;volatile
  2469                           
  2470                           ;./UART.h: 24:           CREN = 1;
  2471  0484  1283               	bcf	3,5	;RP0=0, select bank0
  2472  0485  1303               	bcf	3,6	;RP1=0, select bank0
  2473  0486  1618               	bsf	24,4	;volatile
  2474                           
  2475                           ;./UART.h: 25:           TXEN = 1;
  2476  0487  1683               	bsf	3,5	;RP0=1, select bank1
  2477  0488  1303               	bcf	3,6	;RP1=0, select bank1
  2478  0489  1698               	bsf	24,5	;volatile
  2479  048A  0008               	return
  2480  048B                     __end_of_UART_Init:	
  2481                           
  2482                           	psect	text5
  2483  0283                     __ptext5:	
  2484 ;; *************** function ___aldiv *****************
  2485 ;; Defined at:
  2486 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\aldiv.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  divisor         4    0[COMMON] long 
  2489 ;;  dividend        4    4[COMMON] long 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  quotient        4    2[BANK0 ] long 
  2492 ;;  sign            1    1[BANK0 ] unsigned char 
  2493 ;;  counter         1    0[BANK0 ] unsigned char 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  4    0[COMMON] long 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2503 ;;      Params:         8       0       0       0       0
  2504 ;;      Locals:         0       6       0       0       0
  2505 ;;      Temps:          1       0       0       0       0
  2506 ;;      Totals:         9       6       0       0       0
  2507 ;;Total ram usage:       15 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_UART_Init
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           
  2517                           ;psect for function ___aldiv
  2518  0283                     ___aldiv:	
  2519                           
  2520                           ;incstack = 0
  2521                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2522  0283  1283               	bcf	3,5	;RP0=0, select bank0
  2523  0284  1303               	bcf	3,6	;RP1=0, select bank0
  2524  0285  01A1               	clrf	___aldiv@sign
  2525  0286  1FF3               	btfss	___aldiv@divisor+3,7
  2526  0287  2A95               	goto	l498
  2527  0288  09F0               	comf	___aldiv@divisor,f
  2528  0289  09F1               	comf	___aldiv@divisor+1,f
  2529  028A  09F2               	comf	___aldiv@divisor+2,f
  2530  028B  09F3               	comf	___aldiv@divisor+3,f
  2531  028C  0AF0               	incf	___aldiv@divisor,f
  2532  028D  1903               	skipnz
  2533  028E  0AF1               	incf	___aldiv@divisor+1,f
  2534  028F  1903               	skipnz
  2535  0290  0AF2               	incf	___aldiv@divisor+2,f
  2536  0291  1903               	skipnz
  2537  0292  0AF3               	incf	___aldiv@divisor+3,f
  2538  0293  01A1               	clrf	___aldiv@sign
  2539  0294  0AA1               	incf	___aldiv@sign,f
  2540  0295                     l498:	
  2541  0295  1FF7               	btfss	___aldiv@dividend+3,7
  2542  0296  2AA6               	goto	l1782
  2543  0297  09F4               	comf	___aldiv@dividend,f
  2544  0298  09F5               	comf	___aldiv@dividend+1,f
  2545  0299  09F6               	comf	___aldiv@dividend+2,f
  2546  029A  09F7               	comf	___aldiv@dividend+3,f
  2547  029B  0AF4               	incf	___aldiv@dividend,f
  2548  029C  1903               	skipnz
  2549  029D  0AF5               	incf	___aldiv@dividend+1,f
  2550  029E  1903               	skipnz
  2551  029F  0AF6               	incf	___aldiv@dividend+2,f
  2552  02A0  1903               	skipnz
  2553  02A1  0AF7               	incf	___aldiv@dividend+3,f
  2554  02A2  3001               	movlw	1
  2555  02A3  00F8               	movwf	??___aldiv
  2556  02A4  0878               	movf	??___aldiv,w
  2557  02A5  06A1               	xorwf	___aldiv@sign,f
  2558  02A6                     l1782:	
  2559  02A6  3000               	movlw	0
  2560  02A7  00A5               	movwf	___aldiv@quotient+3
  2561  02A8  3000               	movlw	0
  2562  02A9  00A4               	movwf	___aldiv@quotient+2
  2563  02AA  3000               	movlw	0
  2564  02AB  00A3               	movwf	___aldiv@quotient+1
  2565  02AC  3000               	movlw	0
  2566  02AD  00A2               	movwf	___aldiv@quotient
  2567  02AE  0873               	movf	___aldiv@divisor+3,w
  2568  02AF  0472               	iorwf	___aldiv@divisor+2,w
  2569  02B0  0471               	iorwf	___aldiv@divisor+1,w
  2570  02B1  0470               	iorwf	___aldiv@divisor,w
  2571  02B2  1903               	skipnz
  2572  02B3  2AFB               	goto	l1804
  2573  02B4  01A0               	clrf	___aldiv@counter
  2574  02B5  0AA0               	incf	___aldiv@counter,f
  2575  02B6                     l1790:	
  2576  02B6  1BF3               	btfsc	___aldiv@divisor+3,7
  2577  02B7  2AC6               	goto	l1792
  2578  02B8  3001               	movlw	1
  2579  02B9  00F8               	movwf	??___aldiv
  2580  02BA                     u1055:	
  2581  02BA  1003               	clrc
  2582  02BB  0DF0               	rlf	___aldiv@divisor,f
  2583  02BC  0DF1               	rlf	___aldiv@divisor+1,f
  2584  02BD  0DF2               	rlf	___aldiv@divisor+2,f
  2585  02BE  0DF3               	rlf	___aldiv@divisor+3,f
  2586  02BF  0BF8               	decfsz	??___aldiv,f
  2587  02C0  2ABA               	goto	u1055
  2588  02C1  3001               	movlw	1
  2589  02C2  00F8               	movwf	??___aldiv
  2590  02C3  0878               	movf	??___aldiv,w
  2591  02C4  07A0               	addwf	___aldiv@counter,f
  2592  02C5  2AB6               	goto	l1790
  2593  02C6                     l1792:	
  2594  02C6  3001               	movlw	1
  2595  02C7  00F8               	movwf	??___aldiv
  2596  02C8                     u1075:	
  2597  02C8  1003               	clrc
  2598  02C9  0DA2               	rlf	___aldiv@quotient,f
  2599  02CA  0DA3               	rlf	___aldiv@quotient+1,f
  2600  02CB  0DA4               	rlf	___aldiv@quotient+2,f
  2601  02CC  0DA5               	rlf	___aldiv@quotient+3,f
  2602  02CD  0BF8               	decfsz	??___aldiv,f
  2603  02CE  2AC8               	goto	u1075
  2604  02CF  0873               	movf	___aldiv@divisor+3,w
  2605  02D0  0277               	subwf	___aldiv@dividend+3,w
  2606  02D1  1D03               	skipz
  2607  02D2  2ADD               	goto	u1085
  2608  02D3  0872               	movf	___aldiv@divisor+2,w
  2609  02D4  0276               	subwf	___aldiv@dividend+2,w
  2610  02D5  1D03               	skipz
  2611  02D6  2ADD               	goto	u1085
  2612  02D7  0871               	movf	___aldiv@divisor+1,w
  2613  02D8  0275               	subwf	___aldiv@dividend+1,w
  2614  02D9  1D03               	skipz
  2615  02DA  2ADD               	goto	u1085
  2616  02DB  0870               	movf	___aldiv@divisor,w
  2617  02DC  0274               	subwf	___aldiv@dividend,w
  2618  02DD                     u1085:	
  2619  02DD  1C03               	skipc
  2620  02DE  2AEE               	goto	l1800
  2621  02DF  0870               	movf	___aldiv@divisor,w
  2622  02E0  02F4               	subwf	___aldiv@dividend,f
  2623  02E1  0871               	movf	___aldiv@divisor+1,w
  2624  02E2  1C03               	skipc
  2625  02E3  0F71               	incfsz	___aldiv@divisor+1,w
  2626  02E4  02F5               	subwf	___aldiv@dividend+1,f
  2627  02E5  0872               	movf	___aldiv@divisor+2,w
  2628  02E6  1C03               	skipc
  2629  02E7  0F72               	incfsz	___aldiv@divisor+2,w
  2630  02E8  02F6               	subwf	___aldiv@dividend+2,f
  2631  02E9  0873               	movf	___aldiv@divisor+3,w
  2632  02EA  1C03               	skipc
  2633  02EB  0F73               	incfsz	___aldiv@divisor+3,w
  2634  02EC  02F7               	subwf	___aldiv@dividend+3,f
  2635  02ED  1422               	bsf	___aldiv@quotient,0
  2636  02EE                     l1800:	
  2637  02EE  3001               	movlw	1
  2638  02EF                     u1095:	
  2639  02EF  1003               	clrc
  2640  02F0  0CF3               	rrf	___aldiv@divisor+3,f
  2641  02F1  0CF2               	rrf	___aldiv@divisor+2,f
  2642  02F2  0CF1               	rrf	___aldiv@divisor+1,f
  2643  02F3  0CF0               	rrf	___aldiv@divisor,f
  2644  02F4  3EFF               	addlw	-1
  2645  02F5  1D03               	skipz
  2646  02F6  2AEF               	goto	u1095
  2647  02F7  3001               	movlw	1
  2648  02F8  02A0               	subwf	___aldiv@counter,f
  2649  02F9  1D03               	btfss	3,2
  2650  02FA  2AC6               	goto	l1792
  2651  02FB                     l1804:	
  2652  02FB  0821               	movf	___aldiv@sign,w
  2653  02FC  1903               	btfsc	3,2
  2654  02FD  2B09               	goto	l1808
  2655  02FE  09A2               	comf	___aldiv@quotient,f
  2656  02FF  09A3               	comf	___aldiv@quotient+1,f
  2657  0300  09A4               	comf	___aldiv@quotient+2,f
  2658  0301  09A5               	comf	___aldiv@quotient+3,f
  2659  0302  0AA2               	incf	___aldiv@quotient,f
  2660  0303  1903               	skipnz
  2661  0304  0AA3               	incf	___aldiv@quotient+1,f
  2662  0305  1903               	skipnz
  2663  0306  0AA4               	incf	___aldiv@quotient+2,f
  2664  0307  1903               	skipnz
  2665  0308  0AA5               	incf	___aldiv@quotient+3,f
  2666  0309                     l1808:	
  2667  0309  0825               	movf	___aldiv@quotient+3,w
  2668  030A  00F3               	movwf	?___aldiv+3
  2669  030B  0824               	movf	___aldiv@quotient+2,w
  2670  030C  00F2               	movwf	?___aldiv+2
  2671  030D  0823               	movf	___aldiv@quotient+1,w
  2672  030E  00F1               	movwf	?___aldiv+1
  2673  030F  0822               	movf	___aldiv@quotient,w
  2674  0310  00F0               	movwf	?___aldiv
  2675  0311  0008               	return
  2676  0312                     __end_of___aldiv:	
  2677                           
  2678                           	psect	text6
  2679  0149                     __ptext6:	
  2680 ;; *************** function _Lcd_Init *****************
  2681 ;; Defined at:
  2682 ;;		line 65 in file "./LCD4bits.h"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;		None
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg, status,2, status,0, pclath, cstack
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2696 ;;      Params:         0       0       0       0       0
  2697 ;;      Locals:         0       0       0       0       0
  2698 ;;      Temps:          2       0       0       0       0
  2699 ;;      Totals:         2       0       0       0       0
  2700 ;;Total ram usage:        2 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    2
  2703 ;; This function calls:
  2704 ;;		_Lcd_Cmd
  2705 ;;		_Lcd_Port
  2706 ;; This function is called by:
  2707 ;;		_setup
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           
  2712                           ;psect for function _Lcd_Init
  2713  0149                     _Lcd_Init:	
  2714                           
  2715                           ;./LCD4bits.h: 67:   Lcd_Port(0x00);
  2716                           
  2717                           ;incstack = 0
  2718                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2719  0149  3000               	movlw	0
  2720  014A  120A  158A  2539  120A  118A  	fcall	_Lcd_Port
  2721                           
  2722                           ;./LCD4bits.h: 68:    _delay((unsigned long)((20)*(8000000/4000.0)));
  2723  014F  3034               	movlw	52
  2724  0150  00F5               	movwf	??_Lcd_Init+1
  2725  0151  30F1               	movlw	241
  2726  0152  00F4               	movwf	??_Lcd_Init
  2727  0153                     u1897:	
  2728  0153  0BF4               	decfsz	??_Lcd_Init,f
  2729  0154  2953               	goto	u1897
  2730  0155  0BF5               	decfsz	??_Lcd_Init+1,f
  2731  0156  2953               	goto	u1897
  2732  0157  2958               	nop2
  2733                           
  2734                           ;./LCD4bits.h: 69:   Lcd_Cmd(0x03);
  2735  0158  3003               	movlw	3
  2736  0159  120A  158A  2553  120A  118A  	fcall	_Lcd_Cmd
  2737                           
  2738                           ;./LCD4bits.h: 70:  _delay((unsigned long)((5)*(8000000/4000.0)));
  2739  015E  300D               	movlw	13
  2740  015F  00F5               	movwf	??_Lcd_Init+1
  2741  0160  30FB               	movlw	251
  2742  0161  00F4               	movwf	??_Lcd_Init
  2743  0162                     u1907:	
  2744  0162  0BF4               	decfsz	??_Lcd_Init,f
  2745  0163  2962               	goto	u1907
  2746  0164  0BF5               	decfsz	??_Lcd_Init+1,f
  2747  0165  2962               	goto	u1907
  2748  0166  2967               	nop2
  2749                           
  2750                           ;./LCD4bits.h: 71:   Lcd_Cmd(0x03);
  2751  0167  3003               	movlw	3
  2752  0168  120A  158A  2553  120A  118A  	fcall	_Lcd_Cmd
  2753                           
  2754                           ;./LCD4bits.h: 72:  _delay((unsigned long)((11)*(8000000/4000.0)));
  2755  016D  301D               	movlw	29
  2756  016E  00F5               	movwf	??_Lcd_Init+1
  2757  016F  3091               	movlw	145
  2758  0170  00F4               	movwf	??_Lcd_Init
  2759  0171                     u1917:	
  2760  0171  0BF4               	decfsz	??_Lcd_Init,f
  2761  0172  2971               	goto	u1917
  2762  0173  0BF5               	decfsz	??_Lcd_Init+1,f
  2763  0174  2971               	goto	u1917
  2764                           
  2765                           ;./LCD4bits.h: 73:   Lcd_Cmd(0x03);
  2766  0175  3003               	movlw	3
  2767  0176  120A  158A  2553  120A  118A  	fcall	_Lcd_Cmd
  2768                           
  2769                           ;./LCD4bits.h: 75:   Lcd_Cmd(0x02);
  2770  017B  3002               	movlw	2
  2771  017C  120A  158A  2553  120A  118A  	fcall	_Lcd_Cmd
  2772                           
  2773                           ;./LCD4bits.h: 76:   Lcd_Cmd(0x02);
  2774  0181  3002               	movlw	2
  2775  0182  120A  158A  2553  120A  118A  	fcall	_Lcd_Cmd
  2776                           
  2777                           ;./LCD4bits.h: 77:   Lcd_Cmd(0x08);
  2778  0187  3008               	movlw	8
  2779  0188  120A  158A  2553  120A  118A  	fcall	_Lcd_Cmd
  2780                           
  2781                           ;./LCD4bits.h: 78:   Lcd_Cmd(0x00);
  2782  018D  3000               	movlw	0
  2783  018E  120A  158A  2553  120A  118A  	fcall	_Lcd_Cmd
  2784                           
  2785                           ;./LCD4bits.h: 79:   Lcd_Cmd(0x0C);
  2786  0193  300C               	movlw	12
  2787  0194  120A  158A  2553  120A  118A  	fcall	_Lcd_Cmd
  2788                           
  2789                           ;./LCD4bits.h: 80:   Lcd_Cmd(0x00);
  2790  0199  3000               	movlw	0
  2791  019A  120A  158A  2553  120A  118A  	fcall	_Lcd_Cmd
  2792                           
  2793                           ;./LCD4bits.h: 81:   Lcd_Cmd(0x06);
  2794  019F  3006               	movlw	6
  2795  01A0  120A  158A  2553   	fcall	_Lcd_Cmd
  2796  01A3  0008               	return
  2797  01A4                     __end_of_Lcd_Init:	
  2798                           
  2799                           	psect	text7
  2800  0ECB                     __ptext7:	
  2801 ;; *************** function _I2C_Master_Init *****************
  2802 ;; Defined at:
  2803 ;;		line 16 in file "./I2C.h"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;  c               4    0[BANK0 ] const unsigned long 
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;		None
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  1    wreg      void 
  2810 ;; Registers used:
  2811 ;;		wreg, status,2, status,0, pclath, cstack
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2817 ;;      Params:         0       4       0       0       0
  2818 ;;      Locals:         0       0       0       0       0
  2819 ;;      Temps:          0       4       0       0       0
  2820 ;;      Totals:         0       8       0       0       0
  2821 ;;Total ram usage:        8 bytes
  2822 ;; Hardware stack levels used:    1
  2823 ;; Hardware stack levels required when called:    1
  2824 ;; This function calls:
  2825 ;;		___lldiv
  2826 ;; This function is called by:
  2827 ;;		_setup
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           
  2832                           ;psect for function _I2C_Master_Init
  2833  0ECB                     _I2C_Master_Init:	
  2834                           
  2835                           ;./I2C.h: 16: void I2C_Master_Init(const unsigned long c);./I2C.h: 17: {;./I2C.h: 18:   
      +                            SSPCON = 0b00101000;
  2836                           
  2837                           ;incstack = 0
  2838                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2839  0ECB  3028               	movlw	40
  2840  0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  2841  0ECD  1303               	bcf	3,6	;RP1=0, select bank0
  2842  0ECE  0094               	movwf	20	;volatile
  2843                           
  2844                           ;./I2C.h: 19:     SSPCON2 = 0;
  2845  0ECF  1683               	bsf	3,5	;RP0=1, select bank1
  2846  0ED0  1303               	bcf	3,6	;RP1=0, select bank1
  2847  0ED1  0191               	clrf	17	;volatile
  2848                           
  2849                           ;./I2C.h: 20:     SSPADD = (8000000/(4*c))-1;
  2850  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0ED4  0820               	movf	I2C_Master_Init@c,w
  2853  0ED5  00A4               	movwf	??_I2C_Master_Init
  2854  0ED6  0821               	movf	I2C_Master_Init@c+1,w
  2855  0ED7  00A5               	movwf	??_I2C_Master_Init+1
  2856  0ED8  0822               	movf	I2C_Master_Init@c+2,w
  2857  0ED9  00A6               	movwf	??_I2C_Master_Init+2
  2858  0EDA  0823               	movf	I2C_Master_Init@c+3,w
  2859  0EDB  00A7               	movwf	??_I2C_Master_Init+3
  2860  0EDC  3002               	movlw	2
  2861  0EDD                     u1255:	
  2862  0EDD  1003               	clrc
  2863  0EDE  0DA4               	rlf	??_I2C_Master_Init,f
  2864  0EDF  0DA5               	rlf	??_I2C_Master_Init+1,f
  2865  0EE0  0DA6               	rlf	??_I2C_Master_Init+2,f
  2866  0EE1  0DA7               	rlf	??_I2C_Master_Init+3,f
  2867  0EE2  3EFF               	addlw	-1
  2868  0EE3  1D03               	skipz
  2869  0EE4  2EDD               	goto	u1255
  2870  0EE5  0827               	movf	??_I2C_Master_Init+3,w
  2871  0EE6  00F3               	movwf	___lldiv@divisor+3
  2872  0EE7  0826               	movf	??_I2C_Master_Init+2,w
  2873  0EE8  00F2               	movwf	___lldiv@divisor+2
  2874  0EE9  0825               	movf	??_I2C_Master_Init+1,w
  2875  0EEA  00F1               	movwf	___lldiv@divisor+1
  2876  0EEB  0824               	movf	??_I2C_Master_Init,w
  2877  0EEC  00F0               	movwf	___lldiv@divisor
  2878  0EED  3000               	movlw	0
  2879  0EEE  00F7               	movwf	___lldiv@dividend+3
  2880  0EEF  307A               	movlw	122
  2881  0EF0  00F6               	movwf	___lldiv@dividend+2
  2882  0EF1  3012               	movlw	18
  2883  0EF2  00F5               	movwf	___lldiv@dividend+1
  2884  0EF3  3000               	movlw	0
  2885  0EF4  00F4               	movwf	___lldiv@dividend
  2886  0EF5  120A  118A  21A4   	fcall	___lldiv
  2887  0EF8  0870               	movf	?___lldiv,w
  2888  0EF9  3EFF               	addlw	255
  2889  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  2890  0EFB  1303               	bcf	3,6	;RP1=0, select bank1
  2891  0EFC  0093               	movwf	19	;volatile
  2892                           
  2893                           ;./I2C.h: 21:     SSPSTAT = 0;
  2894  0EFD  0194               	clrf	20	;volatile
  2895                           
  2896                           ;./I2C.h: 22:     TRISCbits.TRISC3 = 1;
  2897  0EFE  1587               	bsf	7,3	;volatile
  2898                           
  2899                           ;./I2C.h: 23:     TRISCbits.TRISC4 = 1;
  2900  0EFF  1607               	bsf	7,4	;volatile
  2901  0F00  0008               	return
  2902  0F01                     __end_of_I2C_Master_Init:	
  2903                           
  2904                           	psect	text8
  2905  01A4                     __ptext8:	
  2906 ;; *************** function ___lldiv *****************
  2907 ;; Defined at:
  2908 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  divisor         4    0[COMMON] unsigned long 
  2911 ;;  dividend        4    4[COMMON] unsigned long 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  quotient        4    9[COMMON] unsigned long 
  2914 ;;  counter         1   13[COMMON] unsigned char 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  4    0[COMMON] unsigned long 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2924 ;;      Params:         8       0       0       0       0
  2925 ;;      Locals:         5       0       0       0       0
  2926 ;;      Temps:          1       0       0       0       0
  2927 ;;      Totals:        14       0       0       0       0
  2928 ;;Total ram usage:       14 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; This function calls:
  2931 ;;		Nothing
  2932 ;; This function is called by:
  2933 ;;		_I2C_Master_Init
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           
  2938                           ;psect for function ___lldiv
  2939  01A4                     ___lldiv:	
  2940                           
  2941                           ;incstack = 0
  2942                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2943  01A4  3000               	movlw	0
  2944  01A5  00FC               	movwf	___lldiv@quotient+3
  2945  01A6  3000               	movlw	0
  2946  01A7  00FB               	movwf	___lldiv@quotient+2
  2947  01A8  3000               	movlw	0
  2948  01A9  00FA               	movwf	___lldiv@quotient+1
  2949  01AA  3000               	movlw	0
  2950  01AB  00F9               	movwf	___lldiv@quotient
  2951  01AC  0873               	movf	___lldiv@divisor+3,w
  2952  01AD  0472               	iorwf	___lldiv@divisor+2,w
  2953  01AE  0471               	iorwf	___lldiv@divisor+1,w
  2954  01AF  0470               	iorwf	___lldiv@divisor,w
  2955  01B0  1903               	skipnz
  2956  01B1  29F9               	goto	l1768
  2957  01B2  01FD               	clrf	___lldiv@counter
  2958  01B3  0AFD               	incf	___lldiv@counter,f
  2959  01B4                     l1754:	
  2960  01B4  1BF3               	btfsc	___lldiv@divisor+3,7
  2961  01B5  29C4               	goto	l1756
  2962  01B6  3001               	movlw	1
  2963  01B7  00F8               	movwf	??___lldiv
  2964  01B8                     u965:	
  2965  01B8  1003               	clrc
  2966  01B9  0DF0               	rlf	___lldiv@divisor,f
  2967  01BA  0DF1               	rlf	___lldiv@divisor+1,f
  2968  01BB  0DF2               	rlf	___lldiv@divisor+2,f
  2969  01BC  0DF3               	rlf	___lldiv@divisor+3,f
  2970  01BD  0BF8               	decfsz	??___lldiv,f
  2971  01BE  29B8               	goto	u965
  2972  01BF  3001               	movlw	1
  2973  01C0  00F8               	movwf	??___lldiv
  2974  01C1  0878               	movf	??___lldiv,w
  2975  01C2  07FD               	addwf	___lldiv@counter,f
  2976  01C3  29B4               	goto	l1754
  2977  01C4                     l1756:	
  2978  01C4  3001               	movlw	1
  2979  01C5  00F8               	movwf	??___lldiv
  2980  01C6                     u985:	
  2981  01C6  1003               	clrc
  2982  01C7  0DF9               	rlf	___lldiv@quotient,f
  2983  01C8  0DFA               	rlf	___lldiv@quotient+1,f
  2984  01C9  0DFB               	rlf	___lldiv@quotient+2,f
  2985  01CA  0DFC               	rlf	___lldiv@quotient+3,f
  2986  01CB  0BF8               	decfsz	??___lldiv,f
  2987  01CC  29C6               	goto	u985
  2988  01CD  0873               	movf	___lldiv@divisor+3,w
  2989  01CE  0277               	subwf	___lldiv@dividend+3,w
  2990  01CF  1D03               	skipz
  2991  01D0  29DB               	goto	u995
  2992  01D1  0872               	movf	___lldiv@divisor+2,w
  2993  01D2  0276               	subwf	___lldiv@dividend+2,w
  2994  01D3  1D03               	skipz
  2995  01D4  29DB               	goto	u995
  2996  01D5  0871               	movf	___lldiv@divisor+1,w
  2997  01D6  0275               	subwf	___lldiv@dividend+1,w
  2998  01D7  1D03               	skipz
  2999  01D8  29DB               	goto	u995
  3000  01D9  0870               	movf	___lldiv@divisor,w
  3001  01DA  0274               	subwf	___lldiv@dividend,w
  3002  01DB                     u995:	
  3003  01DB  1C03               	skipc
  3004  01DC  29EC               	goto	l1764
  3005  01DD  0870               	movf	___lldiv@divisor,w
  3006  01DE  02F4               	subwf	___lldiv@dividend,f
  3007  01DF  0871               	movf	___lldiv@divisor+1,w
  3008  01E0  1C03               	skipc
  3009  01E1  0F71               	incfsz	___lldiv@divisor+1,w
  3010  01E2  02F5               	subwf	___lldiv@dividend+1,f
  3011  01E3  0872               	movf	___lldiv@divisor+2,w
  3012  01E4  1C03               	skipc
  3013  01E5  0F72               	incfsz	___lldiv@divisor+2,w
  3014  01E6  02F6               	subwf	___lldiv@dividend+2,f
  3015  01E7  0873               	movf	___lldiv@divisor+3,w
  3016  01E8  1C03               	skipc
  3017  01E9  0F73               	incfsz	___lldiv@divisor+3,w
  3018  01EA  02F7               	subwf	___lldiv@dividend+3,f
  3019  01EB  1479               	bsf	___lldiv@quotient,0
  3020  01EC                     l1764:	
  3021  01EC  3001               	movlw	1
  3022  01ED                     u1005:	
  3023  01ED  1003               	clrc
  3024  01EE  0CF3               	rrf	___lldiv@divisor+3,f
  3025  01EF  0CF2               	rrf	___lldiv@divisor+2,f
  3026  01F0  0CF1               	rrf	___lldiv@divisor+1,f
  3027  01F1  0CF0               	rrf	___lldiv@divisor,f
  3028  01F2  3EFF               	addlw	-1
  3029  01F3  1D03               	skipz
  3030  01F4  29ED               	goto	u1005
  3031  01F5  3001               	movlw	1
  3032  01F6  02FD               	subwf	___lldiv@counter,f
  3033  01F7  1D03               	btfss	3,2
  3034  01F8  29C4               	goto	l1756
  3035  01F9                     l1768:	
  3036  01F9  087C               	movf	___lldiv@quotient+3,w
  3037  01FA  00F3               	movwf	?___lldiv+3
  3038  01FB  087B               	movf	___lldiv@quotient+2,w
  3039  01FC  00F2               	movwf	?___lldiv+2
  3040  01FD  087A               	movf	___lldiv@quotient+1,w
  3041  01FE  00F1               	movwf	?___lldiv+1
  3042  01FF  0879               	movf	___lldiv@quotient,w
  3043  0200  00F0               	movwf	?___lldiv
  3044  0201  0008               	return
  3045  0202                     __end_of___lldiv:	
  3046                           
  3047                           	psect	text9
  3048  0DCA                     __ptext9:	
  3049 ;; *************** function _get_tripwire *****************
  3050 ;; Defined at:
  3051 ;;		line 314 in file "mainMaster.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;		None
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;  trip            1    7[COMMON] unsigned char 
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      unsigned char 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2, status,0, pclath, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3065 ;;      Params:         0       0       0       0       0
  3066 ;;      Locals:         1       0       0       0       0
  3067 ;;      Temps:          1       0       0       0       0
  3068 ;;      Totals:         2       0       0       0       0
  3069 ;;Total ram usage:        2 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; Hardware stack levels required when called:    2
  3072 ;; This function calls:
  3073 ;;		_I2C_Master_Read
  3074 ;;		_I2C_Master_Start
  3075 ;;		_I2C_Master_Stop
  3076 ;;		_I2C_Master_Write
  3077 ;; This function is called by:
  3078 ;;		_main
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           
  3083                           ;psect for function _get_tripwire
  3084  0DCA                     _get_tripwire:	
  3085                           
  3086                           ;mainMaster.c: 316:     char trip;;mainMaster.c: 318:     I2C_Master_Start();
  3087                           
  3088                           ;incstack = 0
  3089                           ; Regs used in _get_tripwire: [wreg+status,2+status,0+pclath+cstack]
  3090  0DCA  120A  158A  24E5  120A  158A  	fcall	_I2C_Master_Start
  3091                           
  3092                           ;mainMaster.c: 319:     I2C_Master_Write(0x21);
  3093  0DCF  3021               	movlw	33
  3094  0DD0  00F0               	movwf	I2C_Master_Write@d
  3095  0DD1  3000               	movlw	0
  3096  0DD2  00F1               	movwf	I2C_Master_Write@d+1
  3097  0DD3  120A  158A  24FA  120A  158A  	fcall	_I2C_Master_Write
  3098                           
  3099                           ;mainMaster.c: 320:     trip = I2C_Master_Read(0);
  3100  0DD8  3000               	movlw	0
  3101  0DD9  00F0               	movwf	I2C_Master_Read@a
  3102  0DDA  00F1               	movwf	I2C_Master_Read@a+1
  3103  0DDB  120A  158A  2637  120A  158A  	fcall	_I2C_Master_Read
  3104  0DE0  0870               	movf	?_I2C_Master_Read,w
  3105  0DE1  00F6               	movwf	??_get_tripwire
  3106  0DE2  0876               	movf	??_get_tripwire,w
  3107  0DE3  00F7               	movwf	get_tripwire@trip
  3108                           
  3109                           ;mainMaster.c: 321:     I2C_Master_Stop();
  3110  0DE4  120A  158A  24EC   	fcall	_I2C_Master_Stop
  3111                           
  3112                           ;mainMaster.c: 323:     return (trip);
  3113  0DE7  0877               	movf	get_tripwire@trip,w
  3114  0DE8  0008               	return
  3115  0DE9                     __end_of_get_tripwire:	
  3116                           
  3117                           	psect	text10
  3118  0202                     __ptext10:	
  3119 ;; *************** function _get_time *****************
  3120 ;; Defined at:
  3121 ;;		line 239 in file "mainMaster.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;  time_string     1    wreg     PTR unsigned char 
  3124 ;;		 -> time(6), 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  time_string     1   10[COMMON] PTR unsigned char 
  3127 ;;		 -> time(6), 
  3128 ;;  min             1    9[COMMON] unsigned char 
  3129 ;;  hour            1    8[COMMON] unsigned char 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      void 
  3132 ;; Registers used:
  3133 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3139 ;;      Params:         0       0       0       0       0
  3140 ;;      Locals:         3       0       0       0       0
  3141 ;;      Temps:          2       0       0       0       0
  3142 ;;      Totals:         5       0       0       0       0
  3143 ;;Total ram usage:        5 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    2
  3146 ;; This function calls:
  3147 ;;		_I2C_Master_Read
  3148 ;;		_I2C_Master_RepeatedStart
  3149 ;;		_I2C_Master_Start
  3150 ;;		_I2C_Master_Stop
  3151 ;;		_I2C_Master_Write
  3152 ;; This function is called by:
  3153 ;;		_main
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           
  3158                           ;psect for function _get_time
  3159  0202                     _get_time:	
  3160                           
  3161                           ;incstack = 0
  3162                           ; Regs used in _get_time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3163                           ;get_time@time_string stored from wreg
  3164  0202  00FA               	movwf	get_time@time_string
  3165                           
  3166                           ;mainMaster.c: 241:     char hour, min;;mainMaster.c: 243:     I2C_Master_Start();
  3167  0203  120A  158A  24E5  120A  118A  	fcall	_I2C_Master_Start
  3168                           
  3169                           ;mainMaster.c: 244:     I2C_Master_Write(0xD0);
  3170  0208  30D0               	movlw	208
  3171  0209  00F0               	movwf	I2C_Master_Write@d
  3172  020A  3000               	movlw	0
  3173  020B  00F1               	movwf	I2C_Master_Write@d+1
  3174  020C  120A  158A  24FA  120A  118A  	fcall	_I2C_Master_Write
  3175                           
  3176                           ;mainMaster.c: 245:     I2C_Master_Write(0x01);
  3177  0211  3001               	movlw	1
  3178  0212  00F0               	movwf	I2C_Master_Write@d
  3179  0213  3000               	movlw	0
  3180  0214  00F1               	movwf	I2C_Master_Write@d+1
  3181  0215  120A  158A  24FA  120A  118A  	fcall	_I2C_Master_Write
  3182                           
  3183                           ;mainMaster.c: 246:     I2C_Master_RepeatedStart();
  3184  021A  120A  158A  24F3  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3185                           
  3186                           ;mainMaster.c: 247:     I2C_Master_Write(0xD1);
  3187  021F  30D1               	movlw	209
  3188  0220  00F0               	movwf	I2C_Master_Write@d
  3189  0221  3000               	movlw	0
  3190  0222  00F1               	movwf	I2C_Master_Write@d+1
  3191  0223  120A  158A  24FA  120A  118A  	fcall	_I2C_Master_Write
  3192                           
  3193                           ;mainMaster.c: 248:     min = I2C_Master_Read(1);
  3194  0228  3001               	movlw	1
  3195  0229  00F0               	movwf	I2C_Master_Read@a
  3196  022A  3000               	movlw	0
  3197  022B  00F1               	movwf	I2C_Master_Read@a+1
  3198  022C  120A  158A  2637  120A  118A  	fcall	_I2C_Master_Read
  3199  0231  0870               	movf	?_I2C_Master_Read,w
  3200  0232  00F6               	movwf	??_get_time
  3201  0233  0876               	movf	??_get_time,w
  3202  0234  00F9               	movwf	get_time@min
  3203                           
  3204                           ;mainMaster.c: 249:     hour = I2C_Master_Read(0);
  3205  0235  3000               	movlw	0
  3206  0236  00F0               	movwf	I2C_Master_Read@a
  3207  0237  00F1               	movwf	I2C_Master_Read@a+1
  3208  0238  120A  158A  2637  120A  118A  	fcall	_I2C_Master_Read
  3209  023D  0870               	movf	?_I2C_Master_Read,w
  3210  023E  00F6               	movwf	??_get_time
  3211  023F  0876               	movf	??_get_time,w
  3212  0240  00F8               	movwf	get_time@hour
  3213                           
  3214                           ;mainMaster.c: 250:     I2C_Master_Stop();
  3215  0241  120A  158A  24EC  120A  118A  	fcall	_I2C_Master_Stop
  3216                           
  3217                           ;mainMaster.c: 252:     time_string[0] = (hour >> 4) + '0';
  3218  0246  0878               	movf	get_time@hour,w
  3219  0247  00F6               	movwf	??_get_time
  3220  0248  3004               	movlw	4
  3221  0249                     u1575:	
  3222  0249  1003               	clrc
  3223  024A  0CF6               	rrf	??_get_time,f
  3224  024B  3EFF               	addlw	-1
  3225  024C  1D03               	skipz
  3226  024D  2A49               	goto	u1575
  3227  024E  0876               	movf	??_get_time,w
  3228  024F  3E30               	addlw	48
  3229  0250  00F7               	movwf	??_get_time+1
  3230  0251  087A               	movf	get_time@time_string,w
  3231  0252  0084               	movwf	4
  3232  0253  0877               	movf	??_get_time+1,w
  3233  0254  1383               	bcf	3,7	;select IRP bank0
  3234  0255  0080               	movwf	0
  3235                           
  3236                           ;mainMaster.c: 253:     time_string[1] = (hour & 0x0F) + '0';
  3237  0256  0878               	movf	get_time@hour,w
  3238  0257  390F               	andlw	15
  3239  0258  3E30               	addlw	48
  3240  0259  00F6               	movwf	??_get_time
  3241  025A  0A7A               	incf	get_time@time_string,w
  3242  025B  0084               	movwf	4
  3243  025C  0876               	movf	??_get_time,w
  3244  025D  0080               	movwf	0
  3245                           
  3246                           ;mainMaster.c: 254:     time_string[2] = ':';
  3247  025E  303A               	movlw	58
  3248  025F  00F6               	movwf	??_get_time
  3249  0260  087A               	movf	get_time@time_string,w
  3250  0261  3E02               	addlw	2
  3251  0262  0084               	movwf	4
  3252  0263  0876               	movf	??_get_time,w
  3253  0264  0080               	movwf	0
  3254                           
  3255                           ;mainMaster.c: 255:     time_string[3] = (min >> 4) + '0';
  3256  0265  0879               	movf	get_time@min,w
  3257  0266  00F6               	movwf	??_get_time
  3258  0267  3004               	movlw	4
  3259  0268                     u1585:	
  3260  0268  1003               	clrc
  3261  0269  0CF6               	rrf	??_get_time,f
  3262  026A  3EFF               	addlw	-1
  3263  026B  1D03               	skipz
  3264  026C  2A68               	goto	u1585
  3265  026D  0876               	movf	??_get_time,w
  3266  026E  3E30               	addlw	48
  3267  026F  00F7               	movwf	??_get_time+1
  3268  0270  087A               	movf	get_time@time_string,w
  3269  0271  3E03               	addlw	3
  3270  0272  0084               	movwf	4
  3271  0273  0877               	movf	??_get_time+1,w
  3272  0274  0080               	movwf	0
  3273                           
  3274                           ;mainMaster.c: 256:     time_string[4] = (min & 0x0F) + '0';
  3275  0275  0879               	movf	get_time@min,w
  3276  0276  390F               	andlw	15
  3277  0277  3E30               	addlw	48
  3278  0278  00F6               	movwf	??_get_time
  3279  0279  087A               	movf	get_time@time_string,w
  3280  027A  3E04               	addlw	4
  3281  027B  0084               	movwf	4
  3282  027C  0876               	movf	??_get_time,w
  3283  027D  0080               	movwf	0
  3284                           
  3285                           ;mainMaster.c: 257:     time_string[5] = '\0';
  3286  027E  087A               	movf	get_time@time_string,w
  3287  027F  3E05               	addlw	5
  3288  0280  0084               	movwf	4
  3289  0281  0180               	clrf	0
  3290  0282  0008               	return
  3291  0283                     __end_of_get_time:	
  3292                           
  3293                           	psect	text11
  3294  0312                     __ptext11:	
  3295 ;; *************** function _get_temp *****************
  3296 ;; Defined at:
  3297 ;;		line 275 in file "mainMaster.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  temp_string     1    wreg     PTR unsigned char 
  3300 ;;		 -> temp(6), 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  temp_string     1   20[BANK0 ] PTR unsigned char 
  3303 ;;		 -> temp(6), 
  3304 ;;  decimal         3   16[BANK0 ] unsigned char [3]
  3305 ;;  tempLSB         1   21[BANK0 ] unsigned char 
  3306 ;;  tempMSB         1   19[BANK0 ] unsigned char 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3316 ;;      Params:         0       0       0       0       0
  3317 ;;      Locals:         0       6       0       0       0
  3318 ;;      Temps:          0       3       0       0       0
  3319 ;;      Totals:         0       9       0       0       0
  3320 ;;Total ram usage:        9 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    2
  3323 ;; This function calls:
  3324 ;;		_I2C_Master_Read
  3325 ;;		_I2C_Master_RepeatedStart
  3326 ;;		_I2C_Master_Start
  3327 ;;		_I2C_Master_Stop
  3328 ;;		_I2C_Master_Write
  3329 ;;		___bmul
  3330 ;;		_sprintf
  3331 ;;		_strcat
  3332 ;; This function is called by:
  3333 ;;		_main
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           
  3338                           ;psect for function _get_temp
  3339  0312                     _get_temp:	
  3340                           
  3341                           ;incstack = 0
  3342                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3343                           ;get_temp@temp_string stored from wreg
  3344  0312  1283               	bcf	3,5	;RP0=0, select bank0
  3345  0313  1303               	bcf	3,6	;RP1=0, select bank0
  3346  0314  00B4               	movwf	get_temp@temp_string
  3347                           
  3348                           ;mainMaster.c: 277:     char tempLSB, tempMSB;;mainMaster.c: 278:     char decimal[3];;m
      +                          ainMaster.c: 280:     I2C_Master_Start();
  3349  0315  120A  158A  24E5  120A  118A  	fcall	_I2C_Master_Start
  3350                           
  3351                           ;mainMaster.c: 281:     I2C_Master_Write(0xD0);
  3352  031A  30D0               	movlw	208
  3353  031B  00F0               	movwf	I2C_Master_Write@d
  3354  031C  3000               	movlw	0
  3355  031D  00F1               	movwf	I2C_Master_Write@d+1
  3356  031E  120A  158A  24FA  120A  118A  	fcall	_I2C_Master_Write
  3357                           
  3358                           ;mainMaster.c: 282:     I2C_Master_Write(0x11);
  3359  0323  3011               	movlw	17
  3360  0324  00F0               	movwf	I2C_Master_Write@d
  3361  0325  3000               	movlw	0
  3362  0326  00F1               	movwf	I2C_Master_Write@d+1
  3363  0327  120A  158A  24FA  120A  118A  	fcall	_I2C_Master_Write
  3364                           
  3365                           ;mainMaster.c: 283:     I2C_Master_RepeatedStart();
  3366  032C  120A  158A  24F3  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3367                           
  3368                           ;mainMaster.c: 284:     I2C_Master_Write(0xD1);
  3369  0331  30D1               	movlw	209
  3370  0332  00F0               	movwf	I2C_Master_Write@d
  3371  0333  3000               	movlw	0
  3372  0334  00F1               	movwf	I2C_Master_Write@d+1
  3373  0335  120A  158A  24FA  120A  118A  	fcall	_I2C_Master_Write
  3374                           
  3375                           ;mainMaster.c: 285:     tempMSB = I2C_Master_Read(1);
  3376  033A  3001               	movlw	1
  3377  033B  00F0               	movwf	I2C_Master_Read@a
  3378  033C  3000               	movlw	0
  3379  033D  00F1               	movwf	I2C_Master_Read@a+1
  3380  033E  120A  158A  2637  120A  118A  	fcall	_I2C_Master_Read
  3381  0343  0870               	movf	?_I2C_Master_Read,w
  3382  0344  1283               	bcf	3,5	;RP0=0, select bank0
  3383  0345  1303               	bcf	3,6	;RP1=0, select bank0
  3384  0346  00AD               	movwf	??_get_temp
  3385  0347  082D               	movf	??_get_temp,w
  3386  0348  00B3               	movwf	get_temp@tempMSB
  3387                           
  3388                           ;mainMaster.c: 286:     tempLSB = I2C_Master_Read(0);
  3389  0349  3000               	movlw	0
  3390  034A  00F0               	movwf	I2C_Master_Read@a
  3391  034B  00F1               	movwf	I2C_Master_Read@a+1
  3392  034C  120A  158A  2637  120A  118A  	fcall	_I2C_Master_Read
  3393  0351  0870               	movf	?_I2C_Master_Read,w
  3394  0352  1283               	bcf	3,5	;RP0=0, select bank0
  3395  0353  1303               	bcf	3,6	;RP1=0, select bank0
  3396  0354  00AD               	movwf	??_get_temp
  3397  0355  082D               	movf	??_get_temp,w
  3398  0356  00B5               	movwf	get_temp@tempLSB
  3399                           
  3400                           ;mainMaster.c: 287:     I2C_Master_Stop();
  3401  0357  120A  158A  24EC  120A  118A  	fcall	_I2C_Master_Stop
  3402                           
  3403                           ;mainMaster.c: 289:     tempMSB = tempMSB - 4;
  3404  035C  1283               	bcf	3,5	;RP0=0, select bank0
  3405  035D  1303               	bcf	3,6	;RP1=0, select bank0
  3406  035E  0833               	movf	get_temp@tempMSB,w
  3407  035F  3EFC               	addlw	252
  3408  0360  00AD               	movwf	??_get_temp
  3409  0361  082D               	movf	??_get_temp,w
  3410  0362  00B3               	movwf	get_temp@tempMSB
  3411                           
  3412                           ;mainMaster.c: 290:     tempLSB = (tempLSB >> 6) * 25;
  3413  0363  3019               	movlw	25
  3414  0364  00AD               	movwf	??_get_temp
  3415  0365  082D               	movf	??_get_temp,w
  3416  0366  00F0               	movwf	___bmul@multiplicand
  3417  0367  0835               	movf	get_temp@tempLSB,w
  3418  0368  00AE               	movwf	??_get_temp+1
  3419  0369  3006               	movlw	6
  3420  036A                     u1555:	
  3421  036A  1003               	clrc
  3422  036B  0CAE               	rrf	??_get_temp+1,f
  3423  036C  3EFF               	addlw	-1
  3424  036D  1D03               	skipz
  3425  036E  2B6A               	goto	u1555
  3426  036F  082E               	movf	??_get_temp+1,w
  3427  0370  120A  158A  2528  120A  118A  	fcall	___bmul
  3428  0375  1283               	bcf	3,5	;RP0=0, select bank0
  3429  0376  1303               	bcf	3,6	;RP1=0, select bank0
  3430  0377  00AF               	movwf	??_get_temp+2
  3431  0378  082F               	movf	??_get_temp+2,w
  3432  0379  00B5               	movwf	get_temp@tempLSB
  3433                           
  3434                           ;mainMaster.c: 291:     sprintf(temp_string, "%d", tempMSB);
  3435  037A  30A1               	movlw	(low (((STR_20+1)-__stringbase)| (0+32768)))& (0+255)
  3436  037B  00AD               	movwf	??_get_temp
  3437  037C  082D               	movf	??_get_temp,w
  3438  037D  00A0               	movwf	sprintf@f
  3439  037E  0833               	movf	get_temp@tempMSB,w
  3440  037F  00AE               	movwf	??_get_temp+1
  3441  0380  01AF               	clrf	??_get_temp+2
  3442  0381  082E               	movf	??_get_temp+1,w
  3443  0382  00A1               	movwf	?_sprintf+1
  3444  0383  082F               	movf	??_get_temp+2,w
  3445  0384  00A2               	movwf	?_sprintf+2
  3446  0385  0834               	movf	get_temp@temp_string,w
  3447  0386  120A  118A  248B  120A  118A  	fcall	_sprintf
  3448                           
  3449                           ;mainMaster.c: 292:     if (tempLSB == 0){
  3450  038B  1283               	bcf	3,5	;RP0=0, select bank0
  3451  038C  1303               	bcf	3,6	;RP1=0, select bank0
  3452  038D  0835               	movf	get_temp@tempLSB,w
  3453  038E  1D03               	btfss	3,2
  3454  038F  2B92               	goto	l2158
  3455                           
  3456                           ;mainMaster.c: 293:         sprintf(decimal, ".%d0", tempLSB);
  3457  0390  309B               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  3458  0391  2B93               	goto	L15
  3459  0392                     l2158:	
  3460                           ;mainMaster.c: 294:     } else {
  3461                           
  3462                           
  3463                           ;mainMaster.c: 295:         sprintf(decimal, ".%d", tempLSB);
  3464  0392  30A0               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  3465  0393                     L15:	
  3466  0393  00AD               	movwf	??_get_temp
  3467  0394  082D               	movf	??_get_temp,w
  3468  0395  00A0               	movwf	sprintf@f
  3469  0396  0835               	movf	get_temp@tempLSB,w
  3470  0397  00AE               	movwf	??_get_temp+1
  3471  0398  01AF               	clrf	??_get_temp+2
  3472  0399  082E               	movf	??_get_temp+1,w
  3473  039A  00A1               	movwf	?_sprintf+1
  3474  039B  082F               	movf	??_get_temp+2,w
  3475  039C  00A2               	movwf	?_sprintf+2
  3476  039D  3030               	movlw	(low (get_temp@decimal| 0))& (0+255)
  3477  039E  120A  118A  248B  120A  118A  	fcall	_sprintf
  3478                           
  3479                           ;mainMaster.c: 297:     strcat(temp_string, decimal);
  3480  03A3  3030               	movlw	(low (get_temp@decimal| 0))& (0+255)
  3481  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  3482  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  3483  03A6  00AD               	movwf	??_get_temp
  3484  03A7  082D               	movf	??_get_temp,w
  3485  03A8  00F0               	movwf	strcat@from
  3486  03A9  0834               	movf	get_temp@temp_string,w
  3487  03AA  120A  158A  25E9   	fcall	_strcat
  3488                           
  3489                           ;mainMaster.c: 298:     temp_string[5] = '\0';
  3490  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  3491  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  3492  03AF  0834               	movf	get_temp@temp_string,w
  3493  03B0  3E05               	addlw	5
  3494  03B1  0084               	movwf	4
  3495  03B2  1383               	bcf	3,7	;select IRP bank0
  3496  03B3  0180               	clrf	0
  3497  03B4  0008               	return
  3498  03B5                     __end_of_get_temp:	
  3499                           
  3500                           	psect	text12
  3501  0DE9                     __ptext12:	
  3502 ;; *************** function _strcat *****************
  3503 ;; Defined at:
  3504 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcat.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  to              1    wreg     PTR unsigned char 
  3507 ;;		 -> temp(6), 
  3508 ;;  from            1    0[COMMON] PTR const unsigned char 
  3509 ;;		 -> get_temp@decimal(3), 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  to              1    2[COMMON] PTR unsigned char 
  3512 ;;		 -> temp(6), 
  3513 ;;  cp              1    3[COMMON] PTR unsigned char 
  3514 ;;		 -> temp(6), 
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1    wreg      PTR unsigned char 
  3517 ;; Registers used:
  3518 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3524 ;;      Params:         1       0       0       0       0
  3525 ;;      Locals:         2       0       0       0       0
  3526 ;;      Temps:          1       0       0       0       0
  3527 ;;      Totals:         4       0       0       0       0
  3528 ;;Total ram usage:        4 bytes
  3529 ;; Hardware stack levels used:    1
  3530 ;; This function calls:
  3531 ;;		Nothing
  3532 ;; This function is called by:
  3533 ;;		_get_temp
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           
  3538                           ;psect for function _strcat
  3539  0DE9                     _strcat:	
  3540                           
  3541                           ;incstack = 0
  3542                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  3543                           ;strcat@to stored from wreg
  3544  0DE9  00F2               	movwf	strcat@to
  3545  0DEA  0872               	movf	strcat@to,w
  3546  0DEB  00F1               	movwf	??_strcat
  3547  0DEC  0871               	movf	??_strcat,w
  3548  0DED  00F3               	movwf	strcat@cp
  3549  0DEE                     l2054:	
  3550  0DEE  0873               	movf	strcat@cp,w
  3551  0DEF  0084               	movwf	4
  3552  0DF0  1383               	bcf	3,7	;select IRP bank0
  3553  0DF1  0800               	movf	0,w
  3554  0DF2  1903               	btfsc	3,2
  3555  0DF3  2E01               	goto	l2058
  3556  0DF4  3001               	movlw	1
  3557  0DF5  00F1               	movwf	??_strcat
  3558  0DF6  0871               	movf	??_strcat,w
  3559  0DF7  07F3               	addwf	strcat@cp,f
  3560  0DF8  2DEE               	goto	l2054
  3561  0DF9                     l2056:	
  3562  0DF9  3001               	movlw	1
  3563  0DFA  00F1               	movwf	??_strcat
  3564  0DFB  0871               	movf	??_strcat,w
  3565  0DFC  07F3               	addwf	strcat@cp,f
  3566  0DFD  3001               	movlw	1
  3567  0DFE  00F1               	movwf	??_strcat
  3568  0DFF  0871               	movf	??_strcat,w
  3569  0E00  07F0               	addwf	strcat@from,f
  3570  0E01                     l2058:	
  3571  0E01  0870               	movf	strcat@from,w
  3572  0E02  0084               	movwf	4
  3573  0E03  0800               	movf	0,w
  3574  0E04  00F1               	movwf	??_strcat
  3575  0E05  0873               	movf	strcat@cp,w
  3576  0E06  0084               	movwf	4
  3577  0E07  0871               	movf	??_strcat,w
  3578  0E08  0080               	movwf	0
  3579  0E09  0800               	movf	0,w
  3580  0E0A  1903               	btfsc	3,2
  3581  0E0B  0008               	return
  3582  0E0C  2DF9               	goto	l2056
  3583  0E0D                     __end_of_strcat:	
  3584                           
  3585                           	psect	text13
  3586  048B                     __ptext13:	
  3587 ;; *************** function _sprintf *****************
  3588 ;; Defined at:
  3589 ;;		line 500 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  sp              1    wreg     PTR unsigned char 
  3592 ;;		 -> get_temp@decimal(3), temp(6), 
  3593 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  3594 ;;		 -> STR_20(4), STR_19(5), STR_18(3), 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  3597 ;;		 -> get_temp@decimal(3), temp(6), 
  3598 ;;  tmpval          4    0        struct .
  3599 ;;  val             2    9[BANK0 ] unsigned int 
  3600 ;;  cp              2    0        PTR const unsigned char 
  3601 ;;  len             2    0        unsigned int 
  3602 ;;  c               1   12[BANK0 ] unsigned char 
  3603 ;;  prec            1    8[BANK0 ] char 
  3604 ;;  flag            1    7[BANK0 ] unsigned char 
  3605 ;;  ap              1    6[BANK0 ] PTR void [1]
  3606 ;;		 -> ?_sprintf(2), 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  2    0[BANK0 ] int 
  3609 ;; Registers used:
  3610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3616 ;;      Params:         0       3       0       0       0
  3617 ;;      Locals:         0       7       0       0       0
  3618 ;;      Temps:          0       3       0       0       0
  3619 ;;      Totals:         0      13       0       0       0
  3620 ;;Total ram usage:       13 bytes
  3621 ;; Hardware stack levels used:    1
  3622 ;; Hardware stack levels required when called:    1
  3623 ;; This function calls:
  3624 ;;		___lwdiv
  3625 ;;		___lwmod
  3626 ;; This function is called by:
  3627 ;;		_get_temp
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           
  3632                           ;psect for function _sprintf
  3633  048B                     _sprintf:	
  3634                           
  3635                           ;incstack = 0
  3636                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3637                           ;sprintf@sp stored from wreg
  3638  048B  1283               	bcf	3,5	;RP0=0, select bank0
  3639  048C  1303               	bcf	3,6	;RP1=0, select bank0
  3640  048D  00AB               	movwf	sprintf@sp
  3641                           
  3642                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;D:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  3643  048E  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3644  048F  00A3               	movwf	??_sprintf
  3645  0490  0823               	movf	??_sprintf,w
  3646  0491  00A6               	movwf	sprintf@ap
  3647  0492                     l2040:	
  3648                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  3649                           
  3650                           
  3651                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  3652  0492  3001               	movlw	1
  3653  0493  07A0               	addwf	sprintf@f,f
  3654  0494  30FF               	movlw	-1
  3655  0495  0720               	addwf	sprintf@f,w
  3656  0496  0084               	movwf	4
  3657  0497  120A  118A  200D  120A  118A  	fcall	stringdir
  3658  049C  00A3               	movwf	??_sprintf
  3659  049D  0823               	movf	??_sprintf,w
  3660  049E  00AC               	movwf	sprintf@c
  3661  049F  082C               	movf	sprintf@c,w
  3662  04A0  1903               	btfsc	3,2
  3663  04A1  2D5E               	goto	l2042
  3664                           
  3665                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  3666  04A2  3025               	movlw	37
  3667  04A3  062C               	xorwf	sprintf@c,w
  3668  04A4  1903               	btfsc	3,2
  3669  04A5  2CB2               	goto	l1996
  3670                           
  3671                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;D:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  3672  04A6  082C               	movf	sprintf@c,w
  3673  04A7  00A3               	movwf	??_sprintf
  3674  04A8  082B               	movf	sprintf@sp,w
  3675  04A9  0084               	movwf	4
  3676  04AA  0823               	movf	??_sprintf,w
  3677  04AB  1383               	bcf	3,7	;select IRP bank0
  3678  04AC  0080               	movwf	0
  3679  04AD  3001               	movlw	1
  3680  04AE  00A3               	movwf	??_sprintf
  3681  04AF  0823               	movf	??_sprintf,w
  3682  04B0  07AB               	addwf	sprintf@sp,f
  3683                           
  3684                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  3685  04B1  2C92               	goto	l2040
  3686  04B2                     l1996:	
  3687                           
  3688                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  3689  04B2  01A7               	clrf	sprintf@flag
  3690                           
  3691                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  3692  04B3  3001               	movlw	1
  3693  04B4  07A0               	addwf	sprintf@f,f
  3694  04B5  30FF               	movlw	-1
  3695  04B6  0720               	addwf	sprintf@f,w
  3696  04B7  0084               	movwf	4
  3697  04B8  120A  118A  200D  120A  118A  	fcall	stringdir
  3698  04BD  00AC               	movwf	sprintf@c
  3699  04BE  00A3               	movwf	??_sprintf
  3700  04BF  01A4               	clrf	??_sprintf+1
  3701                           
  3702                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3703                           ; Switch size 1, requested type "simple"
  3704                           ; Number of cases is 1, Range of values is 0 to 0
  3705                           ; switch strategies available:
  3706                           ; Name         Instructions Cycles
  3707                           ; simple_byte            4     3 (average)
  3708                           ; direct_byte           11     8 (fixed)
  3709                           ; jumptable            260     6 (fixed)
  3710                           ;	Chosen strategy is simple_byte
  3711  04C0  0824               	movf	??_sprintf+1,w
  3712  04C1  3A00               	xorlw	0	; case 0
  3713  04C2  1903               	skipnz
  3714  04C3  2CC5               	goto	l2466
  3715  04C4  2C92               	goto	l2040
  3716  04C5                     l2466:	
  3717                           
  3718                           ; Switch size 1, requested type "simple"
  3719                           ; Number of cases is 3, Range of values is 0 to 105
  3720                           ; switch strategies available:
  3721                           ; Name         Instructions Cycles
  3722                           ; simple_byte           10     6 (average)
  3723                           ; jumptable            260     6 (fixed)
  3724                           ;	Chosen strategy is simple_byte
  3725  04C5  0823               	movf	??_sprintf,w
  3726  04C6  3A00               	xorlw	0	; case 0
  3727  04C7  1903               	skipnz
  3728  04C8  2D5E               	goto	l2042
  3729  04C9  3A64               	xorlw	100	; case 100
  3730  04CA  1903               	skipnz
  3731  04CB  2CD0               	goto	l2002
  3732  04CC  3A0D               	xorlw	13	; case 105
  3733  04CD  1903               	skipnz
  3734  04CE  2CD0               	goto	l2002
  3735  04CF  2C92               	goto	l2040
  3736  04D0                     l2002:	
  3737                           
  3738                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3739  04D0  0826               	movf	sprintf@ap,w
  3740  04D1  0084               	movwf	4
  3741  04D2  1383               	bcf	3,7	;select IRP bank0
  3742  04D3  0800               	movf	0,w
  3743  04D4  00A9               	movwf	sprintf@val
  3744  04D5  0A84               	incf	4,f
  3745  04D6  0800               	movf	0,w
  3746  04D7  00AA               	movwf	sprintf@val+1
  3747  04D8  3002               	movlw	2
  3748  04D9  00A3               	movwf	??_sprintf
  3749  04DA  0823               	movf	??_sprintf,w
  3750  04DB  07A6               	addwf	sprintf@ap,f
  3751                           
  3752                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  3753  04DC  1FAA               	btfss	sprintf@val+1,7
  3754  04DD  2CE7               	goto	l2012
  3755                           
  3756                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  3757  04DE  3003               	movlw	3
  3758  04DF  00A3               	movwf	??_sprintf
  3759  04E0  0823               	movf	??_sprintf,w
  3760  04E1  04A7               	iorwf	sprintf@flag,f
  3761                           
  3762                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  3763  04E2  09A9               	comf	sprintf@val,f
  3764  04E3  09AA               	comf	sprintf@val+1,f
  3765  04E4  0AA9               	incf	sprintf@val,f
  3766  04E5  1903               	skipnz
  3767  04E6  0AAA               	incf	sprintf@val+1,f
  3768  04E7                     l2012:	
  3769                           
  3770                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3771  04E7  01AC               	clrf	sprintf@c
  3772  04E8  0AAC               	incf	sprintf@c,f
  3773  04E9                     l2018:	
  3774                           
  3775                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  3776  04E9  082C               	movf	sprintf@c,w
  3777  04EA  00A3               	movwf	??_sprintf
  3778  04EB  0723               	addwf	??_sprintf,w
  3779  04EC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3780  04ED  0084               	movwf	4
  3781  04EE  120A  118A  200D  120A  118A  	fcall	stringdir
  3782  04F3  00A4               	movwf	??_sprintf+1
  3783  04F4  120A  118A  200D  120A  118A  	fcall	stringdir
  3784  04F9  00A5               	movwf	??_sprintf+2
  3785  04FA  0825               	movf	??_sprintf+2,w
  3786  04FB  022A               	subwf	sprintf@val+1,w
  3787  04FC  1D03               	skipz
  3788  04FD  2D00               	goto	u1385
  3789  04FE  0824               	movf	??_sprintf+1,w
  3790  04FF  0229               	subwf	sprintf@val,w
  3791  0500                     u1385:	
  3792  0500  1C03               	btfss	3,0
  3793  0501  2D0A               	goto	l2024
  3794  0502  3001               	movlw	1
  3795  0503  00A3               	movwf	??_sprintf
  3796  0504  0823               	movf	??_sprintf,w
  3797  0505  07AC               	addwf	sprintf@c,f
  3798  0506  3005               	movlw	5
  3799  0507  062C               	xorwf	sprintf@c,w
  3800  0508  1D03               	btfss	3,2
  3801  0509  2CE9               	goto	l2018
  3802  050A                     l2024:	
  3803                           
  3804                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  3805  050A  0827               	movf	sprintf@flag,w
  3806  050B  3903               	andlw	3
  3807  050C  1903               	btfsc	3,2
  3808  050D  2D19               	goto	l2030
  3809                           
  3810                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  3811  050E  302D               	movlw	45
  3812  050F  00A3               	movwf	??_sprintf
  3813  0510  082B               	movf	sprintf@sp,w
  3814  0511  0084               	movwf	4
  3815  0512  0823               	movf	??_sprintf,w
  3816  0513  1383               	bcf	3,7	;select IRP bank0
  3817  0514  0080               	movwf	0
  3818  0515  3001               	movlw	1
  3819  0516  00A3               	movwf	??_sprintf
  3820  0517  0823               	movf	??_sprintf,w
  3821  0518  07AB               	addwf	sprintf@sp,f
  3822  0519                     l2030:	
  3823                           
  3824                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  3825  0519  082C               	movf	sprintf@c,w
  3826  051A  00A3               	movwf	??_sprintf
  3827  051B  0823               	movf	??_sprintf,w
  3828  051C  00A8               	movwf	sprintf@prec
  3829  051D                     l2038:	
  3830                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  3831                           
  3832                           
  3833                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  3834  051D  30FF               	movlw	255
  3835  051E  00A3               	movwf	??_sprintf
  3836  051F  0823               	movf	??_sprintf,w
  3837  0520  07A8               	addwf	sprintf@prec,f
  3838  0521  0A28               	incf	sprintf@prec,w
  3839  0522  1903               	btfsc	3,2
  3840  0523  2C92               	goto	l2040
  3841                           
  3842                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  3843  0524  300A               	movlw	10
  3844  0525  00F8               	movwf	___lwmod@divisor
  3845  0526  3000               	movlw	0
  3846  0527  00F9               	movwf	___lwmod@divisor+1
  3847  0528  0828               	movf	sprintf@prec,w
  3848  0529  00A3               	movwf	??_sprintf
  3849  052A  0723               	addwf	??_sprintf,w
  3850  052B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3851  052C  0084               	movwf	4
  3852  052D  120A  118A  200D  120A  118A  	fcall	stringdir
  3853  0532  00F0               	movwf	___lwdiv@divisor
  3854  0533  120A  118A  200D  120A  118A  	fcall	stringdir
  3855  0538  00F1               	movwf	___lwdiv@divisor+1
  3856  0539  082A               	movf	sprintf@val+1,w
  3857  053A  00F3               	movwf	___lwdiv@dividend+1
  3858  053B  0829               	movf	sprintf@val,w
  3859  053C  00F2               	movwf	___lwdiv@dividend
  3860  053D  120A  158A  273A  120A  118A  	fcall	___lwdiv
  3861  0542  0871               	movf	?___lwdiv+1,w
  3862  0543  00FB               	movwf	___lwmod@dividend+1
  3863  0544  0870               	movf	?___lwdiv,w
  3864  0545  00FA               	movwf	___lwmod@dividend
  3865  0546  120A  158A  2663  120A  118A  	fcall	___lwmod
  3866  054B  0878               	movf	?___lwmod,w
  3867  054C  3E30               	addlw	48
  3868  054D  1283               	bcf	3,5	;RP0=0, select bank0
  3869  054E  1303               	bcf	3,6	;RP1=0, select bank0
  3870  054F  00A4               	movwf	??_sprintf+1
  3871  0550  0824               	movf	??_sprintf+1,w
  3872  0551  00AC               	movwf	sprintf@c
  3873                           
  3874                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  3875  0552  082C               	movf	sprintf@c,w
  3876  0553  00A3               	movwf	??_sprintf
  3877  0554  082B               	movf	sprintf@sp,w
  3878  0555  0084               	movwf	4
  3879  0556  0823               	movf	??_sprintf,w
  3880  0557  1383               	bcf	3,7	;select IRP bank0
  3881  0558  0080               	movwf	0
  3882  0559  3001               	movlw	1
  3883  055A  00A3               	movwf	??_sprintf
  3884  055B  0823               	movf	??_sprintf,w
  3885  055C  07AB               	addwf	sprintf@sp,f
  3886  055D  2D1D               	goto	l2038
  3887  055E                     l2042:	
  3888                           
  3889                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  3890  055E  082B               	movf	sprintf@sp,w
  3891  055F  0084               	movwf	4
  3892  0560  1383               	bcf	3,7	;select IRP bank0
  3893  0561  0180               	clrf	0
  3894  0562  0008               	return
  3895  0563                     __end_of_sprintf:	
  3896                           
  3897                           	psect	text14
  3898  0E63                     __ptext14:	
  3899 ;; *************** function ___lwmod *****************
  3900 ;; Defined at:
  3901 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  divisor         2    8[COMMON] unsigned int 
  3904 ;;  dividend        2   10[COMMON] unsigned int 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;  counter         1   13[COMMON] unsigned char 
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  2    8[COMMON] unsigned int 
  3909 ;; Registers used:
  3910 ;;		wreg, status,2, status,0
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3916 ;;      Params:         4       0       0       0       0
  3917 ;;      Locals:         1       0       0       0       0
  3918 ;;      Temps:          1       0       0       0       0
  3919 ;;      Totals:         6       0       0       0       0
  3920 ;;Total ram usage:        6 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; This function calls:
  3923 ;;		Nothing
  3924 ;; This function is called by:
  3925 ;;		_sprintf
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           
  3930                           ;psect for function ___lwmod
  3931  0E63                     ___lwmod:	
  3932                           
  3933                           ;incstack = 0
  3934                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3935  0E63  0878               	movf	___lwmod@divisor,w
  3936  0E64  0479               	iorwf	___lwmod@divisor+1,w
  3937  0E65  1903               	btfsc	3,2
  3938  0E66  2E90               	goto	l1856
  3939  0E67  01FD               	clrf	___lwmod@counter
  3940  0E68  0AFD               	incf	___lwmod@counter,f
  3941  0E69                     l1846:	
  3942  0E69  1BF9               	btfsc	___lwmod@divisor+1,7
  3943  0E6A  2E77               	goto	l1848
  3944  0E6B  3001               	movlw	1
  3945  0E6C                     u1205:	
  3946  0E6C  1003               	clrc
  3947  0E6D  0DF8               	rlf	___lwmod@divisor,f
  3948  0E6E  0DF9               	rlf	___lwmod@divisor+1,f
  3949  0E6F  3EFF               	addlw	-1
  3950  0E70  1D03               	skipz
  3951  0E71  2E6C               	goto	u1205
  3952  0E72  3001               	movlw	1
  3953  0E73  00FC               	movwf	??___lwmod
  3954  0E74  087C               	movf	??___lwmod,w
  3955  0E75  07FD               	addwf	___lwmod@counter,f
  3956  0E76  2E69               	goto	l1846
  3957  0E77                     l1848:	
  3958  0E77  0879               	movf	___lwmod@divisor+1,w
  3959  0E78  027B               	subwf	___lwmod@dividend+1,w
  3960  0E79  1D03               	skipz
  3961  0E7A  2E7D               	goto	u1225
  3962  0E7B  0878               	movf	___lwmod@divisor,w
  3963  0E7C  027A               	subwf	___lwmod@dividend,w
  3964  0E7D                     u1225:	
  3965  0E7D  1C03               	skipc
  3966  0E7E  2E85               	goto	l1852
  3967  0E7F  0878               	movf	___lwmod@divisor,w
  3968  0E80  02FA               	subwf	___lwmod@dividend,f
  3969  0E81  0879               	movf	___lwmod@divisor+1,w
  3970  0E82  1C03               	skipc
  3971  0E83  03FB               	decf	___lwmod@dividend+1,f
  3972  0E84  02FB               	subwf	___lwmod@dividend+1,f
  3973  0E85                     l1852:	
  3974  0E85  3001               	movlw	1
  3975  0E86                     u1235:	
  3976  0E86  1003               	clrc
  3977  0E87  0CF9               	rrf	___lwmod@divisor+1,f
  3978  0E88  0CF8               	rrf	___lwmod@divisor,f
  3979  0E89  3EFF               	addlw	-1
  3980  0E8A  1D03               	skipz
  3981  0E8B  2E86               	goto	u1235
  3982  0E8C  3001               	movlw	1
  3983  0E8D  02FD               	subwf	___lwmod@counter,f
  3984  0E8E  1D03               	btfss	3,2
  3985  0E8F  2E77               	goto	l1848
  3986  0E90                     l1856:	
  3987  0E90  087B               	movf	___lwmod@dividend+1,w
  3988  0E91  00F9               	movwf	?___lwmod+1
  3989  0E92  087A               	movf	___lwmod@dividend,w
  3990  0E93  00F8               	movwf	?___lwmod
  3991  0E94  0008               	return
  3992  0E95                     __end_of___lwmod:	
  3993                           
  3994                           	psect	text15
  3995  0F3A                     __ptext15:	
  3996 ;; *************** function ___lwdiv *****************
  3997 ;; Defined at:
  3998 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  divisor         2    0[COMMON] unsigned int 
  4001 ;;  dividend        2    2[COMMON] unsigned int 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;  quotient        2    5[COMMON] unsigned int 
  4004 ;;  counter         1    7[COMMON] unsigned char 
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  2    0[COMMON] unsigned int 
  4007 ;; Registers used:
  4008 ;;		wreg, status,2, status,0
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4014 ;;      Params:         4       0       0       0       0
  4015 ;;      Locals:         3       0       0       0       0
  4016 ;;      Temps:          1       0       0       0       0
  4017 ;;      Totals:         8       0       0       0       0
  4018 ;;Total ram usage:        8 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; This function calls:
  4021 ;;		Nothing
  4022 ;; This function is called by:
  4023 ;;		_sprintf
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           
  4028                           ;psect for function ___lwdiv
  4029  0F3A                     ___lwdiv:	
  4030                           
  4031                           ;incstack = 0
  4032                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4033  0F3A  01F5               	clrf	___lwdiv@quotient
  4034  0F3B  01F6               	clrf	___lwdiv@quotient+1
  4035  0F3C  0870               	movf	___lwdiv@divisor,w
  4036  0F3D  0471               	iorwf	___lwdiv@divisor+1,w
  4037  0F3E  1903               	btfsc	3,2
  4038  0F3F  2F71               	goto	l1834
  4039  0F40  01F7               	clrf	___lwdiv@counter
  4040  0F41  0AF7               	incf	___lwdiv@counter,f
  4041  0F42                     l1822:	
  4042  0F42  1BF1               	btfsc	___lwdiv@divisor+1,7
  4043  0F43  2F50               	goto	l1824
  4044  0F44  3001               	movlw	1
  4045  0F45                     u1135:	
  4046  0F45  1003               	clrc
  4047  0F46  0DF0               	rlf	___lwdiv@divisor,f
  4048  0F47  0DF1               	rlf	___lwdiv@divisor+1,f
  4049  0F48  3EFF               	addlw	-1
  4050  0F49  1D03               	skipz
  4051  0F4A  2F45               	goto	u1135
  4052  0F4B  3001               	movlw	1
  4053  0F4C  00F4               	movwf	??___lwdiv
  4054  0F4D  0874               	movf	??___lwdiv,w
  4055  0F4E  07F7               	addwf	___lwdiv@counter,f
  4056  0F4F  2F42               	goto	l1822
  4057  0F50                     l1824:	
  4058  0F50  3001               	movlw	1
  4059  0F51                     u1155:	
  4060  0F51  1003               	clrc
  4061  0F52  0DF5               	rlf	___lwdiv@quotient,f
  4062  0F53  0DF6               	rlf	___lwdiv@quotient+1,f
  4063  0F54  3EFF               	addlw	-1
  4064  0F55  1D03               	skipz
  4065  0F56  2F51               	goto	u1155
  4066  0F57  0871               	movf	___lwdiv@divisor+1,w
  4067  0F58  0273               	subwf	___lwdiv@dividend+1,w
  4068  0F59  1D03               	skipz
  4069  0F5A  2F5D               	goto	u1165
  4070  0F5B  0870               	movf	___lwdiv@divisor,w
  4071  0F5C  0272               	subwf	___lwdiv@dividend,w
  4072  0F5D                     u1165:	
  4073  0F5D  1C03               	skipc
  4074  0F5E  2F66               	goto	l1830
  4075  0F5F  0870               	movf	___lwdiv@divisor,w
  4076  0F60  02F2               	subwf	___lwdiv@dividend,f
  4077  0F61  0871               	movf	___lwdiv@divisor+1,w
  4078  0F62  1C03               	skipc
  4079  0F63  03F3               	decf	___lwdiv@dividend+1,f
  4080  0F64  02F3               	subwf	___lwdiv@dividend+1,f
  4081  0F65  1475               	bsf	___lwdiv@quotient,0
  4082  0F66                     l1830:	
  4083  0F66  3001               	movlw	1
  4084  0F67                     u1175:	
  4085  0F67  1003               	clrc
  4086  0F68  0CF1               	rrf	___lwdiv@divisor+1,f
  4087  0F69  0CF0               	rrf	___lwdiv@divisor,f
  4088  0F6A  3EFF               	addlw	-1
  4089  0F6B  1D03               	skipz
  4090  0F6C  2F67               	goto	u1175
  4091  0F6D  3001               	movlw	1
  4092  0F6E  02F7               	subwf	___lwdiv@counter,f
  4093  0F6F  1D03               	btfss	3,2
  4094  0F70  2F50               	goto	l1824
  4095  0F71                     l1834:	
  4096  0F71  0876               	movf	___lwdiv@quotient+1,w
  4097  0F72  00F1               	movwf	?___lwdiv+1
  4098  0F73  0875               	movf	___lwdiv@quotient,w
  4099  0F74  00F0               	movwf	?___lwdiv
  4100  0F75  0008               	return
  4101  0F76                     __end_of___lwdiv:	
  4102                           
  4103                           	psect	text16
  4104  0D28                     __ptext16:	
  4105 ;; *************** function ___bmul *****************
  4106 ;; Defined at:
  4107 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;  multiplier      1    wreg     unsigned char 
  4110 ;;  multiplicand    1    0[COMMON] unsigned char 
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;  multiplier      1    3[COMMON] unsigned char 
  4113 ;;  product         1    2[COMMON] unsigned char 
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  1    wreg      unsigned char 
  4116 ;; Registers used:
  4117 ;;		wreg, status,2, status,0
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4123 ;;      Params:         1       0       0       0       0
  4124 ;;      Locals:         2       0       0       0       0
  4125 ;;      Temps:          1       0       0       0       0
  4126 ;;      Totals:         4       0       0       0       0
  4127 ;;Total ram usage:        4 bytes
  4128 ;; Hardware stack levels used:    1
  4129 ;; This function calls:
  4130 ;;		Nothing
  4131 ;; This function is called by:
  4132 ;;		_get_temp
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           
  4137                           ;psect for function ___bmul
  4138  0D28                     ___bmul:	
  4139                           
  4140                           ;incstack = 0
  4141                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4142                           ;___bmul@multiplier stored from wreg
  4143  0D28  00F3               	movwf	___bmul@multiplier
  4144  0D29  01F2               	clrf	___bmul@product
  4145  0D2A                     l2062:	
  4146  0D2A  1C73               	btfss	___bmul@multiplier,0
  4147  0D2B  2D30               	goto	l2066
  4148  0D2C  0870               	movf	___bmul@multiplicand,w
  4149  0D2D  00F1               	movwf	??___bmul
  4150  0D2E  0871               	movf	??___bmul,w
  4151  0D2F  07F2               	addwf	___bmul@product,f
  4152  0D30                     l2066:	
  4153  0D30  1003               	clrc
  4154  0D31  0DF0               	rlf	___bmul@multiplicand,f
  4155  0D32  1003               	clrc
  4156  0D33  0CF3               	rrf	___bmul@multiplier,f
  4157  0D34  0873               	movf	___bmul@multiplier,w
  4158  0D35  1D03               	btfss	3,2
  4159  0D36  2D2A               	goto	l2062
  4160  0D37  0872               	movf	___bmul@product,w
  4161  0D38  0008               	return
  4162  0D39                     __end_of___bmul:	
  4163                           
  4164                           	psect	text17
  4165  0DAB                     __ptext17:	
  4166 ;; *************** function _get_hall *****************
  4167 ;; Defined at:
  4168 ;;		line 302 in file "mainMaster.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  key             1    7[COMMON] unsigned char 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      unsigned char 
  4175 ;; Registers used:
  4176 ;;		wreg, status,2, status,0, pclath, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4182 ;;      Params:         0       0       0       0       0
  4183 ;;      Locals:         1       0       0       0       0
  4184 ;;      Temps:          1       0       0       0       0
  4185 ;;      Totals:         2       0       0       0       0
  4186 ;;Total ram usage:        2 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    2
  4189 ;; This function calls:
  4190 ;;		_I2C_Master_Read
  4191 ;;		_I2C_Master_Start
  4192 ;;		_I2C_Master_Stop
  4193 ;;		_I2C_Master_Write
  4194 ;; This function is called by:
  4195 ;;		_main
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           
  4200                           ;psect for function _get_hall
  4201  0DAB                     _get_hall:	
  4202                           
  4203                           ;mainMaster.c: 304:     char key;;mainMaster.c: 306:     I2C_Master_Start();
  4204                           
  4205                           ;incstack = 0
  4206                           ; Regs used in _get_hall: [wreg+status,2+status,0+pclath+cstack]
  4207  0DAB  120A  158A  24E5  120A  158A  	fcall	_I2C_Master_Start
  4208                           
  4209                           ;mainMaster.c: 307:     I2C_Master_Write(0x11);
  4210  0DB0  3011               	movlw	17
  4211  0DB1  00F0               	movwf	I2C_Master_Write@d
  4212  0DB2  3000               	movlw	0
  4213  0DB3  00F1               	movwf	I2C_Master_Write@d+1
  4214  0DB4  120A  158A  24FA  120A  158A  	fcall	_I2C_Master_Write
  4215                           
  4216                           ;mainMaster.c: 308:     key = I2C_Master_Read(0);
  4217  0DB9  3000               	movlw	0
  4218  0DBA  00F0               	movwf	I2C_Master_Read@a
  4219  0DBB  00F1               	movwf	I2C_Master_Read@a+1
  4220  0DBC  120A  158A  2637  120A  158A  	fcall	_I2C_Master_Read
  4221  0DC1  0870               	movf	?_I2C_Master_Read,w
  4222  0DC2  00F6               	movwf	??_get_hall
  4223  0DC3  0876               	movf	??_get_hall,w
  4224  0DC4  00F7               	movwf	get_hall@key
  4225                           
  4226                           ;mainMaster.c: 309:     I2C_Master_Stop();
  4227  0DC5  120A  158A  24EC   	fcall	_I2C_Master_Stop
  4228                           
  4229                           ;mainMaster.c: 311:     return (key);
  4230  0DC8  0877               	movf	get_hall@key,w
  4231  0DC9  0008               	return
  4232  0DCA                     __end_of_get_hall:	
  4233                           
  4234                           	psect	text18
  4235  0E95                     __ptext18:	
  4236 ;; *************** function _get_day *****************
  4237 ;; Defined at:
  4238 ;;		line 260 in file "mainMaster.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;		None
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  d               1    7[COMMON] unsigned char 
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  1    wreg      unsigned char 
  4245 ;; Registers used:
  4246 ;;		wreg, status,2, status,0, pclath, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4252 ;;      Params:         0       0       0       0       0
  4253 ;;      Locals:         1       0       0       0       0
  4254 ;;      Temps:          1       0       0       0       0
  4255 ;;      Totals:         2       0       0       0       0
  4256 ;;Total ram usage:        2 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    2
  4259 ;; This function calls:
  4260 ;;		_I2C_Master_Read
  4261 ;;		_I2C_Master_RepeatedStart
  4262 ;;		_I2C_Master_Start
  4263 ;;		_I2C_Master_Stop
  4264 ;;		_I2C_Master_Write
  4265 ;; This function is called by:
  4266 ;;		_main
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           
  4271                           ;psect for function _get_day
  4272  0E95                     _get_day:	
  4273                           
  4274                           ;mainMaster.c: 262:     char d;;mainMaster.c: 264:     I2C_Master_Start();
  4275                           
  4276                           ;incstack = 0
  4277                           ; Regs used in _get_day: [wreg+status,2+status,0+pclath+cstack]
  4278  0E95  120A  158A  24E5  120A  158A  	fcall	_I2C_Master_Start
  4279                           
  4280                           ;mainMaster.c: 265:     I2C_Master_Write(0xD0);
  4281  0E9A  30D0               	movlw	208
  4282  0E9B  00F0               	movwf	I2C_Master_Write@d
  4283  0E9C  3000               	movlw	0
  4284  0E9D  00F1               	movwf	I2C_Master_Write@d+1
  4285  0E9E  120A  158A  24FA  120A  158A  	fcall	_I2C_Master_Write
  4286                           
  4287                           ;mainMaster.c: 266:     I2C_Master_Write(0x03);
  4288  0EA3  3003               	movlw	3
  4289  0EA4  00F0               	movwf	I2C_Master_Write@d
  4290  0EA5  3000               	movlw	0
  4291  0EA6  00F1               	movwf	I2C_Master_Write@d+1
  4292  0EA7  120A  158A  24FA  120A  158A  	fcall	_I2C_Master_Write
  4293                           
  4294                           ;mainMaster.c: 267:     I2C_Master_RepeatedStart();
  4295  0EAC  120A  158A  24F3  120A  158A  	fcall	_I2C_Master_RepeatedStart
  4296                           
  4297                           ;mainMaster.c: 268:     I2C_Master_Write(0xD1);
  4298  0EB1  30D1               	movlw	209
  4299  0EB2  00F0               	movwf	I2C_Master_Write@d
  4300  0EB3  3000               	movlw	0
  4301  0EB4  00F1               	movwf	I2C_Master_Write@d+1
  4302  0EB5  120A  158A  24FA  120A  158A  	fcall	_I2C_Master_Write
  4303                           
  4304                           ;mainMaster.c: 269:     d = I2C_Master_Read(0);
  4305  0EBA  3000               	movlw	0
  4306  0EBB  00F0               	movwf	I2C_Master_Read@a
  4307  0EBC  00F1               	movwf	I2C_Master_Read@a+1
  4308  0EBD  120A  158A  2637  120A  158A  	fcall	_I2C_Master_Read
  4309  0EC2  0870               	movf	?_I2C_Master_Read,w
  4310  0EC3  00F6               	movwf	??_get_day
  4311  0EC4  0876               	movf	??_get_day,w
  4312  0EC5  00F7               	movwf	get_day@d
  4313                           
  4314                           ;mainMaster.c: 270:     I2C_Master_Stop();
  4315  0EC6  120A  158A  24EC   	fcall	_I2C_Master_Stop
  4316                           
  4317                           ;mainMaster.c: 272:     return d;
  4318  0EC9  0877               	movf	get_day@d,w
  4319  0ECA  0008               	return
  4320  0ECB                     __end_of_get_day:	
  4321                           
  4322                           	psect	text19
  4323  0CF3                     __ptext19:	
  4324 ;; *************** function _I2C_Master_RepeatedStart *****************
  4325 ;; Defined at:
  4326 ;;		line 47 in file "./I2C.h"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;		None
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;		None
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  1    wreg      void 
  4333 ;; Registers used:
  4334 ;;		wreg, status,2, status,0, pclath, cstack
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4340 ;;      Params:         0       0       0       0       0
  4341 ;;      Locals:         0       0       0       0       0
  4342 ;;      Temps:          0       0       0       0       0
  4343 ;;      Totals:         0       0       0       0       0
  4344 ;;Total ram usage:        0 bytes
  4345 ;; Hardware stack levels used:    1
  4346 ;; Hardware stack levels required when called:    1
  4347 ;; This function calls:
  4348 ;;		_I2C_Master_Wait
  4349 ;; This function is called by:
  4350 ;;		_get_time
  4351 ;;		_get_day
  4352 ;;		_get_temp
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           
  4357                           ;psect for function _I2C_Master_RepeatedStart
  4358  0CF3                     _I2C_Master_RepeatedStart:	
  4359                           
  4360                           ;./I2C.h: 49:     I2C_Master_Wait();
  4361                           
  4362                           ;incstack = 0
  4363                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  4364  0CF3  120A  158A  250A   	fcall	_I2C_Master_Wait
  4365                           
  4366                           ;./I2C.h: 50:     SSPCON2bits.RSEN = 1;
  4367  0CF6  1683               	bsf	3,5	;RP0=1, select bank1
  4368  0CF7  1303               	bcf	3,6	;RP1=0, select bank1
  4369  0CF8  1491               	bsf	17,1	;volatile
  4370  0CF9  0008               	return
  4371  0CFA                     __end_of_I2C_Master_RepeatedStart:	
  4372                           
  4373                           	psect	text20
  4374  0D8C                     __ptext20:	
  4375 ;; *************** function _get_PIR *****************
  4376 ;; Defined at:
  4377 ;;		line 326 in file "mainMaster.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;		None
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;  PIR             1    7[COMMON] unsigned char 
  4382 ;; Return value:  Size  Location     Type
  4383 ;;                  1    wreg      unsigned char 
  4384 ;; Registers used:
  4385 ;;		wreg, status,2, status,0, pclath, cstack
  4386 ;; Tracked objects:
  4387 ;;		On entry : 0/0
  4388 ;;		On exit  : 0/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4391 ;;      Params:         0       0       0       0       0
  4392 ;;      Locals:         1       0       0       0       0
  4393 ;;      Temps:          1       0       0       0       0
  4394 ;;      Totals:         2       0       0       0       0
  4395 ;;Total ram usage:        2 bytes
  4396 ;; Hardware stack levels used:    1
  4397 ;; Hardware stack levels required when called:    2
  4398 ;; This function calls:
  4399 ;;		_I2C_Master_Read
  4400 ;;		_I2C_Master_Start
  4401 ;;		_I2C_Master_Stop
  4402 ;;		_I2C_Master_Write
  4403 ;; This function is called by:
  4404 ;;		_main
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           
  4409                           ;psect for function _get_PIR
  4410  0D8C                     _get_PIR:	
  4411                           
  4412                           ;mainMaster.c: 328:     char PIR;;mainMaster.c: 330:     I2C_Master_Start();
  4413                           
  4414                           ;incstack = 0
  4415                           ; Regs used in _get_PIR: [wreg+status,2+status,0+pclath+cstack]
  4416  0D8C  120A  158A  24E5  120A  158A  	fcall	_I2C_Master_Start
  4417                           
  4418                           ;mainMaster.c: 331:     I2C_Master_Write(0x41);
  4419  0D91  3041               	movlw	65
  4420  0D92  00F0               	movwf	I2C_Master_Write@d
  4421  0D93  3000               	movlw	0
  4422  0D94  00F1               	movwf	I2C_Master_Write@d+1
  4423  0D95  120A  158A  24FA  120A  158A  	fcall	_I2C_Master_Write
  4424                           
  4425                           ;mainMaster.c: 332:     PIR = I2C_Master_Read(0);
  4426  0D9A  3000               	movlw	0
  4427  0D9B  00F0               	movwf	I2C_Master_Read@a
  4428  0D9C  00F1               	movwf	I2C_Master_Read@a+1
  4429  0D9D  120A  158A  2637  120A  158A  	fcall	_I2C_Master_Read
  4430  0DA2  0870               	movf	?_I2C_Master_Read,w
  4431  0DA3  00F6               	movwf	??_get_PIR
  4432  0DA4  0876               	movf	??_get_PIR,w
  4433  0DA5  00F7               	movwf	get_PIR@PIR
  4434                           
  4435                           ;mainMaster.c: 333:     I2C_Master_Stop();
  4436  0DA6  120A  158A  24EC   	fcall	_I2C_Master_Stop
  4437                           
  4438                           ;mainMaster.c: 335:     return (PIR);
  4439  0DA9  0877               	movf	get_PIR@PIR,w
  4440  0DAA  0008               	return
  4441  0DAB                     __end_of_get_PIR:	
  4442                           
  4443                           	psect	text21
  4444  0D6D                     __ptext21:	
  4445 ;; *************** function _get_IR *****************
  4446 ;; Defined at:
  4447 ;;		line 338 in file "mainMaster.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;		None
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  IR              1    7[COMMON] unsigned char 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      unsigned char 
  4454 ;; Registers used:
  4455 ;;		wreg, status,2, status,0, pclath, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4461 ;;      Params:         0       0       0       0       0
  4462 ;;      Locals:         1       0       0       0       0
  4463 ;;      Temps:          1       0       0       0       0
  4464 ;;      Totals:         2       0       0       0       0
  4465 ;;Total ram usage:        2 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    2
  4468 ;; This function calls:
  4469 ;;		_I2C_Master_Read
  4470 ;;		_I2C_Master_Start
  4471 ;;		_I2C_Master_Stop
  4472 ;;		_I2C_Master_Write
  4473 ;; This function is called by:
  4474 ;;		_main
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           
  4479                           ;psect for function _get_IR
  4480  0D6D                     _get_IR:	
  4481                           
  4482                           ;mainMaster.c: 340:     char IR;;mainMaster.c: 342:     I2C_Master_Start();
  4483                           
  4484                           ;incstack = 0
  4485                           ; Regs used in _get_IR: [wreg+status,2+status,0+pclath+cstack]
  4486  0D6D  120A  158A  24E5  120A  158A  	fcall	_I2C_Master_Start
  4487                           
  4488                           ;mainMaster.c: 343:     I2C_Master_Write(0x31);
  4489  0D72  3031               	movlw	49
  4490  0D73  00F0               	movwf	I2C_Master_Write@d
  4491  0D74  3000               	movlw	0
  4492  0D75  00F1               	movwf	I2C_Master_Write@d+1
  4493  0D76  120A  158A  24FA  120A  158A  	fcall	_I2C_Master_Write
  4494                           
  4495                           ;mainMaster.c: 344:     IR = I2C_Master_Read(0);
  4496  0D7B  3000               	movlw	0
  4497  0D7C  00F0               	movwf	I2C_Master_Read@a
  4498  0D7D  00F1               	movwf	I2C_Master_Read@a+1
  4499  0D7E  120A  158A  2637  120A  158A  	fcall	_I2C_Master_Read
  4500  0D83  0870               	movf	?_I2C_Master_Read,w
  4501  0D84  00F6               	movwf	??_get_IR
  4502  0D85  0876               	movf	??_get_IR,w
  4503  0D86  00F7               	movwf	get_IR@IR
  4504                           
  4505                           ;mainMaster.c: 345:     I2C_Master_Stop();
  4506  0D87  120A  158A  24EC   	fcall	_I2C_Master_Stop
  4507                           
  4508                           ;mainMaster.c: 347:     return (IR);
  4509  0D8A  0877               	movf	get_IR@IR,w
  4510  0D8B  0008               	return
  4511  0D8C                     __end_of_get_IR:	
  4512                           
  4513                           	psect	text22
  4514  0CFA                     __ptext22:	
  4515 ;; *************** function _I2C_Master_Write *****************
  4516 ;; Defined at:
  4517 ;;		line 65 in file "./I2C.h"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;  d               2    0[COMMON] unsigned int 
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;		None
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  1    wreg      void 
  4524 ;; Registers used:
  4525 ;;		wreg, status,2, status,0, pclath, cstack
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4531 ;;      Params:         2       0       0       0       0
  4532 ;;      Locals:         0       0       0       0       0
  4533 ;;      Temps:          0       0       0       0       0
  4534 ;;      Totals:         2       0       0       0       0
  4535 ;;Total ram usage:        2 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; Hardware stack levels required when called:    1
  4538 ;; This function calls:
  4539 ;;		_I2C_Master_Wait
  4540 ;; This function is called by:
  4541 ;;		_get_time
  4542 ;;		_get_day
  4543 ;;		_get_temp
  4544 ;;		_get_hall
  4545 ;;		_get_tripwire
  4546 ;;		_get_PIR
  4547 ;;		_get_IR
  4548 ;;		_write_RTC
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           
  4553                           ;psect for function _I2C_Master_Write
  4554  0CFA                     _I2C_Master_Write:	
  4555                           
  4556                           ;./I2C.h: 65: void I2C_Master_Write(unsigned d);./I2C.h: 66: {;./I2C.h: 67:     I2C_Mast
      +                          er_Wait();
  4557                           
  4558                           ;incstack = 0
  4559                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4560  0CFA  120A  158A  250A   	fcall	_I2C_Master_Wait
  4561                           
  4562                           ;./I2C.h: 68:     SSPBUF = d;
  4563  0CFD  0870               	movf	I2C_Master_Write@d,w
  4564  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  4565  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  4566  0D00  0093               	movwf	19	;volatile
  4567  0D01  0008               	return
  4568  0D02                     __end_of_I2C_Master_Write:	
  4569                           
  4570                           	psect	text23
  4571  0CEC                     __ptext23:	
  4572 ;; *************** function _I2C_Master_Stop *****************
  4573 ;; Defined at:
  4574 ;;		line 55 in file "./I2C.h"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;		None
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;		None
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  1    wreg      void 
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0, pclath, cstack
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4588 ;;      Params:         0       0       0       0       0
  4589 ;;      Locals:         0       0       0       0       0
  4590 ;;      Temps:          0       0       0       0       0
  4591 ;;      Totals:         0       0       0       0       0
  4592 ;;Total ram usage:        0 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:    1
  4595 ;; This function calls:
  4596 ;;		_I2C_Master_Wait
  4597 ;; This function is called by:
  4598 ;;		_get_time
  4599 ;;		_get_day
  4600 ;;		_get_temp
  4601 ;;		_get_hall
  4602 ;;		_get_tripwire
  4603 ;;		_get_PIR
  4604 ;;		_get_IR
  4605 ;;		_write_RTC
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           
  4610                           ;psect for function _I2C_Master_Stop
  4611  0CEC                     _I2C_Master_Stop:	
  4612                           
  4613                           ;./I2C.h: 57:     I2C_Master_Wait();
  4614                           
  4615                           ;incstack = 0
  4616                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4617  0CEC  120A  158A  250A   	fcall	_I2C_Master_Wait
  4618                           
  4619                           ;./I2C.h: 58:     SSPCON2bits.PEN = 1;
  4620  0CEF  1683               	bsf	3,5	;RP0=1, select bank1
  4621  0CF0  1303               	bcf	3,6	;RP1=0, select bank1
  4622  0CF1  1511               	bsf	17,2	;volatile
  4623  0CF2  0008               	return
  4624  0CF3                     __end_of_I2C_Master_Stop:	
  4625                           
  4626                           	psect	text24
  4627  0CE5                     __ptext24:	
  4628 ;; *************** function _I2C_Master_Start *****************
  4629 ;; Defined at:
  4630 ;;		line 39 in file "./I2C.h"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;		None
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;		None
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  1    wreg      void 
  4637 ;; Registers used:
  4638 ;;		wreg, status,2, status,0, pclath, cstack
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4644 ;;      Params:         0       0       0       0       0
  4645 ;;      Locals:         0       0       0       0       0
  4646 ;;      Temps:          0       0       0       0       0
  4647 ;;      Totals:         0       0       0       0       0
  4648 ;;Total ram usage:        0 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; Hardware stack levels required when called:    1
  4651 ;; This function calls:
  4652 ;;		_I2C_Master_Wait
  4653 ;; This function is called by:
  4654 ;;		_get_time
  4655 ;;		_get_day
  4656 ;;		_get_temp
  4657 ;;		_get_hall
  4658 ;;		_get_tripwire
  4659 ;;		_get_PIR
  4660 ;;		_get_IR
  4661 ;;		_write_RTC
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           
  4666                           ;psect for function _I2C_Master_Start
  4667  0CE5                     _I2C_Master_Start:	
  4668                           
  4669                           ;./I2C.h: 41:     I2C_Master_Wait();
  4670                           
  4671                           ;incstack = 0
  4672                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4673  0CE5  120A  158A  250A   	fcall	_I2C_Master_Wait
  4674                           
  4675                           ;./I2C.h: 42:     SSPCON2bits.SEN = 1;
  4676  0CE8  1683               	bsf	3,5	;RP0=1, select bank1
  4677  0CE9  1303               	bcf	3,6	;RP1=0, select bank1
  4678  0CEA  1411               	bsf	17,0	;volatile
  4679  0CEB  0008               	return
  4680  0CEC                     __end_of_I2C_Master_Start:	
  4681                           
  4682                           	psect	text25
  4683  0E37                     __ptext25:	
  4684 ;; *************** function _I2C_Master_Read *****************
  4685 ;; Defined at:
  4686 ;;		line 74 in file "./I2C.h"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;  a               2    0[COMMON] unsigned short 
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;  temp            2    4[COMMON] unsigned short 
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  2    0[COMMON] unsigned short 
  4693 ;; Registers used:
  4694 ;;		wreg, status,2, status,0, pclath, cstack
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4700 ;;      Params:         2       0       0       0       0
  4701 ;;      Locals:         2       0       0       0       0
  4702 ;;      Temps:          2       0       0       0       0
  4703 ;;      Totals:         6       0       0       0       0
  4704 ;;Total ram usage:        6 bytes
  4705 ;; Hardware stack levels used:    1
  4706 ;; Hardware stack levels required when called:    1
  4707 ;; This function calls:
  4708 ;;		_I2C_Master_Wait
  4709 ;; This function is called by:
  4710 ;;		_get_time
  4711 ;;		_get_day
  4712 ;;		_get_temp
  4713 ;;		_get_hall
  4714 ;;		_get_tripwire
  4715 ;;		_get_PIR
  4716 ;;		_get_IR
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           
  4721                           ;psect for function _I2C_Master_Read
  4722  0E37                     _I2C_Master_Read:	
  4723                           
  4724                           ;./I2C.h: 74: unsigned short I2C_Master_Read(unsigned short a);./I2C.h: 75: {;./I2C.h: 7
      +                          6:     unsigned short temp;;./I2C.h: 77:     I2C_Master_Wait();
  4725                           
  4726                           ;incstack = 0
  4727                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4728  0E37  120A  158A  250A  120A  158A  	fcall	_I2C_Master_Wait
  4729                           
  4730                           ;./I2C.h: 78:     RCEN = 1;
  4731  0E3C  1683               	bsf	3,5	;RP0=1, select bank1
  4732  0E3D  1303               	bcf	3,6	;RP1=0, select bank1
  4733  0E3E  1591               	bsf	17,3	;volatile
  4734                           
  4735                           ;./I2C.h: 79:     I2C_Master_Wait();
  4736  0E3F  120A  158A  250A  120A  158A  	fcall	_I2C_Master_Wait
  4737                           
  4738                           ;./I2C.h: 80:     temp = SSPBUF;
  4739  0E44  1283               	bcf	3,5	;RP0=0, select bank0
  4740  0E45  1303               	bcf	3,6	;RP1=0, select bank0
  4741  0E46  0813               	movf	19,w	;volatile
  4742  0E47  00F2               	movwf	??_I2C_Master_Read
  4743  0E48  01F3               	clrf	??_I2C_Master_Read+1
  4744  0E49  0872               	movf	??_I2C_Master_Read,w
  4745  0E4A  00F4               	movwf	I2C_Master_Read@temp
  4746  0E4B  0873               	movf	??_I2C_Master_Read+1,w
  4747  0E4C  00F5               	movwf	I2C_Master_Read@temp+1
  4748                           
  4749                           ;./I2C.h: 81:     I2C_Master_Wait();
  4750  0E4D  120A  158A  250A  120A  158A  	fcall	_I2C_Master_Wait
  4751                           
  4752                           ;./I2C.h: 83:     if(a == 1){
  4753  0E52  0370               	decf	I2C_Master_Read@a,w
  4754  0E53  0471               	iorwf	I2C_Master_Read@a+1,w
  4755  0E54  1D03               	btfss	3,2
  4756  0E55  2E5A               	goto	l130
  4757                           
  4758                           ;./I2C.h: 84:         SSPCON2bits.ACKDT = 0;
  4759  0E56  1683               	bsf	3,5	;RP0=1, select bank1
  4760  0E57  1303               	bcf	3,6	;RP1=0, select bank1
  4761  0E58  1291               	bcf	17,5	;volatile
  4762                           
  4763                           ;./I2C.h: 85:     }else{
  4764  0E59  2E5D               	goto	l131
  4765  0E5A                     l130:	
  4766                           
  4767                           ;./I2C.h: 86:         SSPCON2bits.ACKDT = 1;
  4768  0E5A  1683               	bsf	3,5	;RP0=1, select bank1
  4769  0E5B  1303               	bcf	3,6	;RP1=0, select bank1
  4770  0E5C  1691               	bsf	17,5	;volatile
  4771  0E5D                     l131:	
  4772                           ;./I2C.h: 87:     }
  4773                           
  4774                           
  4775                           ;./I2C.h: 88:     SSPCON2bits.ACKEN = 1;
  4776  0E5D  1611               	bsf	17,4	;volatile
  4777                           
  4778                           ;./I2C.h: 89:     return temp;
  4779  0E5E  0875               	movf	I2C_Master_Read@temp+1,w
  4780  0E5F  00F1               	movwf	?_I2C_Master_Read+1
  4781  0E60  0874               	movf	I2C_Master_Read@temp,w
  4782  0E61  00F0               	movwf	?_I2C_Master_Read
  4783  0E62  0008               	return
  4784  0E63                     __end_of_I2C_Master_Read:	
  4785                           
  4786                           	psect	text26
  4787  0D0A                     __ptext26:	
  4788 ;; *************** function _I2C_Master_Wait *****************
  4789 ;; Defined at:
  4790 ;;		line 32 in file "./I2C.h"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;		None
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;		None
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1    wreg      void 
  4797 ;; Registers used:
  4798 ;;		wreg, status,2
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4804 ;;      Params:         0       0       0       0       0
  4805 ;;      Locals:         0       0       0       0       0
  4806 ;;      Temps:          0       0       0       0       0
  4807 ;;      Totals:         0       0       0       0       0
  4808 ;;Total ram usage:        0 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; This function calls:
  4811 ;;		Nothing
  4812 ;; This function is called by:
  4813 ;;		_I2C_Master_Start
  4814 ;;		_I2C_Master_RepeatedStart
  4815 ;;		_I2C_Master_Stop
  4816 ;;		_I2C_Master_Write
  4817 ;;		_I2C_Master_Read
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           
  4822                           ;psect for function _I2C_Master_Wait
  4823  0D0A                     _I2C_Master_Wait:	
  4824  0D0A                     l112:	
  4825                           ;./I2C.h: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4826                           
  4827                           ;incstack = 0
  4828                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4829                           
  4830  0D0A  1683               	bsf	3,5	;RP0=1, select bank1
  4831  0D0B  1303               	bcf	3,6	;RP1=0, select bank1
  4832  0D0C  1914               	btfsc	20,2	;volatile
  4833  0D0D  2D0A               	goto	l112
  4834  0D0E  0811               	movf	17,w	;volatile
  4835  0D0F  391F               	andlw	31
  4836  0D10  1903               	btfsc	3,2
  4837  0D11  0008               	return
  4838  0D12  2D0A               	goto	l112
  4839  0D13                     __end_of_I2C_Master_Wait:	
  4840                           
  4841                           	psect	text27
  4842  0D13                     __ptext27:	
  4843 ;; *************** function _UART_Write *****************
  4844 ;; Defined at:
  4845 ;;		line 54 in file "./UART.h"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;  data            1    wreg     unsigned char 
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;  data            1    0[COMMON] unsigned char 
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      void 
  4852 ;; Registers used:
  4853 ;;		wreg
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4859 ;;      Params:         0       0       0       0       0
  4860 ;;      Locals:         1       0       0       0       0
  4861 ;;      Temps:          0       0       0       0       0
  4862 ;;      Totals:         1       0       0       0       0
  4863 ;;Total ram usage:        1 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_main
  4869 ;;		_UART_Write_Text
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           
  4874                           ;psect for function _UART_Write
  4875  0D13                     _UART_Write:	
  4876                           
  4877                           ;incstack = 0
  4878                           ; Regs used in _UART_Write: [wreg]
  4879                           ;UART_Write@data stored from wreg
  4880  0D13  00F0               	movwf	UART_Write@data
  4881  0D14                     l216:	
  4882                           ;./UART.h: 54: void UART_Write(char data);./UART.h: 55: {;./UART.h: 56:   while(!TRMT);
  4883                           
  4884  0D14  1683               	bsf	3,5	;RP0=1, select bank1
  4885  0D15  1303               	bcf	3,6	;RP1=0, select bank1
  4886  0D16  1C98               	btfss	24,1	;volatile
  4887  0D17  2D14               	goto	l216
  4888                           
  4889                           ;./UART.h: 57:   TXREG = data;
  4890  0D18  0870               	movf	UART_Write@data,w
  4891  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  4892  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  4893  0D1B  0099               	movwf	25	;volatile
  4894  0D1C  0008               	return
  4895  0D1D                     __end_of_UART_Write:	
  4896                           
  4897                           	psect	text28
  4898  0CDF                     __ptext28:	
  4899 ;; *************** function _UART_TX_Empty *****************
  4900 ;; Defined at:
  4901 ;;		line 31 in file "./UART.h"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;		None
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;		None
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  1    wreg      unsigned char 
  4908 ;; Registers used:
  4909 ;;		wreg
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4915 ;;      Params:         0       0       0       0       0
  4916 ;;      Locals:         0       0       0       0       0
  4917 ;;      Temps:          0       0       0       0       0
  4918 ;;      Totals:         0       0       0       0       0
  4919 ;;Total ram usage:        0 bytes
  4920 ;; Hardware stack levels used:    1
  4921 ;; This function calls:
  4922 ;;		Nothing
  4923 ;; This function is called by:
  4924 ;;		_main
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           
  4929                           ;psect for function _UART_TX_Empty
  4930  0CDF                     _UART_TX_Empty:	
  4931                           
  4932                           ;./UART.h: 33:   return TRMT;
  4933                           
  4934                           ;incstack = 0
  4935                           ; Regs used in _UART_TX_Empty: [wreg]
  4936  0CDF  3000               	movlw	0
  4937  0CE0  1683               	bsf	3,5	;RP0=1, select bank1
  4938  0CE1  1303               	bcf	3,6	;RP1=0, select bank1
  4939  0CE2  1898               	btfsc	24,1	;volatile
  4940  0CE3  3001               	movlw	1
  4941  0CE4  0008               	return
  4942  0CE5                     __end_of_UART_TX_Empty:	
  4943                           
  4944                           	psect	text29
  4945  00B7                     __ptext29:	
  4946 ;; *************** function _Lcd_Write_String *****************
  4947 ;; Defined at:
  4948 ;;		line 100 in file "./LCD4bits.h"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  a               2    5[COMMON] PTR unsigned char 
  4951 ;;		 -> NULL(0), STR_17(7), STR_16(7), STR_15(8), 
  4952 ;;		 -> STR_14(8), STR_13(9), STR_12(9), STR_11(12), 
  4953 ;;		 -> STR_10(12), STR_8(10), STR_7(10), STR_6(10), 
  4954 ;;		 -> STR_5(10), STR_4(10), STR_3(10), STR_2(10), 
  4955 ;;		 -> STR_1(10), time(6), temp(6), 
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;  i               2   10[COMMON] int 
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      void 
  4960 ;; Registers used:
  4961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4967 ;;      Params:         2       0       0       0       0
  4968 ;;      Locals:         2       0       0       0       0
  4969 ;;      Temps:          3       0       0       0       0
  4970 ;;      Totals:         7       0       0       0       0
  4971 ;;Total ram usage:        7 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    2
  4974 ;; This function calls:
  4975 ;;		_Lcd_Write_Char
  4976 ;; This function is called by:
  4977 ;;		_main
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           
  4982                           ;psect for function _Lcd_Write_String
  4983  00B7                     _Lcd_Write_String:	
  4984                           
  4985                           ;./LCD4bits.h: 100: void Lcd_Write_String(char *a);./LCD4bits.h: 101: {;./LCD4bits.h: 10
      +                          2:  int i;;./LCD4bits.h: 103:  for(i=0;a[i]!='\0';i++)
  4986                           
  4987                           ;incstack = 0
  4988                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4989  00B7  01FA               	clrf	Lcd_Write_String@i
  4990  00B8  01FB               	clrf	Lcd_Write_String@i+1
  4991  00B9                     l2102:	
  4992  00B9  087A               	movf	Lcd_Write_String@i,w
  4993  00BA  0775               	addwf	Lcd_Write_String@a,w
  4994  00BB  00F8               	movwf	??_Lcd_Write_String+1
  4995  00BC  0876               	movf	Lcd_Write_String@a+1,w
  4996  00BD  00F7               	movwf	??_Lcd_Write_String
  4997  00BE  1803               	skipnc
  4998  00BF  0AF7               	incf	??_Lcd_Write_String,f
  4999  00C0  1BFA               	btfsc	Lcd_Write_String@i,7
  5000  00C1  03F7               	decf	??_Lcd_Write_String,f
  5001  00C2  0877               	movf	??_Lcd_Write_String,w
  5002  00C3  00F9               	movwf	??_Lcd_Write_String+2
  5003  00C4  0879               	movf	??_Lcd_Write_String+2,w
  5004  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  5005  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  5006  00C7  00FF               	movwf	127
  5007  00C8  0878               	movf	??_Lcd_Write_String+1,w
  5008  00C9  0084               	movwf	4
  5009  00CA  120A  118A  2003  120A  118A  	fcall	stringtab
  5010  00CF  3A00               	xorlw	0
  5011  00D0  1903               	btfsc	3,2
  5012  00D1  0008               	return
  5013                           
  5014                           ;./LCD4bits.h: 104:     Lcd_Write_Char(a[i]);
  5015  00D2  087A               	movf	Lcd_Write_String@i,w
  5016  00D3  0775               	addwf	Lcd_Write_String@a,w
  5017  00D4  00F8               	movwf	??_Lcd_Write_String+1
  5018  00D5  0876               	movf	Lcd_Write_String@a+1,w
  5019  00D6  00F7               	movwf	??_Lcd_Write_String
  5020  00D7  1803               	skipnc
  5021  00D8  0AF7               	incf	??_Lcd_Write_String,f
  5022  00D9  1BFA               	btfsc	Lcd_Write_String@i,7
  5023  00DA  03F7               	decf	??_Lcd_Write_String,f
  5024  00DB  0877               	movf	??_Lcd_Write_String,w
  5025  00DC  00F9               	movwf	??_Lcd_Write_String+2
  5026  00DD  0879               	movf	??_Lcd_Write_String+2,w
  5027  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  5028  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  5029  00E0  00FF               	movwf	127
  5030  00E1  0878               	movf	??_Lcd_Write_String+1,w
  5031  00E2  0084               	movwf	4
  5032  00E3  120A  118A  2003  120A  118A  	fcall	stringtab
  5033  00E8  120A  158A  2701  120A  118A  	fcall	_Lcd_Write_Char
  5034  00ED  3001               	movlw	1
  5035  00EE  07FA               	addwf	Lcd_Write_String@i,f
  5036  00EF  1803               	skipnc
  5037  00F0  0AFB               	incf	Lcd_Write_String@i+1,f
  5038  00F1  3000               	movlw	0
  5039  00F2  07FB               	addwf	Lcd_Write_String@i+1,f
  5040  00F3  28B9               	goto	l2102
  5041  00F4                     __end_of_Lcd_Write_String:	
  5042                           
  5043                           	psect	text30
  5044  0F01                     __ptext30:	
  5045 ;; *************** function _Lcd_Write_Char *****************
  5046 ;; Defined at:
  5047 ;;		line 84 in file "./LCD4bits.h"
  5048 ;; Parameters:    Size  Location     Type
  5049 ;;  a               1    wreg     unsigned char 
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;  a               1    4[COMMON] unsigned char 
  5052 ;;  y               1    3[COMMON] unsigned char 
  5053 ;;  temp            1    2[COMMON] unsigned char 
  5054 ;; Return value:  Size  Location     Type
  5055 ;;                  1    wreg      void 
  5056 ;; Registers used:
  5057 ;;		wreg, status,2, status,0, pclath, cstack
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5063 ;;      Params:         0       0       0       0       0
  5064 ;;      Locals:         3       0       0       0       0
  5065 ;;      Temps:          1       0       0       0       0
  5066 ;;      Totals:         4       0       0       0       0
  5067 ;;Total ram usage:        4 bytes
  5068 ;; Hardware stack levels used:    1
  5069 ;; Hardware stack levels required when called:    1
  5070 ;; This function calls:
  5071 ;;		_Lcd_Port
  5072 ;; This function is called by:
  5073 ;;		_Lcd_Write_String
  5074 ;;		_main
  5075 ;; This function uses a non-reentrant model
  5076 ;;
  5077                           
  5078                           
  5079                           ;psect for function _Lcd_Write_Char
  5080  0F01                     _Lcd_Write_Char:	
  5081                           
  5082                           ;incstack = 0
  5083                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5084                           ;Lcd_Write_Char@a stored from wreg
  5085  0F01  00F4               	movwf	Lcd_Write_Char@a
  5086                           
  5087                           ;./LCD4bits.h: 84: void Lcd_Write_Char(char a);./LCD4bits.h: 85: {;./LCD4bits.h: 86:    
      +                          char temp,y;;./LCD4bits.h: 87:    temp = a&0x0F;
  5088  0F02  0874               	movf	Lcd_Write_Char@a,w
  5089  0F03  390F               	andlw	15
  5090  0F04  00F1               	movwf	??_Lcd_Write_Char
  5091  0F05  0871               	movf	??_Lcd_Write_Char,w
  5092  0F06  00F2               	movwf	Lcd_Write_Char@temp
  5093                           
  5094                           ;./LCD4bits.h: 88:    y = a&0xF0;
  5095  0F07  0874               	movf	Lcd_Write_Char@a,w
  5096  0F08  39F0               	andlw	240
  5097  0F09  00F1               	movwf	??_Lcd_Write_Char
  5098  0F0A  0871               	movf	??_Lcd_Write_Char,w
  5099  0F0B  00F3               	movwf	Lcd_Write_Char@y
  5100                           
  5101                           ;./LCD4bits.h: 89:    PORTBbits.RB4 = 1;
  5102  0F0C  1283               	bcf	3,5	;RP0=0, select bank0
  5103  0F0D  1303               	bcf	3,6	;RP1=0, select bank0
  5104  0F0E  1606               	bsf	6,4	;volatile
  5105                           
  5106                           ;./LCD4bits.h: 90:    Lcd_Port(y>>4);
  5107  0F0F  0873               	movf	Lcd_Write_Char@y,w
  5108  0F10  00F1               	movwf	??_Lcd_Write_Char
  5109  0F11  3004               	movlw	4
  5110  0F12                     u1275:	
  5111  0F12  1003               	clrc
  5112  0F13  0CF1               	rrf	??_Lcd_Write_Char,f
  5113  0F14  3EFF               	addlw	-1
  5114  0F15  1D03               	skipz
  5115  0F16  2F12               	goto	u1275
  5116  0F17  0871               	movf	??_Lcd_Write_Char,w
  5117  0F18  120A  158A  2539  120A  158A  	fcall	_Lcd_Port
  5118                           
  5119                           ;./LCD4bits.h: 91:    PORTBbits.RB5 = 1;
  5120  0F1D  1283               	bcf	3,5	;RP0=0, select bank0
  5121  0F1E  1303               	bcf	3,6	;RP1=0, select bank0
  5122  0F1F  1686               	bsf	6,5	;volatile
  5123                           
  5124                           ;./LCD4bits.h: 92:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  5125  0F20  301A               	movlw	26
  5126  0F21  00F1               	movwf	??_Lcd_Write_Char
  5127  0F22                     u1927:	
  5128  0F22  0BF1               	decfsz	??_Lcd_Write_Char,f
  5129  0F23  2F22               	goto	u1927
  5130  0F24  0000               	nop
  5131                           
  5132                           ;./LCD4bits.h: 93:    PORTBbits.RB5 = 0;
  5133  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  5134  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  5135  0F27  1286               	bcf	6,5	;volatile
  5136                           
  5137                           ;./LCD4bits.h: 94:    Lcd_Port(temp);
  5138  0F28  0872               	movf	Lcd_Write_Char@temp,w
  5139  0F29  120A  158A  2539  120A  158A  	fcall	_Lcd_Port
  5140                           
  5141                           ;./LCD4bits.h: 95:    PORTBbits.RB5 = 1;
  5142  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  5143  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  5144  0F30  1686               	bsf	6,5	;volatile
  5145                           
  5146                           ;./LCD4bits.h: 96:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  5147  0F31  301A               	movlw	26
  5148  0F32  00F1               	movwf	??_Lcd_Write_Char
  5149  0F33                     u1937:	
  5150  0F33  0BF1               	decfsz	??_Lcd_Write_Char,f
  5151  0F34  2F33               	goto	u1937
  5152  0F35  0000               	nop
  5153                           
  5154                           ;./LCD4bits.h: 97:    PORTBbits.RB5 = 0;
  5155  0F36  1283               	bcf	3,5	;RP0=0, select bank0
  5156  0F37  1303               	bcf	3,6	;RP1=0, select bank0
  5157  0F38  1286               	bcf	6,5	;volatile
  5158  0F39  0008               	return
  5159  0F3A                     __end_of_Lcd_Write_Char:	
  5160                           
  5161                           	psect	text31
  5162  0FB6                     __ptext31:	
  5163 ;; *************** function _Lcd_Set_Cursor *****************
  5164 ;; Defined at:
  5165 ;;		line 44 in file "./LCD4bits.h"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;  a               1    wreg     unsigned char 
  5168 ;;  b               1    4[COMMON] unsigned char 
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;  a               1    7[COMMON] unsigned char 
  5171 ;;  temp            1   10[COMMON] unsigned char 
  5172 ;;  y               1    9[COMMON] unsigned char 
  5173 ;;  z               1    8[COMMON] unsigned char 
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  1    wreg      void 
  5176 ;; Registers used:
  5177 ;;		wreg, status,2, status,0, pclath, cstack
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5183 ;;      Params:         1       0       0       0       0
  5184 ;;      Locals:         4       0       0       0       0
  5185 ;;      Temps:          2       0       0       0       0
  5186 ;;      Totals:         7       0       0       0       0
  5187 ;;Total ram usage:        7 bytes
  5188 ;; Hardware stack levels used:    1
  5189 ;; Hardware stack levels required when called:    2
  5190 ;; This function calls:
  5191 ;;		_Lcd_Cmd
  5192 ;; This function is called by:
  5193 ;;		_main
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           
  5198                           ;psect for function _Lcd_Set_Cursor
  5199  0FB6                     _Lcd_Set_Cursor:	
  5200                           
  5201                           ;incstack = 0
  5202                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  5203                           ;Lcd_Set_Cursor@a stored from wreg
  5204  0FB6  00F7               	movwf	Lcd_Set_Cursor@a
  5205                           
  5206                           ;./LCD4bits.h: 44: void Lcd_Set_Cursor(char a, char b);./LCD4bits.h: 45: {;./LCD4bits.h:
      +                           46:  char temp,z,y;;./LCD4bits.h: 47:  if(a == 1)
  5207  0FB7  0377               	decf	Lcd_Set_Cursor@a,w
  5208  0FB8  1D03               	btfss	3,2
  5209  0FB9  2FDB               	goto	l2086
  5210                           
  5211                           ;./LCD4bits.h: 48:  {;./LCD4bits.h: 49:    temp = 0x80 + b - 1;
  5212  0FBA  0874               	movf	Lcd_Set_Cursor@b,w
  5213  0FBB  3E7F               	addlw	127
  5214  0FBC  00F5               	movwf	??_Lcd_Set_Cursor
  5215  0FBD  0875               	movf	??_Lcd_Set_Cursor,w
  5216  0FBE  00FA               	movwf	Lcd_Set_Cursor@temp
  5217                           
  5218                           ;./LCD4bits.h: 50:   z = temp>>4;
  5219  0FBF  087A               	movf	Lcd_Set_Cursor@temp,w
  5220  0FC0  00F5               	movwf	??_Lcd_Set_Cursor
  5221  0FC1  3004               	movlw	4
  5222  0FC2                     u1485:	
  5223  0FC2  1003               	clrc
  5224  0FC3  0CF5               	rrf	??_Lcd_Set_Cursor,f
  5225  0FC4  3EFF               	addlw	-1
  5226  0FC5  1D03               	skipz
  5227  0FC6  2FC2               	goto	u1485
  5228  0FC7  0875               	movf	??_Lcd_Set_Cursor,w
  5229  0FC8  00F6               	movwf	??_Lcd_Set_Cursor+1
  5230  0FC9  0876               	movf	??_Lcd_Set_Cursor+1,w
  5231  0FCA  00F8               	movwf	Lcd_Set_Cursor@z
  5232                           
  5233                           ;./LCD4bits.h: 51:   y = temp & 0x0F;
  5234  0FCB  087A               	movf	Lcd_Set_Cursor@temp,w
  5235  0FCC  390F               	andlw	15
  5236  0FCD  00F5               	movwf	??_Lcd_Set_Cursor
  5237  0FCE  0875               	movf	??_Lcd_Set_Cursor,w
  5238  0FCF  00F9               	movwf	Lcd_Set_Cursor@y
  5239                           
  5240                           ;./LCD4bits.h: 52:   Lcd_Cmd(z);
  5241  0FD0  0878               	movf	Lcd_Set_Cursor@z,w
  5242  0FD1  120A  158A  2553  120A  158A  	fcall	_Lcd_Cmd
  5243                           
  5244                           ;./LCD4bits.h: 53:   Lcd_Cmd(y);
  5245  0FD6  0879               	movf	Lcd_Set_Cursor@y,w
  5246  0FD7  120A  158A  2553   	fcall	_Lcd_Cmd
  5247                           
  5248                           ;./LCD4bits.h: 54:  }
  5249  0FDA  0008               	return
  5250  0FDB                     l2086:	
  5251  0FDB  3002               	movlw	2
  5252  0FDC  0677               	xorwf	Lcd_Set_Cursor@a,w
  5253  0FDD  1D03               	btfss	3,2
  5254  0FDE  0008               	return
  5255                           
  5256                           ;./LCD4bits.h: 56:  {;./LCD4bits.h: 57:   temp = 0xC0 + b - 1;
  5257  0FDF  0874               	movf	Lcd_Set_Cursor@b,w
  5258  0FE0  3EBF               	addlw	191
  5259  0FE1  00F5               	movwf	??_Lcd_Set_Cursor
  5260  0FE2  0875               	movf	??_Lcd_Set_Cursor,w
  5261  0FE3  00FA               	movwf	Lcd_Set_Cursor@temp
  5262                           
  5263                           ;./LCD4bits.h: 58:   z = temp>>4;
  5264  0FE4  087A               	movf	Lcd_Set_Cursor@temp,w
  5265  0FE5  00F5               	movwf	??_Lcd_Set_Cursor
  5266  0FE6  3004               	movlw	4
  5267  0FE7                     u1505:	
  5268  0FE7  1003               	clrc
  5269  0FE8  0CF5               	rrf	??_Lcd_Set_Cursor,f
  5270  0FE9  3EFF               	addlw	-1
  5271  0FEA  1D03               	skipz
  5272  0FEB  2FE7               	goto	u1505
  5273  0FEC  0875               	movf	??_Lcd_Set_Cursor,w
  5274  0FED  00F6               	movwf	??_Lcd_Set_Cursor+1
  5275  0FEE  0876               	movf	??_Lcd_Set_Cursor+1,w
  5276  0FEF  00F8               	movwf	Lcd_Set_Cursor@z
  5277                           
  5278                           ;./LCD4bits.h: 59:   y = temp & 0x0F;
  5279  0FF0  087A               	movf	Lcd_Set_Cursor@temp,w
  5280  0FF1  390F               	andlw	15
  5281  0FF2  00F5               	movwf	??_Lcd_Set_Cursor
  5282  0FF3  0875               	movf	??_Lcd_Set_Cursor,w
  5283  0FF4  00F9               	movwf	Lcd_Set_Cursor@y
  5284                           
  5285                           ;./LCD4bits.h: 60:   Lcd_Cmd(z);
  5286  0FF5  0878               	movf	Lcd_Set_Cursor@z,w
  5287  0FF6  120A  158A  2553  120A  158A  	fcall	_Lcd_Cmd
  5288                           
  5289                           ;./LCD4bits.h: 61:   Lcd_Cmd(y);
  5290  0FFB  0879               	movf	Lcd_Set_Cursor@y,w
  5291  0FFC  120A  158A  2553   	fcall	_Lcd_Cmd
  5292  0FFF  0008               	return
  5293  1000                     __end_of_Lcd_Set_Cursor:	
  5294                           
  5295                           	psect	text32
  5296  0D1D                     __ptext32:	
  5297 ;; *************** function _Lcd_Clear *****************
  5298 ;; Defined at:
  5299 ;;		line 38 in file "./LCD4bits.h"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;		None
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;		None
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  1    wreg      void 
  5306 ;; Registers used:
  5307 ;;		wreg, status,2, status,0, pclath, cstack
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5313 ;;      Params:         0       0       0       0       0
  5314 ;;      Locals:         0       0       0       0       0
  5315 ;;      Temps:          0       0       0       0       0
  5316 ;;      Totals:         0       0       0       0       0
  5317 ;;Total ram usage:        0 bytes
  5318 ;; Hardware stack levels used:    1
  5319 ;; Hardware stack levels required when called:    2
  5320 ;; This function calls:
  5321 ;;		_Lcd_Cmd
  5322 ;; This function is called by:
  5323 ;;		_main
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           
  5328                           ;psect for function _Lcd_Clear
  5329  0D1D                     _Lcd_Clear:	
  5330                           
  5331                           ;./LCD4bits.h: 40:  Lcd_Cmd(0);
  5332                           
  5333                           ;incstack = 0
  5334                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  5335  0D1D  3000               	movlw	0
  5336  0D1E  120A  158A  2553  120A  158A  	fcall	_Lcd_Cmd
  5337                           
  5338                           ;./LCD4bits.h: 41:  Lcd_Cmd(1);
  5339  0D23  3001               	movlw	1
  5340  0D24  120A  158A  2553   	fcall	_Lcd_Cmd
  5341  0D27  0008               	return
  5342  0D28                     __end_of_Lcd_Clear:	
  5343                           
  5344                           	psect	text33
  5345  0D53                     __ptext33:	
  5346 ;; *************** function _Lcd_Cmd *****************
  5347 ;; Defined at:
  5348 ;;		line 29 in file "./LCD4bits.h"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;  a               1    wreg     unsigned char 
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;  a               1    3[COMMON] unsigned char 
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      void 
  5355 ;; Registers used:
  5356 ;;		wreg, status,2, status,0, pclath, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5362 ;;      Params:         0       0       0       0       0
  5363 ;;      Locals:         1       0       0       0       0
  5364 ;;      Temps:          2       0       0       0       0
  5365 ;;      Totals:         3       0       0       0       0
  5366 ;;Total ram usage:        3 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; Hardware stack levels required when called:    1
  5369 ;; This function calls:
  5370 ;;		_Lcd_Port
  5371 ;; This function is called by:
  5372 ;;		_Lcd_Clear
  5373 ;;		_Lcd_Set_Cursor
  5374 ;;		_Lcd_Init
  5375 ;;		_Lcd_Shift_Right
  5376 ;;		_Lcd_Shift_Left
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           
  5381                           ;psect for function _Lcd_Cmd
  5382  0D53                     _Lcd_Cmd:	
  5383                           
  5384                           ;incstack = 0
  5385                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5386                           ;Lcd_Cmd@a stored from wreg
  5387  0D53  00F3               	movwf	Lcd_Cmd@a
  5388                           
  5389                           ;./LCD4bits.h: 29: void Lcd_Cmd(char a);./LCD4bits.h: 30: {;./LCD4bits.h: 31:  PORTBbits
      +                          .RB4 = 0;
  5390  0D54  1283               	bcf	3,5	;RP0=0, select bank0
  5391  0D55  1303               	bcf	3,6	;RP1=0, select bank0
  5392  0D56  1206               	bcf	6,4	;volatile
  5393                           
  5394                           ;./LCD4bits.h: 32:  Lcd_Port(a);
  5395  0D57  0873               	movf	Lcd_Cmd@a,w
  5396  0D58  120A  158A  2539  120A  158A  	fcall	_Lcd_Port
  5397                           
  5398                           ;./LCD4bits.h: 33:  PORTBbits.RB5 = 1;
  5399  0D5D  1283               	bcf	3,5	;RP0=0, select bank0
  5400  0D5E  1303               	bcf	3,6	;RP1=0, select bank0
  5401  0D5F  1686               	bsf	6,5	;volatile
  5402                           
  5403                           ;./LCD4bits.h: 34:         _delay((unsigned long)((4)*(8000000/4000.0)));
  5404  0D60  300B               	movlw	11
  5405  0D61  00F2               	movwf	??_Lcd_Cmd+1
  5406  0D62  3062               	movlw	98
  5407  0D63  00F1               	movwf	??_Lcd_Cmd
  5408  0D64                     u1947:	
  5409  0D64  0BF1               	decfsz	??_Lcd_Cmd,f
  5410  0D65  2D64               	goto	u1947
  5411  0D66  0BF2               	decfsz	??_Lcd_Cmd+1,f
  5412  0D67  2D64               	goto	u1947
  5413  0D68  0000               	nop
  5414                           
  5415                           ;./LCD4bits.h: 35:         PORTBbits.RB5 = 0;
  5416  0D69  1283               	bcf	3,5	;RP0=0, select bank0
  5417  0D6A  1303               	bcf	3,6	;RP1=0, select bank0
  5418  0D6B  1286               	bcf	6,5	;volatile
  5419  0D6C  0008               	return
  5420  0D6D                     __end_of_Lcd_Cmd:	
  5421                           
  5422                           	psect	text34
  5423  0D39                     __ptext34:	
  5424 ;; *************** function _Lcd_Port *****************
  5425 ;; Defined at:
  5426 ;;		line 7 in file "./LCD4bits.h"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;  a               1    wreg     unsigned char 
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;  a               1    0[COMMON] unsigned char 
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  1    wreg      void 
  5433 ;; Registers used:
  5434 ;;		wreg
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5440 ;;      Params:         0       0       0       0       0
  5441 ;;      Locals:         1       0       0       0       0
  5442 ;;      Temps:          0       0       0       0       0
  5443 ;;      Totals:         1       0       0       0       0
  5444 ;;Total ram usage:        1 bytes
  5445 ;; Hardware stack levels used:    1
  5446 ;; This function calls:
  5447 ;;		Nothing
  5448 ;; This function is called by:
  5449 ;;		_Lcd_Cmd
  5450 ;;		_Lcd_Init
  5451 ;;		_Lcd_Write_Char
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           
  5456                           ;psect for function _Lcd_Port
  5457  0D39                     _Lcd_Port:	
  5458                           
  5459                           ;incstack = 0
  5460                           ; Regs used in _Lcd_Port: [wreg]
  5461                           ;Lcd_Port@a stored from wreg
  5462  0D39  00F0               	movwf	Lcd_Port@a
  5463                           
  5464                           ;./LCD4bits.h: 7: void Lcd_Port(char a);./LCD4bits.h: 8: {;./LCD4bits.h: 9:  if(a & 1)
  5465  0D3A  1C70               	btfss	Lcd_Port@a,0
  5466  0D3B  2D40               	goto	l138
  5467                           
  5468                           ;./LCD4bits.h: 10:   PORTBbits.RB0 = 1;
  5469  0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  5470  0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  5471  0D3E  1406               	bsf	6,0	;volatile
  5472  0D3F  2D43               	goto	l139
  5473  0D40                     l138:	
  5474                           ;./LCD4bits.h: 11:  else
  5475                           
  5476                           
  5477                           ;./LCD4bits.h: 12:   PORTBbits.RB0 = 0;
  5478  0D40  1283               	bcf	3,5	;RP0=0, select bank0
  5479  0D41  1303               	bcf	3,6	;RP1=0, select bank0
  5480  0D42  1006               	bcf	6,0	;volatile
  5481  0D43                     l139:	
  5482                           
  5483                           ;./LCD4bits.h: 14:  if(a & 2)
  5484  0D43  1CF0               	btfss	Lcd_Port@a,1
  5485  0D44  2D47               	goto	l140
  5486                           
  5487                           ;./LCD4bits.h: 15:   PORTBbits.RB1 = 1;
  5488  0D45  1486               	bsf	6,1	;volatile
  5489  0D46  2D48               	goto	l141
  5490  0D47                     l140:	
  5491                           ;./LCD4bits.h: 16:  else
  5492                           
  5493                           
  5494                           ;./LCD4bits.h: 17:   PORTBbits.RB1 = 0;
  5495  0D47  1086               	bcf	6,1	;volatile
  5496  0D48                     l141:	
  5497                           
  5498                           ;./LCD4bits.h: 19:  if(a & 4)
  5499  0D48  1D70               	btfss	Lcd_Port@a,2
  5500  0D49  2D4C               	goto	l142
  5501                           
  5502                           ;./LCD4bits.h: 20:   PORTBbits.RB2 = 1;
  5503  0D4A  1506               	bsf	6,2	;volatile
  5504  0D4B  2D4D               	goto	l143
  5505  0D4C                     l142:	
  5506                           ;./LCD4bits.h: 21:  else
  5507                           
  5508                           
  5509                           ;./LCD4bits.h: 22:   PORTBbits.RB2 = 0;
  5510  0D4C  1106               	bcf	6,2	;volatile
  5511  0D4D                     l143:	
  5512                           
  5513                           ;./LCD4bits.h: 24:  if(a & 8)
  5514  0D4D  1DF0               	btfss	Lcd_Port@a,3
  5515  0D4E  2D51               	goto	l144
  5516                           
  5517                           ;./LCD4bits.h: 25:   PORTBbits.RB3 = 1;
  5518  0D4F  1586               	bsf	6,3	;volatile
  5519  0D50  0008               	return
  5520  0D51                     l144:	
  5521                           ;./LCD4bits.h: 26:  else
  5522                           
  5523                           
  5524                           ;./LCD4bits.h: 27:   PORTBbits.RB3 = 0;
  5525  0D51  1186               	bcf	6,3	;volatile
  5526  0D52  0008               	return
  5527  0D53                     __end_of_Lcd_Port:	
  5528  007E                     btemp	set	126	;btemp
  5529  007E                     wtemp0	set	126


Data Sizes:
    Strings     153
    Constant    10
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_9(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 6
		 -> temp(BANK0[6]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 3
		 -> get_temp@decimal(BANK0[3]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 6
		 -> temp(BANK0[6]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 6
		 -> temp(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_20(CODE[4]), STR_19(CODE[5]), STR_18(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@decimal(BANK0[3]), temp(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 6
		 -> temp(BANK0[6]), 

    get_temp@temp_string	PTR unsigned char  size(1) Largest target is 6
		 -> temp(BANK0[6]), 

    get_time@time_string	PTR unsigned char  size(1) Largest target is 6
		 -> time(BANK0[6]), 

    day2	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), STR_8(CODE[10]), STR_7(CODE[10]), STR_6(CODE[10]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), 
		 -> STR_1(CODE[10]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 12
		 -> NULL(NULL[0]), STR_17(CODE[7]), STR_16(CODE[7]), STR_15(CODE[8]), 
		 -> STR_14(CODE[8]), STR_13(CODE[9]), STR_12(CODE[9]), STR_11(CODE[12]), 
		 -> STR_10(CODE[12]), STR_8(CODE[10]), STR_7(CODE[10]), STR_6(CODE[10]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), 
		 -> STR_1(CODE[10]), time(BANK0[6]), temp(BANK0[6]), 


Critical Paths under _main in COMMON

    _UART_Init->___aldiv
    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _get_tripwire->_I2C_Master_Read
    _get_time->_I2C_Master_Read
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _get_hall->_I2C_Master_Read
    _get_day->_I2C_Master_Read
    _get_PIR->_I2C_Master_Read
    _get_IR->_I2C_Master_Read
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_get_temp
    _setup->_UART_Init
    _UART_Init->___aldiv
    _get_temp->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   21843
                                             22 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                      _UART_TX_Empty
                         _UART_Write
                             _get_IR
                            _get_PIR
                            _get_day
                           _get_hall
                           _get_temp
                           _get_time
                       _get_tripwire
                              _setup
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               7     5      2     200
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1468
                    _I2C_Master_Init
                           _Lcd_Init
                          _UART_Init
                      _initOscilador
 ---------------------------------------------------------------------------------
 (2) _initOscilador                                        3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                           18    14      4     836
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _get_tripwire                                         2     2      0    2218
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_time                                             5     5      0    2450
                                              6 COMMON     5     5      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             9     9      0    4309
                                             13 BANK0      9     9      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___bmul
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     3      1     207
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1429
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _get_hall                                             2     2      0    2218
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_day                                              2     2      0    2218
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _get_PIR                                              2     2      0    2218
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_IR                                               2     2      0    2218
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1466
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     729
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Empty                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    1104
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     912
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_TX_Empty
   _UART_Write
   _get_IR
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _get_PIR
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _get_day
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _get_hall
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _get_temp
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___bmul
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _strcat
   _get_time
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _get_tripwire
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _UART_Init
       ___aldiv
     _initOscilador
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3C      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Mar 05 22:42:27 2019

                                _j 0039                                  pc 0002  
                   ___bmul@product 0072                        __CFG_CP$OFF 0000  
                      get_hall@key 0077                                 _IR 003E  
                               fsr 0004                                l112 0D0A  
                              l130 0E5A                                l131 0E5D  
                              l140 0D47                                l141 0D48  
                              l142 0D4C                                l143 0D4D  
                              l144 0D51                                l216 0D14  
                              l138 0D40                                l139 0D43  
                              l181 0147                                l266 070C  
                              l267 070F                                l498 0295  
                              _GIE 005F                       __CFG_CPD$OFF 0000  
                              _PIR 003F                                u965 01B8  
                              u985 01C6                                u995 01DB  
                    ?_get_tripwire 0070                                fsr0 0004  
                              indf 0000                       __CFG_LVP$OFF 0000  
                             l2002 04D0                               l2012 04E7  
                             l2102 00B9                               l2030 0519  
                             l2024 050A                               l2040 0492  
                             l2018 04E9                               l2042 055E  
                             l2062 0D2A                               l2038 051D  
                             l2054 0DEE                               l2214 0E1C  
                             l2310 06C5                               l2056 0DF9  
                             l2216 0E0F                               l2312 06C7  
                             l2304 06BF                               l2240 0570  
                             l2066 0D30                               l2058 0E01  
                             l2218 0E31                               l2314 06C9  
                             l2306 06C1                               l2322 06D2  
                             l2340 0723                               l2316 06CB  
                             l2308 06C3                               l2324 06F3  
                             l2086 0FDB                               l2158 0392  
                             l2342 072C                               l2318 06CD  
                             l1800 02EE                               l2360 077C  
                             l2346 0730                               l1804 02FB  
                             l2348 0731                               l1830 0F66  
                             l1822 0F42                               l2462 06DC  
                             l1824 0F50                               l1808 0309  
                             l2464 012D                               l2376 07AE  
                             l2368 078E                               l1834 0F71  
                             l2466 04C5                               l1754 01B4  
                             l2394 07EB                               l2386 07CB  
                             l2378 07B8                               l1852 0E85  
                             l1764 01EC                               l1756 01C4  
                             l1940 0101                               l1846 0E69  
                             l1790 02B6                               l1782 02A6  
                             l1950 0120                               l1942 0107  
                             l1848 0E77                               l1856 0E90  
                             l1768 01F9                               l1792 02C6  
                             l1952 0120                               l1944 010D  
                             l1936 00F6                               l1970 0471  
                             l1946 0113                               l1938 00FB  
                             l1948 0119                               l1956 0125  
                             l1996 04B2                               STR_1 003F  
                             STR_2 0053                        get_time@min 0079  
                             STR_3 007B                               STR_4 005D  
                             STR_5 0071                               STR_6 0049  
                             STR_7 0067                               STR_8 0035  
                             STR_9 00A7                               _BRGH 04C2  
                             _CREN 00C4                               u1005 01ED  
                             u1205 0E6C                               u1301 03F0  
                             u1302 03F1                               u1135 0F45  
                             u1055 02BA                               u1303 03F6  
                             u1304 03F7                               u1225 0E7D  
                             u1305 03FC                               u1306 03FD  
                             u1155 0F51                               u1235 0E86  
                             u1075 02C8                               u1165 0F5D  
                             u1085 02DD                               u1341 0450  
                             u1325 0420                               u1342 0451  
                             u1175 0F67                               u1255 0EDD  
                             u1095 02EF                               u1343 0456  
                             u1335 0439                               u1344 0457  
                             u1505 0FE7                               u1345 045C  
                             u1346 045D                               u1275 0F12  
                             u1285 03C0                               u1295 03D9  
                             u1385 0500                               u1555 036A  
                             u1635 0706                               u1485 0FC2  
                             u1575 0249                               u1807 0624  
                             u1585 0268                               u1817 0636  
                             u1907 0162                               u1827 0648  
                             u1917 0171                               u1837 065A  
                             u1757 05CA                               u1927 0F22  
                             u1847 066C                               u1767 05DC  
                             u1937 0F33                               u1857 067E  
                             u1777 05EE                               u1947 0D64  
                             u1867 0690                               u1787 0600  
                             _PEIE 005E                               u1877 06A2  
                             u1797 0612                               u1887 06B4  
                             u1897 0153                               _RCEN 048B  
                             _RCIF 0065                               _SPEN 00C7  
                             _TRMT 04C1                               _TXEN 04C5  
                             _SYNC 04C4                       __CFG_WRT$OFF 0000  
                             _day1 003B                               _day2 003A  
                ?_Lcd_Write_String 0075   __end_of_I2C_Master_RepeatedStart 0CFA  
                             _door 0041                               _main 0563  
                             _sent 003C                               _temp 0042  
                             _time 0048                               _trip 0040  
                             btemp 007E                               start 0000  
               ??_Lcd_Write_String 0077                      __CFG_IESO$OFF 0000  
                  __end_of_Lcd_Cmd 0D6D                  ___bmul@multiplier 0073  
                    __CFG_MCLRE$ON 0000                get_temp@temp_string 0034  
                 ?_I2C_Master_Init 0020                   ?_I2C_Master_Read 0070  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                  __end_of___aldiv 0312                              ?_main 0070  
                            STR_10 001D                              STR_11 0029  
                            STR_20 00B2                              STR_12 0085  
                            STR_13 008E                              STR_14 0097  
                            STR_15 009F                              STR_16 0098  
                            STR_17 00A0                      __CFG_WDTE$OFF 0000  
                            STR_18 00B3                              STR_19 00AD  
                     get_time@hour 0078                              _ANSEL 0188  
                  __end_of___lldiv 0202                     ??_get_tripwire 0076  
                  __end_of___lwdiv 0F76                    __end_of___lwmod 0E95  
                            _RCREG 001A                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007            __size_of_Lcd_Set_Cursor 004A  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISC 0087                              _TRISD 0088  
                            _SSPIE 0463                              _SSPIF 0063  
                            _TXREG 0019                    __end_of_get_PIR 0DAB  
                   __CFG_FCMEN$OFF 0000                    __end_of_get_day 0ECB  
                      ?_UART_Write 0070                 __size_of_UART_Init 00D6  
                  __end_of_dpowers 001D                              _setup 0F76  
                            _state 003D                     __CFG_BOREN$OFF 0000  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 0563  
                 __end_of_Lcd_Init 01A4                   __end_of_Lcd_Port 0D53  
                  __initialization 07F5                       __end_of_main 07F5  
           __size_of_initOscilador 0055                             ??_main 0036  
               __size_of_Lcd_Clear 000B                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0070                 ??_I2C_Master_Start 0070  
               ??_I2C_Master_Write 0072                             ?_setup 0070  
                           _ANSELH 0189                          ??_Lcd_Cmd 0071  
          __size_of_Lcd_Write_Char 0039                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _TRISC6 043E                             _TRISC7 043F  
                           _SSPCON 0014                             _SSPBUF 0013  
                   __CFG_PWRTE$OFF 0000           _I2C_Master_RepeatedStart 0CF3  
                 __end_of_get_hall 0DCA                  __end_of_UART_Init 048B  
                 __end_of_get_temp 03B5                   __end_of_get_time 0283  
                           ___bmul 0D28                __size_of_UART_Write 000A  
                        ??___aldiv 0078                             _change 0038  
                        ??___lldiv 0078                             _get_IR 0D6D  
                        ??___lwdiv 0074                          ??___lwmod 007C  
                        ??_get_PIR 0076              __end_of_UART_TX_Empty 0CE5  
                        ??_get_day 0076                             _strcat 0DE9  
                           _strcmp 0E0D                          ??_sprintf 0023  
                  Lcd_Set_Cursor@a 0077                    Lcd_Set_Cursor@b 0074  
                  Lcd_Set_Cursor@y 0079                    Lcd_Set_Cursor@z 0078  
          __end_of__initialization 07FC                      _initOscilador 00F4  
                __end_of_Lcd_Clear 0D28               __end_of_get_tripwire 0DE9  
              ___bmul@multiplicand 0070                     __pcstackCOMMON 0070  
                    __end_of_setup 0FB6                     _Lcd_Set_Cursor 0FB6  
                        ?_Lcd_Init 0070                          ?_Lcd_Port 0070  
                          ??_setup 007E                         __pbssBANK0 0038  
                   ?_initOscilador 0070                         __pmaintext 0563  
                          ?___bmul 0070                            ?_get_IR 0070  
        __size_of_Lcd_Write_String 003D             __end_of_Lcd_Set_Cursor 1000  
                          ?_strcat 0070                            ?_strcmp 0070  
                     ??_UART_Write 0070                         ??_Lcd_Init 0074  
                       ??_Lcd_Port 0070                            _SSPCON2 0091  
                        ?_get_hall 0070                            _SSPSTAT 0094  
                        ?_get_temp 0070                          ?_get_time 0070  
                       __stringtab 0003                initOscilador@option 0072  
                   _Lcd_Write_Char 0F01                            _Lcd_Cmd 0D53  
                          ___aldiv 0283                    __size_of___bmul 0011  
                          ___lldiv 01A4                 __end_of_UART_Write 0D1D  
                          ___lwdiv 0F3A                            ___lwmod 0E63  
                  __size_of_get_IR 001F                    ?_Lcd_Set_Cursor 0074  
                          _get_PIR 0D8C                            __ptext1 0E0D  
                          __ptext2 0F76                            __ptext3 00F4  
                          __ptext4 03B5                            __ptext5 0283  
                          __ptext6 0149                            __ptext7 0ECB  
                          __ptext8 01A4                            __ptext9 0DCA  
                          _get_day 0E95                get_time@time_string 007A  
                  __size_of_strcat 0024                    __size_of_strcmp 002A  
                          _dpowers 0013                   ___aldiv@dividend 0074  
         __size_of_I2C_Master_Init 0036           __size_of_I2C_Master_Read 002C  
         __size_of_I2C_Master_Wait 0009           __size_of_I2C_Master_Stop 0007  
                  ??_initOscilador 0070                         ??_get_hall 0076  
                          _sprintf 048B                            clrloop0 0D03  
           __end_of_Lcd_Write_Char 0F3A                         ??_get_temp 002D  
                       ??_get_time 0076               end_of_initialization 07FC  
            __size_of_get_tripwire 001F         ??_I2C_Master_RepeatedStart 0070  
                       get_PIR@PIR 0077          __size_of_I2C_Master_Start 0007  
        __size_of_I2C_Master_Write 0008                    ___lldiv@divisor 0070  
                  ___lldiv@counter 007D                          _RCSTAbits 0018  
                 ___aldiv@quotient 0022                   I2C_Master_Init@c 0020  
                 I2C_Master_Read@a 0070                          Lcd_Port@a 0070  
                          strcmp@r 0075                          _UART_Init 03B5  
                        _PORTAbits 0005                          _PORTBbits 0006  
                        _PORTCbits 0007                     UART_Write@data 0070  
                     _get_tripwire 0DCA                          _TRISCbits 0087  
                  ?_Lcd_Write_Char 0070                  Lcd_Write_String@a 0075  
                Lcd_Write_String@i 007A                          _Lcd_Clear 0D1D  
                   __end_of___bmul 0D39                   _Lcd_Write_String 00B7  
                       ?_UART_Init 0026                     __end_of_get_IR 0D8C  
                   __end_of_strcat 0E0D                     __end_of_strcmp 0E37  
              start_initialization 07F5                  __size_of_Lcd_Init 005B  
                __size_of_Lcd_Port 001A                  ??_I2C_Master_Init 0024  
                ??_I2C_Master_Read 0072                  ??_I2C_Master_Wait 0070  
                ??_I2C_Master_Stop 0070             __size_of_UART_TX_Empty 0006  
         __CFG_FOSC$INTRC_NOCLKOUT 0000                         ?_Lcd_Clear 0070  
                         ??___bmul 0071                           ??_get_IR 0076  
                  Lcd_Write_Char@a 0074                    Lcd_Write_Char@y 0073  
                         ??_strcat 0071                           ??_strcmp 0072  
                        ___latbits 0002                      __pcstackBANK0 0020  
                __size_of_get_hall 001F                           ?_Lcd_Cmd 0070  
                __size_of_get_temp 00A3                  __size_of_get_time 0081  
                      sprintf@flag 0027                        sprintf@prec 0028  
                 _I2C_Master_Start 0CE5                   _I2C_Master_Write 0CFA  
                 ___lwdiv@dividend 0072                   ??_Lcd_Set_Cursor 0075  
                  get_temp@decimal 0030                           ?___aldiv 0070  
                         ?___lldiv 0070                           ?___lwdiv 0070  
                         ?___lwmod 0078                        ??_UART_Init 002A  
                         ?_get_PIR 0070                          __pstrings 0003  
                         ?_get_day 0070                    get_temp@tempLSB 0035  
                  get_temp@tempMSB 0033                      _UART_TX_Empty 0CDF  
                 ___lwdiv@quotient 0075                           ?_sprintf 0020  
                       UART_Init@x 0079                     __size_of_setup 0040  
                  ___aldiv@divisor 0070                    ___aldiv@counter 0020  
                        clear_ram0 0D02                           Lcd_Cmd@a 0073  
                      ??_Lcd_Clear 0074                  UART_Init@baudrate 0026  
                      __stringbase 0012                     ?_UART_TX_Empty 0070  
                 ??_Lcd_Write_Char 0071                           _Lcd_Init 0149  
                         _Lcd_Port 0D39                I2C_Master_Read@temp 0074  
            __end_of_initOscilador 0149           __end_of_Lcd_Write_String 00F4  
                 __size_of_Lcd_Cmd 001A                   __size_of___aldiv 008F  
__size_of_I2C_Master_RepeatedStart 0007          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 005E                   __size_of___lwdiv 003C  
                 __size_of___lwmod 0032                 __end_of__stringtab 0013  
                 __size_of_get_PIR 001F                   __size_of_get_day 0036  
                       sprintf@val 0029                    _I2C_Master_Init 0ECB  
                  _I2C_Master_Read 0E37                    _I2C_Master_Wait 0D0A  
                       strcat@from 0070                    _I2C_Master_Stop 0CEC  
                  ___lwdiv@divisor 0070                    ___lwdiv@counter 0077  
                         __ptext10 0202                           __ptext11 0312  
                         __ptext20 0D8C                           __ptext12 0DE9  
                         __ptext21 0D6D                           __ptext13 048B  
                         __ptext30 0F01                           __ptext22 0CFA  
                         __ptext14 0E63                           __ptext31 0FB6  
                         __ptext23 0CEC                           __ptext15 0F3A  
                         __ptext32 0D1D                           __ptext24 0CE5  
                         __ptext16 0D28                           __ptext33 0D53  
                         __ptext25 0E37                           __ptext17 0DAB  
                         __ptext34 0D39                           __ptext26 0D0A  
                         __ptext18 0E95                           __ptext27 0D13  
                         __ptext19 0CF3                           __ptext28 0CDF  
                         __ptext29 00B7                  __CFG_BOR4V$BOR40V 0000  
                         _get_hall 0DAB                           _get_temp 0312  
                         _get_time 0202                   __size_of_sprintf 00D8  
                    __size_of_main 0292                           get_IR@IR 0077  
                         get_day@d 0077                    ??_UART_TX_Empty 0070  
         __end_of_I2C_Master_Start 0CEC           __end_of_I2C_Master_Write 0D02  
               Lcd_Write_Char@temp 0072                          sprintf@ap 0026  
                        sprintf@sp 002B                   ___lwmod@dividend 007A  
                 ___lldiv@dividend 0074                          stringcode 000D  
                       _OSCCONbits 008F            __end_of_I2C_Master_Init 0F01  
          __end_of_I2C_Master_Read 0E63            __end_of_I2C_Master_Wait 0D13  
          __end_of_I2C_Master_Stop 0CF3                 Lcd_Set_Cursor@temp 007A  
                         sprintf@c 002C                           sprintf@f 0020  
                         strcat@cp 0073                           strcat@to 0072  
                         strcmp@s1 0076                           strcmp@s2 0070  
                 ___lldiv@quotient 0079                  I2C_Master_Write@d 0070  
                  ___lwmod@divisor 0078                    ___lwmod@counter 007D  
                         stringdir 000D                   get_tripwire@trip 0077  
                         stringtab 0003                       ___aldiv@sign 0021  
                       _UART_Write 0D13                        _SSPCON2bits 0091  
                       _SSPCONbits 0014  
