

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Mar 06 16:49:03 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	text34,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.05
    48                           ; Generated 20/12/2018 GMT
    49                           ; 
    50                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  008F                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  0105                     	;# 
   145  0107                     	;# 
   146  0108                     	;# 
   147  0109                     	;# 
   148  010C                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0185                     	;# 
   154  0187                     	;# 
   155  0188                     	;# 
   156  0189                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001B                     	;# 
   189  001B                     	;# 
   190  001C                     	;# 
   191  001D                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  0086                     	;# 
   197  0087                     	;# 
   198  0088                     	;# 
   199  0089                     	;# 
   200  008C                     	;# 
   201  008D                     	;# 
   202  008E                     	;# 
   203  008F                     	;# 
   204  0090                     	;# 
   205  0091                     	;# 
   206  0092                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0097                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  0105                     	;# 
   223  0107                     	;# 
   224  0108                     	;# 
   225  0109                     	;# 
   226  010C                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  0185                     	;# 
   232  0187                     	;# 
   233  0188                     	;# 
   234  0189                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237                           
   238                           	psect	strings
   239  0003                     __pstrings:	
   240  0003                     stringtab:	
   241  0003                     __stringtab:	
   242                           
   243                           ;	String table - string pointers are 1 byte each
   244  0003  1BFF               	btfsc	btemp+1,7
   245  0004  280D               	ljmp	stringcode
   246  0005  1383               	bcf	3,7
   247  0006  187F               	btfsc	btemp+1,0
   248  0007  1783               	bsf	3,7
   249  0008  0800               	movf	0,w
   250  0009  0A84               	incf	4,f
   251  000A  1903               	skipnz
   252  000B  0AFF               	incf	btemp+1,f
   253  000C  0008               	return
   254  000D                     stringcode:	
   255  000D                     stringdir:	
   256  000D  3000               	movlw	high stringdir
   257  000E  008A               	movwf	10
   258  000F  0804               	movf	4,w
   259  0010  0A84               	incf	4,f
   260  0011  0782               	addwf	2,f
   261  0012                     __stringbase:	
   262  0012  3400               	retlw	0
   263  0013                     __end_of__stringtab:	
   264  0013                     _dpowers:	
   265  0013  3401               	retlw	1
   266  0014  3400               	retlw	0
   267  0015  340A               	retlw	10
   268  0016  3400               	retlw	0
   269  0017  3464               	retlw	100
   270  0018  3400               	retlw	0
   271  0019  34E8               	retlw	232
   272  001A  3403               	retlw	3
   273  001B  3410               	retlw	16
   274  001C  3427               	retlw	39
   275  001D                     __end_of_dpowers:	
   276  0007                     _PORTC	set	7
   277  0005                     _PORTA	set	5
   278  0006                     _PORTB	set	6
   279  0007                     _PORTCbits	set	7
   280  0005                     _PORTAbits	set	5
   281  0014                     _SSPCONbits	set	20
   282  0018                     _RCSTAbits	set	24
   283  0019                     _TXREG	set	25
   284  001A                     _RCREG	set	26
   285  0006                     _PORTBbits	set	6
   286  0013                     _SSPBUF	set	19
   287  0014                     _SSPCON	set	20
   288  0065                     _RCIF	set	101
   289  00C4                     _CREN	set	196
   290  00C7                     _SPEN	set	199
   291  0063                     _SSPIF	set	99
   292  005E                     _PEIE	set	94
   293  005F                     _GIE	set	95
   294  0087                     _TRISC	set	135
   295  0088                     _TRISD	set	136
   296  0085                     _TRISA	set	133
   297  0086                     _TRISB	set	134
   298  0099                     _SPBRG	set	153
   299  008F                     _OSCCONbits	set	143
   300  0091                     _SSPCON2bits	set	145
   301  0087                     _TRISCbits	set	135
   302  0094                     _SSPSTAT	set	148
   303  0093                     _SSPADD	set	147
   304  0091                     _SSPCON2	set	145
   305  04C1                     _TRMT	set	1217
   306  04C5                     _TXEN	set	1221
   307  043E                     _TRISC6	set	1086
   308  043F                     _TRISC7	set	1087
   309  04C4                     _SYNC	set	1220
   310  04C2                     _BRGH	set	1218
   311  0463                     _SSPIE	set	1123
   312  043C                     _TRISC4	set	1084
   313  043B                     _TRISC3	set	1083
   314  048B                     _RCEN	set	1163
   315  0188                     _ANSEL	set	392
   316  0189                     _ANSELH	set	393
   317  001D                     STR_10:	
   318  001D  3444               	retlw	68	;'D'
   319  001E  346F               	retlw	111	;'o'
   320  001F  346F               	retlw	111	;'o'
   321  0020  3472               	retlw	114	;'r'
   322  0021  3420               	retlw	32	;' '
   323  0022  344F               	retlw	79	;'O'
   324  0023  3450               	retlw	80	;'P'
   325  0024  3445               	retlw	69	;'E'
   326  0025  344E               	retlw	78	;'N'
   327  0026  3420               	retlw	32	;' '
   328  0027  3420               	retlw	32	;' '
   329  0028  3400               	retlw	0
   330  0029                     STR_11:	
   331  0029  3444               	retlw	68	;'D'
   332  002A  346F               	retlw	111	;'o'
   333  002B  346F               	retlw	111	;'o'
   334  002C  3472               	retlw	114	;'r'
   335  002D  3420               	retlw	32	;' '
   336  002E  3443               	retlw	67	;'C'
   337  002F  344C               	retlw	76	;'L'
   338  0030  344F               	retlw	79	;'O'
   339  0031  3453               	retlw	83	;'S'
   340  0032  3445               	retlw	69	;'E'
   341  0033  3444               	retlw	68	;'D'
   342  0034  3400               	retlw	0
   343  0035                     STR_8:	
   344  0035  3420               	retlw	32	;' '
   345  0036  3420               	retlw	32	;' '
   346  0037  3420               	retlw	32	;' '
   347  0038  3420               	retlw	32	;' '
   348  0039  3420               	retlw	32	;' '
   349  003A  3420               	retlw	32	;' '
   350  003B  3420               	retlw	32	;' '
   351  003C  3420               	retlw	32	;' '
   352  003D  3420               	retlw	32	;' '
   353  003E  3400               	retlw	0
   354  003F                     STR_1:	
   355  003F  344C               	retlw	76	;'L'
   356  0040  3455               	retlw	85	;'U'
   357  0041  344E               	retlw	78	;'N'
   358  0042  3445               	retlw	69	;'E'
   359  0043  3453               	retlw	83	;'S'
   360  0044  3420               	retlw	32	;' '
   361  0045  3420               	retlw	32	;' '
   362  0046  3420               	retlw	32	;' '
   363  0047  3420               	retlw	32	;' '
   364  0048  3400               	retlw	0
   365  0049                     STR_6:	
   366  0049  3453               	retlw	83	;'S'
   367  004A  3441               	retlw	65	;'A'
   368  004B  3442               	retlw	66	;'B'
   369  004C  3441               	retlw	65	;'A'
   370  004D  3444               	retlw	68	;'D'
   371  004E  344F               	retlw	79	;'O'
   372  004F  3420               	retlw	32	;' '
   373  0050  3420               	retlw	32	;' '
   374  0051  3420               	retlw	32	;' '
   375  0052  3400               	retlw	0
   376  0053                     STR_2:	
   377  0053  344D               	retlw	77	;'M'
   378  0054  3441               	retlw	65	;'A'
   379  0055  3452               	retlw	82	;'R'
   380  0056  3454               	retlw	84	;'T'
   381  0057  3445               	retlw	69	;'E'
   382  0058  3453               	retlw	83	;'S'
   383  0059  3420               	retlw	32	;' '
   384  005A  3420               	retlw	32	;' '
   385  005B  3420               	retlw	32	;' '
   386  005C  3400               	retlw	0
   387  005D                     STR_4:	
   388  005D  344A               	retlw	74	;'J'
   389  005E  3455               	retlw	85	;'U'
   390  005F  3445               	retlw	69	;'E'
   391  0060  3456               	retlw	86	;'V'
   392  0061  3445               	retlw	69	;'E'
   393  0062  3453               	retlw	83	;'S'
   394  0063  3420               	retlw	32	;' '
   395  0064  3420               	retlw	32	;' '
   396  0065  3420               	retlw	32	;' '
   397  0066  3400               	retlw	0
   398  0067                     STR_7:	
   399  0067  3444               	retlw	68	;'D'
   400  0068  344F               	retlw	79	;'O'
   401  0069  344D               	retlw	77	;'M'
   402  006A  3449               	retlw	73	;'I'
   403  006B  344E               	retlw	78	;'N'
   404  006C  3447               	retlw	71	;'G'
   405  006D  344F               	retlw	79	;'O'
   406  006E  3420               	retlw	32	;' '
   407  006F  3420               	retlw	32	;' '
   408  0070  3400               	retlw	0
   409  0071                     STR_5:	
   410  0071  3456               	retlw	86	;'V'
   411  0072  3449               	retlw	73	;'I'
   412  0073  3445               	retlw	69	;'E'
   413  0074  3452               	retlw	82	;'R'
   414  0075  344E               	retlw	78	;'N'
   415  0076  3445               	retlw	69	;'E'
   416  0077  3453               	retlw	83	;'S'
   417  0078  3420               	retlw	32	;' '
   418  0079  3420               	retlw	32	;' '
   419  007A  3400               	retlw	0
   420  007B                     STR_3:	
   421  007B  344D               	retlw	77	;'M'
   422  007C  3449               	retlw	73	;'I'
   423  007D  3445               	retlw	69	;'E'
   424  007E  3452               	retlw	82	;'R'
   425  007F  3443               	retlw	67	;'C'
   426  0080  344F               	retlw	79	;'O'
   427  0081  344C               	retlw	76	;'L'
   428  0082  3445               	retlw	69	;'E'
   429  0083  3453               	retlw	83	;'S'
   430  0084  3400               	retlw	0
   431  0085                     STR_12:	
   432  0085  3454               	retlw	84	;'T'
   433  0086  3472               	retlw	114	;'r'
   434  0087  3469               	retlw	105	;'i'
   435  0088  3470               	retlw	112	;'p'
   436  0089  3420               	retlw	32	;' '
   437  008A  344F               	retlw	79	;'O'
   438  008B  344E               	retlw	78	;'N'
   439  008C  3420               	retlw	32	;' '
   440  008D  3400               	retlw	0
   441  008E                     STR_13:	
   442  008E  3454               	retlw	84	;'T'
   443  008F  3472               	retlw	114	;'r'
   444  0090  3469               	retlw	105	;'i'
   445  0091  3470               	retlw	112	;'p'
   446  0092  3420               	retlw	32	;' '
   447  0093  344F               	retlw	79	;'O'
   448  0094  3446               	retlw	70	;'F'
   449  0095  3446               	retlw	70	;'F'
   450  0096  3400               	retlw	0
   451  0097                     STR_14:	
   452  0097  3450               	retlw	80	;'P'
   453  0098  3449               	retlw	73	;'I'
   454  0099  3452               	retlw	82	;'R'
   455  009A  3420               	retlw	32	;' '
   456  009B  344F               	retlw	79	;'O'
   457  009C  344E               	retlw	78	;'N'
   458  009D  3420               	retlw	32	;' '
   459  009E  3400               	retlw	0
   460  009F                     STR_15:	
   461  009F  3450               	retlw	80	;'P'
   462  00A0  3449               	retlw	73	;'I'
   463  00A1  3452               	retlw	82	;'R'
   464  00A2  3420               	retlw	32	;' '
   465  00A3  344F               	retlw	79	;'O'
   466  00A4  3446               	retlw	70	;'F'
   467  00A5  3446               	retlw	70	;'F'
   468  00A6  3400               	retlw	0
   469  00A7                     STR_18:	
   470  00A7  3448               	retlw	72	;'H'
   471  00A8  344F               	retlw	79	;'O'
   472  00A9  3452               	retlw	82	;'R'
   473  00AA  3441               	retlw	65	;'A'
   474  00AB  343A               	retlw	58	;':'
   475  00AC  3420               	retlw	32	;' '
   476  00AD  3400               	retlw	0
   477  00AE                     STR_19:	
   478  00AE  3444               	retlw	68	;'D'
   479  00AF  3449               	retlw	73	;'I'
   480  00B0  3441               	retlw	65	;'A'
   481  00B1  343A               	retlw	58	;':'
   482  00B2  3420               	retlw	32	;' '
   483  00B3  3400               	retlw	0
   484  00B4                     STR_9:	
   485  00B4  3432               	retlw	50	;'2'
   486  00B5  3433               	retlw	51	;'3'
   487  00B6  342E               	retlw	46	;'.'
   488  00B7  3435               	retlw	53	;'5'
   489  00B8  3430               	retlw	48	;'0'
   490  00B9  3400               	retlw	0
   491  00BA                     STR_29:	
   492  00BA  342E               	retlw	46	;'.'
   493  00BB  3425               	retlw	37	;'%'
   494  00BC  3464               	retlw	100	;'d'
   495  00BD  3430               	retlw	48	;'0'
   496  00BE  3400               	retlw	0
   497  00BF                     STR_30:	
   498  00BF  342E               	retlw	46	;'.'
   499  00C0  3425               	retlw	37	;'%'
   500  00C1  3464               	retlw	100	;'d'
   501  00C2  3400               	retlw	0
   502  0035                     
   503                           ; #config settings
   504  0000                     
   505                           	psect	cinit
   506  07F5                     start_initialization:	
   507  07F5                     __initialization:	
   508                           
   509                           ; Clear objects allocated to BANK0
   510  07F5  1383               	bcf	3,7	;select IRP bank0
   511  07F6  3020               	movlw	low __pbssBANK0
   512  07F7  0084               	movwf	4
   513  07F8  303E               	movlw	low (__pbssBANK0+30)
   514  07F9  120A  158A  246E   	fcall	clear_ram0
   515  07FC                     end_of_initialization:	
   516                           ;End of C runtime variable initialization code
   517                           
   518  07FC                     __end_of__initialization:	
   519  07FC  0183               	clrf	3
   520  07FD  120A  118A  2CDD   	ljmp	_main	;jump to C main() function
   521                           
   522                           	psect	bssBANK0
   523  0020                     __pbssBANK0:	
   524  0020                     _newday:	
   525  0020                     	ds	1
   526  0021                     _change:	
   527  0021                     	ds	1
   528  0022                     _j:	
   529  0022                     	ds	1
   530  0023                     _i:	
   531  0023                     	ds	1
   532  0024                     _day1:	
   533  0024                     	ds	1
   534  0025                     _state:	
   535  0025                     	ds	1
   536  0026                     _IR:	
   537  0026                     	ds	1
   538  0027                     _PIR:	
   539  0027                     	ds	1
   540  0028                     _trip:	
   541  0028                     	ds	1
   542  0029                     _door:	
   543  0029                     	ds	1
   544  002A                     _newday2:	
   545  002A                     	ds	1
   546  002B                     _day2:	
   547  002B                     	ds	1
   548  002C                     _newtime:	
   549  002C                     	ds	6
   550  0032                     _temp:	
   551  0032                     	ds	6
   552  0038                     _time:	
   553  0038                     	ds	6
   554                           
   555                           	psect	clrtext
   556  0C6E                     clear_ram0:	
   557                           ;	Called with FSR containing the base address, and
   558                           ;	W with the last address+1
   559                           
   560  0C6E  0064               	clrwdt	;clear the watchdog before getting into this loop
   561  0C6F                     clrloop0:	
   562  0C6F  0180               	clrf	0	;clear RAM location pointed to by FSR
   563  0C70  0A84               	incf	4,f	;increment pointer
   564  0C71  0604               	xorwf	4,w	;XOR with final address
   565  0C72  1903               	btfsc	3,2	;have we reached the end yet?
   566  0C73  3400               	retlw	0	;all done for this memory range, return
   567  0C74  0604               	xorwf	4,w	;XOR again to restore value
   568  0C75  2C6F               	goto	clrloop0	;do the next byte
   569                           
   570                           	psect	cstackCOMMON
   571  0070                     __pcstackCOMMON:	
   572  0070                     ?_setup:	
   573  0070                     ?_get_temp:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_get_hall:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_get_tripwire:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_get_PIR:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_get_IR:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_get_time:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_get_day:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_strcat:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_I2C_Master_Wait:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ??_I2C_Master_Wait:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_I2C_Master_Start:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ??_I2C_Master_Start:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_I2C_Master_RepeatedStart:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ??_I2C_Master_RepeatedStart:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_I2C_Master_Stop:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ??_I2C_Master_Stop:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_I2C_Master_Write:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_Lcd_Port:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ??_Lcd_Port:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_Lcd_Cmd:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_Lcd_Clear:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_Lcd_Init:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_Lcd_Write_Char:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_initOscilador:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ??_initOscilador:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_UART_TX_Empty:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ??_UART_TX_Empty:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_UART_Write:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ??_UART_Write:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_main:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?___bmul:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_strcmp:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_I2C_Master_Read:	
   670                           ; 2 bytes @ 0x0
   671                           
   672  0070                     ?___lwdiv:	
   673                           ; 2 bytes @ 0x0
   674                           
   675  0070                     ?___lldiv:	
   676                           ; 2 bytes @ 0x0
   677                           
   678  0070                     ?___aldiv:	
   679                           ; 4 bytes @ 0x0
   680                           
   681  0070                     Lcd_Port@a:	
   682                           ; 4 bytes @ 0x0
   683                           
   684  0070                     UART_Write@data:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ___bmul@multiplicand:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     strcat@from:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     strcmp@s2:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     I2C_Master_Write@d:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     I2C_Master_Read@a:	
   700                           ; 2 bytes @ 0x0
   701                           
   702  0070                     ___lwdiv@divisor:	
   703                           ; 2 bytes @ 0x0
   704                           
   705  0070                     ___lldiv@divisor:	
   706                           ; 2 bytes @ 0x0
   707                           
   708  0070                     ___aldiv@divisor:	
   709                           ; 4 bytes @ 0x0
   710                           
   711                           
   712                           ; 4 bytes @ 0x0
   713  0070                     	ds	1
   714  0071                     ??_strcat:	
   715  0071                     ??_Lcd_Cmd:	
   716                           ; 1 bytes @ 0x1
   717                           
   718  0071                     ??_Lcd_Write_Char:	
   719                           ; 1 bytes @ 0x1
   720                           
   721  0071                     ??___bmul:	
   722                           ; 1 bytes @ 0x1
   723                           
   724                           
   725                           ; 1 bytes @ 0x1
   726  0071                     	ds	1
   727  0072                     ??_strcmp:	
   728  0072                     ??_I2C_Master_Write:	
   729                           ; 1 bytes @ 0x2
   730                           
   731  0072                     ??_I2C_Master_Read:	
   732                           ; 1 bytes @ 0x2
   733                           
   734  0072                     Lcd_Write_Char@temp:	
   735                           ; 1 bytes @ 0x2
   736                           
   737  0072                     initOscilador@option:	
   738                           ; 1 bytes @ 0x2
   739                           
   740  0072                     ___bmul@product:	
   741                           ; 1 bytes @ 0x2
   742                           
   743  0072                     strcat@to:	
   744                           ; 1 bytes @ 0x2
   745                           
   746  0072                     ___lwdiv@dividend:	
   747                           ; 1 bytes @ 0x2
   748                           
   749                           
   750                           ; 2 bytes @ 0x2
   751  0072                     	ds	1
   752  0073                     Lcd_Cmd@a:	
   753  0073                     Lcd_Write_Char@y:	
   754                           ; 1 bytes @ 0x3
   755                           
   756  0073                     ___bmul@multiplier:	
   757                           ; 1 bytes @ 0x3
   758                           
   759  0073                     strcat@cp:	
   760                           ; 1 bytes @ 0x3
   761                           
   762                           
   763                           ; 1 bytes @ 0x3
   764  0073                     	ds	1
   765  0074                     ??_Lcd_Clear:	
   766  0074                     ?_Lcd_Set_Cursor:	
   767                           ; 1 bytes @ 0x4
   768                           
   769  0074                     ??_Lcd_Init:	
   770                           ; 1 bytes @ 0x4
   771                           
   772  0074                     ??___lwdiv:	
   773                           ; 1 bytes @ 0x4
   774                           
   775  0074                     Lcd_Set_Cursor@b:	
   776                           ; 1 bytes @ 0x4
   777                           
   778  0074                     Lcd_Write_Char@a:	
   779                           ; 1 bytes @ 0x4
   780                           
   781  0074                     I2C_Master_Read@temp:	
   782                           ; 1 bytes @ 0x4
   783                           
   784  0074                     ___lldiv@dividend:	
   785                           ; 2 bytes @ 0x4
   786                           
   787  0074                     ___aldiv@dividend:	
   788                           ; 4 bytes @ 0x4
   789                           
   790                           
   791                           ; 4 bytes @ 0x4
   792  0074                     	ds	1
   793  0075                     ??_Lcd_Set_Cursor:	
   794  0075                     ?_Lcd_Write_String:	
   795                           ; 1 bytes @ 0x5
   796                           
   797  0075                     strcmp@r:	
   798                           ; 1 bytes @ 0x5
   799                           
   800  0075                     Lcd_Write_String@a:	
   801                           ; 1 bytes @ 0x5
   802                           
   803  0075                     ___lwdiv@quotient:	
   804                           ; 2 bytes @ 0x5
   805                           
   806                           
   807                           ; 2 bytes @ 0x5
   808  0075                     	ds	1
   809  0076                     ??_get_hall:	
   810  0076                     ??_get_tripwire:	
   811                           ; 1 bytes @ 0x6
   812                           
   813  0076                     ??_get_PIR:	
   814                           ; 1 bytes @ 0x6
   815                           
   816  0076                     ??_get_IR:	
   817                           ; 1 bytes @ 0x6
   818                           
   819  0076                     ??_get_time:	
   820                           ; 1 bytes @ 0x6
   821                           
   822  0076                     ??_get_day:	
   823                           ; 1 bytes @ 0x6
   824                           
   825  0076                     strcmp@s1:	
   826                           ; 1 bytes @ 0x6
   827                           
   828                           
   829                           ; 1 bytes @ 0x6
   830  0076                     	ds	1
   831  0077                     ??_Lcd_Write_String:	
   832  0077                     Lcd_Set_Cursor@a:	
   833                           ; 1 bytes @ 0x7
   834                           
   835  0077                     get_day@d:	
   836                           ; 1 bytes @ 0x7
   837                           
   838  0077                     get_hall@key:	
   839                           ; 1 bytes @ 0x7
   840                           
   841  0077                     get_tripwire@trip:	
   842                           ; 1 bytes @ 0x7
   843                           
   844  0077                     get_PIR@PIR:	
   845                           ; 1 bytes @ 0x7
   846                           
   847  0077                     get_IR@IR:	
   848                           ; 1 bytes @ 0x7
   849                           
   850  0077                     ___lwdiv@counter:	
   851                           ; 1 bytes @ 0x7
   852                           
   853                           
   854                           ; 1 bytes @ 0x7
   855  0077                     	ds	1
   856  0078                     ??___lldiv:	
   857  0078                     ??___aldiv:	
   858                           ; 1 bytes @ 0x8
   859                           
   860  0078                     ?___lwmod:	
   861                           ; 1 bytes @ 0x8
   862                           
   863  0078                     Lcd_Set_Cursor@z:	
   864                           ; 2 bytes @ 0x8
   865                           
   866  0078                     get_time@hour:	
   867                           ; 1 bytes @ 0x8
   868                           
   869  0078                     ___lwmod@divisor:	
   870                           ; 1 bytes @ 0x8
   871                           
   872                           
   873                           ; 2 bytes @ 0x8
   874  0078                     	ds	1
   875  0079                     Lcd_Set_Cursor@y:	
   876  0079                     get_time@min:	
   877                           ; 1 bytes @ 0x9
   878                           
   879  0079                     UART_Init@x:	
   880                           ; 1 bytes @ 0x9
   881                           
   882  0079                     ___lldiv@quotient:	
   883                           ; 2 bytes @ 0x9
   884                           
   885                           
   886                           ; 4 bytes @ 0x9
   887  0079                     	ds	1
   888  007A                     Lcd_Set_Cursor@temp:	
   889  007A                     get_time@time_string:	
   890                           ; 1 bytes @ 0xA
   891                           
   892  007A                     Lcd_Write_String@i:	
   893                           ; 1 bytes @ 0xA
   894                           
   895  007A                     ___lwmod@dividend:	
   896                           ; 2 bytes @ 0xA
   897                           
   898                           
   899                           ; 2 bytes @ 0xA
   900  007A                     	ds	2
   901  007C                     ??___lwmod:	
   902                           
   903                           ; 1 bytes @ 0xC
   904  007C                     	ds	1
   905  007D                     ___lldiv@counter:	
   906  007D                     ___lwmod@counter:	
   907                           ; 1 bytes @ 0xD
   908                           
   909                           
   910                           ; 1 bytes @ 0xD
   911  007D                     	ds	1
   912  007E                     ??_setup:	
   913                           
   914                           	psect	cstackBANK0
   915  003E                     __pcstackBANK0:	
   916                           ; 1 bytes @ 0xE
   917                           
   918  003E                     ?_I2C_Master_Init:	
   919  003E                     ?_sprintf:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  003E                     sprintf@f:	
   923                           ; 2 bytes @ 0x0
   924                           
   925  003E                     ___aldiv@counter:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  003E                     I2C_Master_Init@c:	
   929                           ; 1 bytes @ 0x0
   930                           
   931                           
   932                           ; 4 bytes @ 0x0
   933  003E                     	ds	1
   934  003F                     ___aldiv@sign:	
   935                           
   936                           ; 1 bytes @ 0x1
   937  003F                     	ds	1
   938  0040                     ___aldiv@quotient:	
   939                           
   940                           ; 4 bytes @ 0x2
   941  0040                     	ds	1
   942  0041                     ??_sprintf:	
   943                           
   944                           ; 1 bytes @ 0x3
   945  0041                     	ds	1
   946  0042                     ??_I2C_Master_Init:	
   947                           
   948                           ; 1 bytes @ 0x4
   949  0042                     	ds	2
   950  0044                     ?_UART_Init:	
   951  0044                     sprintf@ap:	
   952                           ; 1 bytes @ 0x6
   953                           
   954  0044                     UART_Init@baudrate:	
   955                           ; 1 bytes @ 0x6
   956                           
   957                           
   958                           ; 4 bytes @ 0x6
   959  0044                     	ds	1
   960  0045                     sprintf@flag:	
   961                           
   962                           ; 1 bytes @ 0x7
   963  0045                     	ds	1
   964  0046                     sprintf@prec:	
   965                           
   966                           ; 1 bytes @ 0x8
   967  0046                     	ds	1
   968  0047                     sprintf@val:	
   969                           
   970                           ; 2 bytes @ 0x9
   971  0047                     	ds	1
   972  0048                     ??_UART_Init:	
   973                           
   974                           ; 1 bytes @ 0xA
   975  0048                     	ds	1
   976  0049                     sprintf@sp:	
   977                           
   978                           ; 1 bytes @ 0xB
   979  0049                     	ds	1
   980  004A                     sprintf@c:	
   981                           
   982                           ; 1 bytes @ 0xC
   983  004A                     	ds	1
   984  004B                     ??_get_temp:	
   985                           
   986                           ; 1 bytes @ 0xD
   987  004B                     	ds	3
   988  004E                     get_temp@decimal:	
   989                           
   990                           ; 3 bytes @ 0x10
   991  004E                     	ds	3
   992  0051                     get_temp@tempMSB:	
   993                           
   994                           ; 1 bytes @ 0x13
   995  0051                     	ds	1
   996  0052                     get_temp@temp_string:	
   997                           
   998                           ; 1 bytes @ 0x14
   999  0052                     	ds	1
  1000  0053                     get_temp@tempLSB:	
  1001                           
  1002                           ; 1 bytes @ 0x15
  1003  0053                     	ds	1
  1004  0054                     ??_main:	
  1005                           
  1006                           ; 1 bytes @ 0x16
  1007  0054                     	ds	2
  1008                           
  1009                           	psect	maintext
  1010  04DD                     __pmaintext:	
  1011 ;;
  1012 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1013 ;;
  1014 ;; *************** function _main *****************
  1015 ;; Defined at:
  1016 ;;		line 54 in file "mainMaster.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;		None
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;		None
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : B00/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1030 ;;      Params:         0       0       0       0       0
  1031 ;;      Locals:         0       0       0       0       0
  1032 ;;      Temps:          0       2       0       0       0
  1033 ;;      Totals:         0       2       0       0       0
  1034 ;;Total ram usage:        2 bytes
  1035 ;; Hardware stack levels required when called:    4
  1036 ;; This function calls:
  1037 ;;		_Lcd_Clear
  1038 ;;		_Lcd_Set_Cursor
  1039 ;;		_Lcd_Write_Char
  1040 ;;		_Lcd_Write_String
  1041 ;;		_UART_TX_Empty
  1042 ;;		_UART_Write
  1043 ;;		_get_IR
  1044 ;;		_get_PIR
  1045 ;;		_get_day
  1046 ;;		_get_hall
  1047 ;;		_get_temp
  1048 ;;		_get_time
  1049 ;;		_get_tripwire
  1050 ;;		_setup
  1051 ;;		_strcmp
  1052 ;; This function is called by:
  1053 ;;		Startup code after reset
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           
  1058                           ;psect for function _main
  1059  04DD                     _main:	
  1060                           
  1061                           ;mainMaster.c: 55:     setup();
  1062                           
  1063                           ;incstack = 0
  1064                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1065  04DD  120A  158A  271F  120A  118A  	fcall	_setup
  1066                           
  1067                           ;mainMaster.c: 56:     state = 0;
  1068  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  1069  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  1070  04E4  01A5               	clrf	_state
  1071                           
  1072                           ;mainMaster.c: 57:     Lcd_Clear();
  1073  04E5  120A  158A  2489  120A  118A  	fcall	_Lcd_Clear
  1074  04EA                     l2325:	
  1075                           
  1076                           ;mainMaster.c: 61:         RCSTAbits.SPEN = 0;
  1077  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  1078  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  1079  04EC  1398               	bcf	24,7	;volatile
  1080                           
  1081                           ;mainMaster.c: 62:         SSPCONbits.SSPEN = 1;
  1082  04ED  1694               	bsf	20,5	;volatile
  1083                           
  1084                           ;mainMaster.c: 64:         get_temp(temp);
  1085  04EE  3032               	movlw	(low (_temp| 0))& (0+255)
  1086  04EF  120A  118A  228C  120A  118A  	fcall	_get_temp
  1087                           
  1088                           ;mainMaster.c: 65:         door = get_hall();
  1089  04F4  120A  158A  2517  120A  118A  	fcall	_get_hall
  1090  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  1091  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  1092  04FB  00D4               	movwf	??_main
  1093  04FC  0854               	movf	??_main,w
  1094  04FD  00A9               	movwf	_door
  1095                           
  1096                           ;mainMaster.c: 66:         trip = get_tripwire();
  1097  04FE  120A  158A  2536  120A  118A  	fcall	_get_tripwire
  1098  0503  1283               	bcf	3,5	;RP0=0, select bank0
  1099  0504  1303               	bcf	3,6	;RP1=0, select bank0
  1100  0505  00D4               	movwf	??_main
  1101  0506  0854               	movf	??_main,w
  1102  0507  00A8               	movwf	_trip
  1103                           
  1104                           ;mainMaster.c: 67:         PIR = get_PIR();
  1105  0508  120A  158A  24F8  120A  118A  	fcall	_get_PIR
  1106  050D  1283               	bcf	3,5	;RP0=0, select bank0
  1107  050E  1303               	bcf	3,6	;RP1=0, select bank0
  1108  050F  00D4               	movwf	??_main
  1109  0510  0854               	movf	??_main,w
  1110  0511  00A7               	movwf	_PIR
  1111                           
  1112                           ;mainMaster.c: 68:         IR = get_IR();
  1113  0512  120A  158A  24D9  120A  118A  	fcall	_get_IR
  1114  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1115  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0519  00D4               	movwf	??_main
  1117  051A  0854               	movf	??_main,w
  1118  051B  00A6               	movwf	_IR
  1119                           
  1120                           ;mainMaster.c: 69:         get_time(time);
  1121  051C  3038               	movlw	(low (_time| 0))& (0+255)
  1122  051D  120A  118A  217C  120A  118A  	fcall	_get_time
  1123                           
  1124                           ;mainMaster.c: 70:         day1 = get_day();
  1125  0522  120A  158A  2601  120A  118A  	fcall	_get_day
  1126  0527  1283               	bcf	3,5	;RP0=0, select bank0
  1127  0528  1303               	bcf	3,6	;RP1=0, select bank0
  1128  0529  00D4               	movwf	??_main
  1129  052A  0854               	movf	??_main,w
  1130  052B  00A4               	movwf	_day1
  1131                           
  1132                           ;mainMaster.c: 72:         SSPCONbits.SSPEN = 0;
  1133  052C  1294               	bcf	20,5	;volatile
  1134                           
  1135                           ;mainMaster.c: 73:         RCSTAbits.SPEN = 1;
  1136  052D  1798               	bsf	24,7	;volatile
  1137                           
  1138                           ;mainMaster.c: 75:         if (UART_TX_Empty()){
  1139  052E  120A  158A  244B  120A  118A  	fcall	_UART_TX_Empty
  1140  0533  3A00               	xorlw	0
  1141  0534  1903               	skipnz
  1142  0535  2E4C               	goto	l2407
  1143                           
  1144                           ;mainMaster.c: 76:             UART_Write(temp[0]);
  1145  0536  1283               	bcf	3,5	;RP0=0, select bank0
  1146  0537  1303               	bcf	3,6	;RP1=0, select bank0
  1147  0538  0832               	movf	_temp,w
  1148  0539  120A  158A  247F  120A  118A  	fcall	_UART_Write
  1149                           
  1150                           ;mainMaster.c: 77:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1151  053E  3003               	movlw	3
  1152  053F  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0540  1303               	bcf	3,6	;RP1=0, select bank0
  1154  0541  00D5               	movwf	??_main+1
  1155  0542  3097               	movlw	151
  1156  0543  00D4               	movwf	??_main
  1157  0544                     u1797:	
  1158  0544  0BD4               	decfsz	??_main,f
  1159  0545  2D44               	goto	u1797
  1160  0546  0BD5               	decfsz	??_main+1,f
  1161  0547  2D44               	goto	u1797
  1162                           
  1163                           ;mainMaster.c: 78:             UART_Write(temp[1]);
  1164  0548  1283               	bcf	3,5	;RP0=0, select bank0
  1165  0549  1303               	bcf	3,6	;RP1=0, select bank0
  1166  054A  0833               	movf	_temp+1,w
  1167  054B  120A  158A  247F  120A  118A  	fcall	_UART_Write
  1168                           
  1169                           ;mainMaster.c: 79:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1170  0550  3003               	movlw	3
  1171  0551  1283               	bcf	3,5	;RP0=0, select bank0
  1172  0552  1303               	bcf	3,6	;RP1=0, select bank0
  1173  0553  00D5               	movwf	??_main+1
  1174  0554  3097               	movlw	151
  1175  0555  00D4               	movwf	??_main
  1176  0556                     u1807:	
  1177  0556  0BD4               	decfsz	??_main,f
  1178  0557  2D56               	goto	u1807
  1179  0558  0BD5               	decfsz	??_main+1,f
  1180  0559  2D56               	goto	u1807
  1181                           
  1182                           ;mainMaster.c: 80:             UART_Write(temp[2]);
  1183  055A  1283               	bcf	3,5	;RP0=0, select bank0
  1184  055B  1303               	bcf	3,6	;RP1=0, select bank0
  1185  055C  0834               	movf	_temp+2,w
  1186  055D  120A  158A  247F  120A  118A  	fcall	_UART_Write
  1187                           
  1188                           ;mainMaster.c: 81:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1189  0562  3003               	movlw	3
  1190  0563  1283               	bcf	3,5	;RP0=0, select bank0
  1191  0564  1303               	bcf	3,6	;RP1=0, select bank0
  1192  0565  00D5               	movwf	??_main+1
  1193  0566  3097               	movlw	151
  1194  0567  00D4               	movwf	??_main
  1195  0568                     u1817:	
  1196  0568  0BD4               	decfsz	??_main,f
  1197  0569  2D68               	goto	u1817
  1198  056A  0BD5               	decfsz	??_main+1,f
  1199  056B  2D68               	goto	u1817
  1200                           
  1201                           ;mainMaster.c: 82:             UART_Write(temp[3]);
  1202  056C  1283               	bcf	3,5	;RP0=0, select bank0
  1203  056D  1303               	bcf	3,6	;RP1=0, select bank0
  1204  056E  0835               	movf	_temp+3,w
  1205  056F  120A  158A  247F  120A  118A  	fcall	_UART_Write
  1206                           
  1207                           ;mainMaster.c: 83:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1208  0574  3003               	movlw	3
  1209  0575  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0576  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0577  00D5               	movwf	??_main+1
  1212  0578  3097               	movlw	151
  1213  0579  00D4               	movwf	??_main
  1214  057A                     u1827:	
  1215  057A  0BD4               	decfsz	??_main,f
  1216  057B  2D7A               	goto	u1827
  1217  057C  0BD5               	decfsz	??_main+1,f
  1218  057D  2D7A               	goto	u1827
  1219                           
  1220                           ;mainMaster.c: 84:             UART_Write(temp[4]);
  1221  057E  1283               	bcf	3,5	;RP0=0, select bank0
  1222  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1223  0580  0836               	movf	_temp+4,w
  1224  0581  120A  158A  247F  120A  118A  	fcall	_UART_Write
  1225                           
  1226                           ;mainMaster.c: 85:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1227  0586  3003               	movlw	3
  1228  0587  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0588  1303               	bcf	3,6	;RP1=0, select bank0
  1230  0589  00D5               	movwf	??_main+1
  1231  058A  3097               	movlw	151
  1232  058B  00D4               	movwf	??_main
  1233  058C                     u1837:	
  1234  058C  0BD4               	decfsz	??_main,f
  1235  058D  2D8C               	goto	u1837
  1236  058E  0BD5               	decfsz	??_main+1,f
  1237  058F  2D8C               	goto	u1837
  1238                           
  1239                           ;mainMaster.c: 86:             UART_Write(time[0]);
  1240  0590  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0591  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0592  0838               	movf	_time,w
  1243  0593  120A  158A  247F  120A  118A  	fcall	_UART_Write
  1244                           
  1245                           ;mainMaster.c: 87:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1246  0598  3003               	movlw	3
  1247  0599  1283               	bcf	3,5	;RP0=0, select bank0
  1248  059A  1303               	bcf	3,6	;RP1=0, select bank0
  1249  059B  00D5               	movwf	??_main+1
  1250  059C  3097               	movlw	151
  1251  059D  00D4               	movwf	??_main
  1252  059E                     u1847:	
  1253  059E  0BD4               	decfsz	??_main,f
  1254  059F  2D9E               	goto	u1847
  1255  05A0  0BD5               	decfsz	??_main+1,f
  1256  05A1  2D9E               	goto	u1847
  1257                           
  1258                           ;mainMaster.c: 88:             UART_Write(time[1]);
  1259  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  1260  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  1261  05A4  0839               	movf	_time+1,w
  1262  05A5  120A  158A  247F  120A  118A  	fcall	_UART_Write
  1263                           
  1264                           ;mainMaster.c: 89:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1265  05AA  3003               	movlw	3
  1266  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  1267  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  1268  05AD  00D5               	movwf	??_main+1
  1269  05AE  3097               	movlw	151
  1270  05AF  00D4               	movwf	??_main
  1271  05B0                     u1857:	
  1272  05B0  0BD4               	decfsz	??_main,f
  1273  05B1  2DB0               	goto	u1857
  1274  05B2  0BD5               	decfsz	??_main+1,f
  1275  05B3  2DB0               	goto	u1857
  1276                           
  1277                           ;mainMaster.c: 90:             UART_Write(time[2]);
  1278  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  1279  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  1280  05B6  083A               	movf	_time+2,w
  1281  05B7  120A  158A  247F  120A  118A  	fcall	_UART_Write
  1282                           
  1283                           ;mainMaster.c: 91:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1284  05BC  3003               	movlw	3
  1285  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  1286  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  1287  05BF  00D5               	movwf	??_main+1
  1288  05C0  3097               	movlw	151
  1289  05C1  00D4               	movwf	??_main
  1290  05C2                     u1867:	
  1291  05C2  0BD4               	decfsz	??_main,f
  1292  05C3  2DC2               	goto	u1867
  1293  05C4  0BD5               	decfsz	??_main+1,f
  1294  05C5  2DC2               	goto	u1867
  1295                           
  1296                           ;mainMaster.c: 92:             UART_Write(time[3]);
  1297  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  1298  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  1299  05C8  083B               	movf	_time+3,w
  1300  05C9  120A  158A  247F  120A  118A  	fcall	_UART_Write
  1301                           
  1302                           ;mainMaster.c: 93:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1303  05CE  3003               	movlw	3
  1304  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  1305  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  1306  05D1  00D5               	movwf	??_main+1
  1307  05D2  3097               	movlw	151
  1308  05D3  00D4               	movwf	??_main
  1309  05D4                     u1877:	
  1310  05D4  0BD4               	decfsz	??_main,f
  1311  05D5  2DD4               	goto	u1877
  1312  05D6  0BD5               	decfsz	??_main+1,f
  1313  05D7  2DD4               	goto	u1877
  1314                           
  1315                           ;mainMaster.c: 94:             UART_Write(time[4]);
  1316  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  1317  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  1318  05DA  083C               	movf	_time+4,w
  1319  05DB  120A  158A  247F  120A  118A  	fcall	_UART_Write
  1320                           
  1321                           ;mainMaster.c: 95:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1322  05E0  3003               	movlw	3
  1323  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  1324  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  1325  05E3  00D5               	movwf	??_main+1
  1326  05E4  3097               	movlw	151
  1327  05E5  00D4               	movwf	??_main
  1328  05E6                     u1887:	
  1329  05E6  0BD4               	decfsz	??_main,f
  1330  05E7  2DE6               	goto	u1887
  1331  05E8  0BD5               	decfsz	??_main+1,f
  1332  05E9  2DE6               	goto	u1887
  1333                           
  1334                           ;mainMaster.c: 96:             UART_Write(door);
  1335  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  1336  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  1337  05EC  0829               	movf	_door,w
  1338  05ED  120A  158A  247F  120A  118A  	fcall	_UART_Write
  1339                           
  1340                           ;mainMaster.c: 97:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1341  05F2  3003               	movlw	3
  1342  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  1343  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  1344  05F5  00D5               	movwf	??_main+1
  1345  05F6  3097               	movlw	151
  1346  05F7  00D4               	movwf	??_main
  1347  05F8                     u1897:	
  1348  05F8  0BD4               	decfsz	??_main,f
  1349  05F9  2DF8               	goto	u1897
  1350  05FA  0BD5               	decfsz	??_main+1,f
  1351  05FB  2DF8               	goto	u1897
  1352                           
  1353                           ;mainMaster.c: 98:             UART_Write(trip);
  1354  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  1355  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  1356  05FE  0828               	movf	_trip,w
  1357  05FF  120A  158A  247F  120A  118A  	fcall	_UART_Write
  1358                           
  1359                           ;mainMaster.c: 99:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1360  0604  3003               	movlw	3
  1361  0605  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0606  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0607  00D5               	movwf	??_main+1
  1364  0608  3097               	movlw	151
  1365  0609  00D4               	movwf	??_main
  1366  060A                     u1907:	
  1367  060A  0BD4               	decfsz	??_main,f
  1368  060B  2E0A               	goto	u1907
  1369  060C  0BD5               	decfsz	??_main+1,f
  1370  060D  2E0A               	goto	u1907
  1371                           
  1372                           ;mainMaster.c: 100:             UART_Write(PIR);
  1373  060E  1283               	bcf	3,5	;RP0=0, select bank0
  1374  060F  1303               	bcf	3,6	;RP1=0, select bank0
  1375  0610  0827               	movf	_PIR,w
  1376  0611  120A  158A  247F  120A  118A  	fcall	_UART_Write
  1377                           
  1378                           ;mainMaster.c: 101:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1379  0616  3003               	movlw	3
  1380  0617  1283               	bcf	3,5	;RP0=0, select bank0
  1381  0618  1303               	bcf	3,6	;RP1=0, select bank0
  1382  0619  00D5               	movwf	??_main+1
  1383  061A  3097               	movlw	151
  1384  061B  00D4               	movwf	??_main
  1385  061C                     u1917:	
  1386  061C  0BD4               	decfsz	??_main,f
  1387  061D  2E1C               	goto	u1917
  1388  061E  0BD5               	decfsz	??_main+1,f
  1389  061F  2E1C               	goto	u1917
  1390                           
  1391                           ;mainMaster.c: 102:             UART_Write(IR);
  1392  0620  1283               	bcf	3,5	;RP0=0, select bank0
  1393  0621  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0622  0826               	movf	_IR,w
  1395  0623  120A  158A  247F  120A  118A  	fcall	_UART_Write
  1396                           
  1397                           ;mainMaster.c: 103:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1398  0628  3003               	movlw	3
  1399  0629  1283               	bcf	3,5	;RP0=0, select bank0
  1400  062A  1303               	bcf	3,6	;RP1=0, select bank0
  1401  062B  00D5               	movwf	??_main+1
  1402  062C  3097               	movlw	151
  1403  062D  00D4               	movwf	??_main
  1404  062E                     u1927:	
  1405  062E  0BD4               	decfsz	??_main,f
  1406  062F  2E2E               	goto	u1927
  1407  0630  0BD5               	decfsz	??_main+1,f
  1408  0631  2E2E               	goto	u1927
  1409                           
  1410                           ;mainMaster.c: 104:             UART_Write('A');
  1411  0632  3041               	movlw	65
  1412  0633  120A  158A  247F  120A  118A  	fcall	_UART_Write
  1413  0638  2E4C               	goto	l2407
  1414  0639                     l2389:	
  1415                           
  1416                           ;mainMaster.c: 109:                 day2 = "LUNES    ";
  1417  0639  302D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1418  063A  2E48               	goto	L7
  1419  063B                     l2391:	
  1420                           ;mainMaster.c: 110:                 break;
  1421                           
  1422                           
  1423                           ;mainMaster.c: 112:                 day2 = "MARTES   ";
  1424  063B  3041               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1425  063C  2E48               	goto	L7
  1426  063D                     l2393:	
  1427                           ;mainMaster.c: 113:                 break;
  1428                           
  1429                           
  1430                           ;mainMaster.c: 115:                 day2 = "MIERCOLES";
  1431  063D  3069               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1432  063E  2E48               	goto	L7
  1433  063F                     l2395:	
  1434                           ;mainMaster.c: 116:                 break;
  1435                           
  1436                           
  1437                           ;mainMaster.c: 118:                 day2 = "JUEVES   ";
  1438  063F  304B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1439  0640  2E48               	goto	L7
  1440  0641                     l2397:	
  1441                           ;mainMaster.c: 119:                 break;
  1442                           
  1443                           
  1444                           ;mainMaster.c: 121:                 day2 = "VIERNES  ";
  1445  0641  305F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1446  0642  2E48               	goto	L7
  1447  0643                     l2399:	
  1448                           ;mainMaster.c: 122:                 break;
  1449                           
  1450                           
  1451                           ;mainMaster.c: 124:                 day2 = "SABADO   ";
  1452  0643  3037               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1453  0644  2E48               	goto	L7
  1454  0645                     l2401:	
  1455                           ;mainMaster.c: 125:                 break;
  1456                           
  1457                           
  1458                           ;mainMaster.c: 127:                 day2 = "DOMINGO  ";
  1459  0645  3055               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1460  0646  2E48               	goto	L7
  1461  0647                     l2403:	
  1462                           ;mainMaster.c: 128:                 break;
  1463                           
  1464                           
  1465                           ;mainMaster.c: 130:                 day2 = "         ";
  1466  0647  3023               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1467  0648                     L7:	
  1468  0648  00D4               	movwf	??_main
  1469  0649  0854               	movf	??_main,w
  1470  064A  00AB               	movwf	_day2
  1471                           
  1472                           ;mainMaster.c: 131:                 break;
  1473  064B  2E6D               	goto	l2409
  1474  064C                     l2407:	
  1475  064C  1283               	bcf	3,5	;RP0=0, select bank0
  1476  064D  1303               	bcf	3,6	;RP1=0, select bank0
  1477  064E  0824               	movf	_day1,w
  1478  064F  00D4               	movwf	??_main
  1479  0650  01D5               	clrf	??_main+1
  1480                           
  1481                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1482                           ; Switch size 1, requested type "simple"
  1483                           ; Number of cases is 1, Range of values is 0 to 0
  1484                           ; switch strategies available:
  1485                           ; Name         Instructions Cycles
  1486                           ; simple_byte            4     3 (average)
  1487                           ; direct_byte           11     8 (fixed)
  1488                           ; jumptable            260     6 (fixed)
  1489                           ;	Chosen strategy is simple_byte
  1490  0651  0855               	movf	??_main+1,w
  1491  0652  3A00               	xorlw	0	; case 0
  1492  0653  1903               	skipnz
  1493  0654  2E56               	goto	l2609
  1494  0655  2E47               	goto	l2403
  1495  0656                     l2609:	
  1496                           
  1497                           ; Switch size 1, requested type "simple"
  1498                           ; Number of cases is 7, Range of values is 1 to 7
  1499                           ; switch strategies available:
  1500                           ; Name         Instructions Cycles
  1501                           ; simple_byte           22    12 (average)
  1502                           ; direct_byte           32    11 (fixed)
  1503                           ; jumptable            263     9 (fixed)
  1504                           ;	Chosen strategy is simple_byte
  1505  0656  0854               	movf	??_main,w
  1506  0657  3A01               	xorlw	1	; case 1
  1507  0658  1903               	skipnz
  1508  0659  2E39               	goto	l2389
  1509  065A  3A03               	xorlw	3	; case 2
  1510  065B  1903               	skipnz
  1511  065C  2E3B               	goto	l2391
  1512  065D  3A01               	xorlw	1	; case 3
  1513  065E  1903               	skipnz
  1514  065F  2E3D               	goto	l2393
  1515  0660  3A07               	xorlw	7	; case 4
  1516  0661  1903               	skipnz
  1517  0662  2E3F               	goto	l2395
  1518  0663  3A01               	xorlw	1	; case 5
  1519  0664  1903               	skipnz
  1520  0665  2E41               	goto	l2397
  1521  0666  3A03               	xorlw	3	; case 6
  1522  0667  1903               	skipnz
  1523  0668  2E43               	goto	l2399
  1524  0669  3A01               	xorlw	1	; case 7
  1525  066A  1903               	skipnz
  1526  066B  2E45               	goto	l2401
  1527  066C  2E47               	goto	l2403
  1528  066D                     l2409:	
  1529                           
  1530                           ;mainMaster.c: 135:         if (strcmp(temp,"23.50") > 0){
  1531  066D  30A2               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1532  066E  00D4               	movwf	??_main
  1533  066F  0854               	movf	??_main,w
  1534  0670  00F0               	movwf	strcmp@s2
  1535  0671  3032               	movlw	(low (_temp| 0))& (0+255)
  1536  0672  120A  158A  2579  120A  118A  	fcall	_strcmp
  1537  0677  0871               	movf	?_strcmp+1,w
  1538  0678  3A80               	xorlw	128
  1539  0679  00FF               	movwf	127
  1540  067A  3080               	movlw	128
  1541  067B  027F               	subwf	127,w
  1542  067C  1D03               	skipz
  1543  067D  2E80               	goto	u1655
  1544  067E  3001               	movlw	1
  1545  067F  0270               	subwf	?_strcmp,w
  1546  0680                     u1655:	
  1547  0680  1C03               	skipc
  1548  0681  2E86               	goto	l272
  1549                           
  1550                           ;mainMaster.c: 136:             PORTAbits.RA0 = 1;
  1551  0682  1283               	bcf	3,5	;RP0=0, select bank0
  1552  0683  1303               	bcf	3,6	;RP1=0, select bank0
  1553  0684  1405               	bsf	5,0	;volatile
  1554                           
  1555                           ;mainMaster.c: 137:         } else {
  1556  0685  2E89               	goto	l273
  1557  0686                     l272:	
  1558                           
  1559                           ;mainMaster.c: 138:             PORTAbits.RA0 = 0;
  1560  0686  1283               	bcf	3,5	;RP0=0, select bank0
  1561  0687  1303               	bcf	3,6	;RP1=0, select bank0
  1562  0688  1005               	bcf	5,0	;volatile
  1563  0689                     l273:	
  1564                           ;mainMaster.c: 139:         }
  1565                           
  1566                           
  1567                           ;mainMaster.c: 142:         if(PORTCbits.RC0 == 1){
  1568  0689  1C07               	btfss	7,0	;volatile
  1569  068A  2EC0               	goto	l2437
  1570                           
  1571                           ;mainMaster.c: 143:             if (change == 0){
  1572  068B  0821               	movf	_change,w
  1573  068C  1D03               	btfss	3,2
  1574  068D  2EC1               	goto	l2439
  1575                           
  1576                           ;mainMaster.c: 144:                 state++;
  1577  068E  3001               	movlw	1
  1578  068F  00D4               	movwf	??_main
  1579  0690  0854               	movf	??_main,w
  1580  0691  07A5               	addwf	_state,f
  1581                           
  1582                           ;mainMaster.c: 145:                 Lcd_Clear();
  1583  0692  120A  158A  2489  120A  118A  	fcall	_Lcd_Clear
  1584                           
  1585                           ;mainMaster.c: 146:                 if (state == 3){
  1586  0697  3003               	movlw	3
  1587  0698  1283               	bcf	3,5	;RP0=0, select bank0
  1588  0699  1303               	bcf	3,6	;RP1=0, select bank0
  1589  069A  0625               	xorwf	_state,w
  1590  069B  1D03               	btfss	3,2
  1591  069C  2EAD               	goto	l2425
  1592                           
  1593                           ;mainMaster.c: 147:                     newday = get_day();
  1594  069D  120A  158A  2601  120A  118A  	fcall	_get_day
  1595  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1596  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1597  06A4  00D4               	movwf	??_main
  1598  06A5  0854               	movf	??_main,w
  1599  06A6  00A0               	movwf	_newday
  1600                           
  1601                           ;mainMaster.c: 148:                     get_time(newtime);
  1602  06A7  302C               	movlw	(low (_newtime| 0))& (0+255)
  1603  06A8  120A  118A  217C  120A  118A  	fcall	_get_time
  1604  06AD                     l2425:	
  1605                           
  1606                           ;mainMaster.c: 150:                 if (state > 3){
  1607  06AD  3004               	movlw	4
  1608  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1609  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1610  06B0  0225               	subwf	_state,w
  1611  06B1  1803               	btfsc	3,0
  1612                           
  1613                           ;mainMaster.c: 151:                     state = 0;
  1614  06B2  01A5               	clrf	_state
  1615  06B3                     l2431:	
  1616                           
  1617                           ;mainMaster.c: 153:                 while(j < 50){
  1618  06B3  3032               	movlw	50
  1619  06B4  0222               	subwf	_j,w
  1620  06B5  1803               	btfsc	3,0
  1621  06B6  2EBC               	goto	l2433
  1622                           
  1623                           ;mainMaster.c: 154:                     j++;
  1624  06B7  3001               	movlw	1
  1625  06B8  00D4               	movwf	??_main
  1626  06B9  0854               	movf	??_main,w
  1627  06BA  07A2               	addwf	_j,f
  1628  06BB  2EB3               	goto	l2431
  1629  06BC                     l2433:	
  1630                           
  1631                           ;mainMaster.c: 156:                 j = 0;
  1632  06BC  01A2               	clrf	_j
  1633                           
  1634                           ;mainMaster.c: 157:                 change = 1;
  1635  06BD  01A1               	clrf	_change
  1636  06BE  0AA1               	incf	_change,f
  1637  06BF  2EC1               	goto	l2439
  1638  06C0                     l2437:	
  1639                           
  1640                           ;mainMaster.c: 160:             change =0;
  1641  06C0  01A1               	clrf	_change
  1642  06C1                     l2439:	
  1643                           
  1644                           ;mainMaster.c: 164:         if (state == 0){
  1645  06C1  0825               	movf	_state,w
  1646  06C2  1D03               	btfss	3,2
  1647  06C3  2F0C               	goto	l2451
  1648                           
  1649                           ;mainMaster.c: 166:             Lcd_Set_Cursor(1,1);
  1650  06C4  01F4               	clrf	Lcd_Set_Cursor@b
  1651  06C5  0AF4               	incf	Lcd_Set_Cursor@b,f
  1652  06C6  3001               	movlw	1
  1653  06C7  120A  158A  2761  120A  118A  	fcall	_Lcd_Set_Cursor
  1654                           
  1655                           ;mainMaster.c: 167:             Lcd_Write_String(time);
  1656  06CC  3038               	movlw	(low (_time| 0))& (0+255)
  1657  06CD  00F5               	movwf	Lcd_Write_String@a
  1658  06CE  3000               	movlw	0
  1659  06CF  00F6               	movwf	Lcd_Write_String@a+1
  1660  06D0  120A  158A  26E2  120A  118A  	fcall	_Lcd_Write_String
  1661                           
  1662                           ;mainMaster.c: 169:             Lcd_Set_Cursor(1,7);
  1663  06D5  3007               	movlw	7
  1664  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  1665  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  1666  06D8  00D4               	movwf	??_main
  1667  06D9  0854               	movf	??_main,w
  1668  06DA  00F4               	movwf	Lcd_Set_Cursor@b
  1669  06DB  3001               	movlw	1
  1670  06DC  120A  158A  2761  120A  118A  	fcall	_Lcd_Set_Cursor
  1671                           
  1672                           ;mainMaster.c: 170:             Lcd_Write_String(day2);
  1673  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1674  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  1675  06E3  082B               	movf	_day2,w
  1676  06E4  00F5               	movwf	Lcd_Write_String@a
  1677  06E5  3000               	movlw	0
  1678  06E6  1D03               	btfss	3,2
  1679  06E7  3080               	movlw	128
  1680  06E8  00F6               	movwf	Lcd_Write_String@a+1
  1681  06E9  120A  158A  26E2  120A  118A  	fcall	_Lcd_Write_String
  1682                           
  1683                           ;mainMaster.c: 172:             Lcd_Set_Cursor(2,1);
  1684  06EE  01F4               	clrf	Lcd_Set_Cursor@b
  1685  06EF  0AF4               	incf	Lcd_Set_Cursor@b,f
  1686  06F0  3002               	movlw	2
  1687  06F1  120A  158A  2761  120A  118A  	fcall	_Lcd_Set_Cursor
  1688                           
  1689                           ;mainMaster.c: 173:             Lcd_Write_String(temp);
  1690  06F6  3032               	movlw	(low (_temp| 0))& (0+255)
  1691  06F7  00F5               	movwf	Lcd_Write_String@a
  1692  06F8  3000               	movlw	0
  1693  06F9  00F6               	movwf	Lcd_Write_String@a+1
  1694  06FA  120A  158A  26E2  120A  118A  	fcall	_Lcd_Write_String
  1695                           
  1696                           ;mainMaster.c: 174:             Lcd_Write_Char(223);
  1697  06FF  30DF               	movlw	223
  1698  0700  120A  158A  266D  120A  118A  	fcall	_Lcd_Write_Char
  1699                           
  1700                           ;mainMaster.c: 175:             Lcd_Write_Char('C');
  1701  0705  3043               	movlw	67
  1702  0706  120A  158A  266D  120A  118A  	fcall	_Lcd_Write_Char
  1703                           
  1704                           ;mainMaster.c: 177:         } else if (state == 1){
  1705  070B  2CEA               	goto	l2325
  1706  070C                     l2451:	
  1707  070C  0325               	decf	_state,w
  1708  070D  1D03               	btfss	3,2
  1709  070E  2F48               	goto	l2469
  1710                           
  1711                           ;mainMaster.c: 179:             Lcd_Set_Cursor(1,1);
  1712  070F  01F4               	clrf	Lcd_Set_Cursor@b
  1713  0710  0AF4               	incf	Lcd_Set_Cursor@b,f
  1714  0711  3001               	movlw	1
  1715  0712  120A  158A  2761  120A  118A  	fcall	_Lcd_Set_Cursor
  1716                           
  1717                           ;mainMaster.c: 180:             if (door == 1){
  1718  0717  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0718  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0719  0329               	decf	_door,w
  1721  071A  1D03               	btfss	3,2
  1722  071B  2F1E               	goto	l2459
  1723                           
  1724                           ;mainMaster.c: 181:                 Lcd_Write_String("Door OPEN  ");
  1725  071C  300B               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1726  071D  2F1F               	goto	L8
  1727  071E                     l2459:	
  1728                           ;mainMaster.c: 182:             } else {
  1729                           
  1730                           
  1731                           ;mainMaster.c: 183:                 Lcd_Write_String("Door CLOSED");
  1732  071E  3017               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1733  071F                     L8:	
  1734  071F  00F5               	movwf	Lcd_Write_String@a
  1735  0720  3080               	movlw	128
  1736  0721  00F6               	movwf	Lcd_Write_String@a+1
  1737  0722  120A  158A  26E2  120A  118A  	fcall	_Lcd_Write_String
  1738                           
  1739                           ;mainMaster.c: 186:             Lcd_Set_Cursor(2,1);
  1740  0727  01F4               	clrf	Lcd_Set_Cursor@b
  1741  0728  0AF4               	incf	Lcd_Set_Cursor@b,f
  1742  0729  3002               	movlw	2
  1743  072A  120A  158A  2761  120A  118A  	fcall	_Lcd_Set_Cursor
  1744                           
  1745                           ;mainMaster.c: 187:             if (trip == 1){
  1746  072F  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0730  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0731  0328               	decf	_trip,w
  1749  0732  1D03               	btfss	3,2
  1750  0733  2F3E               	goto	l2467
  1751                           
  1752                           ;mainMaster.c: 188:                 Lcd_Write_String("Trip ON ");
  1753  0734  3073               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1754  0735  00F5               	movwf	Lcd_Write_String@a
  1755  0736  3080               	movlw	128
  1756  0737  00F6               	movwf	Lcd_Write_String@a+1
  1757  0738  120A  158A  26E2  120A  118A  	fcall	_Lcd_Write_String
  1758                           
  1759                           ;mainMaster.c: 189:             } else {
  1760  073D  2CEA               	goto	l2325
  1761  073E                     l2467:	
  1762                           
  1763                           ;mainMaster.c: 190:                 Lcd_Write_String("Trip OFF");
  1764  073E  307C               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1765  073F  00F5               	movwf	Lcd_Write_String@a
  1766  0740  3080               	movlw	128
  1767  0741  00F6               	movwf	Lcd_Write_String@a+1
  1768  0742  120A  158A  26E2  120A  118A  	fcall	_Lcd_Write_String
  1769  0747  2CEA               	goto	l2325
  1770  0748                     l2469:	
  1771  0748  3002               	movlw	2
  1772  0749  0625               	xorwf	_state,w
  1773  074A  1D03               	btfss	3,2
  1774  074B  2F85               	goto	l2487
  1775                           
  1776                           ;mainMaster.c: 195:             Lcd_Set_Cursor(1,1);
  1777  074C  01F4               	clrf	Lcd_Set_Cursor@b
  1778  074D  0AF4               	incf	Lcd_Set_Cursor@b,f
  1779  074E  3001               	movlw	1
  1780  074F  120A  158A  2761  120A  118A  	fcall	_Lcd_Set_Cursor
  1781                           
  1782                           ;mainMaster.c: 196:             if (PIR == 1){
  1783  0754  1283               	bcf	3,5	;RP0=0, select bank0
  1784  0755  1303               	bcf	3,6	;RP1=0, select bank0
  1785  0756  0327               	decf	_PIR,w
  1786  0757  1D03               	btfss	3,2
  1787  0758  2F5B               	goto	l2477
  1788                           
  1789                           ;mainMaster.c: 197:                 Lcd_Write_String("PIR ON ");
  1790  0759  3085               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1791  075A  2F5C               	goto	L9
  1792  075B                     l2477:	
  1793                           ;mainMaster.c: 198:             } else {
  1794                           
  1795                           
  1796                           ;mainMaster.c: 199:                 Lcd_Write_String("PIR OFF");
  1797  075B  308D               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1798  075C                     L9:	
  1799  075C  00F5               	movwf	Lcd_Write_String@a
  1800  075D  3080               	movlw	128
  1801  075E  00F6               	movwf	Lcd_Write_String@a+1
  1802  075F  120A  158A  26E2  120A  118A  	fcall	_Lcd_Write_String
  1803                           
  1804                           ;mainMaster.c: 202:             Lcd_Set_Cursor(2,1);
  1805  0764  01F4               	clrf	Lcd_Set_Cursor@b
  1806  0765  0AF4               	incf	Lcd_Set_Cursor@b,f
  1807  0766  3002               	movlw	2
  1808  0767  120A  158A  2761  120A  118A  	fcall	_Lcd_Set_Cursor
  1809                           
  1810                           ;mainMaster.c: 203:             if (IR == 1){
  1811  076C  1283               	bcf	3,5	;RP0=0, select bank0
  1812  076D  1303               	bcf	3,6	;RP1=0, select bank0
  1813  076E  0326               	decf	_IR,w
  1814  076F  1D03               	btfss	3,2
  1815  0770  2F7B               	goto	l2485
  1816                           
  1817                           ;mainMaster.c: 204:                 Lcd_Write_String("IR ON ");
  1818  0771  3086               	movlw	(low (((STR_14+1)-__stringbase)| (0+32768)))& (0+255)
  1819  0772  00F5               	movwf	Lcd_Write_String@a
  1820  0773  3080               	movlw	128
  1821  0774  00F6               	movwf	Lcd_Write_String@a+1
  1822  0775  120A  158A  26E2  120A  118A  	fcall	_Lcd_Write_String
  1823                           
  1824                           ;mainMaster.c: 205:             } else {
  1825  077A  2CEA               	goto	l2325
  1826  077B                     l2485:	
  1827                           
  1828                           ;mainMaster.c: 206:                 Lcd_Write_String("IR OFF");
  1829  077B  308E               	movlw	(low (((STR_15+1)-__stringbase)| (0+32768)))& (0+255)
  1830  077C  00F5               	movwf	Lcd_Write_String@a
  1831  077D  3080               	movlw	128
  1832  077E  00F6               	movwf	Lcd_Write_String@a+1
  1833  077F  120A  158A  26E2  120A  118A  	fcall	_Lcd_Write_String
  1834  0784  2CEA               	goto	l2325
  1835  0785                     l2487:	
  1836  0785  3003               	movlw	3
  1837  0786  0625               	xorwf	_state,w
  1838  0787  1D03               	btfss	3,2
  1839  0788  2CEA               	goto	l2325
  1840                           
  1841                           ;mainMaster.c: 209:             Lcd_Set_Cursor(1,1);
  1842  0789  01F4               	clrf	Lcd_Set_Cursor@b
  1843  078A  0AF4               	incf	Lcd_Set_Cursor@b,f
  1844  078B  3001               	movlw	1
  1845  078C  120A  158A  2761  120A  118A  	fcall	_Lcd_Set_Cursor
  1846                           
  1847                           ;mainMaster.c: 210:             Lcd_Write_String("HORA: ");
  1848  0791  3095               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  1849  0792  00F5               	movwf	Lcd_Write_String@a
  1850  0793  3080               	movlw	128
  1851  0794  00F6               	movwf	Lcd_Write_String@a+1
  1852  0795  120A  158A  26E2  120A  118A  	fcall	_Lcd_Write_String
  1853                           
  1854                           ;mainMaster.c: 211:             Lcd_Write_String(newtime);
  1855  079A  302C               	movlw	(low (_newtime| 0))& (0+255)
  1856  079B  00F5               	movwf	Lcd_Write_String@a
  1857  079C  3000               	movlw	0
  1858  079D  00F6               	movwf	Lcd_Write_String@a+1
  1859  079E  120A  158A  26E2  120A  118A  	fcall	_Lcd_Write_String
  1860                           
  1861                           ;mainMaster.c: 212:             Lcd_Set_Cursor(2,1);
  1862  07A3  01F4               	clrf	Lcd_Set_Cursor@b
  1863  07A4  0AF4               	incf	Lcd_Set_Cursor@b,f
  1864  07A5  3002               	movlw	2
  1865  07A6  120A  158A  2761  120A  118A  	fcall	_Lcd_Set_Cursor
  1866                           
  1867                           ;mainMaster.c: 213:             Lcd_Write_String("DIA: ");
  1868  07AB  309C               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  1869  07AC  00F5               	movwf	Lcd_Write_String@a
  1870  07AD  3080               	movlw	128
  1871  07AE  00F6               	movwf	Lcd_Write_String@a+1
  1872  07AF  120A  158A  26E2  120A  118A  	fcall	_Lcd_Write_String
  1873                           
  1874                           ;mainMaster.c: 214:             switch(newday){
  1875  07B4  2FC8               	goto	l2515
  1876  07B5                     l2497:	
  1877                           
  1878                           ;mainMaster.c: 216:                     newday2 = "LUNES    ";
  1879  07B5  302D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1880  07B6  2FC4               	goto	L16
  1881  07B7                     l2499:	
  1882                           ;mainMaster.c: 217:                     break;
  1883                           
  1884                           
  1885                           ;mainMaster.c: 219:                     newday2 = "MARTES   ";
  1886  07B7  3041               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1887  07B8  2FC4               	goto	L16
  1888  07B9                     l2501:	
  1889                           ;mainMaster.c: 220:                     break;
  1890                           
  1891                           
  1892                           ;mainMaster.c: 222:                     newday2 = "MIERCOLES";
  1893  07B9  3069               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1894  07BA  2FC4               	goto	L16
  1895  07BB                     l2503:	
  1896                           ;mainMaster.c: 223:                     break;
  1897                           
  1898                           
  1899                           ;mainMaster.c: 225:                     newday2 = "JUEVES   ";
  1900  07BB  304B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1901  07BC  2FC4               	goto	L16
  1902  07BD                     l2505:	
  1903                           ;mainMaster.c: 226:                     break;
  1904                           
  1905                           
  1906                           ;mainMaster.c: 228:                     newday2 = "VIERNES  ";
  1907  07BD  305F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1908  07BE  2FC4               	goto	L16
  1909  07BF                     l2507:	
  1910                           ;mainMaster.c: 229:                     break;
  1911                           
  1912                           
  1913                           ;mainMaster.c: 231:                     newday2 = "SABADO   ";
  1914  07BF  3037               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1915  07C0  2FC4               	goto	L16
  1916  07C1                     l2509:	
  1917                           ;mainMaster.c: 232:                     break;
  1918                           
  1919                           
  1920                           ;mainMaster.c: 234:                     newday2 = "DOMINGO  ";
  1921  07C1  3055               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1922  07C2  2FC4               	goto	L16
  1923  07C3                     l2511:	
  1924                           ;mainMaster.c: 235:                     break;
  1925                           
  1926                           
  1927                           ;mainMaster.c: 237:                     newday2 = "         ";
  1928  07C3  3023               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1929  07C4                     L16:	
  1930  07C4  00D4               	movwf	??_main
  1931  07C5  0854               	movf	??_main,w
  1932  07C6  00AA               	movwf	_newday2
  1933                           
  1934                           ;mainMaster.c: 238:                     break;
  1935  07C7  2FE9               	goto	l2517
  1936  07C8                     l2515:	
  1937  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  1938  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  1939  07CA  0820               	movf	_newday,w
  1940  07CB  00D4               	movwf	??_main
  1941  07CC  01D5               	clrf	??_main+1
  1942                           
  1943                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1944                           ; Switch size 1, requested type "simple"
  1945                           ; Number of cases is 1, Range of values is 0 to 0
  1946                           ; switch strategies available:
  1947                           ; Name         Instructions Cycles
  1948                           ; simple_byte            4     3 (average)
  1949                           ; direct_byte           11     8 (fixed)
  1950                           ; jumptable            260     6 (fixed)
  1951                           ;	Chosen strategy is simple_byte
  1952  07CD  0855               	movf	??_main+1,w
  1953  07CE  3A00               	xorlw	0	; case 0
  1954  07CF  1903               	skipnz
  1955  07D0  2FD2               	goto	l2611
  1956  07D1  2FC3               	goto	l2511
  1957  07D2                     l2611:	
  1958                           
  1959                           ; Switch size 1, requested type "simple"
  1960                           ; Number of cases is 7, Range of values is 1 to 7
  1961                           ; switch strategies available:
  1962                           ; Name         Instructions Cycles
  1963                           ; simple_byte           22    12 (average)
  1964                           ; direct_byte           32    11 (fixed)
  1965                           ; jumptable            263     9 (fixed)
  1966                           ;	Chosen strategy is simple_byte
  1967  07D2  0854               	movf	??_main,w
  1968  07D3  3A01               	xorlw	1	; case 1
  1969  07D4  1903               	skipnz
  1970  07D5  2FB5               	goto	l2497
  1971  07D6  3A03               	xorlw	3	; case 2
  1972  07D7  1903               	skipnz
  1973  07D8  2FB7               	goto	l2499
  1974  07D9  3A01               	xorlw	1	; case 3
  1975  07DA  1903               	skipnz
  1976  07DB  2FB9               	goto	l2501
  1977  07DC  3A07               	xorlw	7	; case 4
  1978  07DD  1903               	skipnz
  1979  07DE  2FBB               	goto	l2503
  1980  07DF  3A01               	xorlw	1	; case 5
  1981  07E0  1903               	skipnz
  1982  07E1  2FBD               	goto	l2505
  1983  07E2  3A03               	xorlw	3	; case 6
  1984  07E3  1903               	skipnz
  1985  07E4  2FBF               	goto	l2507
  1986  07E5  3A01               	xorlw	1	; case 7
  1987  07E6  1903               	skipnz
  1988  07E7  2FC1               	goto	l2509
  1989  07E8  2FC3               	goto	l2511
  1990  07E9                     l2517:	
  1991                           
  1992                           ;mainMaster.c: 240:             Lcd_Write_String(newday2);
  1993  07E9  082A               	movf	_newday2,w
  1994  07EA  00F5               	movwf	Lcd_Write_String@a
  1995  07EB  3000               	movlw	0
  1996  07EC  1D03               	btfss	3,2
  1997  07ED  3080               	movlw	128
  1998  07EE  00F6               	movwf	Lcd_Write_String@a+1
  1999  07EF  120A  158A  26E2  120A  118A  	fcall	_Lcd_Write_String
  2000  07F4  2CEA               	goto	l2325
  2001  07F5                     __end_of_main:	
  2002                           
  2003                           	psect	text1
  2004  0D79                     __ptext1:	
  2005 ;; *************** function _strcmp *****************
  2006 ;; Defined at:
  2007 ;;		line 33 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcmp.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  s1              1    wreg     PTR const unsigned char 
  2010 ;;		 -> temp(6), 
  2011 ;;  s2              1    0[COMMON] PTR const unsigned char 
  2012 ;;		 -> STR_9(6), 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  s1              1    6[COMMON] PTR const unsigned char 
  2015 ;;		 -> temp(6), 
  2016 ;;  r               1    5[COMMON] char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  2    0[COMMON] int 
  2019 ;; Registers used:
  2020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2026 ;;      Params:         2       0       0       0       0
  2027 ;;      Locals:         2       0       0       0       0
  2028 ;;      Temps:          3       0       0       0       0
  2029 ;;      Totals:         7       0       0       0       0
  2030 ;;Total ram usage:        7 bytes
  2031 ;; Hardware stack levels used:    2
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_main
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           
  2040                           ;psect for function _strcmp
  2041  0D79                     _strcmp:	
  2042                           
  2043                           ;incstack = 0
  2044                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+pclath]
  2045                           ;strcmp@s1 stored from wreg
  2046  0D79  00F6               	movwf	strcmp@s1
  2047  0D7A  2D88               	goto	l2299
  2048  0D7B                     l2301:	
  2049  0D7B  0876               	movf	strcmp@s1,w
  2050  0D7C  0084               	movwf	4
  2051  0D7D  0800               	movf	0,w
  2052  0D7E  1903               	btfsc	3,2
  2053  0D7F  2D9D               	goto	l2303
  2054  0D80  3001               	movlw	1
  2055  0D81  00F2               	movwf	??_strcmp
  2056  0D82  0872               	movf	??_strcmp,w
  2057  0D83  07F6               	addwf	strcmp@s1,f
  2058  0D84  3001               	movlw	1
  2059  0D85  00F2               	movwf	??_strcmp
  2060  0D86  0872               	movf	??_strcmp,w
  2061  0D87  07F0               	addwf	strcmp@s2,f
  2062  0D88                     l2299:	
  2063  0D88  0870               	movf	strcmp@s2,w
  2064  0D89  0084               	movwf	4
  2065  0D8A  120A  118A  200D  120A  158A  	fcall	stringdir
  2066  0D8F  00F2               	movwf	??_strcmp
  2067  0D90  0876               	movf	strcmp@s1,w
  2068  0D91  0084               	movwf	4
  2069  0D92  1383               	bcf	3,7	;select IRP bank0
  2070  0D93  0800               	movf	0,w
  2071  0D94  00F3               	movwf	??_strcmp+1
  2072  0D95  0872               	movf	??_strcmp,w
  2073  0D96  0273               	subwf	??_strcmp+1,w
  2074  0D97  00F4               	movwf	??_strcmp+2
  2075  0D98  0874               	movf	??_strcmp+2,w
  2076  0D99  00F5               	movwf	strcmp@r
  2077  0D9A  0875               	movf	strcmp@r,w
  2078  0D9B  1903               	btfsc	3,2
  2079  0D9C  2D7B               	goto	l2301
  2080  0D9D                     l2303:	
  2081  0D9D  0875               	movf	strcmp@r,w
  2082  0D9E  00F0               	movwf	?_strcmp
  2083  0D9F  01F1               	clrf	?_strcmp+1
  2084  0DA0  1BF0               	btfsc	?_strcmp,7
  2085  0DA1  03F1               	decf	?_strcmp+1,f
  2086  0DA2  0008               	return
  2087  0DA3                     __end_of_strcmp:	
  2088                           
  2089                           	psect	text2
  2090  0F1F                     __ptext2:	
  2091 ;; *************** function _setup *****************
  2092 ;; Defined at:
  2093 ;;		line 245 in file "mainMaster.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;		None
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      void 
  2100 ;; Registers used:
  2101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2107 ;;      Params:         0       0       0       0       0
  2108 ;;      Locals:         0       0       0       0       0
  2109 ;;      Temps:          0       0       0       0       0
  2110 ;;      Totals:         0       0       0       0       0
  2111 ;;Total ram usage:        0 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:    3
  2114 ;; This function calls:
  2115 ;;		_I2C_Master_Init
  2116 ;;		_Lcd_Init
  2117 ;;		_UART_Init
  2118 ;;		_initOscilador
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _setup
  2126  0F1F                     _setup:	
  2127                           
  2128                           ;mainMaster.c: 246:     initOscilador(7);
  2129                           
  2130                           ;incstack = 0
  2131                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2132  0F1F  3007               	movlw	7
  2133  0F20  120A  158A  27AB  120A  158A  	fcall	_initOscilador
  2134                           
  2135                           ;mainMaster.c: 247:     ANSELH = 0;
  2136  0F25  1683               	bsf	3,5	;RP0=1, select bank3
  2137  0F26  1703               	bsf	3,6	;RP1=1, select bank3
  2138  0F27  0189               	clrf	9	;volatile
  2139                           
  2140                           ;mainMaster.c: 248:     ANSEL = 0;
  2141  0F28  0188               	clrf	8	;volatile
  2142                           
  2143                           ;mainMaster.c: 249:     TRISB = 0;
  2144  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  2145  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  2146  0F2B  0186               	clrf	6	;volatile
  2147                           
  2148                           ;mainMaster.c: 250:     TRISA = 0;
  2149  0F2C  0185               	clrf	5	;volatile
  2150                           
  2151                           ;mainMaster.c: 251:     TRISD = 15;
  2152  0F2D  300F               	movlw	15
  2153  0F2E  0088               	movwf	8	;volatile
  2154                           
  2155                           ;mainMaster.c: 252:     PORTB = 0;
  2156  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0F30  1303               	bcf	3,6	;RP1=0, select bank0
  2158  0F31  0186               	clrf	6	;volatile
  2159                           
  2160                           ;mainMaster.c: 253:     PORTA = 0;
  2161  0F32  0185               	clrf	5	;volatile
  2162                           
  2163                           ;mainMaster.c: 254:     TRISC = 0x01;
  2164  0F33  3001               	movlw	1
  2165  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  2166  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  2167  0F36  0087               	movwf	7	;volatile
  2168                           
  2169                           ;mainMaster.c: 255:     PORTC = 0;
  2170  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  2172  0F39  0187               	clrf	7	;volatile
  2173                           
  2174                           ;mainMaster.c: 256:     i = 0;
  2175  0F3A  01A3               	clrf	_i
  2176                           
  2177                           ;mainMaster.c: 257:     door = 0;
  2178  0F3B  01A9               	clrf	_door
  2179                           
  2180                           ;mainMaster.c: 258:     trip = 0;
  2181  0F3C  01A8               	clrf	_trip
  2182                           
  2183                           ;mainMaster.c: 259:     IR = 0;
  2184  0F3D  01A6               	clrf	_IR
  2185                           
  2186                           ;mainMaster.c: 260:     PIR = 0;
  2187  0F3E  01A7               	clrf	_PIR
  2188                           
  2189                           ;mainMaster.c: 261:     Lcd_Init();
  2190  0F3F  120A  118A  20C3  120A  158A  	fcall	_Lcd_Init
  2191                           
  2192                           ;mainMaster.c: 262:     UART_Init(9600);
  2193  0F44  3000               	movlw	0
  2194  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  2195  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  2196  0F47  00C7               	movwf	UART_Init@baudrate+3
  2197  0F48  3000               	movlw	0
  2198  0F49  00C6               	movwf	UART_Init@baudrate+2
  2199  0F4A  3025               	movlw	37
  2200  0F4B  00C5               	movwf	UART_Init@baudrate+1
  2201  0F4C  3080               	movlw	128
  2202  0F4D  00C4               	movwf	UART_Init@baudrate
  2203  0F4E  120A  118A  232F  120A  158A  	fcall	_UART_Init
  2204                           
  2205                           ;mainMaster.c: 263:     I2C_Master_Init(100000);
  2206  0F53  3000               	movlw	0
  2207  0F54  1283               	bcf	3,5	;RP0=0, select bank0
  2208  0F55  1303               	bcf	3,6	;RP1=0, select bank0
  2209  0F56  00C1               	movwf	I2C_Master_Init@c+3
  2210  0F57  3001               	movlw	1
  2211  0F58  00C0               	movwf	I2C_Master_Init@c+2
  2212  0F59  3086               	movlw	134
  2213  0F5A  00BF               	movwf	I2C_Master_Init@c+1
  2214  0F5B  30A0               	movlw	160
  2215  0F5C  00BE               	movwf	I2C_Master_Init@c
  2216  0F5D  120A  158A  2637   	fcall	_I2C_Master_Init
  2217  0F60  0008               	return
  2218  0F61                     __end_of_setup:	
  2219                           
  2220                           	psect	text3
  2221  0FAB                     __ptext3:	
  2222 ;; *************** function _initOscilador *****************
  2223 ;; Defined at:
  2224 ;;		line 11 in file "./Oscilador.h"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  option          1    wreg     unsigned char 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  option          1    2[COMMON] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2238 ;;      Params:         0       0       0       0       0
  2239 ;;      Locals:         1       0       0       0       0
  2240 ;;      Temps:          2       0       0       0       0
  2241 ;;      Totals:         3       0       0       0       0
  2242 ;;Total ram usage:        3 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_setup
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           
  2252                           ;psect for function _initOscilador
  2253  0FAB                     _initOscilador:	
  2254                           
  2255                           ;incstack = 0
  2256                           ; Regs used in _initOscilador: [wreg-fsr0h+status,2+status,0]
  2257                           ;initOscilador@option stored from wreg
  2258  0FAB  00F2               	movwf	initOscilador@option
  2259                           
  2260                           ;./Oscilador.h: 13: 
  2261  0FAC  2FDC               	goto	l2039
  2262  0FAD                     l2019:	
  2263                           
  2264                           ;./Oscilador.h: 16:         case 3:
  2265  0FAD  308F               	movlw	-113
  2266  0FAE  1683               	bsf	3,5	;RP0=1, select bank1
  2267  0FAF  1303               	bcf	3,6	;RP1=0, select bank1
  2268  0FB0  058F               	andwf	15,f	;volatile
  2269                           
  2270                           ;./Oscilador.h: 17: 
  2271  0FB1  2FFE               	goto	l181
  2272  0FB2                     l2021:	
  2273                           
  2274                           ;./Oscilador.h: 20:         case 4:
  2275  0FB2  1683               	bsf	3,5	;RP0=1, select bank1
  2276  0FB3  1303               	bcf	3,6	;RP1=0, select bank1
  2277  0FB4  080F               	movf	15,w	;volatile
  2278  0FB5  398F               	andlw	-113
  2279  0FB6  3810               	iorlw	16
  2280  0FB7  2FD5               	goto	L21
  2281  0FB8                     l2023:	
  2282                           ;./Oscilador.h: 21: 
  2283                           
  2284                           
  2285                           ;./Oscilador.h: 24:         case 5:
  2286  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  2287  0FB9  1303               	bcf	3,6	;RP1=0, select bank1
  2288  0FBA  080F               	movf	15,w	;volatile
  2289  0FBB  398F               	andlw	-113
  2290  0FBC  3820               	iorlw	32
  2291  0FBD  2FD5               	goto	L21
  2292  0FBE                     l2025:	
  2293                           ;./Oscilador.h: 25: 
  2294                           
  2295                           
  2296                           ;./Oscilador.h: 28:         case 6:
  2297  0FBE  1683               	bsf	3,5	;RP0=1, select bank1
  2298  0FBF  1303               	bcf	3,6	;RP1=0, select bank1
  2299  0FC0  080F               	movf	15,w	;volatile
  2300  0FC1  398F               	andlw	-113
  2301  0FC2  3830               	iorlw	48
  2302  0FC3  2FD5               	goto	L21
  2303  0FC4                     l2027:	
  2304                           ;./Oscilador.h: 29: 
  2305                           
  2306                           
  2307                           ;./Oscilador.h: 32:         case 7:
  2308  0FC4  1683               	bsf	3,5	;RP0=1, select bank1
  2309  0FC5  1303               	bcf	3,6	;RP1=0, select bank1
  2310  0FC6  080F               	movf	15,w	;volatile
  2311  0FC7  398F               	andlw	-113
  2312  0FC8  3840               	iorlw	64
  2313  0FC9  2FD5               	goto	L21
  2314  0FCA                     l2029:	
  2315                           ;./Oscilador.h: 33: 
  2316                           
  2317                           
  2318                           ;./Oscilador.h: 36:         default:
  2319  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  2320  0FCB  1303               	bcf	3,6	;RP1=0, select bank1
  2321  0FCC  080F               	movf	15,w	;volatile
  2322  0FCD  398F               	andlw	-113
  2323  0FCE  3850               	iorlw	80
  2324  0FCF  2FD5               	goto	L21
  2325  0FD0                     l2031:	
  2326                           ;./Oscilador.h: 37: 
  2327                           
  2328                           
  2329                           ;./Oscilador.h: 40:     }
  2330  0FD0  1683               	bsf	3,5	;RP0=1, select bank1
  2331  0FD1  1303               	bcf	3,6	;RP1=0, select bank1
  2332  0FD2  080F               	movf	15,w	;volatile
  2333  0FD3  398F               	andlw	-113
  2334  0FD4  3860               	iorlw	96
  2335  0FD5                     L21:	
  2336  0FD5  008F               	movwf	15	;volatile
  2337                           
  2338                           ;./Oscilador.h: 41:     OSCCONbits.SCS = 1;
  2339  0FD6  2FFE               	goto	l181
  2340  0FD7                     l2033:	
  2341  0FD7                     l2035:	
  2342  0FD7  3070               	movlw	112
  2343  0FD8  1683               	bsf	3,5	;RP0=1, select bank1
  2344  0FD9  1303               	bcf	3,6	;RP1=0, select bank1
  2345  0FDA  048F               	iorwf	15,f	;volatile
  2346  0FDB  2FFE               	goto	l181
  2347  0FDC                     l2039:	
  2348  0FDC  0872               	movf	initOscilador@option,w
  2349  0FDD  00F0               	movwf	??_initOscilador
  2350  0FDE  01F1               	clrf	??_initOscilador+1
  2351                           
  2352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2353                           ; Switch size 1, requested type "simple"
  2354                           ; Number of cases is 1, Range of values is 0 to 0
  2355                           ; switch strategies available:
  2356                           ; Name         Instructions Cycles
  2357                           ; simple_byte            4     3 (average)
  2358                           ; direct_byte           11     8 (fixed)
  2359                           ; jumptable            260     6 (fixed)
  2360                           ;	Chosen strategy is simple_byte
  2361  0FDF  0871               	movf	??_initOscilador+1,w
  2362  0FE0  3A00               	xorlw	0	; case 0
  2363  0FE1  1903               	skipnz
  2364  0FE2  2FE4               	goto	l2613
  2365  0FE3  2FD7               	goto	l2035
  2366  0FE4                     l2613:	
  2367                           
  2368                           ; Switch size 1, requested type "simple"
  2369                           ; Number of cases is 8, Range of values is 0 to 7
  2370                           ; switch strategies available:
  2371                           ; Name         Instructions Cycles
  2372                           ; simple_byte           25    13 (average)
  2373                           ; direct_byte           32     8 (fixed)
  2374                           ; jumptable            260     6 (fixed)
  2375                           ;	Chosen strategy is simple_byte
  2376  0FE4  0870               	movf	??_initOscilador,w
  2377  0FE5  3A00               	xorlw	0	; case 0
  2378  0FE6  1903               	skipnz
  2379  0FE7  2FAD               	goto	l2019
  2380  0FE8  3A01               	xorlw	1	; case 1
  2381  0FE9  1903               	skipnz
  2382  0FEA  2FB2               	goto	l2021
  2383  0FEB  3A03               	xorlw	3	; case 2
  2384  0FEC  1903               	skipnz
  2385  0FED  2FB8               	goto	l2023
  2386  0FEE  3A01               	xorlw	1	; case 3
  2387  0FEF  1903               	skipnz
  2388  0FF0  2FBE               	goto	l2025
  2389  0FF1  3A07               	xorlw	7	; case 4
  2390  0FF2  1903               	skipnz
  2391  0FF3  2FC4               	goto	l2027
  2392  0FF4  3A01               	xorlw	1	; case 5
  2393  0FF5  1903               	skipnz
  2394  0FF6  2FCA               	goto	l2029
  2395  0FF7  3A03               	xorlw	3	; case 6
  2396  0FF8  1903               	skipnz
  2397  0FF9  2FD0               	goto	l2031
  2398  0FFA  3A01               	xorlw	1	; case 7
  2399  0FFB  1903               	skipnz
  2400  0FFC  2FD7               	goto	l2033
  2401  0FFD  2FD7               	goto	l2035
  2402  0FFE                     l181:	
  2403  0FFE  140F               	bsf	15,0	;volatile
  2404  0FFF  0008               	return
  2405  1000                     __end_of_initOscilador:	
  2406                           
  2407                           	psect	text4
  2408  032F                     __ptext4:	
  2409 ;; *************** function _UART_Init *****************
  2410 ;; Defined at:
  2411 ;;		line 8 in file "./UART.h"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  baudrate        4    6[BANK0 ] const long 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  x               2    9[COMMON] unsigned int 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      unsigned char 
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0, pclath, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2425 ;;      Params:         0       4       0       0       0
  2426 ;;      Locals:         2       0       0       0       0
  2427 ;;      Temps:          0      12       0       0       0
  2428 ;;      Totals:         2      16       0       0       0
  2429 ;;Total ram usage:       18 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:    1
  2432 ;; This function calls:
  2433 ;;		___aldiv
  2434 ;; This function is called by:
  2435 ;;		_setup
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           
  2440                           ;psect for function _UART_Init
  2441  032F                     _UART_Init:	
  2442                           
  2443                           ;./UART.h: 8: char UART_Init(const long int baudrate);./UART.h: 9: {;./UART.h: 10:  unsi
      +                          gned int x;;./UART.h: 11:  x = (8000000 - baudrate*64)/(baudrate*64);
  2444                           
  2445                           ;incstack = 0
  2446                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  2447  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2448  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2449  0331  0844               	movf	UART_Init@baudrate,w
  2450  0332  00C8               	movwf	??_UART_Init
  2451  0333  0845               	movf	UART_Init@baudrate+1,w
  2452  0334  00C9               	movwf	??_UART_Init+1
  2453  0335  0846               	movf	UART_Init@baudrate+2,w
  2454  0336  00CA               	movwf	??_UART_Init+2
  2455  0337  0847               	movf	UART_Init@baudrate+3,w
  2456  0338  00CB               	movwf	??_UART_Init+3
  2457  0339  3006               	movlw	6
  2458  033A                     u1305:	
  2459  033A  1003               	clrc
  2460  033B  0DC8               	rlf	??_UART_Init,f
  2461  033C  0DC9               	rlf	??_UART_Init+1,f
  2462  033D  0DCA               	rlf	??_UART_Init+2,f
  2463  033E  0DCB               	rlf	??_UART_Init+3,f
  2464  033F  3EFF               	addlw	-1
  2465  0340  1D03               	skipz
  2466  0341  2B3A               	goto	u1305
  2467  0342  084B               	movf	??_UART_Init+3,w
  2468  0343  00F3               	movwf	___aldiv@divisor+3
  2469  0344  084A               	movf	??_UART_Init+2,w
  2470  0345  00F2               	movwf	___aldiv@divisor+2
  2471  0346  0849               	movf	??_UART_Init+1,w
  2472  0347  00F1               	movwf	___aldiv@divisor+1
  2473  0348  0848               	movf	??_UART_Init,w
  2474  0349  00F0               	movwf	___aldiv@divisor
  2475  034A  0844               	movf	UART_Init@baudrate,w
  2476  034B  00CC               	movwf	??_UART_Init+4
  2477  034C  0845               	movf	UART_Init@baudrate+1,w
  2478  034D  00CD               	movwf	??_UART_Init+5
  2479  034E  0846               	movf	UART_Init@baudrate+2,w
  2480  034F  00CE               	movwf	??_UART_Init+6
  2481  0350  0847               	movf	UART_Init@baudrate+3,w
  2482  0351  00CF               	movwf	??_UART_Init+7
  2483  0352  3006               	movlw	6
  2484  0353                     u1315:	
  2485  0353  1003               	clrc
  2486  0354  0DCC               	rlf	??_UART_Init+4,f
  2487  0355  0DCD               	rlf	??_UART_Init+5,f
  2488  0356  0DCE               	rlf	??_UART_Init+6,f
  2489  0357  0DCF               	rlf	??_UART_Init+7,f
  2490  0358  3EFF               	addlw	-1
  2491  0359  1D03               	skipz
  2492  035A  2B53               	goto	u1315
  2493  035B  3000               	movlw	0
  2494  035C  00D0               	movwf	??_UART_Init+8
  2495  035D  3012               	movlw	18
  2496  035E  00D1               	movwf	??_UART_Init+9
  2497  035F  307A               	movlw	122
  2498  0360  00D2               	movwf	??_UART_Init+10
  2499  0361  3000               	movlw	0
  2500  0362  00D3               	movwf	??_UART_Init+11
  2501  0363  084C               	movf	??_UART_Init+4,w
  2502  0364  02D0               	subwf	??_UART_Init+8,f
  2503  0365  084D               	movf	??_UART_Init+5,w
  2504  0366  1C03               	skipc
  2505  0367  0F4D               	incfsz	??_UART_Init+5,w
  2506  0368  2B6A               	goto	u1321
  2507  0369  2B6B               	goto	u1322
  2508  036A                     u1321:	
  2509  036A  02D1               	subwf	??_UART_Init+9,f
  2510  036B                     u1322:	
  2511  036B  084E               	movf	??_UART_Init+6,w
  2512  036C  1C03               	skipc
  2513  036D  0F4E               	incfsz	??_UART_Init+6,w
  2514  036E  2B70               	goto	u1323
  2515  036F  2B71               	goto	u1324
  2516  0370                     u1323:	
  2517  0370  02D2               	subwf	??_UART_Init+10,f
  2518  0371                     u1324:	
  2519  0371  084F               	movf	??_UART_Init+7,w
  2520  0372  1C03               	skipc
  2521  0373  0F4F               	incfsz	??_UART_Init+7,w
  2522  0374  2B76               	goto	u1325
  2523  0375  2B77               	goto	u1326
  2524  0376                     u1325:	
  2525  0376  02D3               	subwf	??_UART_Init+11,f
  2526  0377                     u1326:	
  2527  0377  0853               	movf	??_UART_Init+11,w
  2528  0378  00F7               	movwf	___aldiv@dividend+3
  2529  0379  0852               	movf	??_UART_Init+10,w
  2530  037A  00F6               	movwf	___aldiv@dividend+2
  2531  037B  0851               	movf	??_UART_Init+9,w
  2532  037C  00F5               	movwf	___aldiv@dividend+1
  2533  037D  0850               	movf	??_UART_Init+8,w
  2534  037E  00F4               	movwf	___aldiv@dividend
  2535  037F  120A  118A  21FD  120A  118A  	fcall	___aldiv
  2536  0384  0871               	movf	?___aldiv+1,w
  2537  0385  00FA               	movwf	UART_Init@x+1
  2538  0386  0870               	movf	?___aldiv,w
  2539  0387  00F9               	movwf	UART_Init@x
  2540                           
  2541                           ;./UART.h: 12:  if(x>255)
  2542  0388  3001               	movlw	1
  2543  0389  027A               	subwf	UART_Init@x+1,w
  2544  038A  3000               	movlw	0
  2545  038B  1903               	skipnz
  2546  038C  0279               	subwf	UART_Init@x,w
  2547  038D  1C03               	skipc
  2548  038E  2BEB               	goto	l2053
  2549                           
  2550                           ;./UART.h: 13:  {;./UART.h: 14:   x = (8000000 - baudrate*16)/(baudrate*16);
  2551  038F  1283               	bcf	3,5	;RP0=0, select bank0
  2552  0390  1303               	bcf	3,6	;RP1=0, select bank0
  2553  0391  0844               	movf	UART_Init@baudrate,w
  2554  0392  00C8               	movwf	??_UART_Init
  2555  0393  0845               	movf	UART_Init@baudrate+1,w
  2556  0394  00C9               	movwf	??_UART_Init+1
  2557  0395  0846               	movf	UART_Init@baudrate+2,w
  2558  0396  00CA               	movwf	??_UART_Init+2
  2559  0397  0847               	movf	UART_Init@baudrate+3,w
  2560  0398  00CB               	movwf	??_UART_Init+3
  2561  0399  3004               	movlw	4
  2562  039A                     u1345:	
  2563  039A  1003               	clrc
  2564  039B  0DC8               	rlf	??_UART_Init,f
  2565  039C  0DC9               	rlf	??_UART_Init+1,f
  2566  039D  0DCA               	rlf	??_UART_Init+2,f
  2567  039E  0DCB               	rlf	??_UART_Init+3,f
  2568  039F  3EFF               	addlw	-1
  2569  03A0  1D03               	skipz
  2570  03A1  2B9A               	goto	u1345
  2571  03A2  084B               	movf	??_UART_Init+3,w
  2572  03A3  00F3               	movwf	___aldiv@divisor+3
  2573  03A4  084A               	movf	??_UART_Init+2,w
  2574  03A5  00F2               	movwf	___aldiv@divisor+2
  2575  03A6  0849               	movf	??_UART_Init+1,w
  2576  03A7  00F1               	movwf	___aldiv@divisor+1
  2577  03A8  0848               	movf	??_UART_Init,w
  2578  03A9  00F0               	movwf	___aldiv@divisor
  2579  03AA  0844               	movf	UART_Init@baudrate,w
  2580  03AB  00CC               	movwf	??_UART_Init+4
  2581  03AC  0845               	movf	UART_Init@baudrate+1,w
  2582  03AD  00CD               	movwf	??_UART_Init+5
  2583  03AE  0846               	movf	UART_Init@baudrate+2,w
  2584  03AF  00CE               	movwf	??_UART_Init+6
  2585  03B0  0847               	movf	UART_Init@baudrate+3,w
  2586  03B1  00CF               	movwf	??_UART_Init+7
  2587  03B2  3004               	movlw	4
  2588  03B3                     u1355:	
  2589  03B3  1003               	clrc
  2590  03B4  0DCC               	rlf	??_UART_Init+4,f
  2591  03B5  0DCD               	rlf	??_UART_Init+5,f
  2592  03B6  0DCE               	rlf	??_UART_Init+6,f
  2593  03B7  0DCF               	rlf	??_UART_Init+7,f
  2594  03B8  3EFF               	addlw	-1
  2595  03B9  1D03               	skipz
  2596  03BA  2BB3               	goto	u1355
  2597  03BB  3000               	movlw	0
  2598  03BC  00D0               	movwf	??_UART_Init+8
  2599  03BD  3012               	movlw	18
  2600  03BE  00D1               	movwf	??_UART_Init+9
  2601  03BF  307A               	movlw	122
  2602  03C0  00D2               	movwf	??_UART_Init+10
  2603  03C1  3000               	movlw	0
  2604  03C2  00D3               	movwf	??_UART_Init+11
  2605  03C3  084C               	movf	??_UART_Init+4,w
  2606  03C4  02D0               	subwf	??_UART_Init+8,f
  2607  03C5  084D               	movf	??_UART_Init+5,w
  2608  03C6  1C03               	skipc
  2609  03C7  0F4D               	incfsz	??_UART_Init+5,w
  2610  03C8  2BCA               	goto	u1361
  2611  03C9  2BCB               	goto	u1362
  2612  03CA                     u1361:	
  2613  03CA  02D1               	subwf	??_UART_Init+9,f
  2614  03CB                     u1362:	
  2615  03CB  084E               	movf	??_UART_Init+6,w
  2616  03CC  1C03               	skipc
  2617  03CD  0F4E               	incfsz	??_UART_Init+6,w
  2618  03CE  2BD0               	goto	u1363
  2619  03CF  2BD1               	goto	u1364
  2620  03D0                     u1363:	
  2621  03D0  02D2               	subwf	??_UART_Init+10,f
  2622  03D1                     u1364:	
  2623  03D1  084F               	movf	??_UART_Init+7,w
  2624  03D2  1C03               	skipc
  2625  03D3  0F4F               	incfsz	??_UART_Init+7,w
  2626  03D4  2BD6               	goto	u1365
  2627  03D5  2BD7               	goto	u1366
  2628  03D6                     u1365:	
  2629  03D6  02D3               	subwf	??_UART_Init+11,f
  2630  03D7                     u1366:	
  2631  03D7  0853               	movf	??_UART_Init+11,w
  2632  03D8  00F7               	movwf	___aldiv@dividend+3
  2633  03D9  0852               	movf	??_UART_Init+10,w
  2634  03DA  00F6               	movwf	___aldiv@dividend+2
  2635  03DB  0851               	movf	??_UART_Init+9,w
  2636  03DC  00F5               	movwf	___aldiv@dividend+1
  2637  03DD  0850               	movf	??_UART_Init+8,w
  2638  03DE  00F4               	movwf	___aldiv@dividend
  2639  03DF  120A  118A  21FD  120A  118A  	fcall	___aldiv
  2640  03E4  0871               	movf	?___aldiv+1,w
  2641  03E5  00FA               	movwf	UART_Init@x+1
  2642  03E6  0870               	movf	?___aldiv,w
  2643  03E7  00F9               	movwf	UART_Init@x
  2644                           
  2645                           ;./UART.h: 15:   BRGH = 1;
  2646  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2647  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  2648  03EA  1518               	bsf	24,2	;volatile
  2649  03EB                     l2053:	
  2650                           
  2651                           ;./UART.h: 17:  if(x<256)
  2652  03EB  3001               	movlw	1
  2653  03EC  027A               	subwf	UART_Init@x+1,w
  2654  03ED  3000               	movlw	0
  2655  03EE  1903               	skipnz
  2656  03EF  0279               	subwf	UART_Init@x,w
  2657  03F0  1803               	skipnc
  2658  03F1  0008               	return
  2659                           
  2660                           ;./UART.h: 18:  {;./UART.h: 19:    SPBRG = x;
  2661  03F2  0879               	movf	UART_Init@x,w
  2662  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2663  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  2664  03F5  0099               	movwf	25	;volatile
  2665                           
  2666                           ;./UART.h: 20:    SYNC = 0;
  2667  03F6  1218               	bcf	24,4	;volatile
  2668                           
  2669                           ;./UART.h: 21:    SPEN = 1;
  2670  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2671  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  2672  03F9  1798               	bsf	24,7	;volatile
  2673                           
  2674                           ;./UART.h: 22:           TRISC7 = 1;
  2675  03FA  1683               	bsf	3,5	;RP0=1, select bank1
  2676  03FB  1303               	bcf	3,6	;RP1=0, select bank1
  2677  03FC  1787               	bsf	7,7	;volatile
  2678                           
  2679                           ;./UART.h: 23:           TRISC6 = 1;
  2680  03FD  1707               	bsf	7,6	;volatile
  2681                           
  2682                           ;./UART.h: 24:           CREN = 1;
  2683  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2684  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2685  0400  1618               	bsf	24,4	;volatile
  2686                           
  2687                           ;./UART.h: 25:           TXEN = 1;
  2688  0401  1683               	bsf	3,5	;RP0=1, select bank1
  2689  0402  1303               	bcf	3,6	;RP1=0, select bank1
  2690  0403  1698               	bsf	24,5	;volatile
  2691  0404  0008               	return
  2692  0405                     __end_of_UART_Init:	
  2693                           
  2694                           	psect	text5
  2695  01FD                     __ptext5:	
  2696 ;; *************** function ___aldiv *****************
  2697 ;; Defined at:
  2698 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\aldiv.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;  divisor         4    0[COMMON] long 
  2701 ;;  dividend        4    4[COMMON] long 
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;  quotient        4    2[BANK0 ] long 
  2704 ;;  sign            1    1[BANK0 ] unsigned char 
  2705 ;;  counter         1    0[BANK0 ] unsigned char 
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  4    0[COMMON] long 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2715 ;;      Params:         8       0       0       0       0
  2716 ;;      Locals:         0       6       0       0       0
  2717 ;;      Temps:          1       0       0       0       0
  2718 ;;      Totals:         9       6       0       0       0
  2719 ;;Total ram usage:       15 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_UART_Init
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           
  2729                           ;psect for function ___aldiv
  2730  01FD                     ___aldiv:	
  2731                           
  2732                           ;incstack = 0
  2733                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2734  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  2735  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  2736  01FF  01BF               	clrf	___aldiv@sign
  2737  0200  1FF3               	btfss	___aldiv@divisor+3,7
  2738  0201  2A0F               	goto	l517
  2739  0202  09F0               	comf	___aldiv@divisor,f
  2740  0203  09F1               	comf	___aldiv@divisor+1,f
  2741  0204  09F2               	comf	___aldiv@divisor+2,f
  2742  0205  09F3               	comf	___aldiv@divisor+3,f
  2743  0206  0AF0               	incf	___aldiv@divisor,f
  2744  0207  1903               	skipnz
  2745  0208  0AF1               	incf	___aldiv@divisor+1,f
  2746  0209  1903               	skipnz
  2747  020A  0AF2               	incf	___aldiv@divisor+2,f
  2748  020B  1903               	skipnz
  2749  020C  0AF3               	incf	___aldiv@divisor+3,f
  2750  020D  01BF               	clrf	___aldiv@sign
  2751  020E  0ABF               	incf	___aldiv@sign,f
  2752  020F                     l517:	
  2753  020F  1FF7               	btfss	___aldiv@dividend+3,7
  2754  0210  2A20               	goto	l1865
  2755  0211  09F4               	comf	___aldiv@dividend,f
  2756  0212  09F5               	comf	___aldiv@dividend+1,f
  2757  0213  09F6               	comf	___aldiv@dividend+2,f
  2758  0214  09F7               	comf	___aldiv@dividend+3,f
  2759  0215  0AF4               	incf	___aldiv@dividend,f
  2760  0216  1903               	skipnz
  2761  0217  0AF5               	incf	___aldiv@dividend+1,f
  2762  0218  1903               	skipnz
  2763  0219  0AF6               	incf	___aldiv@dividend+2,f
  2764  021A  1903               	skipnz
  2765  021B  0AF7               	incf	___aldiv@dividend+3,f
  2766  021C  3001               	movlw	1
  2767  021D  00F8               	movwf	??___aldiv
  2768  021E  0878               	movf	??___aldiv,w
  2769  021F  06BF               	xorwf	___aldiv@sign,f
  2770  0220                     l1865:	
  2771  0220  3000               	movlw	0
  2772  0221  00C3               	movwf	___aldiv@quotient+3
  2773  0222  3000               	movlw	0
  2774  0223  00C2               	movwf	___aldiv@quotient+2
  2775  0224  3000               	movlw	0
  2776  0225  00C1               	movwf	___aldiv@quotient+1
  2777  0226  3000               	movlw	0
  2778  0227  00C0               	movwf	___aldiv@quotient
  2779  0228  0873               	movf	___aldiv@divisor+3,w
  2780  0229  0472               	iorwf	___aldiv@divisor+2,w
  2781  022A  0471               	iorwf	___aldiv@divisor+1,w
  2782  022B  0470               	iorwf	___aldiv@divisor,w
  2783  022C  1903               	skipnz
  2784  022D  2A75               	goto	l1887
  2785  022E  01BE               	clrf	___aldiv@counter
  2786  022F  0ABE               	incf	___aldiv@counter,f
  2787  0230                     l1873:	
  2788  0230  1BF3               	btfsc	___aldiv@divisor+3,7
  2789  0231  2A40               	goto	l1875
  2790  0232  3001               	movlw	1
  2791  0233  00F8               	movwf	??___aldiv
  2792  0234                     u1075:	
  2793  0234  1003               	clrc
  2794  0235  0DF0               	rlf	___aldiv@divisor,f
  2795  0236  0DF1               	rlf	___aldiv@divisor+1,f
  2796  0237  0DF2               	rlf	___aldiv@divisor+2,f
  2797  0238  0DF3               	rlf	___aldiv@divisor+3,f
  2798  0239  0BF8               	decfsz	??___aldiv,f
  2799  023A  2A34               	goto	u1075
  2800  023B  3001               	movlw	1
  2801  023C  00F8               	movwf	??___aldiv
  2802  023D  0878               	movf	??___aldiv,w
  2803  023E  07BE               	addwf	___aldiv@counter,f
  2804  023F  2A30               	goto	l1873
  2805  0240                     l1875:	
  2806  0240  3001               	movlw	1
  2807  0241  00F8               	movwf	??___aldiv
  2808  0242                     u1095:	
  2809  0242  1003               	clrc
  2810  0243  0DC0               	rlf	___aldiv@quotient,f
  2811  0244  0DC1               	rlf	___aldiv@quotient+1,f
  2812  0245  0DC2               	rlf	___aldiv@quotient+2,f
  2813  0246  0DC3               	rlf	___aldiv@quotient+3,f
  2814  0247  0BF8               	decfsz	??___aldiv,f
  2815  0248  2A42               	goto	u1095
  2816  0249  0873               	movf	___aldiv@divisor+3,w
  2817  024A  0277               	subwf	___aldiv@dividend+3,w
  2818  024B  1D03               	skipz
  2819  024C  2A57               	goto	u1105
  2820  024D  0872               	movf	___aldiv@divisor+2,w
  2821  024E  0276               	subwf	___aldiv@dividend+2,w
  2822  024F  1D03               	skipz
  2823  0250  2A57               	goto	u1105
  2824  0251  0871               	movf	___aldiv@divisor+1,w
  2825  0252  0275               	subwf	___aldiv@dividend+1,w
  2826  0253  1D03               	skipz
  2827  0254  2A57               	goto	u1105
  2828  0255  0870               	movf	___aldiv@divisor,w
  2829  0256  0274               	subwf	___aldiv@dividend,w
  2830  0257                     u1105:	
  2831  0257  1C03               	skipc
  2832  0258  2A68               	goto	l1883
  2833  0259  0870               	movf	___aldiv@divisor,w
  2834  025A  02F4               	subwf	___aldiv@dividend,f
  2835  025B  0871               	movf	___aldiv@divisor+1,w
  2836  025C  1C03               	skipc
  2837  025D  0F71               	incfsz	___aldiv@divisor+1,w
  2838  025E  02F5               	subwf	___aldiv@dividend+1,f
  2839  025F  0872               	movf	___aldiv@divisor+2,w
  2840  0260  1C03               	skipc
  2841  0261  0F72               	incfsz	___aldiv@divisor+2,w
  2842  0262  02F6               	subwf	___aldiv@dividend+2,f
  2843  0263  0873               	movf	___aldiv@divisor+3,w
  2844  0264  1C03               	skipc
  2845  0265  0F73               	incfsz	___aldiv@divisor+3,w
  2846  0266  02F7               	subwf	___aldiv@dividend+3,f
  2847  0267  1440               	bsf	___aldiv@quotient,0
  2848  0268                     l1883:	
  2849  0268  3001               	movlw	1
  2850  0269                     u1115:	
  2851  0269  1003               	clrc
  2852  026A  0CF3               	rrf	___aldiv@divisor+3,f
  2853  026B  0CF2               	rrf	___aldiv@divisor+2,f
  2854  026C  0CF1               	rrf	___aldiv@divisor+1,f
  2855  026D  0CF0               	rrf	___aldiv@divisor,f
  2856  026E  3EFF               	addlw	-1
  2857  026F  1D03               	skipz
  2858  0270  2A69               	goto	u1115
  2859  0271  3001               	movlw	1
  2860  0272  02BE               	subwf	___aldiv@counter,f
  2861  0273  1D03               	btfss	3,2
  2862  0274  2A40               	goto	l1875
  2863  0275                     l1887:	
  2864  0275  083F               	movf	___aldiv@sign,w
  2865  0276  1903               	btfsc	3,2
  2866  0277  2A83               	goto	l1891
  2867  0278  09C0               	comf	___aldiv@quotient,f
  2868  0279  09C1               	comf	___aldiv@quotient+1,f
  2869  027A  09C2               	comf	___aldiv@quotient+2,f
  2870  027B  09C3               	comf	___aldiv@quotient+3,f
  2871  027C  0AC0               	incf	___aldiv@quotient,f
  2872  027D  1903               	skipnz
  2873  027E  0AC1               	incf	___aldiv@quotient+1,f
  2874  027F  1903               	skipnz
  2875  0280  0AC2               	incf	___aldiv@quotient+2,f
  2876  0281  1903               	skipnz
  2877  0282  0AC3               	incf	___aldiv@quotient+3,f
  2878  0283                     l1891:	
  2879  0283  0843               	movf	___aldiv@quotient+3,w
  2880  0284  00F3               	movwf	?___aldiv+3
  2881  0285  0842               	movf	___aldiv@quotient+2,w
  2882  0286  00F2               	movwf	?___aldiv+2
  2883  0287  0841               	movf	___aldiv@quotient+1,w
  2884  0288  00F1               	movwf	?___aldiv+1
  2885  0289  0840               	movf	___aldiv@quotient,w
  2886  028A  00F0               	movwf	?___aldiv
  2887  028B  0008               	return
  2888  028C                     __end_of___aldiv:	
  2889                           
  2890                           	psect	text6
  2891  00C3                     __ptext6:	
  2892 ;; *************** function _Lcd_Init *****************
  2893 ;; Defined at:
  2894 ;;		line 65 in file "./LCD4bits.h"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;		None
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;		None
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg, status,2, status,0, pclath, cstack
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2908 ;;      Params:         0       0       0       0       0
  2909 ;;      Locals:         0       0       0       0       0
  2910 ;;      Temps:          2       0       0       0       0
  2911 ;;      Totals:         2       0       0       0       0
  2912 ;;Total ram usage:        2 bytes
  2913 ;; Hardware stack levels used:    1
  2914 ;; Hardware stack levels required when called:    2
  2915 ;; This function calls:
  2916 ;;		_Lcd_Cmd
  2917 ;;		_Lcd_Port
  2918 ;; This function is called by:
  2919 ;;		_setup
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           
  2924                           ;psect for function _Lcd_Init
  2925  00C3                     _Lcd_Init:	
  2926                           
  2927                           ;./LCD4bits.h: 67:   Lcd_Port(0x00);
  2928                           
  2929                           ;incstack = 0
  2930                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2931  00C3  3000               	movlw	0
  2932  00C4  120A  158A  24A5  120A  118A  	fcall	_Lcd_Port
  2933                           
  2934                           ;./LCD4bits.h: 68:    _delay((unsigned long)((20)*(8000000/4000.0)));
  2935  00C9  3034               	movlw	52
  2936  00CA  00F5               	movwf	??_Lcd_Init+1
  2937  00CB  30F1               	movlw	241
  2938  00CC  00F4               	movwf	??_Lcd_Init
  2939  00CD                     u1937:	
  2940  00CD  0BF4               	decfsz	??_Lcd_Init,f
  2941  00CE  28CD               	goto	u1937
  2942  00CF  0BF5               	decfsz	??_Lcd_Init+1,f
  2943  00D0  28CD               	goto	u1937
  2944  00D1  28D2               	nop2
  2945                           
  2946                           ;./LCD4bits.h: 69:   Lcd_Cmd(0x03);
  2947  00D2  3003               	movlw	3
  2948  00D3  120A  158A  24BF  120A  118A  	fcall	_Lcd_Cmd
  2949                           
  2950                           ;./LCD4bits.h: 70:  _delay((unsigned long)((5)*(8000000/4000.0)));
  2951  00D8  300D               	movlw	13
  2952  00D9  00F5               	movwf	??_Lcd_Init+1
  2953  00DA  30FB               	movlw	251
  2954  00DB  00F4               	movwf	??_Lcd_Init
  2955  00DC                     u1947:	
  2956  00DC  0BF4               	decfsz	??_Lcd_Init,f
  2957  00DD  28DC               	goto	u1947
  2958  00DE  0BF5               	decfsz	??_Lcd_Init+1,f
  2959  00DF  28DC               	goto	u1947
  2960  00E0  28E1               	nop2
  2961                           
  2962                           ;./LCD4bits.h: 71:   Lcd_Cmd(0x03);
  2963  00E1  3003               	movlw	3
  2964  00E2  120A  158A  24BF  120A  118A  	fcall	_Lcd_Cmd
  2965                           
  2966                           ;./LCD4bits.h: 72:  _delay((unsigned long)((11)*(8000000/4000.0)));
  2967  00E7  301D               	movlw	29
  2968  00E8  00F5               	movwf	??_Lcd_Init+1
  2969  00E9  3091               	movlw	145
  2970  00EA  00F4               	movwf	??_Lcd_Init
  2971  00EB                     u1957:	
  2972  00EB  0BF4               	decfsz	??_Lcd_Init,f
  2973  00EC  28EB               	goto	u1957
  2974  00ED  0BF5               	decfsz	??_Lcd_Init+1,f
  2975  00EE  28EB               	goto	u1957
  2976                           
  2977                           ;./LCD4bits.h: 73:   Lcd_Cmd(0x03);
  2978  00EF  3003               	movlw	3
  2979  00F0  120A  158A  24BF  120A  118A  	fcall	_Lcd_Cmd
  2980                           
  2981                           ;./LCD4bits.h: 75:   Lcd_Cmd(0x02);
  2982  00F5  3002               	movlw	2
  2983  00F6  120A  158A  24BF  120A  118A  	fcall	_Lcd_Cmd
  2984                           
  2985                           ;./LCD4bits.h: 76:   Lcd_Cmd(0x02);
  2986  00FB  3002               	movlw	2
  2987  00FC  120A  158A  24BF  120A  118A  	fcall	_Lcd_Cmd
  2988                           
  2989                           ;./LCD4bits.h: 77:   Lcd_Cmd(0x08);
  2990  0101  3008               	movlw	8
  2991  0102  120A  158A  24BF  120A  118A  	fcall	_Lcd_Cmd
  2992                           
  2993                           ;./LCD4bits.h: 78:   Lcd_Cmd(0x00);
  2994  0107  3000               	movlw	0
  2995  0108  120A  158A  24BF  120A  118A  	fcall	_Lcd_Cmd
  2996                           
  2997                           ;./LCD4bits.h: 79:   Lcd_Cmd(0x0C);
  2998  010D  300C               	movlw	12
  2999  010E  120A  158A  24BF  120A  118A  	fcall	_Lcd_Cmd
  3000                           
  3001                           ;./LCD4bits.h: 80:   Lcd_Cmd(0x00);
  3002  0113  3000               	movlw	0
  3003  0114  120A  158A  24BF  120A  118A  	fcall	_Lcd_Cmd
  3004                           
  3005                           ;./LCD4bits.h: 81:   Lcd_Cmd(0x06);
  3006  0119  3006               	movlw	6
  3007  011A  120A  158A  24BF   	fcall	_Lcd_Cmd
  3008  011D  0008               	return
  3009  011E                     __end_of_Lcd_Init:	
  3010                           
  3011                           	psect	text7
  3012  0E37                     __ptext7:	
  3013 ;; *************** function _I2C_Master_Init *****************
  3014 ;; Defined at:
  3015 ;;		line 16 in file "./I2C.h"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  c               4    0[BANK0 ] const unsigned long 
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;		None
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  1    wreg      void 
  3022 ;; Registers used:
  3023 ;;		wreg, status,2, status,0, pclath, cstack
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3029 ;;      Params:         0       4       0       0       0
  3030 ;;      Locals:         0       0       0       0       0
  3031 ;;      Temps:          0       4       0       0       0
  3032 ;;      Totals:         0       8       0       0       0
  3033 ;;Total ram usage:        8 bytes
  3034 ;; Hardware stack levels used:    1
  3035 ;; Hardware stack levels required when called:    1
  3036 ;; This function calls:
  3037 ;;		___lldiv
  3038 ;; This function is called by:
  3039 ;;		_setup
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           
  3044                           ;psect for function _I2C_Master_Init
  3045  0E37                     _I2C_Master_Init:	
  3046                           
  3047                           ;./I2C.h: 16: void I2C_Master_Init(const unsigned long c);./I2C.h: 17: {;./I2C.h: 18:   
      +                            SSPCON = 0b00101000;
  3048                           
  3049                           ;incstack = 0
  3050                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3051  0E37  3028               	movlw	40
  3052  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  3053  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  3054  0E3A  0094               	movwf	20	;volatile
  3055                           
  3056                           ;./I2C.h: 19:     SSPCON2 = 0;
  3057  0E3B  1683               	bsf	3,5	;RP0=1, select bank1
  3058  0E3C  1303               	bcf	3,6	;RP1=0, select bank1
  3059  0E3D  0191               	clrf	17	;volatile
  3060                           
  3061                           ;./I2C.h: 20:     SSPADD = (8000000/(4*c))-1;
  3062  0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  3063  0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  3064  0E40  083E               	movf	I2C_Master_Init@c,w
  3065  0E41  00C2               	movwf	??_I2C_Master_Init
  3066  0E42  083F               	movf	I2C_Master_Init@c+1,w
  3067  0E43  00C3               	movwf	??_I2C_Master_Init+1
  3068  0E44  0840               	movf	I2C_Master_Init@c+2,w
  3069  0E45  00C4               	movwf	??_I2C_Master_Init+2
  3070  0E46  0841               	movf	I2C_Master_Init@c+3,w
  3071  0E47  00C5               	movwf	??_I2C_Master_Init+3
  3072  0E48  3002               	movlw	2
  3073  0E49                     u1275:	
  3074  0E49  1003               	clrc
  3075  0E4A  0DC2               	rlf	??_I2C_Master_Init,f
  3076  0E4B  0DC3               	rlf	??_I2C_Master_Init+1,f
  3077  0E4C  0DC4               	rlf	??_I2C_Master_Init+2,f
  3078  0E4D  0DC5               	rlf	??_I2C_Master_Init+3,f
  3079  0E4E  3EFF               	addlw	-1
  3080  0E4F  1D03               	skipz
  3081  0E50  2E49               	goto	u1275
  3082  0E51  0845               	movf	??_I2C_Master_Init+3,w
  3083  0E52  00F3               	movwf	___lldiv@divisor+3
  3084  0E53  0844               	movf	??_I2C_Master_Init+2,w
  3085  0E54  00F2               	movwf	___lldiv@divisor+2
  3086  0E55  0843               	movf	??_I2C_Master_Init+1,w
  3087  0E56  00F1               	movwf	___lldiv@divisor+1
  3088  0E57  0842               	movf	??_I2C_Master_Init,w
  3089  0E58  00F0               	movwf	___lldiv@divisor
  3090  0E59  3000               	movlw	0
  3091  0E5A  00F7               	movwf	___lldiv@dividend+3
  3092  0E5B  307A               	movlw	122
  3093  0E5C  00F6               	movwf	___lldiv@dividend+2
  3094  0E5D  3012               	movlw	18
  3095  0E5E  00F5               	movwf	___lldiv@dividend+1
  3096  0E5F  3000               	movlw	0
  3097  0E60  00F4               	movwf	___lldiv@dividend
  3098  0E61  120A  118A  211E   	fcall	___lldiv
  3099  0E64  0870               	movf	?___lldiv,w
  3100  0E65  3EFF               	addlw	255
  3101  0E66  1683               	bsf	3,5	;RP0=1, select bank1
  3102  0E67  1303               	bcf	3,6	;RP1=0, select bank1
  3103  0E68  0093               	movwf	19	;volatile
  3104                           
  3105                           ;./I2C.h: 21:     SSPSTAT = 0;
  3106  0E69  0194               	clrf	20	;volatile
  3107                           
  3108                           ;./I2C.h: 22:     TRISCbits.TRISC3 = 1;
  3109  0E6A  1587               	bsf	7,3	;volatile
  3110                           
  3111                           ;./I2C.h: 23:     TRISCbits.TRISC4 = 1;
  3112  0E6B  1607               	bsf	7,4	;volatile
  3113  0E6C  0008               	return
  3114  0E6D                     __end_of_I2C_Master_Init:	
  3115                           
  3116                           	psect	text8
  3117  011E                     __ptext8:	
  3118 ;; *************** function ___lldiv *****************
  3119 ;; Defined at:
  3120 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  divisor         4    0[COMMON] unsigned long 
  3123 ;;  dividend        4    4[COMMON] unsigned long 
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;  quotient        4    9[COMMON] unsigned long 
  3126 ;;  counter         1   13[COMMON] unsigned char 
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  4    0[COMMON] unsigned long 
  3129 ;; Registers used:
  3130 ;;		wreg, status,2, status,0
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3136 ;;      Params:         8       0       0       0       0
  3137 ;;      Locals:         5       0       0       0       0
  3138 ;;      Temps:          1       0       0       0       0
  3139 ;;      Totals:        14       0       0       0       0
  3140 ;;Total ram usage:       14 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; This function calls:
  3143 ;;		Nothing
  3144 ;; This function is called by:
  3145 ;;		_I2C_Master_Init
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           
  3150                           ;psect for function ___lldiv
  3151  011E                     ___lldiv:	
  3152                           
  3153                           ;incstack = 0
  3154                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3155  011E  3000               	movlw	0
  3156  011F  00FC               	movwf	___lldiv@quotient+3
  3157  0120  3000               	movlw	0
  3158  0121  00FB               	movwf	___lldiv@quotient+2
  3159  0122  3000               	movlw	0
  3160  0123  00FA               	movwf	___lldiv@quotient+1
  3161  0124  3000               	movlw	0
  3162  0125  00F9               	movwf	___lldiv@quotient
  3163  0126  0873               	movf	___lldiv@divisor+3,w
  3164  0127  0472               	iorwf	___lldiv@divisor+2,w
  3165  0128  0471               	iorwf	___lldiv@divisor+1,w
  3166  0129  0470               	iorwf	___lldiv@divisor,w
  3167  012A  1903               	skipnz
  3168  012B  2973               	goto	l1851
  3169  012C  01FD               	clrf	___lldiv@counter
  3170  012D  0AFD               	incf	___lldiv@counter,f
  3171  012E                     l1837:	
  3172  012E  1BF3               	btfsc	___lldiv@divisor+3,7
  3173  012F  293E               	goto	l1839
  3174  0130  3001               	movlw	1
  3175  0131  00F8               	movwf	??___lldiv
  3176  0132                     u985:	
  3177  0132  1003               	clrc
  3178  0133  0DF0               	rlf	___lldiv@divisor,f
  3179  0134  0DF1               	rlf	___lldiv@divisor+1,f
  3180  0135  0DF2               	rlf	___lldiv@divisor+2,f
  3181  0136  0DF3               	rlf	___lldiv@divisor+3,f
  3182  0137  0BF8               	decfsz	??___lldiv,f
  3183  0138  2932               	goto	u985
  3184  0139  3001               	movlw	1
  3185  013A  00F8               	movwf	??___lldiv
  3186  013B  0878               	movf	??___lldiv,w
  3187  013C  07FD               	addwf	___lldiv@counter,f
  3188  013D  292E               	goto	l1837
  3189  013E                     l1839:	
  3190  013E  3001               	movlw	1
  3191  013F  00F8               	movwf	??___lldiv
  3192  0140                     u1005:	
  3193  0140  1003               	clrc
  3194  0141  0DF9               	rlf	___lldiv@quotient,f
  3195  0142  0DFA               	rlf	___lldiv@quotient+1,f
  3196  0143  0DFB               	rlf	___lldiv@quotient+2,f
  3197  0144  0DFC               	rlf	___lldiv@quotient+3,f
  3198  0145  0BF8               	decfsz	??___lldiv,f
  3199  0146  2940               	goto	u1005
  3200  0147  0873               	movf	___lldiv@divisor+3,w
  3201  0148  0277               	subwf	___lldiv@dividend+3,w
  3202  0149  1D03               	skipz
  3203  014A  2955               	goto	u1015
  3204  014B  0872               	movf	___lldiv@divisor+2,w
  3205  014C  0276               	subwf	___lldiv@dividend+2,w
  3206  014D  1D03               	skipz
  3207  014E  2955               	goto	u1015
  3208  014F  0871               	movf	___lldiv@divisor+1,w
  3209  0150  0275               	subwf	___lldiv@dividend+1,w
  3210  0151  1D03               	skipz
  3211  0152  2955               	goto	u1015
  3212  0153  0870               	movf	___lldiv@divisor,w
  3213  0154  0274               	subwf	___lldiv@dividend,w
  3214  0155                     u1015:	
  3215  0155  1C03               	skipc
  3216  0156  2966               	goto	l1847
  3217  0157  0870               	movf	___lldiv@divisor,w
  3218  0158  02F4               	subwf	___lldiv@dividend,f
  3219  0159  0871               	movf	___lldiv@divisor+1,w
  3220  015A  1C03               	skipc
  3221  015B  0F71               	incfsz	___lldiv@divisor+1,w
  3222  015C  02F5               	subwf	___lldiv@dividend+1,f
  3223  015D  0872               	movf	___lldiv@divisor+2,w
  3224  015E  1C03               	skipc
  3225  015F  0F72               	incfsz	___lldiv@divisor+2,w
  3226  0160  02F6               	subwf	___lldiv@dividend+2,f
  3227  0161  0873               	movf	___lldiv@divisor+3,w
  3228  0162  1C03               	skipc
  3229  0163  0F73               	incfsz	___lldiv@divisor+3,w
  3230  0164  02F7               	subwf	___lldiv@dividend+3,f
  3231  0165  1479               	bsf	___lldiv@quotient,0
  3232  0166                     l1847:	
  3233  0166  3001               	movlw	1
  3234  0167                     u1025:	
  3235  0167  1003               	clrc
  3236  0168  0CF3               	rrf	___lldiv@divisor+3,f
  3237  0169  0CF2               	rrf	___lldiv@divisor+2,f
  3238  016A  0CF1               	rrf	___lldiv@divisor+1,f
  3239  016B  0CF0               	rrf	___lldiv@divisor,f
  3240  016C  3EFF               	addlw	-1
  3241  016D  1D03               	skipz
  3242  016E  2967               	goto	u1025
  3243  016F  3001               	movlw	1
  3244  0170  02FD               	subwf	___lldiv@counter,f
  3245  0171  1D03               	btfss	3,2
  3246  0172  293E               	goto	l1839
  3247  0173                     l1851:	
  3248  0173  087C               	movf	___lldiv@quotient+3,w
  3249  0174  00F3               	movwf	?___lldiv+3
  3250  0175  087B               	movf	___lldiv@quotient+2,w
  3251  0176  00F2               	movwf	?___lldiv+2
  3252  0177  087A               	movf	___lldiv@quotient+1,w
  3253  0178  00F1               	movwf	?___lldiv+1
  3254  0179  0879               	movf	___lldiv@quotient,w
  3255  017A  00F0               	movwf	?___lldiv
  3256  017B  0008               	return
  3257  017C                     __end_of___lldiv:	
  3258                           
  3259                           	psect	text9
  3260  0D36                     __ptext9:	
  3261 ;; *************** function _get_tripwire *****************
  3262 ;; Defined at:
  3263 ;;		line 353 in file "mainMaster.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;		None
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  trip            1    7[COMMON] unsigned char 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      unsigned char 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2, status,0, pclath, cstack
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3277 ;;      Params:         0       0       0       0       0
  3278 ;;      Locals:         1       0       0       0       0
  3279 ;;      Temps:          1       0       0       0       0
  3280 ;;      Totals:         2       0       0       0       0
  3281 ;;Total ram usage:        2 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:    2
  3284 ;; This function calls:
  3285 ;;		_I2C_Master_Read
  3286 ;;		_I2C_Master_Start
  3287 ;;		_I2C_Master_Stop
  3288 ;;		_I2C_Master_Write
  3289 ;; This function is called by:
  3290 ;;		_main
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           
  3295                           ;psect for function _get_tripwire
  3296  0D36                     _get_tripwire:	
  3297                           
  3298                           ;mainMaster.c: 355:     char trip;;mainMaster.c: 357:     I2C_Master_Start();
  3299                           
  3300                           ;incstack = 0
  3301                           ; Regs used in _get_tripwire: [wreg+status,2+status,0+pclath+cstack]
  3302  0D36  120A  158A  2451  120A  158A  	fcall	_I2C_Master_Start
  3303                           
  3304                           ;mainMaster.c: 358:     I2C_Master_Write(0x21);
  3305  0D3B  3021               	movlw	33
  3306  0D3C  00F0               	movwf	I2C_Master_Write@d
  3307  0D3D  3000               	movlw	0
  3308  0D3E  00F1               	movwf	I2C_Master_Write@d+1
  3309  0D3F  120A  158A  2466  120A  158A  	fcall	_I2C_Master_Write
  3310                           
  3311                           ;mainMaster.c: 359:     trip = I2C_Master_Read(0);
  3312  0D44  3000               	movlw	0
  3313  0D45  00F0               	movwf	I2C_Master_Read@a
  3314  0D46  00F1               	movwf	I2C_Master_Read@a+1
  3315  0D47  120A  158A  25A3  120A  158A  	fcall	_I2C_Master_Read
  3316  0D4C  0870               	movf	?_I2C_Master_Read,w
  3317  0D4D  00F6               	movwf	??_get_tripwire
  3318  0D4E  0876               	movf	??_get_tripwire,w
  3319  0D4F  00F7               	movwf	get_tripwire@trip
  3320                           
  3321                           ;mainMaster.c: 360:     I2C_Master_Stop();
  3322  0D50  120A  158A  2458   	fcall	_I2C_Master_Stop
  3323                           
  3324                           ;mainMaster.c: 362:     return (trip);
  3325  0D53  0877               	movf	get_tripwire@trip,w
  3326  0D54  0008               	return
  3327  0D55                     __end_of_get_tripwire:	
  3328                           
  3329                           	psect	text10
  3330  017C                     __ptext10:	
  3331 ;; *************** function _get_time *****************
  3332 ;; Defined at:
  3333 ;;		line 278 in file "mainMaster.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  time_string     1    wreg     PTR unsigned char 
  3336 ;;		 -> newtime(6), time(6), 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  time_string     1   10[COMMON] PTR unsigned char 
  3339 ;;		 -> newtime(6), time(6), 
  3340 ;;  min             1    9[COMMON] unsigned char 
  3341 ;;  hour            1    8[COMMON] unsigned char 
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3351 ;;      Params:         0       0       0       0       0
  3352 ;;      Locals:         3       0       0       0       0
  3353 ;;      Temps:          2       0       0       0       0
  3354 ;;      Totals:         5       0       0       0       0
  3355 ;;Total ram usage:        5 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; Hardware stack levels required when called:    2
  3358 ;; This function calls:
  3359 ;;		_I2C_Master_Read
  3360 ;;		_I2C_Master_RepeatedStart
  3361 ;;		_I2C_Master_Start
  3362 ;;		_I2C_Master_Stop
  3363 ;;		_I2C_Master_Write
  3364 ;; This function is called by:
  3365 ;;		_main
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           
  3370                           ;psect for function _get_time
  3371  017C                     _get_time:	
  3372                           
  3373                           ;incstack = 0
  3374                           ; Regs used in _get_time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3375                           ;get_time@time_string stored from wreg
  3376  017C  00FA               	movwf	get_time@time_string
  3377                           
  3378                           ;mainMaster.c: 280:     char hour, min;;mainMaster.c: 282:     I2C_Master_Start();
  3379  017D  120A  158A  2451  120A  118A  	fcall	_I2C_Master_Start
  3380                           
  3381                           ;mainMaster.c: 283:     I2C_Master_Write(0xD0);
  3382  0182  30D0               	movlw	208
  3383  0183  00F0               	movwf	I2C_Master_Write@d
  3384  0184  3000               	movlw	0
  3385  0185  00F1               	movwf	I2C_Master_Write@d+1
  3386  0186  120A  158A  2466  120A  118A  	fcall	_I2C_Master_Write
  3387                           
  3388                           ;mainMaster.c: 284:     I2C_Master_Write(0x01);
  3389  018B  3001               	movlw	1
  3390  018C  00F0               	movwf	I2C_Master_Write@d
  3391  018D  3000               	movlw	0
  3392  018E  00F1               	movwf	I2C_Master_Write@d+1
  3393  018F  120A  158A  2466  120A  118A  	fcall	_I2C_Master_Write
  3394                           
  3395                           ;mainMaster.c: 285:     I2C_Master_RepeatedStart();
  3396  0194  120A  158A  245F  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3397                           
  3398                           ;mainMaster.c: 286:     I2C_Master_Write(0xD1);
  3399  0199  30D1               	movlw	209
  3400  019A  00F0               	movwf	I2C_Master_Write@d
  3401  019B  3000               	movlw	0
  3402  019C  00F1               	movwf	I2C_Master_Write@d+1
  3403  019D  120A  158A  2466  120A  118A  	fcall	_I2C_Master_Write
  3404                           
  3405                           ;mainMaster.c: 287:     min = I2C_Master_Read(1);
  3406  01A2  3001               	movlw	1
  3407  01A3  00F0               	movwf	I2C_Master_Read@a
  3408  01A4  3000               	movlw	0
  3409  01A5  00F1               	movwf	I2C_Master_Read@a+1
  3410  01A6  120A  158A  25A3  120A  118A  	fcall	_I2C_Master_Read
  3411  01AB  0870               	movf	?_I2C_Master_Read,w
  3412  01AC  00F6               	movwf	??_get_time
  3413  01AD  0876               	movf	??_get_time,w
  3414  01AE  00F9               	movwf	get_time@min
  3415                           
  3416                           ;mainMaster.c: 288:     hour = I2C_Master_Read(0);
  3417  01AF  3000               	movlw	0
  3418  01B0  00F0               	movwf	I2C_Master_Read@a
  3419  01B1  00F1               	movwf	I2C_Master_Read@a+1
  3420  01B2  120A  158A  25A3  120A  118A  	fcall	_I2C_Master_Read
  3421  01B7  0870               	movf	?_I2C_Master_Read,w
  3422  01B8  00F6               	movwf	??_get_time
  3423  01B9  0876               	movf	??_get_time,w
  3424  01BA  00F8               	movwf	get_time@hour
  3425                           
  3426                           ;mainMaster.c: 289:     I2C_Master_Stop();
  3427  01BB  120A  158A  2458  120A  118A  	fcall	_I2C_Master_Stop
  3428                           
  3429                           ;mainMaster.c: 291:     time_string[0] = (hour >> 4) + '0';
  3430  01C0  0878               	movf	get_time@hour,w
  3431  01C1  00F6               	movwf	??_get_time
  3432  01C2  3004               	movlw	4
  3433  01C3                     u1595:	
  3434  01C3  1003               	clrc
  3435  01C4  0CF6               	rrf	??_get_time,f
  3436  01C5  3EFF               	addlw	-1
  3437  01C6  1D03               	skipz
  3438  01C7  29C3               	goto	u1595
  3439  01C8  0876               	movf	??_get_time,w
  3440  01C9  3E30               	addlw	48
  3441  01CA  00F7               	movwf	??_get_time+1
  3442  01CB  087A               	movf	get_time@time_string,w
  3443  01CC  0084               	movwf	4
  3444  01CD  0877               	movf	??_get_time+1,w
  3445  01CE  1383               	bcf	3,7	;select IRP bank0
  3446  01CF  0080               	movwf	0
  3447                           
  3448                           ;mainMaster.c: 292:     time_string[1] = (hour & 0x0F) + '0';
  3449  01D0  0878               	movf	get_time@hour,w
  3450  01D1  390F               	andlw	15
  3451  01D2  3E30               	addlw	48
  3452  01D3  00F6               	movwf	??_get_time
  3453  01D4  0A7A               	incf	get_time@time_string,w
  3454  01D5  0084               	movwf	4
  3455  01D6  0876               	movf	??_get_time,w
  3456  01D7  0080               	movwf	0
  3457                           
  3458                           ;mainMaster.c: 293:     time_string[2] = ':';
  3459  01D8  303A               	movlw	58
  3460  01D9  00F6               	movwf	??_get_time
  3461  01DA  087A               	movf	get_time@time_string,w
  3462  01DB  3E02               	addlw	2
  3463  01DC  0084               	movwf	4
  3464  01DD  0876               	movf	??_get_time,w
  3465  01DE  0080               	movwf	0
  3466                           
  3467                           ;mainMaster.c: 294:     time_string[3] = (min >> 4) + '0';
  3468  01DF  0879               	movf	get_time@min,w
  3469  01E0  00F6               	movwf	??_get_time
  3470  01E1  3004               	movlw	4
  3471  01E2                     u1605:	
  3472  01E2  1003               	clrc
  3473  01E3  0CF6               	rrf	??_get_time,f
  3474  01E4  3EFF               	addlw	-1
  3475  01E5  1D03               	skipz
  3476  01E6  29E2               	goto	u1605
  3477  01E7  0876               	movf	??_get_time,w
  3478  01E8  3E30               	addlw	48
  3479  01E9  00F7               	movwf	??_get_time+1
  3480  01EA  087A               	movf	get_time@time_string,w
  3481  01EB  3E03               	addlw	3
  3482  01EC  0084               	movwf	4
  3483  01ED  0877               	movf	??_get_time+1,w
  3484  01EE  0080               	movwf	0
  3485                           
  3486                           ;mainMaster.c: 295:     time_string[4] = (min & 0x0F) + '0';
  3487  01EF  0879               	movf	get_time@min,w
  3488  01F0  390F               	andlw	15
  3489  01F1  3E30               	addlw	48
  3490  01F2  00F6               	movwf	??_get_time
  3491  01F3  087A               	movf	get_time@time_string,w
  3492  01F4  3E04               	addlw	4
  3493  01F5  0084               	movwf	4
  3494  01F6  0876               	movf	??_get_time,w
  3495  01F7  0080               	movwf	0
  3496                           
  3497                           ;mainMaster.c: 296:     time_string[5] = '\0';
  3498  01F8  087A               	movf	get_time@time_string,w
  3499  01F9  3E05               	addlw	5
  3500  01FA  0084               	movwf	4
  3501  01FB  0180               	clrf	0
  3502  01FC  0008               	return
  3503  01FD                     __end_of_get_time:	
  3504                           
  3505                           	psect	text11
  3506  028C                     __ptext11:	
  3507 ;; *************** function _get_temp *****************
  3508 ;; Defined at:
  3509 ;;		line 314 in file "mainMaster.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  temp_string     1    wreg     PTR unsigned char 
  3512 ;;		 -> temp(6), 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  temp_string     1   20[BANK0 ] PTR unsigned char 
  3515 ;;		 -> temp(6), 
  3516 ;;  decimal         3   16[BANK0 ] unsigned char [3]
  3517 ;;  tempLSB         1   21[BANK0 ] unsigned char 
  3518 ;;  tempMSB         1   19[BANK0 ] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3528 ;;      Params:         0       0       0       0       0
  3529 ;;      Locals:         0       6       0       0       0
  3530 ;;      Temps:          0       3       0       0       0
  3531 ;;      Totals:         0       9       0       0       0
  3532 ;;Total ram usage:        9 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:    2
  3535 ;; This function calls:
  3536 ;;		_I2C_Master_Read
  3537 ;;		_I2C_Master_RepeatedStart
  3538 ;;		_I2C_Master_Start
  3539 ;;		_I2C_Master_Stop
  3540 ;;		_I2C_Master_Write
  3541 ;;		___bmul
  3542 ;;		_sprintf
  3543 ;;		_strcat
  3544 ;; This function is called by:
  3545 ;;		_main
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           
  3550                           ;psect for function _get_temp
  3551  028C                     _get_temp:	
  3552                           
  3553                           ;incstack = 0
  3554                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3555                           ;get_temp@temp_string stored from wreg
  3556  028C  1283               	bcf	3,5	;RP0=0, select bank0
  3557  028D  1303               	bcf	3,6	;RP1=0, select bank0
  3558  028E  00D2               	movwf	get_temp@temp_string
  3559                           
  3560                           ;mainMaster.c: 316:     char tempLSB, tempMSB;;mainMaster.c: 317:     char decimal[3];;m
      +                          ainMaster.c: 319:     I2C_Master_Start();
  3561  028F  120A  158A  2451  120A  118A  	fcall	_I2C_Master_Start
  3562                           
  3563                           ;mainMaster.c: 320:     I2C_Master_Write(0xD0);
  3564  0294  30D0               	movlw	208
  3565  0295  00F0               	movwf	I2C_Master_Write@d
  3566  0296  3000               	movlw	0
  3567  0297  00F1               	movwf	I2C_Master_Write@d+1
  3568  0298  120A  158A  2466  120A  118A  	fcall	_I2C_Master_Write
  3569                           
  3570                           ;mainMaster.c: 321:     I2C_Master_Write(0x11);
  3571  029D  3011               	movlw	17
  3572  029E  00F0               	movwf	I2C_Master_Write@d
  3573  029F  3000               	movlw	0
  3574  02A0  00F1               	movwf	I2C_Master_Write@d+1
  3575  02A1  120A  158A  2466  120A  118A  	fcall	_I2C_Master_Write
  3576                           
  3577                           ;mainMaster.c: 322:     I2C_Master_RepeatedStart();
  3578  02A6  120A  158A  245F  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3579                           
  3580                           ;mainMaster.c: 323:     I2C_Master_Write(0xD1);
  3581  02AB  30D1               	movlw	209
  3582  02AC  00F0               	movwf	I2C_Master_Write@d
  3583  02AD  3000               	movlw	0
  3584  02AE  00F1               	movwf	I2C_Master_Write@d+1
  3585  02AF  120A  158A  2466  120A  118A  	fcall	_I2C_Master_Write
  3586                           
  3587                           ;mainMaster.c: 324:     tempMSB = I2C_Master_Read(1);
  3588  02B4  3001               	movlw	1
  3589  02B5  00F0               	movwf	I2C_Master_Read@a
  3590  02B6  3000               	movlw	0
  3591  02B7  00F1               	movwf	I2C_Master_Read@a+1
  3592  02B8  120A  158A  25A3  120A  118A  	fcall	_I2C_Master_Read
  3593  02BD  0870               	movf	?_I2C_Master_Read,w
  3594  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  3595  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  3596  02C0  00CB               	movwf	??_get_temp
  3597  02C1  084B               	movf	??_get_temp,w
  3598  02C2  00D1               	movwf	get_temp@tempMSB
  3599                           
  3600                           ;mainMaster.c: 325:     tempLSB = I2C_Master_Read(0);
  3601  02C3  3000               	movlw	0
  3602  02C4  00F0               	movwf	I2C_Master_Read@a
  3603  02C5  00F1               	movwf	I2C_Master_Read@a+1
  3604  02C6  120A  158A  25A3  120A  118A  	fcall	_I2C_Master_Read
  3605  02CB  0870               	movf	?_I2C_Master_Read,w
  3606  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  3607  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  3608  02CE  00CB               	movwf	??_get_temp
  3609  02CF  084B               	movf	??_get_temp,w
  3610  02D0  00D3               	movwf	get_temp@tempLSB
  3611                           
  3612                           ;mainMaster.c: 326:     I2C_Master_Stop();
  3613  02D1  120A  158A  2458  120A  118A  	fcall	_I2C_Master_Stop
  3614                           
  3615                           ;mainMaster.c: 328:     tempMSB = tempMSB - 4;
  3616  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  3617  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  3618  02D8  0851               	movf	get_temp@tempMSB,w
  3619  02D9  3EFC               	addlw	252
  3620  02DA  00CB               	movwf	??_get_temp
  3621  02DB  084B               	movf	??_get_temp,w
  3622  02DC  00D1               	movwf	get_temp@tempMSB
  3623                           
  3624                           ;mainMaster.c: 329:     tempLSB = (tempLSB >> 6) * 25;
  3625  02DD  3019               	movlw	25
  3626  02DE  00CB               	movwf	??_get_temp
  3627  02DF  084B               	movf	??_get_temp,w
  3628  02E0  00F0               	movwf	___bmul@multiplicand
  3629  02E1  0853               	movf	get_temp@tempLSB,w
  3630  02E2  00CC               	movwf	??_get_temp+1
  3631  02E3  3006               	movlw	6
  3632  02E4                     u1575:	
  3633  02E4  1003               	clrc
  3634  02E5  0CCC               	rrf	??_get_temp+1,f
  3635  02E6  3EFF               	addlw	-1
  3636  02E7  1D03               	skipz
  3637  02E8  2AE4               	goto	u1575
  3638  02E9  084C               	movf	??_get_temp+1,w
  3639  02EA  120A  158A  2494  120A  118A  	fcall	___bmul
  3640  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  3641  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  3642  02F1  00CD               	movwf	??_get_temp+2
  3643  02F2  084D               	movf	??_get_temp+2,w
  3644  02F3  00D3               	movwf	get_temp@tempLSB
  3645                           
  3646                           ;mainMaster.c: 330:     sprintf(temp_string, "%d", tempMSB);
  3647  02F4  30AE               	movlw	(low (((STR_30+1)-__stringbase)| (0+32768)))& (0+255)
  3648  02F5  00CB               	movwf	??_get_temp
  3649  02F6  084B               	movf	??_get_temp,w
  3650  02F7  00BE               	movwf	sprintf@f
  3651  02F8  0851               	movf	get_temp@tempMSB,w
  3652  02F9  00CC               	movwf	??_get_temp+1
  3653  02FA  01CD               	clrf	??_get_temp+2
  3654  02FB  084C               	movf	??_get_temp+1,w
  3655  02FC  00BF               	movwf	?_sprintf+1
  3656  02FD  084D               	movf	??_get_temp+2,w
  3657  02FE  00C0               	movwf	?_sprintf+2
  3658  02FF  0852               	movf	get_temp@temp_string,w
  3659  0300  120A  118A  2405  120A  118A  	fcall	_sprintf
  3660                           
  3661                           ;mainMaster.c: 331:     if (tempLSB == 0){
  3662  0305  1283               	bcf	3,5	;RP0=0, select bank0
  3663  0306  1303               	bcf	3,6	;RP1=0, select bank0
  3664  0307  0853               	movf	get_temp@tempLSB,w
  3665  0308  1D03               	btfss	3,2
  3666  0309  2B0C               	goto	l2243
  3667                           
  3668                           ;mainMaster.c: 332:         sprintf(decimal, ".%d0", tempLSB);
  3669  030A  30A8               	movlw	(low ((STR_29-__stringbase)| (0+32768)))& (0+255)
  3670  030B  2B0D               	goto	L22
  3671  030C                     l2243:	
  3672                           ;mainMaster.c: 333:     } else {
  3673                           
  3674                           
  3675                           ;mainMaster.c: 334:         sprintf(decimal, ".%d", tempLSB);
  3676  030C  30AD               	movlw	(low ((STR_30-__stringbase)| (0+32768)))& (0+255)
  3677  030D                     L22:	
  3678  030D  00CB               	movwf	??_get_temp
  3679  030E  084B               	movf	??_get_temp,w
  3680  030F  00BE               	movwf	sprintf@f
  3681  0310  0853               	movf	get_temp@tempLSB,w
  3682  0311  00CC               	movwf	??_get_temp+1
  3683  0312  01CD               	clrf	??_get_temp+2
  3684  0313  084C               	movf	??_get_temp+1,w
  3685  0314  00BF               	movwf	?_sprintf+1
  3686  0315  084D               	movf	??_get_temp+2,w
  3687  0316  00C0               	movwf	?_sprintf+2
  3688  0317  304E               	movlw	(low (get_temp@decimal| 0))& (0+255)
  3689  0318  120A  118A  2405  120A  118A  	fcall	_sprintf
  3690                           
  3691                           ;mainMaster.c: 336:     strcat(temp_string, decimal);
  3692  031D  304E               	movlw	(low (get_temp@decimal| 0))& (0+255)
  3693  031E  1283               	bcf	3,5	;RP0=0, select bank0
  3694  031F  1303               	bcf	3,6	;RP1=0, select bank0
  3695  0320  00CB               	movwf	??_get_temp
  3696  0321  084B               	movf	??_get_temp,w
  3697  0322  00F0               	movwf	strcat@from
  3698  0323  0852               	movf	get_temp@temp_string,w
  3699  0324  120A  158A  2555   	fcall	_strcat
  3700                           
  3701                           ;mainMaster.c: 337:     temp_string[5] = '\0';
  3702  0327  1283               	bcf	3,5	;RP0=0, select bank0
  3703  0328  1303               	bcf	3,6	;RP1=0, select bank0
  3704  0329  0852               	movf	get_temp@temp_string,w
  3705  032A  3E05               	addlw	5
  3706  032B  0084               	movwf	4
  3707  032C  1383               	bcf	3,7	;select IRP bank0
  3708  032D  0180               	clrf	0
  3709  032E  0008               	return
  3710  032F                     __end_of_get_temp:	
  3711                           
  3712                           	psect	text12
  3713  0D55                     __ptext12:	
  3714 ;; *************** function _strcat *****************
  3715 ;; Defined at:
  3716 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcat.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  to              1    wreg     PTR unsigned char 
  3719 ;;		 -> temp(6), 
  3720 ;;  from            1    0[COMMON] PTR const unsigned char 
  3721 ;;		 -> get_temp@decimal(3), 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;  to              1    2[COMMON] PTR unsigned char 
  3724 ;;		 -> temp(6), 
  3725 ;;  cp              1    3[COMMON] PTR unsigned char 
  3726 ;;		 -> temp(6), 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      PTR unsigned char 
  3729 ;; Registers used:
  3730 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3736 ;;      Params:         1       0       0       0       0
  3737 ;;      Locals:         2       0       0       0       0
  3738 ;;      Temps:          1       0       0       0       0
  3739 ;;      Totals:         4       0       0       0       0
  3740 ;;Total ram usage:        4 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_get_temp
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           
  3750                           ;psect for function _strcat
  3751  0D55                     _strcat:	
  3752                           
  3753                           ;incstack = 0
  3754                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  3755                           ;strcat@to stored from wreg
  3756  0D55  00F2               	movwf	strcat@to
  3757  0D56  0872               	movf	strcat@to,w
  3758  0D57  00F1               	movwf	??_strcat
  3759  0D58  0871               	movf	??_strcat,w
  3760  0D59  00F3               	movwf	strcat@cp
  3761  0D5A                     l2137:	
  3762  0D5A  0873               	movf	strcat@cp,w
  3763  0D5B  0084               	movwf	4
  3764  0D5C  1383               	bcf	3,7	;select IRP bank0
  3765  0D5D  0800               	movf	0,w
  3766  0D5E  1903               	btfsc	3,2
  3767  0D5F  2D6D               	goto	l2141
  3768  0D60  3001               	movlw	1
  3769  0D61  00F1               	movwf	??_strcat
  3770  0D62  0871               	movf	??_strcat,w
  3771  0D63  07F3               	addwf	strcat@cp,f
  3772  0D64  2D5A               	goto	l2137
  3773  0D65                     l2139:	
  3774  0D65  3001               	movlw	1
  3775  0D66  00F1               	movwf	??_strcat
  3776  0D67  0871               	movf	??_strcat,w
  3777  0D68  07F3               	addwf	strcat@cp,f
  3778  0D69  3001               	movlw	1
  3779  0D6A  00F1               	movwf	??_strcat
  3780  0D6B  0871               	movf	??_strcat,w
  3781  0D6C  07F0               	addwf	strcat@from,f
  3782  0D6D                     l2141:	
  3783  0D6D  0870               	movf	strcat@from,w
  3784  0D6E  0084               	movwf	4
  3785  0D6F  0800               	movf	0,w
  3786  0D70  00F1               	movwf	??_strcat
  3787  0D71  0873               	movf	strcat@cp,w
  3788  0D72  0084               	movwf	4
  3789  0D73  0871               	movf	??_strcat,w
  3790  0D74  0080               	movwf	0
  3791  0D75  0800               	movf	0,w
  3792  0D76  1903               	btfsc	3,2
  3793  0D77  0008               	return
  3794  0D78  2D65               	goto	l2139
  3795  0D79                     __end_of_strcat:	
  3796                           
  3797                           	psect	text13
  3798  0405                     __ptext13:	
  3799 ;; *************** function _sprintf *****************
  3800 ;; Defined at:
  3801 ;;		line 500 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  sp              1    wreg     PTR unsigned char 
  3804 ;;		 -> get_temp@decimal(3), temp(6), 
  3805 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  3806 ;;		 -> STR_30(4), STR_29(5), STR_28(3), 
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  3809 ;;		 -> get_temp@decimal(3), temp(6), 
  3810 ;;  tmpval          4    0        struct .
  3811 ;;  val             2    9[BANK0 ] unsigned int 
  3812 ;;  cp              2    0        PTR const unsigned char 
  3813 ;;  len             2    0        unsigned int 
  3814 ;;  c               1   12[BANK0 ] unsigned char 
  3815 ;;  prec            1    8[BANK0 ] char 
  3816 ;;  flag            1    7[BANK0 ] unsigned char 
  3817 ;;  ap              1    6[BANK0 ] PTR void [1]
  3818 ;;		 -> ?_sprintf(2), 
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  2    0[BANK0 ] int 
  3821 ;; Registers used:
  3822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3828 ;;      Params:         0       3       0       0       0
  3829 ;;      Locals:         0       7       0       0       0
  3830 ;;      Temps:          0       3       0       0       0
  3831 ;;      Totals:         0      13       0       0       0
  3832 ;;Total ram usage:       13 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; Hardware stack levels required when called:    1
  3835 ;; This function calls:
  3836 ;;		___lwdiv
  3837 ;;		___lwmod
  3838 ;; This function is called by:
  3839 ;;		_get_temp
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           
  3844                           ;psect for function _sprintf
  3845  0405                     _sprintf:	
  3846                           
  3847                           ;incstack = 0
  3848                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3849                           ;sprintf@sp stored from wreg
  3850  0405  1283               	bcf	3,5	;RP0=0, select bank0
  3851  0406  1303               	bcf	3,6	;RP1=0, select bank0
  3852  0407  00C9               	movwf	sprintf@sp
  3853                           
  3854                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;D:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  3855  0408  303F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3856  0409  00C1               	movwf	??_sprintf
  3857  040A  0841               	movf	??_sprintf,w
  3858  040B  00C4               	movwf	sprintf@ap
  3859  040C                     l2123:	
  3860                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  3861                           
  3862                           
  3863                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  3864  040C  3001               	movlw	1
  3865  040D  07BE               	addwf	sprintf@f,f
  3866  040E  30FF               	movlw	-1
  3867  040F  073E               	addwf	sprintf@f,w
  3868  0410  0084               	movwf	4
  3869  0411  120A  118A  200D  120A  118A  	fcall	stringdir
  3870  0416  00C1               	movwf	??_sprintf
  3871  0417  0841               	movf	??_sprintf,w
  3872  0418  00CA               	movwf	sprintf@c
  3873  0419  084A               	movf	sprintf@c,w
  3874  041A  1903               	btfsc	3,2
  3875  041B  2CD8               	goto	l2125
  3876                           
  3877                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  3878  041C  3025               	movlw	37
  3879  041D  064A               	xorwf	sprintf@c,w
  3880  041E  1903               	btfsc	3,2
  3881  041F  2C2C               	goto	l2079
  3882                           
  3883                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;D:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  3884  0420  084A               	movf	sprintf@c,w
  3885  0421  00C1               	movwf	??_sprintf
  3886  0422  0849               	movf	sprintf@sp,w
  3887  0423  0084               	movwf	4
  3888  0424  0841               	movf	??_sprintf,w
  3889  0425  1383               	bcf	3,7	;select IRP bank0
  3890  0426  0080               	movwf	0
  3891  0427  3001               	movlw	1
  3892  0428  00C1               	movwf	??_sprintf
  3893  0429  0841               	movf	??_sprintf,w
  3894  042A  07C9               	addwf	sprintf@sp,f
  3895                           
  3896                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  3897  042B  2C0C               	goto	l2123
  3898  042C                     l2079:	
  3899                           
  3900                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  3901  042C  01C5               	clrf	sprintf@flag
  3902                           
  3903                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  3904  042D  3001               	movlw	1
  3905  042E  07BE               	addwf	sprintf@f,f
  3906  042F  30FF               	movlw	-1
  3907  0430  073E               	addwf	sprintf@f,w
  3908  0431  0084               	movwf	4
  3909  0432  120A  118A  200D  120A  118A  	fcall	stringdir
  3910  0437  00CA               	movwf	sprintf@c
  3911  0438  00C1               	movwf	??_sprintf
  3912  0439  01C2               	clrf	??_sprintf+1
  3913                           
  3914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3915                           ; Switch size 1, requested type "simple"
  3916                           ; Number of cases is 1, Range of values is 0 to 0
  3917                           ; switch strategies available:
  3918                           ; Name         Instructions Cycles
  3919                           ; simple_byte            4     3 (average)
  3920                           ; direct_byte           11     8 (fixed)
  3921                           ; jumptable            260     6 (fixed)
  3922                           ;	Chosen strategy is simple_byte
  3923  043A  0842               	movf	??_sprintf+1,w
  3924  043B  3A00               	xorlw	0	; case 0
  3925  043C  1903               	skipnz
  3926  043D  2C3F               	goto	l2615
  3927  043E  2C0C               	goto	l2123
  3928  043F                     l2615:	
  3929                           
  3930                           ; Switch size 1, requested type "simple"
  3931                           ; Number of cases is 3, Range of values is 0 to 105
  3932                           ; switch strategies available:
  3933                           ; Name         Instructions Cycles
  3934                           ; simple_byte           10     6 (average)
  3935                           ; jumptable            260     6 (fixed)
  3936                           ;	Chosen strategy is simple_byte
  3937  043F  0841               	movf	??_sprintf,w
  3938  0440  3A00               	xorlw	0	; case 0
  3939  0441  1903               	skipnz
  3940  0442  2CD8               	goto	l2125
  3941  0443  3A64               	xorlw	100	; case 100
  3942  0444  1903               	skipnz
  3943  0445  2C4A               	goto	l2085
  3944  0446  3A0D               	xorlw	13	; case 105
  3945  0447  1903               	skipnz
  3946  0448  2C4A               	goto	l2085
  3947  0449  2C0C               	goto	l2123
  3948  044A                     l2085:	
  3949                           
  3950                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3951  044A  0844               	movf	sprintf@ap,w
  3952  044B  0084               	movwf	4
  3953  044C  1383               	bcf	3,7	;select IRP bank0
  3954  044D  0800               	movf	0,w
  3955  044E  00C7               	movwf	sprintf@val
  3956  044F  0A84               	incf	4,f
  3957  0450  0800               	movf	0,w
  3958  0451  00C8               	movwf	sprintf@val+1
  3959  0452  3002               	movlw	2
  3960  0453  00C1               	movwf	??_sprintf
  3961  0454  0841               	movf	??_sprintf,w
  3962  0455  07C4               	addwf	sprintf@ap,f
  3963                           
  3964                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  3965  0456  1FC8               	btfss	sprintf@val+1,7
  3966  0457  2C61               	goto	l2095
  3967                           
  3968                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  3969  0458  3003               	movlw	3
  3970  0459  00C1               	movwf	??_sprintf
  3971  045A  0841               	movf	??_sprintf,w
  3972  045B  04C5               	iorwf	sprintf@flag,f
  3973                           
  3974                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  3975  045C  09C7               	comf	sprintf@val,f
  3976  045D  09C8               	comf	sprintf@val+1,f
  3977  045E  0AC7               	incf	sprintf@val,f
  3978  045F  1903               	skipnz
  3979  0460  0AC8               	incf	sprintf@val+1,f
  3980  0461                     l2095:	
  3981                           
  3982                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3983  0461  01CA               	clrf	sprintf@c
  3984  0462  0ACA               	incf	sprintf@c,f
  3985  0463                     l2101:	
  3986                           
  3987                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  3988  0463  084A               	movf	sprintf@c,w
  3989  0464  00C1               	movwf	??_sprintf
  3990  0465  0741               	addwf	??_sprintf,w
  3991  0466  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3992  0467  0084               	movwf	4
  3993  0468  120A  118A  200D  120A  118A  	fcall	stringdir
  3994  046D  00C2               	movwf	??_sprintf+1
  3995  046E  120A  118A  200D  120A  118A  	fcall	stringdir
  3996  0473  00C3               	movwf	??_sprintf+2
  3997  0474  0843               	movf	??_sprintf+2,w
  3998  0475  0248               	subwf	sprintf@val+1,w
  3999  0476  1D03               	skipz
  4000  0477  2C7A               	goto	u1405
  4001  0478  0842               	movf	??_sprintf+1,w
  4002  0479  0247               	subwf	sprintf@val,w
  4003  047A                     u1405:	
  4004  047A  1C03               	btfss	3,0
  4005  047B  2C84               	goto	l2107
  4006  047C  3001               	movlw	1
  4007  047D  00C1               	movwf	??_sprintf
  4008  047E  0841               	movf	??_sprintf,w
  4009  047F  07CA               	addwf	sprintf@c,f
  4010  0480  3005               	movlw	5
  4011  0481  064A               	xorwf	sprintf@c,w
  4012  0482  1D03               	btfss	3,2
  4013  0483  2C63               	goto	l2101
  4014  0484                     l2107:	
  4015                           
  4016                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  4017  0484  0845               	movf	sprintf@flag,w
  4018  0485  3903               	andlw	3
  4019  0486  1903               	btfsc	3,2
  4020  0487  2C93               	goto	l2113
  4021                           
  4022                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  4023  0488  302D               	movlw	45
  4024  0489  00C1               	movwf	??_sprintf
  4025  048A  0849               	movf	sprintf@sp,w
  4026  048B  0084               	movwf	4
  4027  048C  0841               	movf	??_sprintf,w
  4028  048D  1383               	bcf	3,7	;select IRP bank0
  4029  048E  0080               	movwf	0
  4030  048F  3001               	movlw	1
  4031  0490  00C1               	movwf	??_sprintf
  4032  0491  0841               	movf	??_sprintf,w
  4033  0492  07C9               	addwf	sprintf@sp,f
  4034  0493                     l2113:	
  4035                           
  4036                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  4037  0493  084A               	movf	sprintf@c,w
  4038  0494  00C1               	movwf	??_sprintf
  4039  0495  0841               	movf	??_sprintf,w
  4040  0496  00C6               	movwf	sprintf@prec
  4041  0497                     l2121:	
  4042                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  4043                           
  4044                           
  4045                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  4046  0497  30FF               	movlw	255
  4047  0498  00C1               	movwf	??_sprintf
  4048  0499  0841               	movf	??_sprintf,w
  4049  049A  07C6               	addwf	sprintf@prec,f
  4050  049B  0A46               	incf	sprintf@prec,w
  4051  049C  1903               	btfsc	3,2
  4052  049D  2C0C               	goto	l2123
  4053                           
  4054                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  4055  049E  300A               	movlw	10
  4056  049F  00F8               	movwf	___lwmod@divisor
  4057  04A0  3000               	movlw	0
  4058  04A1  00F9               	movwf	___lwmod@divisor+1
  4059  04A2  0846               	movf	sprintf@prec,w
  4060  04A3  00C1               	movwf	??_sprintf
  4061  04A4  0741               	addwf	??_sprintf,w
  4062  04A5  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4063  04A6  0084               	movwf	4
  4064  04A7  120A  118A  200D  120A  118A  	fcall	stringdir
  4065  04AC  00F0               	movwf	___lwdiv@divisor
  4066  04AD  120A  118A  200D  120A  118A  	fcall	stringdir
  4067  04B2  00F1               	movwf	___lwdiv@divisor+1
  4068  04B3  0848               	movf	sprintf@val+1,w
  4069  04B4  00F3               	movwf	___lwdiv@dividend+1
  4070  04B5  0847               	movf	sprintf@val,w
  4071  04B6  00F2               	movwf	___lwdiv@dividend
  4072  04B7  120A  158A  26A6  120A  118A  	fcall	___lwdiv
  4073  04BC  0871               	movf	?___lwdiv+1,w
  4074  04BD  00FB               	movwf	___lwmod@dividend+1
  4075  04BE  0870               	movf	?___lwdiv,w
  4076  04BF  00FA               	movwf	___lwmod@dividend
  4077  04C0  120A  158A  25CF  120A  118A  	fcall	___lwmod
  4078  04C5  0878               	movf	?___lwmod,w
  4079  04C6  3E30               	addlw	48
  4080  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  4081  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  4082  04C9  00C2               	movwf	??_sprintf+1
  4083  04CA  0842               	movf	??_sprintf+1,w
  4084  04CB  00CA               	movwf	sprintf@c
  4085                           
  4086                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  4087  04CC  084A               	movf	sprintf@c,w
  4088  04CD  00C1               	movwf	??_sprintf
  4089  04CE  0849               	movf	sprintf@sp,w
  4090  04CF  0084               	movwf	4
  4091  04D0  0841               	movf	??_sprintf,w
  4092  04D1  1383               	bcf	3,7	;select IRP bank0
  4093  04D2  0080               	movwf	0
  4094  04D3  3001               	movlw	1
  4095  04D4  00C1               	movwf	??_sprintf
  4096  04D5  0841               	movf	??_sprintf,w
  4097  04D6  07C9               	addwf	sprintf@sp,f
  4098  04D7  2C97               	goto	l2121
  4099  04D8                     l2125:	
  4100                           
  4101                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  4102  04D8  0849               	movf	sprintf@sp,w
  4103  04D9  0084               	movwf	4
  4104  04DA  1383               	bcf	3,7	;select IRP bank0
  4105  04DB  0180               	clrf	0
  4106  04DC  0008               	return
  4107  04DD                     __end_of_sprintf:	
  4108                           
  4109                           	psect	text14
  4110  0DCF                     __ptext14:	
  4111 ;; *************** function ___lwmod *****************
  4112 ;; Defined at:
  4113 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  divisor         2    8[COMMON] unsigned int 
  4116 ;;  dividend        2   10[COMMON] unsigned int 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  counter         1   13[COMMON] unsigned char 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  2    8[COMMON] unsigned int 
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4128 ;;      Params:         4       0       0       0       0
  4129 ;;      Locals:         1       0       0       0       0
  4130 ;;      Temps:          1       0       0       0       0
  4131 ;;      Totals:         6       0       0       0       0
  4132 ;;Total ram usage:        6 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; This function calls:
  4135 ;;		Nothing
  4136 ;; This function is called by:
  4137 ;;		_sprintf
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           
  4142                           ;psect for function ___lwmod
  4143  0DCF                     ___lwmod:	
  4144                           
  4145                           ;incstack = 0
  4146                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4147  0DCF  0878               	movf	___lwmod@divisor,w
  4148  0DD0  0479               	iorwf	___lwmod@divisor+1,w
  4149  0DD1  1903               	btfsc	3,2
  4150  0DD2  2DFC               	goto	l1939
  4151  0DD3  01FD               	clrf	___lwmod@counter
  4152  0DD4  0AFD               	incf	___lwmod@counter,f
  4153  0DD5                     l1929:	
  4154  0DD5  1BF9               	btfsc	___lwmod@divisor+1,7
  4155  0DD6  2DE3               	goto	l1931
  4156  0DD7  3001               	movlw	1
  4157  0DD8                     u1225:	
  4158  0DD8  1003               	clrc
  4159  0DD9  0DF8               	rlf	___lwmod@divisor,f
  4160  0DDA  0DF9               	rlf	___lwmod@divisor+1,f
  4161  0DDB  3EFF               	addlw	-1
  4162  0DDC  1D03               	skipz
  4163  0DDD  2DD8               	goto	u1225
  4164  0DDE  3001               	movlw	1
  4165  0DDF  00FC               	movwf	??___lwmod
  4166  0DE0  087C               	movf	??___lwmod,w
  4167  0DE1  07FD               	addwf	___lwmod@counter,f
  4168  0DE2  2DD5               	goto	l1929
  4169  0DE3                     l1931:	
  4170  0DE3  0879               	movf	___lwmod@divisor+1,w
  4171  0DE4  027B               	subwf	___lwmod@dividend+1,w
  4172  0DE5  1D03               	skipz
  4173  0DE6  2DE9               	goto	u1245
  4174  0DE7  0878               	movf	___lwmod@divisor,w
  4175  0DE8  027A               	subwf	___lwmod@dividend,w
  4176  0DE9                     u1245:	
  4177  0DE9  1C03               	skipc
  4178  0DEA  2DF1               	goto	l1935
  4179  0DEB  0878               	movf	___lwmod@divisor,w
  4180  0DEC  02FA               	subwf	___lwmod@dividend,f
  4181  0DED  0879               	movf	___lwmod@divisor+1,w
  4182  0DEE  1C03               	skipc
  4183  0DEF  03FB               	decf	___lwmod@dividend+1,f
  4184  0DF0  02FB               	subwf	___lwmod@dividend+1,f
  4185  0DF1                     l1935:	
  4186  0DF1  3001               	movlw	1
  4187  0DF2                     u1255:	
  4188  0DF2  1003               	clrc
  4189  0DF3  0CF9               	rrf	___lwmod@divisor+1,f
  4190  0DF4  0CF8               	rrf	___lwmod@divisor,f
  4191  0DF5  3EFF               	addlw	-1
  4192  0DF6  1D03               	skipz
  4193  0DF7  2DF2               	goto	u1255
  4194  0DF8  3001               	movlw	1
  4195  0DF9  02FD               	subwf	___lwmod@counter,f
  4196  0DFA  1D03               	btfss	3,2
  4197  0DFB  2DE3               	goto	l1931
  4198  0DFC                     l1939:	
  4199  0DFC  087B               	movf	___lwmod@dividend+1,w
  4200  0DFD  00F9               	movwf	?___lwmod+1
  4201  0DFE  087A               	movf	___lwmod@dividend,w
  4202  0DFF  00F8               	movwf	?___lwmod
  4203  0E00  0008               	return
  4204  0E01                     __end_of___lwmod:	
  4205                           
  4206                           	psect	text15
  4207  0EA6                     __ptext15:	
  4208 ;; *************** function ___lwdiv *****************
  4209 ;; Defined at:
  4210 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  divisor         2    0[COMMON] unsigned int 
  4213 ;;  dividend        2    2[COMMON] unsigned int 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;  quotient        2    5[COMMON] unsigned int 
  4216 ;;  counter         1    7[COMMON] unsigned char 
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  2    0[COMMON] unsigned int 
  4219 ;; Registers used:
  4220 ;;		wreg, status,2, status,0
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4226 ;;      Params:         4       0       0       0       0
  4227 ;;      Locals:         3       0       0       0       0
  4228 ;;      Temps:          1       0       0       0       0
  4229 ;;      Totals:         8       0       0       0       0
  4230 ;;Total ram usage:        8 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_sprintf
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           
  4240                           ;psect for function ___lwdiv
  4241  0EA6                     ___lwdiv:	
  4242                           
  4243                           ;incstack = 0
  4244                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4245  0EA6  01F5               	clrf	___lwdiv@quotient
  4246  0EA7  01F6               	clrf	___lwdiv@quotient+1
  4247  0EA8  0870               	movf	___lwdiv@divisor,w
  4248  0EA9  0471               	iorwf	___lwdiv@divisor+1,w
  4249  0EAA  1903               	btfsc	3,2
  4250  0EAB  2EDD               	goto	l1917
  4251  0EAC  01F7               	clrf	___lwdiv@counter
  4252  0EAD  0AF7               	incf	___lwdiv@counter,f
  4253  0EAE                     l1905:	
  4254  0EAE  1BF1               	btfsc	___lwdiv@divisor+1,7
  4255  0EAF  2EBC               	goto	l1907
  4256  0EB0  3001               	movlw	1
  4257  0EB1                     u1155:	
  4258  0EB1  1003               	clrc
  4259  0EB2  0DF0               	rlf	___lwdiv@divisor,f
  4260  0EB3  0DF1               	rlf	___lwdiv@divisor+1,f
  4261  0EB4  3EFF               	addlw	-1
  4262  0EB5  1D03               	skipz
  4263  0EB6  2EB1               	goto	u1155
  4264  0EB7  3001               	movlw	1
  4265  0EB8  00F4               	movwf	??___lwdiv
  4266  0EB9  0874               	movf	??___lwdiv,w
  4267  0EBA  07F7               	addwf	___lwdiv@counter,f
  4268  0EBB  2EAE               	goto	l1905
  4269  0EBC                     l1907:	
  4270  0EBC  3001               	movlw	1
  4271  0EBD                     u1175:	
  4272  0EBD  1003               	clrc
  4273  0EBE  0DF5               	rlf	___lwdiv@quotient,f
  4274  0EBF  0DF6               	rlf	___lwdiv@quotient+1,f
  4275  0EC0  3EFF               	addlw	-1
  4276  0EC1  1D03               	skipz
  4277  0EC2  2EBD               	goto	u1175
  4278  0EC3  0871               	movf	___lwdiv@divisor+1,w
  4279  0EC4  0273               	subwf	___lwdiv@dividend+1,w
  4280  0EC5  1D03               	skipz
  4281  0EC6  2EC9               	goto	u1185
  4282  0EC7  0870               	movf	___lwdiv@divisor,w
  4283  0EC8  0272               	subwf	___lwdiv@dividend,w
  4284  0EC9                     u1185:	
  4285  0EC9  1C03               	skipc
  4286  0ECA  2ED2               	goto	l1913
  4287  0ECB  0870               	movf	___lwdiv@divisor,w
  4288  0ECC  02F2               	subwf	___lwdiv@dividend,f
  4289  0ECD  0871               	movf	___lwdiv@divisor+1,w
  4290  0ECE  1C03               	skipc
  4291  0ECF  03F3               	decf	___lwdiv@dividend+1,f
  4292  0ED0  02F3               	subwf	___lwdiv@dividend+1,f
  4293  0ED1  1475               	bsf	___lwdiv@quotient,0
  4294  0ED2                     l1913:	
  4295  0ED2  3001               	movlw	1
  4296  0ED3                     u1195:	
  4297  0ED3  1003               	clrc
  4298  0ED4  0CF1               	rrf	___lwdiv@divisor+1,f
  4299  0ED5  0CF0               	rrf	___lwdiv@divisor,f
  4300  0ED6  3EFF               	addlw	-1
  4301  0ED7  1D03               	skipz
  4302  0ED8  2ED3               	goto	u1195
  4303  0ED9  3001               	movlw	1
  4304  0EDA  02F7               	subwf	___lwdiv@counter,f
  4305  0EDB  1D03               	btfss	3,2
  4306  0EDC  2EBC               	goto	l1907
  4307  0EDD                     l1917:	
  4308  0EDD  0876               	movf	___lwdiv@quotient+1,w
  4309  0EDE  00F1               	movwf	?___lwdiv+1
  4310  0EDF  0875               	movf	___lwdiv@quotient,w
  4311  0EE0  00F0               	movwf	?___lwdiv
  4312  0EE1  0008               	return
  4313  0EE2                     __end_of___lwdiv:	
  4314                           
  4315                           	psect	text16
  4316  0C94                     __ptext16:	
  4317 ;; *************** function ___bmul *****************
  4318 ;; Defined at:
  4319 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;  multiplier      1    wreg     unsigned char 
  4322 ;;  multiplicand    1    0[COMMON] unsigned char 
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;  multiplier      1    3[COMMON] unsigned char 
  4325 ;;  product         1    2[COMMON] unsigned char 
  4326 ;; Return value:  Size  Location     Type
  4327 ;;                  1    wreg      unsigned char 
  4328 ;; Registers used:
  4329 ;;		wreg, status,2, status,0
  4330 ;; Tracked objects:
  4331 ;;		On entry : 0/0
  4332 ;;		On exit  : 0/0
  4333 ;;		Unchanged: 0/0
  4334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4335 ;;      Params:         1       0       0       0       0
  4336 ;;      Locals:         2       0       0       0       0
  4337 ;;      Temps:          1       0       0       0       0
  4338 ;;      Totals:         4       0       0       0       0
  4339 ;;Total ram usage:        4 bytes
  4340 ;; Hardware stack levels used:    1
  4341 ;; This function calls:
  4342 ;;		Nothing
  4343 ;; This function is called by:
  4344 ;;		_get_temp
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           
  4349                           ;psect for function ___bmul
  4350  0C94                     ___bmul:	
  4351                           
  4352                           ;incstack = 0
  4353                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4354                           ;___bmul@multiplier stored from wreg
  4355  0C94  00F3               	movwf	___bmul@multiplier
  4356  0C95  01F2               	clrf	___bmul@product
  4357  0C96                     l2145:	
  4358  0C96  1C73               	btfss	___bmul@multiplier,0
  4359  0C97  2C9C               	goto	l2149
  4360  0C98  0870               	movf	___bmul@multiplicand,w
  4361  0C99  00F1               	movwf	??___bmul
  4362  0C9A  0871               	movf	??___bmul,w
  4363  0C9B  07F2               	addwf	___bmul@product,f
  4364  0C9C                     l2149:	
  4365  0C9C  1003               	clrc
  4366  0C9D  0DF0               	rlf	___bmul@multiplicand,f
  4367  0C9E  1003               	clrc
  4368  0C9F  0CF3               	rrf	___bmul@multiplier,f
  4369  0CA0  0873               	movf	___bmul@multiplier,w
  4370  0CA1  1D03               	btfss	3,2
  4371  0CA2  2C96               	goto	l2145
  4372  0CA3  0872               	movf	___bmul@product,w
  4373  0CA4  0008               	return
  4374  0CA5                     __end_of___bmul:	
  4375                           
  4376                           	psect	text17
  4377  0D17                     __ptext17:	
  4378 ;; *************** function _get_hall *****************
  4379 ;; Defined at:
  4380 ;;		line 341 in file "mainMaster.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;		None
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;  key             1    7[COMMON] unsigned char 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      unsigned char 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0, pclath, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4394 ;;      Params:         0       0       0       0       0
  4395 ;;      Locals:         1       0       0       0       0
  4396 ;;      Temps:          1       0       0       0       0
  4397 ;;      Totals:         2       0       0       0       0
  4398 ;;Total ram usage:        2 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    2
  4401 ;; This function calls:
  4402 ;;		_I2C_Master_Read
  4403 ;;		_I2C_Master_Start
  4404 ;;		_I2C_Master_Stop
  4405 ;;		_I2C_Master_Write
  4406 ;; This function is called by:
  4407 ;;		_main
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           
  4412                           ;psect for function _get_hall
  4413  0D17                     _get_hall:	
  4414                           
  4415                           ;mainMaster.c: 343:     char key;;mainMaster.c: 345:     I2C_Master_Start();
  4416                           
  4417                           ;incstack = 0
  4418                           ; Regs used in _get_hall: [wreg+status,2+status,0+pclath+cstack]
  4419  0D17  120A  158A  2451  120A  158A  	fcall	_I2C_Master_Start
  4420                           
  4421                           ;mainMaster.c: 346:     I2C_Master_Write(0x11);
  4422  0D1C  3011               	movlw	17
  4423  0D1D  00F0               	movwf	I2C_Master_Write@d
  4424  0D1E  3000               	movlw	0
  4425  0D1F  00F1               	movwf	I2C_Master_Write@d+1
  4426  0D20  120A  158A  2466  120A  158A  	fcall	_I2C_Master_Write
  4427                           
  4428                           ;mainMaster.c: 347:     key = I2C_Master_Read(0);
  4429  0D25  3000               	movlw	0
  4430  0D26  00F0               	movwf	I2C_Master_Read@a
  4431  0D27  00F1               	movwf	I2C_Master_Read@a+1
  4432  0D28  120A  158A  25A3  120A  158A  	fcall	_I2C_Master_Read
  4433  0D2D  0870               	movf	?_I2C_Master_Read,w
  4434  0D2E  00F6               	movwf	??_get_hall
  4435  0D2F  0876               	movf	??_get_hall,w
  4436  0D30  00F7               	movwf	get_hall@key
  4437                           
  4438                           ;mainMaster.c: 348:     I2C_Master_Stop();
  4439  0D31  120A  158A  2458   	fcall	_I2C_Master_Stop
  4440                           
  4441                           ;mainMaster.c: 350:     return (key);
  4442  0D34  0877               	movf	get_hall@key,w
  4443  0D35  0008               	return
  4444  0D36                     __end_of_get_hall:	
  4445                           
  4446                           	psect	text18
  4447  0E01                     __ptext18:	
  4448 ;; *************** function _get_day *****************
  4449 ;; Defined at:
  4450 ;;		line 299 in file "mainMaster.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;		None
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;  d               1    7[COMMON] unsigned char 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  1    wreg      unsigned char 
  4457 ;; Registers used:
  4458 ;;		wreg, status,2, status,0, pclath, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4464 ;;      Params:         0       0       0       0       0
  4465 ;;      Locals:         1       0       0       0       0
  4466 ;;      Temps:          1       0       0       0       0
  4467 ;;      Totals:         2       0       0       0       0
  4468 ;;Total ram usage:        2 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    2
  4471 ;; This function calls:
  4472 ;;		_I2C_Master_Read
  4473 ;;		_I2C_Master_RepeatedStart
  4474 ;;		_I2C_Master_Start
  4475 ;;		_I2C_Master_Stop
  4476 ;;		_I2C_Master_Write
  4477 ;; This function is called by:
  4478 ;;		_main
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           
  4483                           ;psect for function _get_day
  4484  0E01                     _get_day:	
  4485                           
  4486                           ;mainMaster.c: 301:     char d;;mainMaster.c: 303:     I2C_Master_Start();
  4487                           
  4488                           ;incstack = 0
  4489                           ; Regs used in _get_day: [wreg+status,2+status,0+pclath+cstack]
  4490  0E01  120A  158A  2451  120A  158A  	fcall	_I2C_Master_Start
  4491                           
  4492                           ;mainMaster.c: 304:     I2C_Master_Write(0xD0);
  4493  0E06  30D0               	movlw	208
  4494  0E07  00F0               	movwf	I2C_Master_Write@d
  4495  0E08  3000               	movlw	0
  4496  0E09  00F1               	movwf	I2C_Master_Write@d+1
  4497  0E0A  120A  158A  2466  120A  158A  	fcall	_I2C_Master_Write
  4498                           
  4499                           ;mainMaster.c: 305:     I2C_Master_Write(0x03);
  4500  0E0F  3003               	movlw	3
  4501  0E10  00F0               	movwf	I2C_Master_Write@d
  4502  0E11  3000               	movlw	0
  4503  0E12  00F1               	movwf	I2C_Master_Write@d+1
  4504  0E13  120A  158A  2466  120A  158A  	fcall	_I2C_Master_Write
  4505                           
  4506                           ;mainMaster.c: 306:     I2C_Master_RepeatedStart();
  4507  0E18  120A  158A  245F  120A  158A  	fcall	_I2C_Master_RepeatedStart
  4508                           
  4509                           ;mainMaster.c: 307:     I2C_Master_Write(0xD1);
  4510  0E1D  30D1               	movlw	209
  4511  0E1E  00F0               	movwf	I2C_Master_Write@d
  4512  0E1F  3000               	movlw	0
  4513  0E20  00F1               	movwf	I2C_Master_Write@d+1
  4514  0E21  120A  158A  2466  120A  158A  	fcall	_I2C_Master_Write
  4515                           
  4516                           ;mainMaster.c: 308:     d = I2C_Master_Read(0);
  4517  0E26  3000               	movlw	0
  4518  0E27  00F0               	movwf	I2C_Master_Read@a
  4519  0E28  00F1               	movwf	I2C_Master_Read@a+1
  4520  0E29  120A  158A  25A3  120A  158A  	fcall	_I2C_Master_Read
  4521  0E2E  0870               	movf	?_I2C_Master_Read,w
  4522  0E2F  00F6               	movwf	??_get_day
  4523  0E30  0876               	movf	??_get_day,w
  4524  0E31  00F7               	movwf	get_day@d
  4525                           
  4526                           ;mainMaster.c: 309:     I2C_Master_Stop();
  4527  0E32  120A  158A  2458   	fcall	_I2C_Master_Stop
  4528                           
  4529                           ;mainMaster.c: 311:     return d;
  4530  0E35  0877               	movf	get_day@d,w
  4531  0E36  0008               	return
  4532  0E37                     __end_of_get_day:	
  4533                           
  4534                           	psect	text19
  4535  0C5F                     __ptext19:	
  4536 ;; *************** function _I2C_Master_RepeatedStart *****************
  4537 ;; Defined at:
  4538 ;;		line 47 in file "./I2C.h"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;		None
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;		None
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1    wreg      void 
  4545 ;; Registers used:
  4546 ;;		wreg, status,2, status,0, pclath, cstack
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4552 ;;      Params:         0       0       0       0       0
  4553 ;;      Locals:         0       0       0       0       0
  4554 ;;      Temps:          0       0       0       0       0
  4555 ;;      Totals:         0       0       0       0       0
  4556 ;;Total ram usage:        0 bytes
  4557 ;; Hardware stack levels used:    1
  4558 ;; Hardware stack levels required when called:    1
  4559 ;; This function calls:
  4560 ;;		_I2C_Master_Wait
  4561 ;; This function is called by:
  4562 ;;		_get_time
  4563 ;;		_get_day
  4564 ;;		_get_temp
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           
  4569                           ;psect for function _I2C_Master_RepeatedStart
  4570  0C5F                     _I2C_Master_RepeatedStart:	
  4571                           
  4572                           ;./I2C.h: 49:     I2C_Master_Wait();
  4573                           
  4574                           ;incstack = 0
  4575                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  4576  0C5F  120A  158A  2476   	fcall	_I2C_Master_Wait
  4577                           
  4578                           ;./I2C.h: 50:     SSPCON2bits.RSEN = 1;
  4579  0C62  1683               	bsf	3,5	;RP0=1, select bank1
  4580  0C63  1303               	bcf	3,6	;RP1=0, select bank1
  4581  0C64  1491               	bsf	17,1	;volatile
  4582  0C65  0008               	return
  4583  0C66                     __end_of_I2C_Master_RepeatedStart:	
  4584                           
  4585                           	psect	text20
  4586  0CF8                     __ptext20:	
  4587 ;; *************** function _get_PIR *****************
  4588 ;; Defined at:
  4589 ;;		line 365 in file "mainMaster.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;		None
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  PIR             1    7[COMMON] unsigned char 
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      unsigned char 
  4596 ;; Registers used:
  4597 ;;		wreg, status,2, status,0, pclath, cstack
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4603 ;;      Params:         0       0       0       0       0
  4604 ;;      Locals:         1       0       0       0       0
  4605 ;;      Temps:          1       0       0       0       0
  4606 ;;      Totals:         2       0       0       0       0
  4607 ;;Total ram usage:        2 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; Hardware stack levels required when called:    2
  4610 ;; This function calls:
  4611 ;;		_I2C_Master_Read
  4612 ;;		_I2C_Master_Start
  4613 ;;		_I2C_Master_Stop
  4614 ;;		_I2C_Master_Write
  4615 ;; This function is called by:
  4616 ;;		_main
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           
  4621                           ;psect for function _get_PIR
  4622  0CF8                     _get_PIR:	
  4623                           
  4624                           ;mainMaster.c: 367:     char PIR;;mainMaster.c: 369:     I2C_Master_Start();
  4625                           
  4626                           ;incstack = 0
  4627                           ; Regs used in _get_PIR: [wreg+status,2+status,0+pclath+cstack]
  4628  0CF8  120A  158A  2451  120A  158A  	fcall	_I2C_Master_Start
  4629                           
  4630                           ;mainMaster.c: 370:     I2C_Master_Write(0x41);
  4631  0CFD  3041               	movlw	65
  4632  0CFE  00F0               	movwf	I2C_Master_Write@d
  4633  0CFF  3000               	movlw	0
  4634  0D00  00F1               	movwf	I2C_Master_Write@d+1
  4635  0D01  120A  158A  2466  120A  158A  	fcall	_I2C_Master_Write
  4636                           
  4637                           ;mainMaster.c: 371:     PIR = I2C_Master_Read(0);
  4638  0D06  3000               	movlw	0
  4639  0D07  00F0               	movwf	I2C_Master_Read@a
  4640  0D08  00F1               	movwf	I2C_Master_Read@a+1
  4641  0D09  120A  158A  25A3  120A  158A  	fcall	_I2C_Master_Read
  4642  0D0E  0870               	movf	?_I2C_Master_Read,w
  4643  0D0F  00F6               	movwf	??_get_PIR
  4644  0D10  0876               	movf	??_get_PIR,w
  4645  0D11  00F7               	movwf	get_PIR@PIR
  4646                           
  4647                           ;mainMaster.c: 372:     I2C_Master_Stop();
  4648  0D12  120A  158A  2458   	fcall	_I2C_Master_Stop
  4649                           
  4650                           ;mainMaster.c: 374:     return (PIR);
  4651  0D15  0877               	movf	get_PIR@PIR,w
  4652  0D16  0008               	return
  4653  0D17                     __end_of_get_PIR:	
  4654                           
  4655                           	psect	text21
  4656  0CD9                     __ptext21:	
  4657 ;; *************** function _get_IR *****************
  4658 ;; Defined at:
  4659 ;;		line 377 in file "mainMaster.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  IR              1    7[COMMON] unsigned char 
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      unsigned char 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0, pclath, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4673 ;;      Params:         0       0       0       0       0
  4674 ;;      Locals:         1       0       0       0       0
  4675 ;;      Temps:          1       0       0       0       0
  4676 ;;      Totals:         2       0       0       0       0
  4677 ;;Total ram usage:        2 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    2
  4680 ;; This function calls:
  4681 ;;		_I2C_Master_Read
  4682 ;;		_I2C_Master_Start
  4683 ;;		_I2C_Master_Stop
  4684 ;;		_I2C_Master_Write
  4685 ;; This function is called by:
  4686 ;;		_main
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           
  4691                           ;psect for function _get_IR
  4692  0CD9                     _get_IR:	
  4693                           
  4694                           ;mainMaster.c: 379:     char IR;;mainMaster.c: 381:     I2C_Master_Start();
  4695                           
  4696                           ;incstack = 0
  4697                           ; Regs used in _get_IR: [wreg+status,2+status,0+pclath+cstack]
  4698  0CD9  120A  158A  2451  120A  158A  	fcall	_I2C_Master_Start
  4699                           
  4700                           ;mainMaster.c: 382:     I2C_Master_Write(0x31);
  4701  0CDE  3031               	movlw	49
  4702  0CDF  00F0               	movwf	I2C_Master_Write@d
  4703  0CE0  3000               	movlw	0
  4704  0CE1  00F1               	movwf	I2C_Master_Write@d+1
  4705  0CE2  120A  158A  2466  120A  158A  	fcall	_I2C_Master_Write
  4706                           
  4707                           ;mainMaster.c: 383:     IR = I2C_Master_Read(0);
  4708  0CE7  3000               	movlw	0
  4709  0CE8  00F0               	movwf	I2C_Master_Read@a
  4710  0CE9  00F1               	movwf	I2C_Master_Read@a+1
  4711  0CEA  120A  158A  25A3  120A  158A  	fcall	_I2C_Master_Read
  4712  0CEF  0870               	movf	?_I2C_Master_Read,w
  4713  0CF0  00F6               	movwf	??_get_IR
  4714  0CF1  0876               	movf	??_get_IR,w
  4715  0CF2  00F7               	movwf	get_IR@IR
  4716                           
  4717                           ;mainMaster.c: 384:     I2C_Master_Stop();
  4718  0CF3  120A  158A  2458   	fcall	_I2C_Master_Stop
  4719                           
  4720                           ;mainMaster.c: 386:     return (IR);
  4721  0CF6  0877               	movf	get_IR@IR,w
  4722  0CF7  0008               	return
  4723  0CF8                     __end_of_get_IR:	
  4724                           
  4725                           	psect	text22
  4726  0C66                     __ptext22:	
  4727 ;; *************** function _I2C_Master_Write *****************
  4728 ;; Defined at:
  4729 ;;		line 65 in file "./I2C.h"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;  d               2    0[COMMON] unsigned int 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;		None
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2, status,0, pclath, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4743 ;;      Params:         2       0       0       0       0
  4744 ;;      Locals:         0       0       0       0       0
  4745 ;;      Temps:          0       0       0       0       0
  4746 ;;      Totals:         2       0       0       0       0
  4747 ;;Total ram usage:        2 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; Hardware stack levels required when called:    1
  4750 ;; This function calls:
  4751 ;;		_I2C_Master_Wait
  4752 ;; This function is called by:
  4753 ;;		_get_time
  4754 ;;		_get_day
  4755 ;;		_get_temp
  4756 ;;		_get_hall
  4757 ;;		_get_tripwire
  4758 ;;		_get_PIR
  4759 ;;		_get_IR
  4760 ;;		_write_RTC
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           
  4765                           ;psect for function _I2C_Master_Write
  4766  0C66                     _I2C_Master_Write:	
  4767                           
  4768                           ;./I2C.h: 65: void I2C_Master_Write(unsigned d);./I2C.h: 66: {;./I2C.h: 67:     I2C_Mast
      +                          er_Wait();
  4769                           
  4770                           ;incstack = 0
  4771                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4772  0C66  120A  158A  2476   	fcall	_I2C_Master_Wait
  4773                           
  4774                           ;./I2C.h: 68:     SSPBUF = d;
  4775  0C69  0870               	movf	I2C_Master_Write@d,w
  4776  0C6A  1283               	bcf	3,5	;RP0=0, select bank0
  4777  0C6B  1303               	bcf	3,6	;RP1=0, select bank0
  4778  0C6C  0093               	movwf	19	;volatile
  4779  0C6D  0008               	return
  4780  0C6E                     __end_of_I2C_Master_Write:	
  4781                           
  4782                           	psect	text23
  4783  0C58                     __ptext23:	
  4784 ;; *************** function _I2C_Master_Stop *****************
  4785 ;; Defined at:
  4786 ;;		line 55 in file "./I2C.h"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;		None
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;		None
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  1    wreg      void 
  4793 ;; Registers used:
  4794 ;;		wreg, status,2, status,0, pclath, cstack
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4800 ;;      Params:         0       0       0       0       0
  4801 ;;      Locals:         0       0       0       0       0
  4802 ;;      Temps:          0       0       0       0       0
  4803 ;;      Totals:         0       0       0       0       0
  4804 ;;Total ram usage:        0 bytes
  4805 ;; Hardware stack levels used:    1
  4806 ;; Hardware stack levels required when called:    1
  4807 ;; This function calls:
  4808 ;;		_I2C_Master_Wait
  4809 ;; This function is called by:
  4810 ;;		_get_time
  4811 ;;		_get_day
  4812 ;;		_get_temp
  4813 ;;		_get_hall
  4814 ;;		_get_tripwire
  4815 ;;		_get_PIR
  4816 ;;		_get_IR
  4817 ;;		_write_RTC
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           
  4822                           ;psect for function _I2C_Master_Stop
  4823  0C58                     _I2C_Master_Stop:	
  4824                           
  4825                           ;./I2C.h: 57:     I2C_Master_Wait();
  4826                           
  4827                           ;incstack = 0
  4828                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4829  0C58  120A  158A  2476   	fcall	_I2C_Master_Wait
  4830                           
  4831                           ;./I2C.h: 58:     SSPCON2bits.PEN = 1;
  4832  0C5B  1683               	bsf	3,5	;RP0=1, select bank1
  4833  0C5C  1303               	bcf	3,6	;RP1=0, select bank1
  4834  0C5D  1511               	bsf	17,2	;volatile
  4835  0C5E  0008               	return
  4836  0C5F                     __end_of_I2C_Master_Stop:	
  4837                           
  4838                           	psect	text24
  4839  0C51                     __ptext24:	
  4840 ;; *************** function _I2C_Master_Start *****************
  4841 ;; Defined at:
  4842 ;;		line 39 in file "./I2C.h"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;		None
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;		None
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  1    wreg      void 
  4849 ;; Registers used:
  4850 ;;		wreg, status,2, status,0, pclath, cstack
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4856 ;;      Params:         0       0       0       0       0
  4857 ;;      Locals:         0       0       0       0       0
  4858 ;;      Temps:          0       0       0       0       0
  4859 ;;      Totals:         0       0       0       0       0
  4860 ;;Total ram usage:        0 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:    1
  4863 ;; This function calls:
  4864 ;;		_I2C_Master_Wait
  4865 ;; This function is called by:
  4866 ;;		_get_time
  4867 ;;		_get_day
  4868 ;;		_get_temp
  4869 ;;		_get_hall
  4870 ;;		_get_tripwire
  4871 ;;		_get_PIR
  4872 ;;		_get_IR
  4873 ;;		_write_RTC
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           
  4878                           ;psect for function _I2C_Master_Start
  4879  0C51                     _I2C_Master_Start:	
  4880                           
  4881                           ;./I2C.h: 41:     I2C_Master_Wait();
  4882                           
  4883                           ;incstack = 0
  4884                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4885  0C51  120A  158A  2476   	fcall	_I2C_Master_Wait
  4886                           
  4887                           ;./I2C.h: 42:     SSPCON2bits.SEN = 1;
  4888  0C54  1683               	bsf	3,5	;RP0=1, select bank1
  4889  0C55  1303               	bcf	3,6	;RP1=0, select bank1
  4890  0C56  1411               	bsf	17,0	;volatile
  4891  0C57  0008               	return
  4892  0C58                     __end_of_I2C_Master_Start:	
  4893                           
  4894                           	psect	text25
  4895  0DA3                     __ptext25:	
  4896 ;; *************** function _I2C_Master_Read *****************
  4897 ;; Defined at:
  4898 ;;		line 74 in file "./I2C.h"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;  a               2    0[COMMON] unsigned short 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;  temp            2    4[COMMON] unsigned short 
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  2    0[COMMON] unsigned short 
  4905 ;; Registers used:
  4906 ;;		wreg, status,2, status,0, pclath, cstack
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4912 ;;      Params:         2       0       0       0       0
  4913 ;;      Locals:         2       0       0       0       0
  4914 ;;      Temps:          2       0       0       0       0
  4915 ;;      Totals:         6       0       0       0       0
  4916 ;;Total ram usage:        6 bytes
  4917 ;; Hardware stack levels used:    1
  4918 ;; Hardware stack levels required when called:    1
  4919 ;; This function calls:
  4920 ;;		_I2C_Master_Wait
  4921 ;; This function is called by:
  4922 ;;		_get_time
  4923 ;;		_get_day
  4924 ;;		_get_temp
  4925 ;;		_get_hall
  4926 ;;		_get_tripwire
  4927 ;;		_get_PIR
  4928 ;;		_get_IR
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           
  4933                           ;psect for function _I2C_Master_Read
  4934  0DA3                     _I2C_Master_Read:	
  4935                           
  4936                           ;./I2C.h: 74: unsigned short I2C_Master_Read(unsigned short a);./I2C.h: 75: {;./I2C.h: 7
      +                          6:     unsigned short temp;;./I2C.h: 77:     I2C_Master_Wait();
  4937                           
  4938                           ;incstack = 0
  4939                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4940  0DA3  120A  158A  2476  120A  158A  	fcall	_I2C_Master_Wait
  4941                           
  4942                           ;./I2C.h: 78:     RCEN = 1;
  4943  0DA8  1683               	bsf	3,5	;RP0=1, select bank1
  4944  0DA9  1303               	bcf	3,6	;RP1=0, select bank1
  4945  0DAA  1591               	bsf	17,3	;volatile
  4946                           
  4947                           ;./I2C.h: 79:     I2C_Master_Wait();
  4948  0DAB  120A  158A  2476  120A  158A  	fcall	_I2C_Master_Wait
  4949                           
  4950                           ;./I2C.h: 80:     temp = SSPBUF;
  4951  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  4952  0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  4953  0DB2  0813               	movf	19,w	;volatile
  4954  0DB3  00F2               	movwf	??_I2C_Master_Read
  4955  0DB4  01F3               	clrf	??_I2C_Master_Read+1
  4956  0DB5  0872               	movf	??_I2C_Master_Read,w
  4957  0DB6  00F4               	movwf	I2C_Master_Read@temp
  4958  0DB7  0873               	movf	??_I2C_Master_Read+1,w
  4959  0DB8  00F5               	movwf	I2C_Master_Read@temp+1
  4960                           
  4961                           ;./I2C.h: 81:     I2C_Master_Wait();
  4962  0DB9  120A  158A  2476  120A  158A  	fcall	_I2C_Master_Wait
  4963                           
  4964                           ;./I2C.h: 83:     if(a == 1){
  4965  0DBE  0370               	decf	I2C_Master_Read@a,w
  4966  0DBF  0471               	iorwf	I2C_Master_Read@a+1,w
  4967  0DC0  1D03               	btfss	3,2
  4968  0DC1  2DC6               	goto	l130
  4969                           
  4970                           ;./I2C.h: 84:         SSPCON2bits.ACKDT = 0;
  4971  0DC2  1683               	bsf	3,5	;RP0=1, select bank1
  4972  0DC3  1303               	bcf	3,6	;RP1=0, select bank1
  4973  0DC4  1291               	bcf	17,5	;volatile
  4974                           
  4975                           ;./I2C.h: 85:     }else{
  4976  0DC5  2DC9               	goto	l131
  4977  0DC6                     l130:	
  4978                           
  4979                           ;./I2C.h: 86:         SSPCON2bits.ACKDT = 1;
  4980  0DC6  1683               	bsf	3,5	;RP0=1, select bank1
  4981  0DC7  1303               	bcf	3,6	;RP1=0, select bank1
  4982  0DC8  1691               	bsf	17,5	;volatile
  4983  0DC9                     l131:	
  4984                           ;./I2C.h: 87:     }
  4985                           
  4986                           
  4987                           ;./I2C.h: 88:     SSPCON2bits.ACKEN = 1;
  4988  0DC9  1611               	bsf	17,4	;volatile
  4989                           
  4990                           ;./I2C.h: 89:     return temp;
  4991  0DCA  0875               	movf	I2C_Master_Read@temp+1,w
  4992  0DCB  00F1               	movwf	?_I2C_Master_Read+1
  4993  0DCC  0874               	movf	I2C_Master_Read@temp,w
  4994  0DCD  00F0               	movwf	?_I2C_Master_Read
  4995  0DCE  0008               	return
  4996  0DCF                     __end_of_I2C_Master_Read:	
  4997                           
  4998                           	psect	text26
  4999  0C76                     __ptext26:	
  5000 ;; *************** function _I2C_Master_Wait *****************
  5001 ;; Defined at:
  5002 ;;		line 32 in file "./I2C.h"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;		None
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  1    wreg      void 
  5009 ;; Registers used:
  5010 ;;		wreg, status,2
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5016 ;;      Params:         0       0       0       0       0
  5017 ;;      Locals:         0       0       0       0       0
  5018 ;;      Temps:          0       0       0       0       0
  5019 ;;      Totals:         0       0       0       0       0
  5020 ;;Total ram usage:        0 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; This function calls:
  5023 ;;		Nothing
  5024 ;; This function is called by:
  5025 ;;		_I2C_Master_Start
  5026 ;;		_I2C_Master_RepeatedStart
  5027 ;;		_I2C_Master_Stop
  5028 ;;		_I2C_Master_Write
  5029 ;;		_I2C_Master_Read
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           
  5034                           ;psect for function _I2C_Master_Wait
  5035  0C76                     _I2C_Master_Wait:	
  5036  0C76                     l112:	
  5037                           ;./I2C.h: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5038                           
  5039                           ;incstack = 0
  5040                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  5041                           
  5042  0C76  1683               	bsf	3,5	;RP0=1, select bank1
  5043  0C77  1303               	bcf	3,6	;RP1=0, select bank1
  5044  0C78  1914               	btfsc	20,2	;volatile
  5045  0C79  2C76               	goto	l112
  5046  0C7A  0811               	movf	17,w	;volatile
  5047  0C7B  391F               	andlw	31
  5048  0C7C  1903               	btfsc	3,2
  5049  0C7D  0008               	return
  5050  0C7E  2C76               	goto	l112
  5051  0C7F                     __end_of_I2C_Master_Wait:	
  5052                           
  5053                           	psect	text27
  5054  0C7F                     __ptext27:	
  5055 ;; *************** function _UART_Write *****************
  5056 ;; Defined at:
  5057 ;;		line 54 in file "./UART.h"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  data            1    wreg     unsigned char 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  data            1    0[COMMON] unsigned char 
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  1    wreg      void 
  5064 ;; Registers used:
  5065 ;;		wreg
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5071 ;;      Params:         0       0       0       0       0
  5072 ;;      Locals:         1       0       0       0       0
  5073 ;;      Temps:          0       0       0       0       0
  5074 ;;      Totals:         1       0       0       0       0
  5075 ;;Total ram usage:        1 bytes
  5076 ;; Hardware stack levels used:    1
  5077 ;; This function calls:
  5078 ;;		Nothing
  5079 ;; This function is called by:
  5080 ;;		_main
  5081 ;;		_UART_Write_Text
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           
  5086                           ;psect for function _UART_Write
  5087  0C7F                     _UART_Write:	
  5088                           
  5089                           ;incstack = 0
  5090                           ; Regs used in _UART_Write: [wreg]
  5091                           ;UART_Write@data stored from wreg
  5092  0C7F  00F0               	movwf	UART_Write@data
  5093  0C80                     l216:	
  5094                           ;./UART.h: 54: void UART_Write(char data);./UART.h: 55: {;./UART.h: 56:   while(!TRMT);
  5095                           
  5096  0C80  1683               	bsf	3,5	;RP0=1, select bank1
  5097  0C81  1303               	bcf	3,6	;RP1=0, select bank1
  5098  0C82  1C98               	btfss	24,1	;volatile
  5099  0C83  2C80               	goto	l216
  5100                           
  5101                           ;./UART.h: 57:   TXREG = data;
  5102  0C84  0870               	movf	UART_Write@data,w
  5103  0C85  1283               	bcf	3,5	;RP0=0, select bank0
  5104  0C86  1303               	bcf	3,6	;RP1=0, select bank0
  5105  0C87  0099               	movwf	25	;volatile
  5106  0C88  0008               	return
  5107  0C89                     __end_of_UART_Write:	
  5108                           
  5109                           	psect	text28
  5110  0C4B                     __ptext28:	
  5111 ;; *************** function _UART_TX_Empty *****************
  5112 ;; Defined at:
  5113 ;;		line 31 in file "./UART.h"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;		None
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;		None
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  1    wreg      unsigned char 
  5120 ;; Registers used:
  5121 ;;		wreg
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5127 ;;      Params:         0       0       0       0       0
  5128 ;;      Locals:         0       0       0       0       0
  5129 ;;      Temps:          0       0       0       0       0
  5130 ;;      Totals:         0       0       0       0       0
  5131 ;;Total ram usage:        0 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; This function calls:
  5134 ;;		Nothing
  5135 ;; This function is called by:
  5136 ;;		_main
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           
  5141                           ;psect for function _UART_TX_Empty
  5142  0C4B                     _UART_TX_Empty:	
  5143                           
  5144                           ;./UART.h: 33:   return TRMT;
  5145                           
  5146                           ;incstack = 0
  5147                           ; Regs used in _UART_TX_Empty: [wreg]
  5148  0C4B  3000               	movlw	0
  5149  0C4C  1683               	bsf	3,5	;RP0=1, select bank1
  5150  0C4D  1303               	bcf	3,6	;RP1=0, select bank1
  5151  0C4E  1898               	btfsc	24,1	;volatile
  5152  0C4F  3001               	movlw	1
  5153  0C50  0008               	return
  5154  0C51                     __end_of_UART_TX_Empty:	
  5155                           
  5156                           	psect	text29
  5157  0EE2                     __ptext29:	
  5158 ;; *************** function _Lcd_Write_String *****************
  5159 ;; Defined at:
  5160 ;;		line 100 in file "./LCD4bits.h"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;  a               2    5[COMMON] PTR unsigned char 
  5163 ;;		 -> NULL(0), STR_27(10), STR_26(10), STR_25(10), 
  5164 ;;		 -> STR_24(10), STR_23(10), STR_22(10), STR_21(10), 
  5165 ;;		 -> STR_20(10), STR_19(6), STR_18(7), STR_17(7), 
  5166 ;;		 -> STR_16(7), STR_15(8), STR_14(8), STR_13(9), 
  5167 ;;		 -> STR_12(9), STR_11(12), STR_10(12), newtime(6), 
  5168 ;;		 -> STR_8(10), STR_7(10), STR_6(10), STR_5(10), 
  5169 ;;		 -> STR_4(10), STR_3(10), STR_2(10), STR_1(10), 
  5170 ;;		 -> time(6), temp(6), 
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;  i               2   10[COMMON] int 
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  1    wreg      void 
  5175 ;; Registers used:
  5176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5182 ;;      Params:         2       0       0       0       0
  5183 ;;      Locals:         2       0       0       0       0
  5184 ;;      Temps:          3       0       0       0       0
  5185 ;;      Totals:         7       0       0       0       0
  5186 ;;Total ram usage:        7 bytes
  5187 ;; Hardware stack levels used:    1
  5188 ;; Hardware stack levels required when called:    2
  5189 ;; This function calls:
  5190 ;;		_Lcd_Write_Char
  5191 ;; This function is called by:
  5192 ;;		_main
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196                           
  5197                           ;psect for function _Lcd_Write_String
  5198  0EE2                     _Lcd_Write_String:	
  5199                           
  5200                           ;./LCD4bits.h: 100: void Lcd_Write_String(char *a);./LCD4bits.h: 101: {;./LCD4bits.h: 10
      +                          2:  int i;;./LCD4bits.h: 103:  for(i=0;a[i]!='\0';i++)
  5201                           
  5202                           ;incstack = 0
  5203                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5204  0EE2  01FA               	clrf	Lcd_Write_String@i
  5205  0EE3  01FB               	clrf	Lcd_Write_String@i+1
  5206  0EE4                     l2185:	
  5207  0EE4  087A               	movf	Lcd_Write_String@i,w
  5208  0EE5  0775               	addwf	Lcd_Write_String@a,w
  5209  0EE6  00F8               	movwf	??_Lcd_Write_String+1
  5210  0EE7  0876               	movf	Lcd_Write_String@a+1,w
  5211  0EE8  00F7               	movwf	??_Lcd_Write_String
  5212  0EE9  1803               	skipnc
  5213  0EEA  0AF7               	incf	??_Lcd_Write_String,f
  5214  0EEB  1BFA               	btfsc	Lcd_Write_String@i,7
  5215  0EEC  03F7               	decf	??_Lcd_Write_String,f
  5216  0EED  0877               	movf	??_Lcd_Write_String,w
  5217  0EEE  00F9               	movwf	??_Lcd_Write_String+2
  5218  0EEF  0879               	movf	??_Lcd_Write_String+2,w
  5219  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  5220  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  5221  0EF2  00FF               	movwf	127
  5222  0EF3  0878               	movf	??_Lcd_Write_String+1,w
  5223  0EF4  0084               	movwf	4
  5224  0EF5  120A  118A  2003  120A  158A  	fcall	stringtab
  5225  0EFA  3A00               	xorlw	0
  5226  0EFB  1903               	btfsc	3,2
  5227  0EFC  0008               	return
  5228                           
  5229                           ;./LCD4bits.h: 104:     Lcd_Write_Char(a[i]);
  5230  0EFD  087A               	movf	Lcd_Write_String@i,w
  5231  0EFE  0775               	addwf	Lcd_Write_String@a,w
  5232  0EFF  00F8               	movwf	??_Lcd_Write_String+1
  5233  0F00  0876               	movf	Lcd_Write_String@a+1,w
  5234  0F01  00F7               	movwf	??_Lcd_Write_String
  5235  0F02  1803               	skipnc
  5236  0F03  0AF7               	incf	??_Lcd_Write_String,f
  5237  0F04  1BFA               	btfsc	Lcd_Write_String@i,7
  5238  0F05  03F7               	decf	??_Lcd_Write_String,f
  5239  0F06  0877               	movf	??_Lcd_Write_String,w
  5240  0F07  00F9               	movwf	??_Lcd_Write_String+2
  5241  0F08  0879               	movf	??_Lcd_Write_String+2,w
  5242  0F09  1283               	bcf	3,5	;RP0=0, select bank0
  5243  0F0A  1303               	bcf	3,6	;RP1=0, select bank0
  5244  0F0B  00FF               	movwf	127
  5245  0F0C  0878               	movf	??_Lcd_Write_String+1,w
  5246  0F0D  0084               	movwf	4
  5247  0F0E  120A  118A  2003  120A  158A  	fcall	stringtab
  5248  0F13  120A  158A  266D  120A  158A  	fcall	_Lcd_Write_Char
  5249  0F18  3001               	movlw	1
  5250  0F19  07FA               	addwf	Lcd_Write_String@i,f
  5251  0F1A  1803               	skipnc
  5252  0F1B  0AFB               	incf	Lcd_Write_String@i+1,f
  5253  0F1C  3000               	movlw	0
  5254  0F1D  07FB               	addwf	Lcd_Write_String@i+1,f
  5255  0F1E  2EE4               	goto	l2185
  5256  0F1F                     __end_of_Lcd_Write_String:	
  5257                           
  5258                           	psect	text30
  5259  0E6D                     __ptext30:	
  5260 ;; *************** function _Lcd_Write_Char *****************
  5261 ;; Defined at:
  5262 ;;		line 84 in file "./LCD4bits.h"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  a               1    wreg     unsigned char 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;  a               1    4[COMMON] unsigned char 
  5267 ;;  y               1    3[COMMON] unsigned char 
  5268 ;;  temp            1    2[COMMON] unsigned char 
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  1    wreg      void 
  5271 ;; Registers used:
  5272 ;;		wreg, status,2, status,0, pclath, cstack
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5278 ;;      Params:         0       0       0       0       0
  5279 ;;      Locals:         3       0       0       0       0
  5280 ;;      Temps:          1       0       0       0       0
  5281 ;;      Totals:         4       0       0       0       0
  5282 ;;Total ram usage:        4 bytes
  5283 ;; Hardware stack levels used:    1
  5284 ;; Hardware stack levels required when called:    1
  5285 ;; This function calls:
  5286 ;;		_Lcd_Port
  5287 ;; This function is called by:
  5288 ;;		_Lcd_Write_String
  5289 ;;		_main
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           
  5294                           ;psect for function _Lcd_Write_Char
  5295  0E6D                     _Lcd_Write_Char:	
  5296                           
  5297                           ;incstack = 0
  5298                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5299                           ;Lcd_Write_Char@a stored from wreg
  5300  0E6D  00F4               	movwf	Lcd_Write_Char@a
  5301                           
  5302                           ;./LCD4bits.h: 84: void Lcd_Write_Char(char a);./LCD4bits.h: 85: {;./LCD4bits.h: 86:    
      +                          char temp,y;;./LCD4bits.h: 87:    temp = a&0x0F;
  5303  0E6E  0874               	movf	Lcd_Write_Char@a,w
  5304  0E6F  390F               	andlw	15
  5305  0E70  00F1               	movwf	??_Lcd_Write_Char
  5306  0E71  0871               	movf	??_Lcd_Write_Char,w
  5307  0E72  00F2               	movwf	Lcd_Write_Char@temp
  5308                           
  5309                           ;./LCD4bits.h: 88:    y = a&0xF0;
  5310  0E73  0874               	movf	Lcd_Write_Char@a,w
  5311  0E74  39F0               	andlw	240
  5312  0E75  00F1               	movwf	??_Lcd_Write_Char
  5313  0E76  0871               	movf	??_Lcd_Write_Char,w
  5314  0E77  00F3               	movwf	Lcd_Write_Char@y
  5315                           
  5316                           ;./LCD4bits.h: 89:    PORTBbits.RB4 = 1;
  5317  0E78  1283               	bcf	3,5	;RP0=0, select bank0
  5318  0E79  1303               	bcf	3,6	;RP1=0, select bank0
  5319  0E7A  1606               	bsf	6,4	;volatile
  5320                           
  5321                           ;./LCD4bits.h: 90:    Lcd_Port(y>>4);
  5322  0E7B  0873               	movf	Lcd_Write_Char@y,w
  5323  0E7C  00F1               	movwf	??_Lcd_Write_Char
  5324  0E7D  3004               	movlw	4
  5325  0E7E                     u1295:	
  5326  0E7E  1003               	clrc
  5327  0E7F  0CF1               	rrf	??_Lcd_Write_Char,f
  5328  0E80  3EFF               	addlw	-1
  5329  0E81  1D03               	skipz
  5330  0E82  2E7E               	goto	u1295
  5331  0E83  0871               	movf	??_Lcd_Write_Char,w
  5332  0E84  120A  158A  24A5  120A  158A  	fcall	_Lcd_Port
  5333                           
  5334                           ;./LCD4bits.h: 91:    PORTBbits.RB5 = 1;
  5335  0E89  1283               	bcf	3,5	;RP0=0, select bank0
  5336  0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  5337  0E8B  1686               	bsf	6,5	;volatile
  5338                           
  5339                           ;./LCD4bits.h: 92:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  5340  0E8C  301A               	movlw	26
  5341  0E8D  00F1               	movwf	??_Lcd_Write_Char
  5342  0E8E                     u1967:	
  5343  0E8E  0BF1               	decfsz	??_Lcd_Write_Char,f
  5344  0E8F  2E8E               	goto	u1967
  5345  0E90  0000               	nop
  5346                           
  5347                           ;./LCD4bits.h: 93:    PORTBbits.RB5 = 0;
  5348  0E91  1283               	bcf	3,5	;RP0=0, select bank0
  5349  0E92  1303               	bcf	3,6	;RP1=0, select bank0
  5350  0E93  1286               	bcf	6,5	;volatile
  5351                           
  5352                           ;./LCD4bits.h: 94:    Lcd_Port(temp);
  5353  0E94  0872               	movf	Lcd_Write_Char@temp,w
  5354  0E95  120A  158A  24A5  120A  158A  	fcall	_Lcd_Port
  5355                           
  5356                           ;./LCD4bits.h: 95:    PORTBbits.RB5 = 1;
  5357  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  5358  0E9B  1303               	bcf	3,6	;RP1=0, select bank0
  5359  0E9C  1686               	bsf	6,5	;volatile
  5360                           
  5361                           ;./LCD4bits.h: 96:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  5362  0E9D  301A               	movlw	26
  5363  0E9E  00F1               	movwf	??_Lcd_Write_Char
  5364  0E9F                     u1977:	
  5365  0E9F  0BF1               	decfsz	??_Lcd_Write_Char,f
  5366  0EA0  2E9F               	goto	u1977
  5367  0EA1  0000               	nop
  5368                           
  5369                           ;./LCD4bits.h: 97:    PORTBbits.RB5 = 0;
  5370  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  5371  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  5372  0EA4  1286               	bcf	6,5	;volatile
  5373  0EA5  0008               	return
  5374  0EA6                     __end_of_Lcd_Write_Char:	
  5375                           
  5376                           	psect	text31
  5377  0F61                     __ptext31:	
  5378 ;; *************** function _Lcd_Set_Cursor *****************
  5379 ;; Defined at:
  5380 ;;		line 44 in file "./LCD4bits.h"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;  a               1    wreg     unsigned char 
  5383 ;;  b               1    4[COMMON] unsigned char 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;  a               1    7[COMMON] unsigned char 
  5386 ;;  temp            1   10[COMMON] unsigned char 
  5387 ;;  y               1    9[COMMON] unsigned char 
  5388 ;;  z               1    8[COMMON] unsigned char 
  5389 ;; Return value:  Size  Location     Type
  5390 ;;                  1    wreg      void 
  5391 ;; Registers used:
  5392 ;;		wreg, status,2, status,0, pclath, cstack
  5393 ;; Tracked objects:
  5394 ;;		On entry : 0/0
  5395 ;;		On exit  : 0/0
  5396 ;;		Unchanged: 0/0
  5397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5398 ;;      Params:         1       0       0       0       0
  5399 ;;      Locals:         4       0       0       0       0
  5400 ;;      Temps:          2       0       0       0       0
  5401 ;;      Totals:         7       0       0       0       0
  5402 ;;Total ram usage:        7 bytes
  5403 ;; Hardware stack levels used:    1
  5404 ;; Hardware stack levels required when called:    2
  5405 ;; This function calls:
  5406 ;;		_Lcd_Cmd
  5407 ;; This function is called by:
  5408 ;;		_main
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411                           
  5412                           
  5413                           ;psect for function _Lcd_Set_Cursor
  5414  0F61                     _Lcd_Set_Cursor:	
  5415                           
  5416                           ;incstack = 0
  5417                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  5418                           ;Lcd_Set_Cursor@a stored from wreg
  5419  0F61  00F7               	movwf	Lcd_Set_Cursor@a
  5420                           
  5421                           ;./LCD4bits.h: 44: void Lcd_Set_Cursor(char a, char b);./LCD4bits.h: 45: {;./LCD4bits.h:
      +                           46:  char temp,z,y;;./LCD4bits.h: 47:  if(a == 1)
  5422  0F62  0377               	decf	Lcd_Set_Cursor@a,w
  5423  0F63  1D03               	btfss	3,2
  5424  0F64  2F86               	goto	l2169
  5425                           
  5426                           ;./LCD4bits.h: 48:  {;./LCD4bits.h: 49:    temp = 0x80 + b - 1;
  5427  0F65  0874               	movf	Lcd_Set_Cursor@b,w
  5428  0F66  3E7F               	addlw	127
  5429  0F67  00F5               	movwf	??_Lcd_Set_Cursor
  5430  0F68  0875               	movf	??_Lcd_Set_Cursor,w
  5431  0F69  00FA               	movwf	Lcd_Set_Cursor@temp
  5432                           
  5433                           ;./LCD4bits.h: 50:   z = temp>>4;
  5434  0F6A  087A               	movf	Lcd_Set_Cursor@temp,w
  5435  0F6B  00F5               	movwf	??_Lcd_Set_Cursor
  5436  0F6C  3004               	movlw	4
  5437  0F6D                     u1505:	
  5438  0F6D  1003               	clrc
  5439  0F6E  0CF5               	rrf	??_Lcd_Set_Cursor,f
  5440  0F6F  3EFF               	addlw	-1
  5441  0F70  1D03               	skipz
  5442  0F71  2F6D               	goto	u1505
  5443  0F72  0875               	movf	??_Lcd_Set_Cursor,w
  5444  0F73  00F6               	movwf	??_Lcd_Set_Cursor+1
  5445  0F74  0876               	movf	??_Lcd_Set_Cursor+1,w
  5446  0F75  00F8               	movwf	Lcd_Set_Cursor@z
  5447                           
  5448                           ;./LCD4bits.h: 51:   y = temp & 0x0F;
  5449  0F76  087A               	movf	Lcd_Set_Cursor@temp,w
  5450  0F77  390F               	andlw	15
  5451  0F78  00F5               	movwf	??_Lcd_Set_Cursor
  5452  0F79  0875               	movf	??_Lcd_Set_Cursor,w
  5453  0F7A  00F9               	movwf	Lcd_Set_Cursor@y
  5454                           
  5455                           ;./LCD4bits.h: 52:   Lcd_Cmd(z);
  5456  0F7B  0878               	movf	Lcd_Set_Cursor@z,w
  5457  0F7C  120A  158A  24BF  120A  158A  	fcall	_Lcd_Cmd
  5458                           
  5459                           ;./LCD4bits.h: 53:   Lcd_Cmd(y);
  5460  0F81  0879               	movf	Lcd_Set_Cursor@y,w
  5461  0F82  120A  158A  24BF   	fcall	_Lcd_Cmd
  5462                           
  5463                           ;./LCD4bits.h: 54:  }
  5464  0F85  0008               	return
  5465  0F86                     l2169:	
  5466  0F86  3002               	movlw	2
  5467  0F87  0677               	xorwf	Lcd_Set_Cursor@a,w
  5468  0F88  1D03               	btfss	3,2
  5469  0F89  0008               	return
  5470                           
  5471                           ;./LCD4bits.h: 56:  {;./LCD4bits.h: 57:   temp = 0xC0 + b - 1;
  5472  0F8A  0874               	movf	Lcd_Set_Cursor@b,w
  5473  0F8B  3EBF               	addlw	191
  5474  0F8C  00F5               	movwf	??_Lcd_Set_Cursor
  5475  0F8D  0875               	movf	??_Lcd_Set_Cursor,w
  5476  0F8E  00FA               	movwf	Lcd_Set_Cursor@temp
  5477                           
  5478                           ;./LCD4bits.h: 58:   z = temp>>4;
  5479  0F8F  087A               	movf	Lcd_Set_Cursor@temp,w
  5480  0F90  00F5               	movwf	??_Lcd_Set_Cursor
  5481  0F91  3004               	movlw	4
  5482  0F92                     u1525:	
  5483  0F92  1003               	clrc
  5484  0F93  0CF5               	rrf	??_Lcd_Set_Cursor,f
  5485  0F94  3EFF               	addlw	-1
  5486  0F95  1D03               	skipz
  5487  0F96  2F92               	goto	u1525
  5488  0F97  0875               	movf	??_Lcd_Set_Cursor,w
  5489  0F98  00F6               	movwf	??_Lcd_Set_Cursor+1
  5490  0F99  0876               	movf	??_Lcd_Set_Cursor+1,w
  5491  0F9A  00F8               	movwf	Lcd_Set_Cursor@z
  5492                           
  5493                           ;./LCD4bits.h: 59:   y = temp & 0x0F;
  5494  0F9B  087A               	movf	Lcd_Set_Cursor@temp,w
  5495  0F9C  390F               	andlw	15
  5496  0F9D  00F5               	movwf	??_Lcd_Set_Cursor
  5497  0F9E  0875               	movf	??_Lcd_Set_Cursor,w
  5498  0F9F  00F9               	movwf	Lcd_Set_Cursor@y
  5499                           
  5500                           ;./LCD4bits.h: 60:   Lcd_Cmd(z);
  5501  0FA0  0878               	movf	Lcd_Set_Cursor@z,w
  5502  0FA1  120A  158A  24BF  120A  158A  	fcall	_Lcd_Cmd
  5503                           
  5504                           ;./LCD4bits.h: 61:   Lcd_Cmd(y);
  5505  0FA6  0879               	movf	Lcd_Set_Cursor@y,w
  5506  0FA7  120A  158A  24BF   	fcall	_Lcd_Cmd
  5507  0FAA  0008               	return
  5508  0FAB                     __end_of_Lcd_Set_Cursor:	
  5509                           
  5510                           	psect	text32
  5511  0C89                     __ptext32:	
  5512 ;; *************** function _Lcd_Clear *****************
  5513 ;; Defined at:
  5514 ;;		line 38 in file "./LCD4bits.h"
  5515 ;; Parameters:    Size  Location     Type
  5516 ;;		None
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;		None
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  1    wreg      void 
  5521 ;; Registers used:
  5522 ;;		wreg, status,2, status,0, pclath, cstack
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5528 ;;      Params:         0       0       0       0       0
  5529 ;;      Locals:         0       0       0       0       0
  5530 ;;      Temps:          0       0       0       0       0
  5531 ;;      Totals:         0       0       0       0       0
  5532 ;;Total ram usage:        0 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; Hardware stack levels required when called:    2
  5535 ;; This function calls:
  5536 ;;		_Lcd_Cmd
  5537 ;; This function is called by:
  5538 ;;		_main
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           
  5543                           ;psect for function _Lcd_Clear
  5544  0C89                     _Lcd_Clear:	
  5545                           
  5546                           ;./LCD4bits.h: 40:  Lcd_Cmd(0);
  5547                           
  5548                           ;incstack = 0
  5549                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  5550  0C89  3000               	movlw	0
  5551  0C8A  120A  158A  24BF  120A  158A  	fcall	_Lcd_Cmd
  5552                           
  5553                           ;./LCD4bits.h: 41:  Lcd_Cmd(1);
  5554  0C8F  3001               	movlw	1
  5555  0C90  120A  158A  24BF   	fcall	_Lcd_Cmd
  5556  0C93  0008               	return
  5557  0C94                     __end_of_Lcd_Clear:	
  5558                           
  5559                           	psect	text33
  5560  0CBF                     __ptext33:	
  5561 ;; *************** function _Lcd_Cmd *****************
  5562 ;; Defined at:
  5563 ;;		line 29 in file "./LCD4bits.h"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;  a               1    wreg     unsigned char 
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;  a               1    3[COMMON] unsigned char 
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  1    wreg      void 
  5570 ;; Registers used:
  5571 ;;		wreg, status,2, status,0, pclath, cstack
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5577 ;;      Params:         0       0       0       0       0
  5578 ;;      Locals:         1       0       0       0       0
  5579 ;;      Temps:          2       0       0       0       0
  5580 ;;      Totals:         3       0       0       0       0
  5581 ;;Total ram usage:        3 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; Hardware stack levels required when called:    1
  5584 ;; This function calls:
  5585 ;;		_Lcd_Port
  5586 ;; This function is called by:
  5587 ;;		_Lcd_Clear
  5588 ;;		_Lcd_Set_Cursor
  5589 ;;		_Lcd_Init
  5590 ;;		_Lcd_Shift_Right
  5591 ;;		_Lcd_Shift_Left
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           
  5596                           ;psect for function _Lcd_Cmd
  5597  0CBF                     _Lcd_Cmd:	
  5598                           
  5599                           ;incstack = 0
  5600                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5601                           ;Lcd_Cmd@a stored from wreg
  5602  0CBF  00F3               	movwf	Lcd_Cmd@a
  5603                           
  5604                           ;./LCD4bits.h: 29: void Lcd_Cmd(char a);./LCD4bits.h: 30: {;./LCD4bits.h: 31:  PORTBbits
      +                          .RB4 = 0;
  5605  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  5606  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  5607  0CC2  1206               	bcf	6,4	;volatile
  5608                           
  5609                           ;./LCD4bits.h: 32:  Lcd_Port(a);
  5610  0CC3  0873               	movf	Lcd_Cmd@a,w
  5611  0CC4  120A  158A  24A5  120A  158A  	fcall	_Lcd_Port
  5612                           
  5613                           ;./LCD4bits.h: 33:  PORTBbits.RB5 = 1;
  5614  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  5615  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  5616  0CCB  1686               	bsf	6,5	;volatile
  5617                           
  5618                           ;./LCD4bits.h: 34:         _delay((unsigned long)((4)*(8000000/4000.0)));
  5619  0CCC  300B               	movlw	11
  5620  0CCD  00F2               	movwf	??_Lcd_Cmd+1
  5621  0CCE  3062               	movlw	98
  5622  0CCF  00F1               	movwf	??_Lcd_Cmd
  5623  0CD0                     u1987:	
  5624  0CD0  0BF1               	decfsz	??_Lcd_Cmd,f
  5625  0CD1  2CD0               	goto	u1987
  5626  0CD2  0BF2               	decfsz	??_Lcd_Cmd+1,f
  5627  0CD3  2CD0               	goto	u1987
  5628  0CD4  0000               	nop
  5629                           
  5630                           ;./LCD4bits.h: 35:         PORTBbits.RB5 = 0;
  5631  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  5632  0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  5633  0CD7  1286               	bcf	6,5	;volatile
  5634  0CD8  0008               	return
  5635  0CD9                     __end_of_Lcd_Cmd:	
  5636                           
  5637                           	psect	text34
  5638  0CA5                     __ptext34:	
  5639 ;; *************** function _Lcd_Port *****************
  5640 ;; Defined at:
  5641 ;;		line 7 in file "./LCD4bits.h"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  a               1    wreg     unsigned char 
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;  a               1    0[COMMON] unsigned char 
  5646 ;; Return value:  Size  Location     Type
  5647 ;;                  1    wreg      void 
  5648 ;; Registers used:
  5649 ;;		wreg
  5650 ;; Tracked objects:
  5651 ;;		On entry : 0/0
  5652 ;;		On exit  : 0/0
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5655 ;;      Params:         0       0       0       0       0
  5656 ;;      Locals:         1       0       0       0       0
  5657 ;;      Temps:          0       0       0       0       0
  5658 ;;      Totals:         1       0       0       0       0
  5659 ;;Total ram usage:        1 bytes
  5660 ;; Hardware stack levels used:    1
  5661 ;; This function calls:
  5662 ;;		Nothing
  5663 ;; This function is called by:
  5664 ;;		_Lcd_Cmd
  5665 ;;		_Lcd_Init
  5666 ;;		_Lcd_Write_Char
  5667 ;; This function uses a non-reentrant model
  5668 ;;
  5669                           
  5670                           
  5671                           ;psect for function _Lcd_Port
  5672  0CA5                     _Lcd_Port:	
  5673                           
  5674                           ;incstack = 0
  5675                           ; Regs used in _Lcd_Port: [wreg]
  5676                           ;Lcd_Port@a stored from wreg
  5677  0CA5  00F0               	movwf	Lcd_Port@a
  5678                           
  5679                           ;./LCD4bits.h: 7: void Lcd_Port(char a);./LCD4bits.h: 8: {;./LCD4bits.h: 9:  if(a & 1)
  5680  0CA6  1C70               	btfss	Lcd_Port@a,0
  5681  0CA7  2CAC               	goto	l138
  5682                           
  5683                           ;./LCD4bits.h: 10:   PORTBbits.RB0 = 1;
  5684  0CA8  1283               	bcf	3,5	;RP0=0, select bank0
  5685  0CA9  1303               	bcf	3,6	;RP1=0, select bank0
  5686  0CAA  1406               	bsf	6,0	;volatile
  5687  0CAB  2CAF               	goto	l139
  5688  0CAC                     l138:	
  5689                           ;./LCD4bits.h: 11:  else
  5690                           
  5691                           
  5692                           ;./LCD4bits.h: 12:   PORTBbits.RB0 = 0;
  5693  0CAC  1283               	bcf	3,5	;RP0=0, select bank0
  5694  0CAD  1303               	bcf	3,6	;RP1=0, select bank0
  5695  0CAE  1006               	bcf	6,0	;volatile
  5696  0CAF                     l139:	
  5697                           
  5698                           ;./LCD4bits.h: 14:  if(a & 2)
  5699  0CAF  1CF0               	btfss	Lcd_Port@a,1
  5700  0CB0  2CB3               	goto	l140
  5701                           
  5702                           ;./LCD4bits.h: 15:   PORTBbits.RB1 = 1;
  5703  0CB1  1486               	bsf	6,1	;volatile
  5704  0CB2  2CB4               	goto	l141
  5705  0CB3                     l140:	
  5706                           ;./LCD4bits.h: 16:  else
  5707                           
  5708                           
  5709                           ;./LCD4bits.h: 17:   PORTBbits.RB1 = 0;
  5710  0CB3  1086               	bcf	6,1	;volatile
  5711  0CB4                     l141:	
  5712                           
  5713                           ;./LCD4bits.h: 19:  if(a & 4)
  5714  0CB4  1D70               	btfss	Lcd_Port@a,2
  5715  0CB5  2CB8               	goto	l142
  5716                           
  5717                           ;./LCD4bits.h: 20:   PORTBbits.RB2 = 1;
  5718  0CB6  1506               	bsf	6,2	;volatile
  5719  0CB7  2CB9               	goto	l143
  5720  0CB8                     l142:	
  5721                           ;./LCD4bits.h: 21:  else
  5722                           
  5723                           
  5724                           ;./LCD4bits.h: 22:   PORTBbits.RB2 = 0;
  5725  0CB8  1106               	bcf	6,2	;volatile
  5726  0CB9                     l143:	
  5727                           
  5728                           ;./LCD4bits.h: 24:  if(a & 8)
  5729  0CB9  1DF0               	btfss	Lcd_Port@a,3
  5730  0CBA  2CBD               	goto	l144
  5731                           
  5732                           ;./LCD4bits.h: 25:   PORTBbits.RB3 = 1;
  5733  0CBB  1586               	bsf	6,3	;volatile
  5734  0CBC  0008               	return
  5735  0CBD                     l144:	
  5736                           ;./LCD4bits.h: 26:  else
  5737                           
  5738                           
  5739                           ;./LCD4bits.h: 27:   PORTBbits.RB3 = 0;
  5740  0CBD  1186               	bcf	6,3	;volatile
  5741  0CBE  0008               	return
  5742  0CBF                     __end_of_Lcd_Port:	
  5743  007E                     btemp	set	126	;btemp
  5744  007E                     wtemp0	set	126


Data Sizes:
    Strings     166
    Constant    10
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      54
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_9(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 6
		 -> temp(BANK0[6]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 3
		 -> get_temp@decimal(BANK0[3]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 6
		 -> temp(BANK0[6]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 6
		 -> temp(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_30(CODE[4]), STR_29(CODE[5]), STR_28(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@decimal(BANK0[3]), temp(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 6
		 -> temp(BANK0[6]), 

    get_temp@temp_string	PTR unsigned char  size(1) Largest target is 6
		 -> temp(BANK0[6]), 

    get_time@time_string	PTR unsigned char  size(1) Largest target is 6
		 -> newtime(BANK0[6]), time(BANK0[6]), 

    newday2	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), STR_27(CODE[10]), STR_26(CODE[10]), STR_25(CODE[10]), 
		 -> STR_24(CODE[10]), STR_23(CODE[10]), STR_22(CODE[10]), STR_21(CODE[10]), 
		 -> STR_20(CODE[10]), 

    day2	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), STR_8(CODE[10]), STR_7(CODE[10]), STR_6(CODE[10]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), 
		 -> STR_1(CODE[10]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 12
		 -> NULL(NULL[0]), STR_27(CODE[10]), STR_26(CODE[10]), STR_25(CODE[10]), 
		 -> STR_24(CODE[10]), STR_23(CODE[10]), STR_22(CODE[10]), STR_21(CODE[10]), 
		 -> STR_20(CODE[10]), STR_19(CODE[6]), STR_18(CODE[7]), STR_17(CODE[7]), 
		 -> STR_16(CODE[7]), STR_15(CODE[8]), STR_14(CODE[8]), STR_13(CODE[9]), 
		 -> STR_12(CODE[9]), STR_11(CODE[12]), STR_10(CODE[12]), newtime(BANK0[6]), 
		 -> STR_8(CODE[10]), STR_7(CODE[10]), STR_6(CODE[10]), STR_5(CODE[10]), 
		 -> STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[10]), 
		 -> time(BANK0[6]), temp(BANK0[6]), 


Critical Paths under _main in COMMON

    _UART_Init->___aldiv
    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _get_tripwire->_I2C_Master_Read
    _get_time->_I2C_Master_Read
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _get_hall->_I2C_Master_Read
    _get_day->_I2C_Master_Read
    _get_PIR->_I2C_Master_Read
    _get_IR->_I2C_Master_Read
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_get_temp
    _setup->_UART_Init
    _UART_Init->___aldiv
    _get_temp->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   22332
                                             22 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                      _UART_TX_Empty
                         _UART_Write
                             _get_IR
                            _get_PIR
                            _get_day
                           _get_hall
                           _get_temp
                           _get_time
                       _get_tripwire
                              _setup
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               7     5      2     200
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1468
                    _I2C_Master_Init
                           _Lcd_Init
                          _UART_Init
                      _initOscilador
 ---------------------------------------------------------------------------------
 (2) _initOscilador                                        3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                           18    14      4     836
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _get_tripwire                                         2     2      0    2218
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_time                                             5     5      0    2483
                                              6 COMMON     5     5      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             9     9      0    4309
                                             13 BANK0      9     9      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___bmul
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     3      1     207
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1429
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _get_hall                                             2     2      0    2218
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_day                                              2     2      0    2218
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _get_PIR                                              2     2      0    2218
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_IR                                               2     2      0    2218
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1466
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     729
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Empty                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    1408
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1    1064
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_TX_Empty
   _UART_Write
   _get_IR
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _get_PIR
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _get_day
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _get_hall
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _get_temp
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___bmul
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _strcat
   _get_time
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _get_tripwire
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _UART_Init
       ___aldiv
     _initOscilador
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      44       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      36       5       67.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      44      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Mar 06 16:49:03 2019

                                _i 0023                                  _j 0022  
                                pc 0002                     ___bmul@product 0072  
                      __CFG_CP$OFF 0000                        get_hall@key 0077  
                               _IR 0026                                 fsr 0004  
                              l112 0C76                                l130 0DC6  
                              l131 0DC9                                l140 0CB3  
                              l141 0CB4                                l142 0CB8  
                              l143 0CB9                                l144 0CBD  
                              l216 0C80                                l138 0CAC  
                              l139 0CAF                                l181 0FFE  
                              l272 0686                                l273 0689  
                              l517 020F                                _GIE 005F  
                     __CFG_CPD$OFF 0000                                _PIR 0027  
                              u985 0132                      ?_get_tripwire 0070  
                              fsr0 0004                                indf 0000  
                     __CFG_LVP$OFF 0000                               l2101 0463  
                             l2021 0FB2                               l2031 0FD0  
                             l2023 0FB8                               l2121 0497  
                             l2113 0493                               l2033 0FD7  
                             l2025 0FBE                               l2107 0484  
                             l2123 040C                               l2035 0FD7  
                             l2027 0FC4                               l2019 0FAD  
                             l2125 04D8                               l2141 0D6D  
                             l2053 03EB                               l2029 0FCA  
                             l2301 0D7B                               l2039 0FDC  
                             l2303 0D9D                               l2145 0C96  
                             l2137 0D5A                               l2401 0645  
                             l2139 0D65                               l2243 030C  
                             l2403 0647                               l2149 0C9C  
                             l2085 044A                               l2501 07B9  
                             l2325 04EA                               l2095 0461  
                             l2079 042C                               l2511 07C3  
                             l2503 07BB                               l2431 06B3  
                             l2407 064C                               l2169 0F86  
                             l2185 0EE4                               l2505 07BD  
                             l2433 06BC                               l2425 06AD  
                             l2409 066D                               l2611 07D2  
                             l2507 07BF                               l2515 07C8  
                             l2451 070C                               l2613 0FE4  
                             l2509 07C1                               l2517 07E9  
                             l2437 06C0                               l2615 043F  
                             l2439 06C1                               l2391 063B  
                             l1913 0ED2                               l1905 0EAE  
                             l2609 0656                               l2393 063D  
                             l1907 0EBC                               l1931 0DE3  
                             l1851 0173                               l2299 0D88  
                             l2467 073E                               l2459 071E  
                             l2395 063F                               l1917 0EDD  
                             l1837 012E                               l2485 077B  
                             l2477 075B                               l2469 0748  
                             l2397 0641                               l2389 0639  
                             l1935 0DF1                               l1847 0166  
                             l1839 013E                               l2487 0785  
                             l2399 0643                               l1929 0DD5  
                             l1873 0230                               l1865 0220  
                             l2497 07B5                               l1939 0DFC  
                             l1891 0283                               l1883 0268  
                             l1875 0240                               l2499 07B7  
                             l1887 0275                               STR_1 003F  
                             STR_2 0053                        get_time@min 0079  
                             STR_3 007B                               STR_4 005D  
                             STR_5 0071                               STR_6 0049  
                             STR_7 0067                               STR_8 0035  
                             STR_9 00B4                               _BRGH 04C2  
                             _CREN 00C4                               u1005 0140  
                             u1015 0155                               u1025 0167  
                             u1105 0257                               u1115 0269  
                             u1225 0DD8                               u1321 036A  
                             u1305 033A                               u1322 036B  
                             u1155 0EB1                               u1075 0234  
                             u1323 0370                               u1315 0353  
                             u1324 0371                               u1245 0DE9  
                             u1405 047A                               u1325 0376  
                             u1326 0377                               u1175 0EBD  
                             u1255 0DF2                               u1095 0242  
                             u1505 0F6D                               u1185 0EC9  
                             u1361 03CA                               u1345 039A  
                             u1362 03CB                               u1195 0ED3  
                             u1275 0E49                               u1363 03D0  
                             u1355 03B3                               u1364 03D1  
                             u1525 0F92                               u1605 01E2  
                             u1365 03D6                               u1366 03D7  
                             u1295 0E7E                               u1575 02E4  
                             u1655 0680                               u1807 0556  
                             u1817 0568                               u1595 01C3  
                             u1907 060A                               u1827 057A  
                             u1917 061C                               u1837 058C  
                             u1927 062E                               u1847 059E  
                             u1937 00CD                               u1857 05B0  
                             u1947 00DC                               u1867 05C2  
                             _PEIE 005E                               u1957 00EB  
                             u1877 05D4                               u1797 0544  
                             u1967 0E8E                               u1887 05E6  
                             u1977 0E9F                               u1897 05F8  
                             u1987 0CD0                               _RCEN 048B  
                             _RCIF 0065                               _SPEN 00C7  
                             _TRMT 04C1                               _TXEN 04C5  
                             _SYNC 04C4                       __CFG_WRT$OFF 0000  
                             _day1 0024                               _day2 002B  
                ?_Lcd_Write_String 0075   __end_of_I2C_Master_RepeatedStart 0C66  
                             _door 0029                               _main 04DD  
                             _temp 0032                               _time 0038  
                             _trip 0028                               btemp 007E  
                             start 0000                 ??_Lcd_Write_String 0077  
                    __CFG_IESO$OFF 0000                    __end_of_Lcd_Cmd 0CD9  
                ___bmul@multiplier 0073                      __CFG_MCLRE$ON 0000  
              get_temp@temp_string 0052                   ?_I2C_Master_Init 003E  
                 ?_I2C_Master_Read 0070                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                    __end_of___aldiv 028C  
                            ?_main 0070                              STR_10 001D  
                            STR_11 0029                              STR_20 003F  
                            STR_12 0085                              STR_21 0053  
                            STR_13 008E                              STR_22 007B  
                            STR_30 00BF                              STR_14 0097  
                            STR_23 005D                              STR_15 009F  
                            STR_24 0071                              STR_16 0098  
                            STR_25 0049                              STR_17 00A0  
                    __CFG_WDTE$OFF 0000                              STR_26 0067  
                            STR_18 00A7                              STR_27 0035  
                            STR_19 00AE                              STR_28 00C0  
                            STR_29 00BA                       get_time@hour 0078  
                            _ANSEL 0188                    __end_of___lldiv 017C  
                   ??_get_tripwire 0076                    __end_of___lwdiv 0EE2  
                  __end_of___lwmod 0E01                              _RCREG 001A  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
          __size_of_Lcd_Set_Cursor 004A                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            _TRISD 0088                              _SSPIE 0463  
                            _SSPIF 0063                              _TXREG 0019  
                  __end_of_get_PIR 0D17                     __CFG_FCMEN$OFF 0000  
                  __end_of_get_day 0E37                        ?_UART_Write 0070  
               __size_of_UART_Init 00D6                    __end_of_dpowers 001D  
                            _setup 0F1F                              _state 0025  
                   __CFG_BOREN$OFF 0000                              pclath 000A  
                            status 0003                              wtemp0 007E  
                  __end_of_sprintf 04DD                   __end_of_Lcd_Init 011E  
                 __end_of_Lcd_Port 0CBF                    __initialization 07F5  
                     __end_of_main 07F5             __size_of_initOscilador 0055  
                           ??_main 0054                 __size_of_Lcd_Clear 000B  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0070  
               ??_I2C_Master_Start 0070                 ??_I2C_Master_Write 0072  
                           ?_setup 0070                             _ANSELH 0189  
                        ??_Lcd_Cmd 0071            __size_of_Lcd_Write_Char 0039  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _TRISC6 043E  
                           _TRISC7 043F                             _SSPCON 0014  
                           _SSPBUF 0013                     __CFG_PWRTE$OFF 0000  
         _I2C_Master_RepeatedStart 0C5F                   __end_of_get_hall 0D36  
                __end_of_UART_Init 0405                   __end_of_get_temp 032F  
                 __end_of_get_time 01FD                             ___bmul 0C94  
              __size_of_UART_Write 000A                          ??___aldiv 0078  
                           _change 0021                          ??___lldiv 0078  
                           _get_IR 0CD9                          ??___lwdiv 0074  
                        ??___lwmod 007C                             _newday 0020  
                        ??_get_PIR 0076              __end_of_UART_TX_Empty 0C51  
                        ??_get_day 0076                             _strcat 0D55  
                           _strcmp 0D79                          ??_sprintf 0041  
                  Lcd_Set_Cursor@a 0077                    Lcd_Set_Cursor@b 0074  
                  Lcd_Set_Cursor@y 0079                    Lcd_Set_Cursor@z 0078  
          __end_of__initialization 07FC                      _initOscilador 0FAB  
                __end_of_Lcd_Clear 0C94               __end_of_get_tripwire 0D55  
              ___bmul@multiplicand 0070                     __pcstackCOMMON 0070  
                    __end_of_setup 0F61                     _Lcd_Set_Cursor 0F61  
                        ?_Lcd_Init 0070                          ?_Lcd_Port 0070  
                          ??_setup 007E                         __pbssBANK0 0020  
                   ?_initOscilador 0070                         __pmaintext 04DD  
                          ?___bmul 0070                            ?_get_IR 0070  
        __size_of_Lcd_Write_String 003D             __end_of_Lcd_Set_Cursor 0FAB  
                          ?_strcat 0070                            ?_strcmp 0070  
                     ??_UART_Write 0070                         ??_Lcd_Init 0074  
                       ??_Lcd_Port 0070                            _SSPCON2 0091  
                        ?_get_hall 0070                            _SSPSTAT 0094  
                        ?_get_temp 0070                          ?_get_time 0070  
                       __stringtab 0003                initOscilador@option 0072  
                   _Lcd_Write_Char 0E6D                            _Lcd_Cmd 0CBF  
                          ___aldiv 01FD                    __size_of___bmul 0011  
                          ___lldiv 011E                 __end_of_UART_Write 0C89  
                          ___lwdiv 0EA6                            ___lwmod 0DCF  
                  __size_of_get_IR 001F                    ?_Lcd_Set_Cursor 0074  
                          _get_PIR 0CF8                            __ptext1 0D79  
                          __ptext2 0F1F                            __ptext3 0FAB  
                          __ptext4 032F                            __ptext5 01FD  
                          __ptext6 00C3                            __ptext7 0E37  
                          __ptext8 011E                            __ptext9 0D36  
                          _get_day 0E01                get_time@time_string 007A  
                  __size_of_strcat 0024                    __size_of_strcmp 002A  
                          _dpowers 0013                            _newday2 002A  
                 ___aldiv@dividend 0074                            _newtime 002C  
         __size_of_I2C_Master_Init 0036           __size_of_I2C_Master_Read 002C  
         __size_of_I2C_Master_Wait 0009           __size_of_I2C_Master_Stop 0007  
                  ??_initOscilador 0070                         ??_get_hall 0076  
                          _sprintf 0405                            clrloop0 0C6F  
           __end_of_Lcd_Write_Char 0EA6                         ??_get_temp 004B  
                       ??_get_time 0076               end_of_initialization 07FC  
            __size_of_get_tripwire 001F         ??_I2C_Master_RepeatedStart 0070  
                       get_PIR@PIR 0077          __size_of_I2C_Master_Start 0007  
        __size_of_I2C_Master_Write 0008                    ___lldiv@divisor 0070  
                  ___lldiv@counter 007D                          _RCSTAbits 0018  
                 ___aldiv@quotient 0040                   I2C_Master_Init@c 003E  
                 I2C_Master_Read@a 0070                          Lcd_Port@a 0070  
                          strcmp@r 0075                          _UART_Init 032F  
                        _PORTAbits 0005                          _PORTBbits 0006  
                        _PORTCbits 0007                     UART_Write@data 0070  
                     _get_tripwire 0D36                          _TRISCbits 0087  
                  ?_Lcd_Write_Char 0070                  Lcd_Write_String@a 0075  
                Lcd_Write_String@i 007A                          _Lcd_Clear 0C89  
                   __end_of___bmul 0CA5                   _Lcd_Write_String 0EE2  
                       ?_UART_Init 0044                     __end_of_get_IR 0CF8  
                   __end_of_strcat 0D79                     __end_of_strcmp 0DA3  
              start_initialization 07F5                  __size_of_Lcd_Init 005B  
                __size_of_Lcd_Port 001A                  ??_I2C_Master_Init 0042  
                ??_I2C_Master_Read 0072                  ??_I2C_Master_Wait 0070  
                ??_I2C_Master_Stop 0070             __size_of_UART_TX_Empty 0006  
         __CFG_FOSC$INTRC_NOCLKOUT 0000                         ?_Lcd_Clear 0070  
                         ??___bmul 0071                           ??_get_IR 0076  
                  Lcd_Write_Char@a 0074                    Lcd_Write_Char@y 0073  
                         ??_strcat 0071                           ??_strcmp 0072  
                        ___latbits 0002                      __pcstackBANK0 003E  
                __size_of_get_hall 001F                           ?_Lcd_Cmd 0070  
                __size_of_get_temp 00A3                  __size_of_get_time 0081  
                      sprintf@flag 0045                        sprintf@prec 0046  
                 _I2C_Master_Start 0C51                   _I2C_Master_Write 0C66  
                 ___lwdiv@dividend 0072                   ??_Lcd_Set_Cursor 0075  
                  get_temp@decimal 004E                           ?___aldiv 0070  
                         ?___lldiv 0070                           ?___lwdiv 0070  
                         ?___lwmod 0078                        ??_UART_Init 0048  
                         ?_get_PIR 0070                          __pstrings 0003  
                         ?_get_day 0070                    get_temp@tempLSB 0053  
                  get_temp@tempMSB 0051                      _UART_TX_Empty 0C4B  
                 ___lwdiv@quotient 0075                           ?_sprintf 003E  
                       UART_Init@x 0079                     __size_of_setup 0042  
                  ___aldiv@divisor 0070                    ___aldiv@counter 003E  
                        clear_ram0 0C6E                           Lcd_Cmd@a 0073  
                      ??_Lcd_Clear 0074                  UART_Init@baudrate 0044  
                      __stringbase 0012                     ?_UART_TX_Empty 0070  
                 ??_Lcd_Write_Char 0071                           _Lcd_Init 00C3  
                         _Lcd_Port 0CA5                I2C_Master_Read@temp 0074  
            __end_of_initOscilador 1000           __end_of_Lcd_Write_String 0F1F  
                 __size_of_Lcd_Cmd 001A                   __size_of___aldiv 008F  
__size_of_I2C_Master_RepeatedStart 0007          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 005E                   __size_of___lwdiv 003C  
                 __size_of___lwmod 0032                 __end_of__stringtab 0013  
                 __size_of_get_PIR 001F                   __size_of_get_day 0036  
                       sprintf@val 0047                    _I2C_Master_Init 0E37  
                  _I2C_Master_Read 0DA3                    _I2C_Master_Wait 0C76  
                       strcat@from 0070                    _I2C_Master_Stop 0C58  
                  ___lwdiv@divisor 0070                    ___lwdiv@counter 0077  
                         __ptext10 017C                           __ptext11 028C  
                         __ptext20 0CF8                           __ptext12 0D55  
                         __ptext21 0CD9                           __ptext13 0405  
                         __ptext30 0E6D                           __ptext22 0C66  
                         __ptext14 0DCF                           __ptext31 0F61  
                         __ptext23 0C58                           __ptext15 0EA6  
                         __ptext32 0C89                           __ptext24 0C51  
                         __ptext16 0C94                           __ptext33 0CBF  
                         __ptext25 0DA3                           __ptext17 0D17  
                         __ptext34 0CA5                           __ptext26 0C76  
                         __ptext18 0E01                           __ptext27 0C7F  
                         __ptext19 0C5F                           __ptext28 0C4B  
                         __ptext29 0EE2                  __CFG_BOR4V$BOR40V 0000  
                         _get_hall 0D17                           _get_temp 028C  
                         _get_time 017C                   __size_of_sprintf 00D8  
                    __size_of_main 0318                           get_IR@IR 0077  
                         get_day@d 0077                    ??_UART_TX_Empty 0070  
         __end_of_I2C_Master_Start 0C58           __end_of_I2C_Master_Write 0C6E  
               Lcd_Write_Char@temp 0072                          sprintf@ap 0044  
                        sprintf@sp 0049                   ___lwmod@dividend 007A  
                 ___lldiv@dividend 0074                          stringcode 000D  
                       _OSCCONbits 008F            __end_of_I2C_Master_Init 0E6D  
          __end_of_I2C_Master_Read 0DCF            __end_of_I2C_Master_Wait 0C7F  
          __end_of_I2C_Master_Stop 0C5F                 Lcd_Set_Cursor@temp 007A  
                         sprintf@c 004A                           sprintf@f 003E  
                         strcat@cp 0073                           strcat@to 0072  
                         strcmp@s1 0076                           strcmp@s2 0070  
                 ___lldiv@quotient 0079                  I2C_Master_Write@d 0070  
                  ___lwmod@divisor 0078                    ___lwmod@counter 007D  
                         stringdir 000D                   get_tripwire@trip 0077  
                         stringtab 0003                       ___aldiv@sign 003F  
                       _UART_Write 0C7F                        _SSPCON2bits 0091  
                       _SSPCONbits 0014  
