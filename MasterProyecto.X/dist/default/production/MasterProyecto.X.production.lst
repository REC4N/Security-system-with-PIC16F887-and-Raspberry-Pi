

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Feb 26 12:35:04 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.05
    39                           ; Generated 20/12/2018 GMT
    40                           ; 
    41                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228                           
   229                           	psect	strings
   230  0003                     __pstrings:	
   231  0003                     stringtab:	
   232  0003                     __stringtab:	
   233                           
   234                           ;	String table - string pointers are 1 byte each
   235  0003  1BFF               	btfsc	btemp+1,7
   236  0004  280D               	ljmp	stringcode
   237  0005  1383               	bcf	3,7
   238  0006  187F               	btfsc	btemp+1,0
   239  0007  1783               	bsf	3,7
   240  0008  0800               	movf	0,w
   241  0009  0A84               	incf	4,f
   242  000A  1903               	skipnz
   243  000B  0AFF               	incf	btemp+1,f
   244  000C  0008               	return
   245  000D                     stringcode:	
   246  000D                     stringdir:	
   247  000D  3000               	movlw	high stringdir
   248  000E  008A               	movwf	10
   249  000F  0804               	movf	4,w
   250  0010  0A84               	incf	4,f
   251  0011  0782               	addwf	2,f
   252  0012                     __stringbase:	
   253  0012  3400               	retlw	0
   254  0013                     __end_of__stringtab:	
   255  0013                     _dpowers:	
   256  0013  3401               	retlw	1
   257  0014  3400               	retlw	0
   258  0015  340A               	retlw	10
   259  0016  3400               	retlw	0
   260  0017  3464               	retlw	100
   261  0018  3400               	retlw	0
   262  0019  34E8               	retlw	232
   263  001A  3403               	retlw	3
   264  001B  3410               	retlw	16
   265  001C  3427               	retlw	39
   266  001D                     __end_of_dpowers:	
   267  0005                     _PORTA	set	5
   268  0006                     _PORTB	set	6
   269  0005                     _PORTAbits	set	5
   270  0006                     _PORTBbits	set	6
   271  0013                     _SSPBUF	set	19
   272  0014                     _SSPCON	set	20
   273  0063                     _SSPIF	set	99
   274  005E                     _PEIE	set	94
   275  005F                     _GIE	set	95
   276  0085                     _TRISA	set	133
   277  0086                     _TRISB	set	134
   278  008F                     _OSCCONbits	set	143
   279  0091                     _SSPCON2bits	set	145
   280  0094                     _SSPSTAT	set	148
   281  0093                     _SSPADD	set	147
   282  0091                     _SSPCON2	set	145
   283  0463                     _SSPIE	set	1123
   284  048B                     _RCEN	set	1163
   285  043C                     _TRISC4	set	1084
   286  043B                     _TRISC3	set	1083
   287  0188                     _ANSEL	set	392
   288  0189                     _ANSELH	set	393
   289  001D                     STR_1:	
   290  001D  344B               	retlw	75	;'K'
   291  001E  3465               	retlw	101	;'e'
   292  001F  3479               	retlw	121	;'y'
   293  0020  3420               	retlw	32	;' '
   294  0021  344F               	retlw	79	;'O'
   295  0022  344E               	retlw	78	;'N'
   296  0023  3420               	retlw	32	;' '
   297  0024  3420               	retlw	32	;' '
   298  0025  3400               	retlw	0
   299  0026                     STR_2:	
   300  0026  344B               	retlw	75	;'K'
   301  0027  3465               	retlw	101	;'e'
   302  0028  3479               	retlw	121	;'y'
   303  0029  3420               	retlw	32	;' '
   304  002A  344F               	retlw	79	;'O'
   305  002B  3446               	retlw	70	;'F'
   306  002C  3446               	retlw	70	;'F'
   307  002D  3420               	retlw	32	;' '
   308  002E  3400               	retlw	0
   309  002F                     STR_3:	
   310  002F  3432               	retlw	50	;'2'
   311  0030  3433               	retlw	51	;'3'
   312  0031  342E               	retlw	46	;'.'
   313  0032  3435               	retlw	53	;'5'
   314  0033  3430               	retlw	48	;'0'
   315  0034  3400               	retlw	0
   316  0035                     STR_5:	
   317  0035  342E               	retlw	46	;'.'
   318  0036  3425               	retlw	37	;'%'
   319  0037  3464               	retlw	100	;'d'
   320  0038  3430               	retlw	48	;'0'
   321  0039  3400               	retlw	0
   322  003A                     STR_6:	
   323  003A  342E               	retlw	46	;'.'
   324  003B  3425               	retlw	37	;'%'
   325  003C  3464               	retlw	100	;'d'
   326  003D  3400               	retlw	0
   327  003B                     
   328                           ; #config settings
   329  0000                     
   330                           	psect	cinit
   331  07F7                     start_initialization:	
   332  07F7                     __initialization:	
   333                           
   334                           ; Clear objects allocated to BANK0
   335  07F7  1283               	bcf	3,5	;RP0=0, select bank0
   336  07F8  1303               	bcf	3,6	;RP1=0, select bank0
   337  07F9  01BC               	clrf	__pbssBANK0& (0+127)
   338  07FA  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   339  07FB  01BE               	clrf	(__pbssBANK0+2)& (0+127)
   340  07FC                     end_of_initialization:	
   341                           ;End of C runtime variable initialization code
   342                           
   343  07FC                     __end_of__initialization:	
   344  07FC  0183               	clrf	3
   345  07FD  120A  118A  2DEF   	ljmp	_main	;jump to C main() function
   346                           
   347                           	psect	bssBANK0
   348  003C                     __pbssBANK0:	
   349  003C                     _key:	
   350  003C                     	ds	1
   351  003D                     _temp:	
   352  003D                     	ds	1
   353  003E                     _time:	
   354  003E                     	ds	1
   355                           
   356                           	psect	cstackCOMMON
   357  0070                     __pcstackCOMMON:	
   358  0070                     ?_setup:	
   359  0070                     ?_get_time:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_get_temp:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_get_hall:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_strcat:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_I2C_Master_Wait:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ??_I2C_Master_Wait:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_I2C_Master_Start:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ??_I2C_Master_Start:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_I2C_Master_RepeatedStart:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ??_I2C_Master_RepeatedStart:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_I2C_Master_Stop:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ??_I2C_Master_Stop:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_I2C_Master_Write:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_Lcd_Port:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ??_Lcd_Port:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_Lcd_Cmd:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_Lcd_Clear:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_Lcd_Init:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_Lcd_Write_Char:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_initOscilador:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ??_initOscilador:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_main:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?___bmul:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_strcmp:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_I2C_Master_Read:	
   432                           ; 2 bytes @ 0x0
   433                           
   434  0070                     ?___lwdiv:	
   435                           ; 2 bytes @ 0x0
   436                           
   437  0070                     ?___lldiv:	
   438                           ; 2 bytes @ 0x0
   439                           
   440  0070                     Lcd_Port@a:	
   441                           ; 4 bytes @ 0x0
   442                           
   443  0070                     ___bmul@multiplicand:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     strcat@from:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     strcmp@s2:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     I2C_Master_Write@d:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     I2C_Master_Read@a:	
   456                           ; 2 bytes @ 0x0
   457                           
   458  0070                     ___lwdiv@divisor:	
   459                           ; 2 bytes @ 0x0
   460                           
   461  0070                     ___lldiv@divisor:	
   462                           ; 2 bytes @ 0x0
   463                           
   464                           
   465                           ; 4 bytes @ 0x0
   466  0070                     	ds	1
   467  0071                     ??_strcat:	
   468  0071                     ??_Lcd_Cmd:	
   469                           ; 1 bytes @ 0x1
   470                           
   471  0071                     ??_Lcd_Write_Char:	
   472                           ; 1 bytes @ 0x1
   473                           
   474  0071                     ??___bmul:	
   475                           ; 1 bytes @ 0x1
   476                           
   477                           
   478                           ; 1 bytes @ 0x1
   479  0071                     	ds	1
   480  0072                     ??_strcmp:	
   481  0072                     ??_I2C_Master_Write:	
   482                           ; 1 bytes @ 0x2
   483                           
   484  0072                     ??_I2C_Master_Read:	
   485                           ; 1 bytes @ 0x2
   486                           
   487  0072                     Lcd_Write_Char@temp:	
   488                           ; 1 bytes @ 0x2
   489                           
   490  0072                     initOscilador@option:	
   491                           ; 1 bytes @ 0x2
   492                           
   493  0072                     ___bmul@product:	
   494                           ; 1 bytes @ 0x2
   495                           
   496  0072                     strcat@to:	
   497                           ; 1 bytes @ 0x2
   498                           
   499  0072                     ___lwdiv@dividend:	
   500                           ; 1 bytes @ 0x2
   501                           
   502                           
   503                           ; 2 bytes @ 0x2
   504  0072                     	ds	1
   505  0073                     Lcd_Cmd@a:	
   506  0073                     Lcd_Write_Char@y:	
   507                           ; 1 bytes @ 0x3
   508                           
   509  0073                     ___bmul@multiplier:	
   510                           ; 1 bytes @ 0x3
   511                           
   512  0073                     strcat@cp:	
   513                           ; 1 bytes @ 0x3
   514                           
   515                           
   516                           ; 1 bytes @ 0x3
   517  0073                     	ds	1
   518  0074                     ??_Lcd_Clear:	
   519  0074                     ?_Lcd_Set_Cursor:	
   520                           ; 1 bytes @ 0x4
   521                           
   522  0074                     ??_Lcd_Init:	
   523                           ; 1 bytes @ 0x4
   524                           
   525  0074                     ??___lwdiv:	
   526                           ; 1 bytes @ 0x4
   527                           
   528  0074                     Lcd_Set_Cursor@b:	
   529                           ; 1 bytes @ 0x4
   530                           
   531  0074                     Lcd_Write_Char@a:	
   532                           ; 1 bytes @ 0x4
   533                           
   534  0074                     I2C_Master_Read@temp:	
   535                           ; 1 bytes @ 0x4
   536                           
   537  0074                     ___lldiv@dividend:	
   538                           ; 2 bytes @ 0x4
   539                           
   540                           
   541                           ; 4 bytes @ 0x4
   542  0074                     	ds	1
   543  0075                     ??_Lcd_Set_Cursor:	
   544  0075                     ?_Lcd_Write_String:	
   545                           ; 1 bytes @ 0x5
   546                           
   547  0075                     strcmp@r:	
   548                           ; 1 bytes @ 0x5
   549                           
   550  0075                     Lcd_Write_String@a:	
   551                           ; 1 bytes @ 0x5
   552                           
   553  0075                     ___lwdiv@quotient:	
   554                           ; 2 bytes @ 0x5
   555                           
   556                           
   557                           ; 2 bytes @ 0x5
   558  0075                     	ds	1
   559  0076                     ??_get_time:	
   560  0076                     ??_get_hall:	
   561                           ; 1 bytes @ 0x6
   562                           
   563  0076                     strcmp@s1:	
   564                           ; 1 bytes @ 0x6
   565                           
   566                           
   567                           ; 1 bytes @ 0x6
   568  0076                     	ds	1
   569  0077                     ??_Lcd_Write_String:	
   570  0077                     Lcd_Set_Cursor@a:	
   571                           ; 1 bytes @ 0x7
   572                           
   573  0077                     get_hall@key:	
   574                           ; 1 bytes @ 0x7
   575                           
   576  0077                     ___lwdiv@counter:	
   577                           ; 1 bytes @ 0x7
   578                           
   579                           
   580                           ; 1 bytes @ 0x7
   581  0077                     	ds	1
   582  0078                     ??___lldiv:	
   583  0078                     ?___lwmod:	
   584                           ; 1 bytes @ 0x8
   585                           
   586  0078                     Lcd_Set_Cursor@z:	
   587                           ; 2 bytes @ 0x8
   588                           
   589  0078                     ___lwmod@divisor:	
   590                           ; 1 bytes @ 0x8
   591                           
   592                           
   593                           ; 2 bytes @ 0x8
   594  0078                     	ds	1
   595  0079                     Lcd_Set_Cursor@y:	
   596  0079                     ___lldiv@quotient:	
   597                           ; 1 bytes @ 0x9
   598                           
   599                           
   600                           ; 4 bytes @ 0x9
   601  0079                     	ds	1
   602  007A                     Lcd_Set_Cursor@temp:	
   603  007A                     Lcd_Write_String@i:	
   604                           ; 1 bytes @ 0xA
   605                           
   606  007A                     ___lwmod@dividend:	
   607                           ; 2 bytes @ 0xA
   608                           
   609                           
   610                           ; 2 bytes @ 0xA
   611  007A                     	ds	2
   612  007C                     ??___lwmod:	
   613                           
   614                           ; 1 bytes @ 0xC
   615  007C                     	ds	1
   616  007D                     ___lldiv@counter:	
   617  007D                     ___lwmod@counter:	
   618                           ; 1 bytes @ 0xD
   619                           
   620                           
   621                           ; 1 bytes @ 0xD
   622  007D                     	ds	1
   623  007E                     ??_setup:	
   624                           
   625                           	psect	cstackBANK0
   626  0020                     __pcstackBANK0:	
   627                           ; 1 bytes @ 0xE
   628                           
   629  0020                     ?_I2C_Master_Init:	
   630  0020                     ?_sprintf:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0020                     sprintf@f:	
   634                           ; 2 bytes @ 0x0
   635                           
   636  0020                     I2C_Master_Init@c:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0020                     get_time@string_time:	
   640                           ; 4 bytes @ 0x0
   641                           
   642                           
   643                           ; 6 bytes @ 0x0
   644  0020                     	ds	3
   645  0023                     ??_sprintf:	
   646                           
   647                           ; 1 bytes @ 0x3
   648  0023                     	ds	1
   649  0024                     ??_I2C_Master_Init:	
   650                           
   651                           ; 1 bytes @ 0x4
   652  0024                     	ds	2
   653  0026                     get_time@hour:	
   654  0026                     sprintf@ap:	
   655                           ; 1 bytes @ 0x6
   656                           
   657                           
   658                           ; 1 bytes @ 0x6
   659  0026                     	ds	1
   660  0027                     get_time@min:	
   661  0027                     sprintf@flag:	
   662                           ; 1 bytes @ 0x7
   663                           
   664                           
   665                           ; 1 bytes @ 0x7
   666  0027                     	ds	1
   667  0028                     sprintf@prec:	
   668                           
   669                           ; 1 bytes @ 0x8
   670  0028                     	ds	1
   671  0029                     sprintf@val:	
   672                           
   673                           ; 2 bytes @ 0x9
   674  0029                     	ds	2
   675  002B                     sprintf@sp:	
   676                           
   677                           ; 1 bytes @ 0xB
   678  002B                     	ds	1
   679  002C                     sprintf@c:	
   680                           
   681                           ; 1 bytes @ 0xC
   682  002C                     	ds	1
   683  002D                     ??_get_temp:	
   684                           
   685                           ; 1 bytes @ 0xD
   686  002D                     	ds	3
   687  0030                     get_temp@temperature:	
   688                           
   689                           ; 6 bytes @ 0x10
   690  0030                     	ds	6
   691  0036                     get_temp@decimal:	
   692                           
   693                           ; 3 bytes @ 0x16
   694  0036                     	ds	3
   695  0039                     get_temp@tempMSB:	
   696                           
   697                           ; 1 bytes @ 0x19
   698  0039                     	ds	1
   699  003A                     get_temp@tempLSB:	
   700                           
   701                           ; 1 bytes @ 0x1A
   702  003A                     	ds	1
   703  003B                     ??_main:	
   704                           
   705                           ; 1 bytes @ 0x1B
   706  003B                     	ds	1
   707                           
   708                           	psect	maintext
   709  05EF                     __pmaintext:	
   710 ;;
   711 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   712 ;;
   713 ;; *************** function _main *****************
   714 ;; Defined at:
   715 ;;		line 48 in file "mainMaster.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : B00/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   729 ;;      Params:         0       0       0       0       0
   730 ;;      Locals:         0       0       0       0       0
   731 ;;      Temps:          0       1       0       0       0
   732 ;;      Totals:         0       1       0       0       0
   733 ;;Total ram usage:        1 bytes
   734 ;; Hardware stack levels required when called:    4
   735 ;; This function calls:
   736 ;;		_Lcd_Clear
   737 ;;		_Lcd_Set_Cursor
   738 ;;		_Lcd_Write_Char
   739 ;;		_Lcd_Write_String
   740 ;;		_get_hall
   741 ;;		_get_temp
   742 ;;		_get_time
   743 ;;		_setup
   744 ;;		_strcmp
   745 ;; This function is called by:
   746 ;;		Startup code after reset
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           
   751                           ;psect for function _main
   752  05EF                     _main:	
   753                           
   754                           ;mainMaster.c: 49:     setup();
   755                           
   756                           ;incstack = 0
   757                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   758  05EF  120A  118A  228C  120A  118A  	fcall	_setup
   759                           
   760                           ;mainMaster.c: 50:     Lcd_Clear();
   761  05F4  120A  118A  21F9  120A  118A  	fcall	_Lcd_Clear
   762  05F9                     l1707:	
   763                           
   764                           ;mainMaster.c: 53:         time = get_time();
   765  05F9  120A  118A  2579  120A  118A  	fcall	_get_time
   766  05FE  1283               	bcf	3,5	;RP0=0, select bank0
   767  05FF  1303               	bcf	3,6	;RP1=0, select bank0
   768  0600  00BB               	movwf	??_main
   769  0601  083B               	movf	??_main,w
   770  0602  00BE               	movwf	_time
   771                           
   772                           ;mainMaster.c: 54:         Lcd_Set_Cursor(1,1);
   773  0603  01F4               	clrf	Lcd_Set_Cursor@b
   774  0604  0AF4               	incf	Lcd_Set_Cursor@b,f
   775  0605  3001               	movlw	1
   776  0606  120A  118A  2421  120A  118A  	fcall	_Lcd_Set_Cursor
   777                           
   778                           ;mainMaster.c: 55:         Lcd_Write_String(time);
   779  060B  1283               	bcf	3,5	;RP0=0, select bank0
   780  060C  1303               	bcf	3,6	;RP1=0, select bank0
   781  060D  083E               	movf	_time,w
   782  060E  00F5               	movwf	Lcd_Write_String@a
   783  060F  3000               	movlw	0
   784  0610  00F6               	movwf	Lcd_Write_String@a+1
   785  0611  120A  118A  23E4  120A  118A  	fcall	_Lcd_Write_String
   786                           
   787                           ;mainMaster.c: 56:         temp = get_temp();
   788  0616  120A  118A  2682  120A  118A  	fcall	_get_temp
   789  061B  1283               	bcf	3,5	;RP0=0, select bank0
   790  061C  1303               	bcf	3,6	;RP1=0, select bank0
   791  061D  00BB               	movwf	??_main
   792  061E  083B               	movf	??_main,w
   793  061F  00BD               	movwf	_temp
   794                           
   795                           ;mainMaster.c: 57:         Lcd_Set_Cursor(2,1);
   796  0620  01F4               	clrf	Lcd_Set_Cursor@b
   797  0621  0AF4               	incf	Lcd_Set_Cursor@b,f
   798  0622  3002               	movlw	2
   799  0623  120A  118A  2421  120A  118A  	fcall	_Lcd_Set_Cursor
   800                           
   801                           ;mainMaster.c: 58:         Lcd_Write_String(temp);
   802  0628  1283               	bcf	3,5	;RP0=0, select bank0
   803  0629  1303               	bcf	3,6	;RP1=0, select bank0
   804  062A  083D               	movf	_temp,w
   805  062B  00F5               	movwf	Lcd_Write_String@a
   806  062C  3000               	movlw	0
   807  062D  00F6               	movwf	Lcd_Write_String@a+1
   808  062E  120A  118A  23E4  120A  118A  	fcall	_Lcd_Write_String
   809                           
   810                           ;mainMaster.c: 59:         Lcd_Write_Char(223);
   811  0633  30DF               	movlw	223
   812  0634  120A  118A  236F  120A  118A  	fcall	_Lcd_Write_Char
   813                           
   814                           ;mainMaster.c: 60:         Lcd_Write_Char('C');
   815  0639  3043               	movlw	67
   816  063A  120A  118A  236F  120A  118A  	fcall	_Lcd_Write_Char
   817                           
   818                           ;mainMaster.c: 61:         key = get_hall();
   819  063F  120A  118A  2249  120A  118A  	fcall	_get_hall
   820  0644  1283               	bcf	3,5	;RP0=0, select bank0
   821  0645  1303               	bcf	3,6	;RP1=0, select bank0
   822  0646  00BB               	movwf	??_main
   823  0647  083B               	movf	??_main,w
   824  0648  00BC               	movwf	_key
   825                           
   826                           ;mainMaster.c: 62:         Lcd_Set_Cursor(1,7);
   827  0649  3007               	movlw	7
   828  064A  00BB               	movwf	??_main
   829  064B  083B               	movf	??_main,w
   830  064C  00F4               	movwf	Lcd_Set_Cursor@b
   831  064D  3001               	movlw	1
   832  064E  120A  118A  2421  120A  118A  	fcall	_Lcd_Set_Cursor
   833                           
   834                           ;mainMaster.c: 63:         if (key == 1){
   835  0653  1283               	bcf	3,5	;RP0=0, select bank0
   836  0654  1303               	bcf	3,6	;RP1=0, select bank0
   837  0655  033C               	decf	_key,w
   838  0656  1D03               	btfss	3,2
   839  0657  2E5A               	goto	l1731
   840                           
   841                           ;mainMaster.c: 64:             Lcd_Write_String("Key ON  ");
   842  0658  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   843  0659  2E5B               	goto	L1
   844  065A                     l1731:	
   845                           ;mainMaster.c: 65:         } else {
   846                           
   847                           
   848                           ;mainMaster.c: 66:             Lcd_Write_String("Key OFF ");
   849  065A  3014               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   850  065B                     L1:	
   851  065B  00F5               	movwf	Lcd_Write_String@a
   852  065C  3080               	movlw	128
   853  065D  00F6               	movwf	Lcd_Write_String@a+1
   854  065E  120A  118A  23E4  120A  118A  	fcall	_Lcd_Write_String
   855                           
   856                           ;mainMaster.c: 69:         if (strcmp(temp,"23.50") > 0){
   857                           
   858                           ;mainMaster.c: 67:         }
   859  0663  301D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   860  0664  1283               	bcf	3,5	;RP0=0, select bank0
   861  0665  1303               	bcf	3,6	;RP1=0, select bank0
   862  0666  00BB               	movwf	??_main
   863  0667  083B               	movf	??_main,w
   864  0668  00F0               	movwf	strcmp@s2
   865  0669  083D               	movf	_temp,w
   866  066A  120A  118A  22B1  120A  118A  	fcall	_strcmp
   867  066F  0871               	movf	?_strcmp+1,w
   868  0670  3A80               	xorlw	128
   869  0671  00FF               	movwf	127
   870  0672  3080               	movlw	128
   871  0673  027F               	subwf	127,w
   872  0674  1D03               	skipz
   873  0675  2E78               	goto	u1105
   874  0676  3001               	movlw	1
   875  0677  0270               	subwf	?_strcmp,w
   876  0678                     u1105:	
   877  0678  1C03               	skipc
   878  0679  2E7E               	goto	l158
   879                           
   880                           ;mainMaster.c: 70:             PORTAbits.RA0 = 1;
   881  067A  1283               	bcf	3,5	;RP0=0, select bank0
   882  067B  1303               	bcf	3,6	;RP1=0, select bank0
   883  067C  1405               	bsf	5,0	;volatile
   884                           
   885                           ;mainMaster.c: 71:         } else {
   886  067D  2DF9               	goto	l1707
   887  067E                     l158:	
   888                           
   889                           ;mainMaster.c: 72:             PORTAbits.RA0 = 0;
   890  067E  1283               	bcf	3,5	;RP0=0, select bank0
   891  067F  1303               	bcf	3,6	;RP1=0, select bank0
   892  0680  1005               	bcf	5,0	;volatile
   893  0681  2DF9               	goto	l1707
   894  0682                     __end_of_main:	
   895                           
   896                           	psect	text1
   897  02B1                     __ptext1:	
   898 ;; *************** function _strcmp *****************
   899 ;; Defined at:
   900 ;;		line 33 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcmp.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  s1              1    wreg     PTR const unsigned char 
   903 ;;		 -> NULL(0), get_temp@temperature(6), 
   904 ;;  s2              1    0[COMMON] PTR const unsigned char 
   905 ;;		 -> STR_3(6), 
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  s1              1    6[COMMON] PTR const unsigned char 
   908 ;;		 -> NULL(0), get_temp@temperature(6), 
   909 ;;  r               1    5[COMMON] char 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  2    0[COMMON] int 
   912 ;; Registers used:
   913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   919 ;;      Params:         2       0       0       0       0
   920 ;;      Locals:         2       0       0       0       0
   921 ;;      Temps:          3       0       0       0       0
   922 ;;      Totals:         7       0       0       0       0
   923 ;;Total ram usage:        7 bytes
   924 ;; Hardware stack levels used:    2
   925 ;; This function calls:
   926 ;;		Nothing
   927 ;; This function is called by:
   928 ;;		_main
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           
   933                           ;psect for function _strcmp
   934  02B1                     _strcmp:	
   935                           
   936                           ;incstack = 0
   937                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+pclath]
   938                           ;strcmp@s1 stored from wreg
   939  02B1  00F6               	movwf	strcmp@s1
   940  02B2  2AC0               	goto	l1691
   941  02B3                     l1693:	
   942  02B3  0876               	movf	strcmp@s1,w
   943  02B4  0084               	movwf	4
   944  02B5  0800               	movf	0,w
   945  02B6  1903               	btfsc	3,2
   946  02B7  2AD5               	goto	l1695
   947  02B8  3001               	movlw	1
   948  02B9  00F2               	movwf	??_strcmp
   949  02BA  0872               	movf	??_strcmp,w
   950  02BB  07F6               	addwf	strcmp@s1,f
   951  02BC  3001               	movlw	1
   952  02BD  00F2               	movwf	??_strcmp
   953  02BE  0872               	movf	??_strcmp,w
   954  02BF  07F0               	addwf	strcmp@s2,f
   955  02C0                     l1691:	
   956  02C0  0870               	movf	strcmp@s2,w
   957  02C1  0084               	movwf	4
   958  02C2  120A  118A  200D  120A  118A  	fcall	stringdir
   959  02C7  00F2               	movwf	??_strcmp
   960  02C8  0876               	movf	strcmp@s1,w
   961  02C9  0084               	movwf	4
   962  02CA  1383               	bcf	3,7	;select IRP bank0
   963  02CB  0800               	movf	0,w
   964  02CC  00F3               	movwf	??_strcmp+1
   965  02CD  0872               	movf	??_strcmp,w
   966  02CE  0273               	subwf	??_strcmp+1,w
   967  02CF  00F4               	movwf	??_strcmp+2
   968  02D0  0874               	movf	??_strcmp+2,w
   969  02D1  00F5               	movwf	strcmp@r
   970  02D2  0875               	movf	strcmp@r,w
   971  02D3  1903               	btfsc	3,2
   972  02D4  2AB3               	goto	l1693
   973  02D5                     l1695:	
   974  02D5  0875               	movf	strcmp@r,w
   975  02D6  00F0               	movwf	?_strcmp
   976  02D7  01F1               	clrf	?_strcmp+1
   977  02D8  1BF0               	btfsc	?_strcmp,7
   978  02D9  03F1               	decf	?_strcmp+1,f
   979  02DA  0008               	return
   980  02DB                     __end_of_strcmp:	
   981                           
   982                           	psect	text2
   983  028C                     __ptext2:	
   984 ;; *************** function _setup *****************
   985 ;; Defined at:
   986 ;;		line 78 in file "mainMaster.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1000 ;;      Params:         0       0       0       0       0
  1001 ;;      Locals:         0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0
  1003 ;;      Totals:         0       0       0       0       0
  1004 ;;Total ram usage:        0 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    3
  1007 ;; This function calls:
  1008 ;;		_I2C_Master_Init
  1009 ;;		_Lcd_Init
  1010 ;;		_initOscilador
  1011 ;; This function is called by:
  1012 ;;		_main
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           
  1017                           ;psect for function _setup
  1018  028C                     _setup:	
  1019                           
  1020                           ;mainMaster.c: 79:     initOscilador(7);
  1021                           
  1022                           ;incstack = 0
  1023                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1024  028C  3007               	movlw	7
  1025  028D  120A  118A  246B  120A  118A  	fcall	_initOscilador
  1026                           
  1027                           ;mainMaster.c: 80:     ANSELH = 0;
  1028  0292  1683               	bsf	3,5	;RP0=1, select bank3
  1029  0293  1703               	bsf	3,6	;RP1=1, select bank3
  1030  0294  0189               	clrf	9	;volatile
  1031                           
  1032                           ;mainMaster.c: 81:     ANSEL = 0;
  1033  0295  0188               	clrf	8	;volatile
  1034                           
  1035                           ;mainMaster.c: 82:     TRISB = 0;
  1036  0296  1683               	bsf	3,5	;RP0=1, select bank1
  1037  0297  1303               	bcf	3,6	;RP1=0, select bank1
  1038  0298  0186               	clrf	6	;volatile
  1039                           
  1040                           ;mainMaster.c: 83:     TRISA = 0;
  1041  0299  0185               	clrf	5	;volatile
  1042                           
  1043                           ;mainMaster.c: 84:     PORTB = 0;
  1044  029A  1283               	bcf	3,5	;RP0=0, select bank0
  1045  029B  1303               	bcf	3,6	;RP1=0, select bank0
  1046  029C  0186               	clrf	6	;volatile
  1047                           
  1048                           ;mainMaster.c: 85:     PORTA = 0;
  1049  029D  0185               	clrf	5	;volatile
  1050                           
  1051                           ;mainMaster.c: 86:     Lcd_Init();
  1052  029E  120A  118A  24C0  120A  118A  	fcall	_Lcd_Init
  1053                           
  1054                           ;mainMaster.c: 87:     I2C_Master_Init(100000);
  1055  02A3  3000               	movlw	0
  1056  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  1057  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  1058  02A6  00A3               	movwf	I2C_Master_Init@c+3
  1059  02A7  3001               	movlw	1
  1060  02A8  00A2               	movwf	I2C_Master_Init@c+2
  1061  02A9  3086               	movlw	134
  1062  02AA  00A1               	movwf	I2C_Master_Init@c+1
  1063  02AB  30A0               	movlw	160
  1064  02AC  00A0               	movwf	I2C_Master_Init@c
  1065  02AD  120A  118A  2339   	fcall	_I2C_Master_Init
  1066  02B0  0008               	return
  1067  02B1                     __end_of_setup:	
  1068                           
  1069                           	psect	text3
  1070  046B                     __ptext3:	
  1071 ;; *************** function _initOscilador *****************
  1072 ;; Defined at:
  1073 ;;		line 11 in file "./Oscilador.h"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  option          1    wreg     unsigned char 
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  option          1    2[COMMON] unsigned char 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1087 ;;      Params:         0       0       0       0       0
  1088 ;;      Locals:         1       0       0       0       0
  1089 ;;      Temps:          2       0       0       0       0
  1090 ;;      Totals:         3       0       0       0       0
  1091 ;;Total ram usage:        3 bytes
  1092 ;; Hardware stack levels used:    1
  1093 ;; This function calls:
  1094 ;;		Nothing
  1095 ;; This function is called by:
  1096 ;;		_setup
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           
  1101                           ;psect for function _initOscilador
  1102  046B                     _initOscilador:	
  1103                           
  1104                           ;incstack = 0
  1105                           ; Regs used in _initOscilador: [wreg-fsr0h+status,2+status,0]
  1106                           ;initOscilador@option stored from wreg
  1107  046B  00F2               	movwf	initOscilador@option
  1108                           
  1109                           ;./Oscilador.h: 13: 
  1110  046C  2C9C               	goto	l1499
  1111  046D                     l1479:	
  1112                           
  1113                           ;./Oscilador.h: 16:         case 3:
  1114  046D  308F               	movlw	-113
  1115  046E  1683               	bsf	3,5	;RP0=1, select bank1
  1116  046F  1303               	bcf	3,6	;RP1=0, select bank1
  1117  0470  058F               	andwf	15,f	;volatile
  1118                           
  1119                           ;./Oscilador.h: 17: 
  1120  0471  2CBE               	goto	l135
  1121  0472                     l1481:	
  1122                           
  1123                           ;./Oscilador.h: 20:         case 4:
  1124  0472  1683               	bsf	3,5	;RP0=1, select bank1
  1125  0473  1303               	bcf	3,6	;RP1=0, select bank1
  1126  0474  080F               	movf	15,w	;volatile
  1127  0475  398F               	andlw	-113
  1128  0476  3810               	iorlw	16
  1129  0477  2C95               	goto	L6
  1130  0478                     l1483:	
  1131                           ;./Oscilador.h: 21: 
  1132                           
  1133                           
  1134                           ;./Oscilador.h: 24:         case 5:
  1135  0478  1683               	bsf	3,5	;RP0=1, select bank1
  1136  0479  1303               	bcf	3,6	;RP1=0, select bank1
  1137  047A  080F               	movf	15,w	;volatile
  1138  047B  398F               	andlw	-113
  1139  047C  3820               	iorlw	32
  1140  047D  2C95               	goto	L6
  1141  047E                     l1485:	
  1142                           ;./Oscilador.h: 25: 
  1143                           
  1144                           
  1145                           ;./Oscilador.h: 28:         case 6:
  1146  047E  1683               	bsf	3,5	;RP0=1, select bank1
  1147  047F  1303               	bcf	3,6	;RP1=0, select bank1
  1148  0480  080F               	movf	15,w	;volatile
  1149  0481  398F               	andlw	-113
  1150  0482  3830               	iorlw	48
  1151  0483  2C95               	goto	L6
  1152  0484                     l1487:	
  1153                           ;./Oscilador.h: 29: 
  1154                           
  1155                           
  1156                           ;./Oscilador.h: 32:         case 7:
  1157  0484  1683               	bsf	3,5	;RP0=1, select bank1
  1158  0485  1303               	bcf	3,6	;RP1=0, select bank1
  1159  0486  080F               	movf	15,w	;volatile
  1160  0487  398F               	andlw	-113
  1161  0488  3840               	iorlw	64
  1162  0489  2C95               	goto	L6
  1163  048A                     l1489:	
  1164                           ;./Oscilador.h: 33: 
  1165                           
  1166                           
  1167                           ;./Oscilador.h: 36:         default:
  1168  048A  1683               	bsf	3,5	;RP0=1, select bank1
  1169  048B  1303               	bcf	3,6	;RP1=0, select bank1
  1170  048C  080F               	movf	15,w	;volatile
  1171  048D  398F               	andlw	-113
  1172  048E  3850               	iorlw	80
  1173  048F  2C95               	goto	L6
  1174  0490                     l1491:	
  1175                           ;./Oscilador.h: 37: 
  1176                           
  1177                           
  1178                           ;./Oscilador.h: 40:     }
  1179  0490  1683               	bsf	3,5	;RP0=1, select bank1
  1180  0491  1303               	bcf	3,6	;RP1=0, select bank1
  1181  0492  080F               	movf	15,w	;volatile
  1182  0493  398F               	andlw	-113
  1183  0494  3860               	iorlw	96
  1184  0495                     L6:	
  1185  0495  008F               	movwf	15	;volatile
  1186                           
  1187                           ;./Oscilador.h: 41:     OSCCONbits.SCS = 1;
  1188  0496  2CBE               	goto	l135
  1189  0497                     l1493:	
  1190  0497                     l1495:	
  1191  0497  3070               	movlw	112
  1192  0498  1683               	bsf	3,5	;RP0=1, select bank1
  1193  0499  1303               	bcf	3,6	;RP1=0, select bank1
  1194  049A  048F               	iorwf	15,f	;volatile
  1195  049B  2CBE               	goto	l135
  1196  049C                     l1499:	
  1197  049C  0872               	movf	initOscilador@option,w
  1198  049D  00F0               	movwf	??_initOscilador
  1199  049E  01F1               	clrf	??_initOscilador+1
  1200                           
  1201                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1202                           ; Switch size 1, requested type "simple"
  1203                           ; Number of cases is 1, Range of values is 0 to 0
  1204                           ; switch strategies available:
  1205                           ; Name         Instructions Cycles
  1206                           ; simple_byte            4     3 (average)
  1207                           ; direct_byte           11     8 (fixed)
  1208                           ; jumptable            260     6 (fixed)
  1209                           ;	Chosen strategy is simple_byte
  1210  049F  0871               	movf	??_initOscilador+1,w
  1211  04A0  3A00               	xorlw	0	; case 0
  1212  04A1  1903               	skipnz
  1213  04A2  2CA4               	goto	l1781
  1214  04A3  2C97               	goto	l1495
  1215  04A4                     l1781:	
  1216                           
  1217                           ; Switch size 1, requested type "simple"
  1218                           ; Number of cases is 8, Range of values is 0 to 7
  1219                           ; switch strategies available:
  1220                           ; Name         Instructions Cycles
  1221                           ; simple_byte           25    13 (average)
  1222                           ; direct_byte           32     8 (fixed)
  1223                           ; jumptable            260     6 (fixed)
  1224                           ;	Chosen strategy is simple_byte
  1225  04A4  0870               	movf	??_initOscilador,w
  1226  04A5  3A00               	xorlw	0	; case 0
  1227  04A6  1903               	skipnz
  1228  04A7  2C6D               	goto	l1479
  1229  04A8  3A01               	xorlw	1	; case 1
  1230  04A9  1903               	skipnz
  1231  04AA  2C72               	goto	l1481
  1232  04AB  3A03               	xorlw	3	; case 2
  1233  04AC  1903               	skipnz
  1234  04AD  2C78               	goto	l1483
  1235  04AE  3A01               	xorlw	1	; case 3
  1236  04AF  1903               	skipnz
  1237  04B0  2C7E               	goto	l1485
  1238  04B1  3A07               	xorlw	7	; case 4
  1239  04B2  1903               	skipnz
  1240  04B3  2C84               	goto	l1487
  1241  04B4  3A01               	xorlw	1	; case 5
  1242  04B5  1903               	skipnz
  1243  04B6  2C8A               	goto	l1489
  1244  04B7  3A03               	xorlw	3	; case 6
  1245  04B8  1903               	skipnz
  1246  04B9  2C90               	goto	l1491
  1247  04BA  3A01               	xorlw	1	; case 7
  1248  04BB  1903               	skipnz
  1249  04BC  2C97               	goto	l1493
  1250  04BD  2C97               	goto	l1495
  1251  04BE                     l135:	
  1252  04BE  140F               	bsf	15,0	;volatile
  1253  04BF  0008               	return
  1254  04C0                     __end_of_initOscilador:	
  1255                           
  1256                           	psect	text4
  1257  04C0                     __ptext4:	
  1258 ;; *************** function _Lcd_Init *****************
  1259 ;; Defined at:
  1260 ;;		line 65 in file "./LCD4bits.h"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		wreg, status,2, status,0, pclath, cstack
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1274 ;;      Params:         0       0       0       0       0
  1275 ;;      Locals:         0       0       0       0       0
  1276 ;;      Temps:          2       0       0       0       0
  1277 ;;      Totals:         2       0       0       0       0
  1278 ;;Total ram usage:        2 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; Hardware stack levels required when called:    2
  1281 ;; This function calls:
  1282 ;;		_Lcd_Cmd
  1283 ;;		_Lcd_Port
  1284 ;; This function is called by:
  1285 ;;		_setup
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           
  1290                           ;psect for function _Lcd_Init
  1291  04C0                     _Lcd_Init:	
  1292                           
  1293                           ;./LCD4bits.h: 67:   Lcd_Port(0x00);
  1294                           
  1295                           ;incstack = 0
  1296                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1297  04C0  3000               	movlw	0
  1298  04C1  120A  118A  2215  120A  118A  	fcall	_Lcd_Port
  1299                           
  1300                           ;./LCD4bits.h: 68:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1301  04C6  3034               	movlw	52
  1302  04C7  00F5               	movwf	??_Lcd_Init+1
  1303  04C8  30F1               	movlw	241
  1304  04C9  00F4               	movwf	??_Lcd_Init
  1305  04CA                     u1117:	
  1306  04CA  0BF4               	decfsz	??_Lcd_Init,f
  1307  04CB  2CCA               	goto	u1117
  1308  04CC  0BF5               	decfsz	??_Lcd_Init+1,f
  1309  04CD  2CCA               	goto	u1117
  1310  04CE  2CCF               	nop2
  1311                           
  1312                           ;./LCD4bits.h: 69:   Lcd_Cmd(0x03);
  1313  04CF  3003               	movlw	3
  1314  04D0  120A  118A  222F  120A  118A  	fcall	_Lcd_Cmd
  1315                           
  1316                           ;./LCD4bits.h: 70:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1317  04D5  300D               	movlw	13
  1318  04D6  00F5               	movwf	??_Lcd_Init+1
  1319  04D7  30FB               	movlw	251
  1320  04D8  00F4               	movwf	??_Lcd_Init
  1321  04D9                     u1127:	
  1322  04D9  0BF4               	decfsz	??_Lcd_Init,f
  1323  04DA  2CD9               	goto	u1127
  1324  04DB  0BF5               	decfsz	??_Lcd_Init+1,f
  1325  04DC  2CD9               	goto	u1127
  1326  04DD  2CDE               	nop2
  1327                           
  1328                           ;./LCD4bits.h: 71:   Lcd_Cmd(0x03);
  1329  04DE  3003               	movlw	3
  1330  04DF  120A  118A  222F  120A  118A  	fcall	_Lcd_Cmd
  1331                           
  1332                           ;./LCD4bits.h: 72:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1333  04E4  301D               	movlw	29
  1334  04E5  00F5               	movwf	??_Lcd_Init+1
  1335  04E6  3091               	movlw	145
  1336  04E7  00F4               	movwf	??_Lcd_Init
  1337  04E8                     u1137:	
  1338  04E8  0BF4               	decfsz	??_Lcd_Init,f
  1339  04E9  2CE8               	goto	u1137
  1340  04EA  0BF5               	decfsz	??_Lcd_Init+1,f
  1341  04EB  2CE8               	goto	u1137
  1342                           
  1343                           ;./LCD4bits.h: 73:   Lcd_Cmd(0x03);
  1344  04EC  3003               	movlw	3
  1345  04ED  120A  118A  222F  120A  118A  	fcall	_Lcd_Cmd
  1346                           
  1347                           ;./LCD4bits.h: 75:   Lcd_Cmd(0x02);
  1348  04F2  3002               	movlw	2
  1349  04F3  120A  118A  222F  120A  118A  	fcall	_Lcd_Cmd
  1350                           
  1351                           ;./LCD4bits.h: 76:   Lcd_Cmd(0x02);
  1352  04F8  3002               	movlw	2
  1353  04F9  120A  118A  222F  120A  118A  	fcall	_Lcd_Cmd
  1354                           
  1355                           ;./LCD4bits.h: 77:   Lcd_Cmd(0x08);
  1356  04FE  3008               	movlw	8
  1357  04FF  120A  118A  222F  120A  118A  	fcall	_Lcd_Cmd
  1358                           
  1359                           ;./LCD4bits.h: 78:   Lcd_Cmd(0x00);
  1360  0504  3000               	movlw	0
  1361  0505  120A  118A  222F  120A  118A  	fcall	_Lcd_Cmd
  1362                           
  1363                           ;./LCD4bits.h: 79:   Lcd_Cmd(0x0C);
  1364  050A  300C               	movlw	12
  1365  050B  120A  118A  222F  120A  118A  	fcall	_Lcd_Cmd
  1366                           
  1367                           ;./LCD4bits.h: 80:   Lcd_Cmd(0x00);
  1368  0510  3000               	movlw	0
  1369  0511  120A  118A  222F  120A  118A  	fcall	_Lcd_Cmd
  1370                           
  1371                           ;./LCD4bits.h: 81:   Lcd_Cmd(0x06);
  1372  0516  3006               	movlw	6
  1373  0517  120A  118A  222F   	fcall	_Lcd_Cmd
  1374  051A  0008               	return
  1375  051B                     __end_of_Lcd_Init:	
  1376                           
  1377                           	psect	text5
  1378  0339                     __ptext5:	
  1379 ;; *************** function _I2C_Master_Init *****************
  1380 ;; Defined at:
  1381 ;;		line 16 in file "./I2C.h"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  c               4    0[BANK0 ] const unsigned long 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0, pclath, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1395 ;;      Params:         0       4       0       0       0
  1396 ;;      Locals:         0       0       0       0       0
  1397 ;;      Temps:          0       4       0       0       0
  1398 ;;      Totals:         0       8       0       0       0
  1399 ;;Total ram usage:        8 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    1
  1402 ;; This function calls:
  1403 ;;		___lldiv
  1404 ;; This function is called by:
  1405 ;;		_setup
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           
  1410                           ;psect for function _I2C_Master_Init
  1411  0339                     _I2C_Master_Init:	
  1412                           
  1413                           ;./I2C.h: 16: void I2C_Master_Init(const unsigned long c);./I2C.h: 17: {;./I2C.h: 18:   
      +                            SSPCON = 0b00101000;
  1414                           
  1415                           ;incstack = 0
  1416                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1417  0339  3028               	movlw	40
  1418  033A  1283               	bcf	3,5	;RP0=0, select bank0
  1419  033B  1303               	bcf	3,6	;RP1=0, select bank0
  1420  033C  0094               	movwf	20	;volatile
  1421                           
  1422                           ;./I2C.h: 19:     SSPCON2 = 0;
  1423  033D  1683               	bsf	3,5	;RP0=1, select bank1
  1424  033E  1303               	bcf	3,6	;RP1=0, select bank1
  1425  033F  0191               	clrf	17	;volatile
  1426                           
  1427                           ;./I2C.h: 20:     SSPADD = (8000000/(4*c))-1;
  1428  0340  1283               	bcf	3,5	;RP0=0, select bank0
  1429  0341  1303               	bcf	3,6	;RP1=0, select bank0
  1430  0342  0820               	movf	I2C_Master_Init@c,w
  1431  0343  00A4               	movwf	??_I2C_Master_Init
  1432  0344  0821               	movf	I2C_Master_Init@c+1,w
  1433  0345  00A5               	movwf	??_I2C_Master_Init+1
  1434  0346  0822               	movf	I2C_Master_Init@c+2,w
  1435  0347  00A6               	movwf	??_I2C_Master_Init+2
  1436  0348  0823               	movf	I2C_Master_Init@c+3,w
  1437  0349  00A7               	movwf	??_I2C_Master_Init+3
  1438  034A  3002               	movlw	2
  1439  034B                     u825:	
  1440  034B  1003               	clrc
  1441  034C  0DA4               	rlf	??_I2C_Master_Init,f
  1442  034D  0DA5               	rlf	??_I2C_Master_Init+1,f
  1443  034E  0DA6               	rlf	??_I2C_Master_Init+2,f
  1444  034F  0DA7               	rlf	??_I2C_Master_Init+3,f
  1445  0350  3EFF               	addlw	-1
  1446  0351  1D03               	skipz
  1447  0352  2B4B               	goto	u825
  1448  0353  0827               	movf	??_I2C_Master_Init+3,w
  1449  0354  00F3               	movwf	___lldiv@divisor+3
  1450  0355  0826               	movf	??_I2C_Master_Init+2,w
  1451  0356  00F2               	movwf	___lldiv@divisor+2
  1452  0357  0825               	movf	??_I2C_Master_Init+1,w
  1453  0358  00F1               	movwf	___lldiv@divisor+1
  1454  0359  0824               	movf	??_I2C_Master_Init,w
  1455  035A  00F0               	movwf	___lldiv@divisor
  1456  035B  3000               	movlw	0
  1457  035C  00F7               	movwf	___lldiv@dividend+3
  1458  035D  307A               	movlw	122
  1459  035E  00F6               	movwf	___lldiv@dividend+2
  1460  035F  3012               	movlw	18
  1461  0360  00F5               	movwf	___lldiv@dividend+1
  1462  0361  3000               	movlw	0
  1463  0362  00F4               	movwf	___lldiv@dividend
  1464  0363  120A  118A  251B   	fcall	___lldiv
  1465  0366  0870               	movf	?___lldiv,w
  1466  0367  3EFF               	addlw	255
  1467  0368  1683               	bsf	3,5	;RP0=1, select bank1
  1468  0369  1303               	bcf	3,6	;RP1=0, select bank1
  1469  036A  0093               	movwf	19	;volatile
  1470                           
  1471                           ;./I2C.h: 21:     SSPSTAT = 0;
  1472  036B  0194               	clrf	20	;volatile
  1473                           
  1474                           ;./I2C.h: 22:     TRISC3 = 1;
  1475  036C  1587               	bsf	7,3	;volatile
  1476                           
  1477                           ;./I2C.h: 23:     TRISC4 = 1;
  1478  036D  1607               	bsf	7,4	;volatile
  1479  036E  0008               	return
  1480  036F                     __end_of_I2C_Master_Init:	
  1481                           
  1482                           	psect	text6
  1483  051B                     __ptext6:	
  1484 ;; *************** function ___lldiv *****************
  1485 ;; Defined at:
  1486 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  divisor         4    0[COMMON] unsigned long 
  1489 ;;  dividend        4    4[COMMON] unsigned long 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  quotient        4    9[COMMON] unsigned long 
  1492 ;;  counter         1   13[COMMON] unsigned char 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  4    0[COMMON] unsigned long 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1502 ;;      Params:         8       0       0       0       0
  1503 ;;      Locals:         5       0       0       0       0
  1504 ;;      Temps:          1       0       0       0       0
  1505 ;;      Totals:        14       0       0       0       0
  1506 ;;Total ram usage:       14 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_I2C_Master_Init
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function ___lldiv
  1517  051B                     ___lldiv:	
  1518                           
  1519                           ;incstack = 0
  1520                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1521  051B  3000               	movlw	0
  1522  051C  00FC               	movwf	___lldiv@quotient+3
  1523  051D  3000               	movlw	0
  1524  051E  00FB               	movwf	___lldiv@quotient+2
  1525  051F  3000               	movlw	0
  1526  0520  00FA               	movwf	___lldiv@quotient+1
  1527  0521  3000               	movlw	0
  1528  0522  00F9               	movwf	___lldiv@quotient
  1529  0523  0873               	movf	___lldiv@divisor+3,w
  1530  0524  0472               	iorwf	___lldiv@divisor+2,w
  1531  0525  0471               	iorwf	___lldiv@divisor+1,w
  1532  0526  0470               	iorwf	___lldiv@divisor,w
  1533  0527  1903               	skipnz
  1534  0528  2D70               	goto	l1351
  1535  0529  01FD               	clrf	___lldiv@counter
  1536  052A  0AFD               	incf	___lldiv@counter,f
  1537  052B                     l1337:	
  1538  052B  1BF3               	btfsc	___lldiv@divisor+3,7
  1539  052C  2D3B               	goto	l1339
  1540  052D  3001               	movlw	1
  1541  052E  00F8               	movwf	??___lldiv
  1542  052F                     u635:	
  1543  052F  1003               	clrc
  1544  0530  0DF0               	rlf	___lldiv@divisor,f
  1545  0531  0DF1               	rlf	___lldiv@divisor+1,f
  1546  0532  0DF2               	rlf	___lldiv@divisor+2,f
  1547  0533  0DF3               	rlf	___lldiv@divisor+3,f
  1548  0534  0BF8               	decfsz	??___lldiv,f
  1549  0535  2D2F               	goto	u635
  1550  0536  3001               	movlw	1
  1551  0537  00F8               	movwf	??___lldiv
  1552  0538  0878               	movf	??___lldiv,w
  1553  0539  07FD               	addwf	___lldiv@counter,f
  1554  053A  2D2B               	goto	l1337
  1555  053B                     l1339:	
  1556  053B  3001               	movlw	1
  1557  053C  00F8               	movwf	??___lldiv
  1558  053D                     u655:	
  1559  053D  1003               	clrc
  1560  053E  0DF9               	rlf	___lldiv@quotient,f
  1561  053F  0DFA               	rlf	___lldiv@quotient+1,f
  1562  0540  0DFB               	rlf	___lldiv@quotient+2,f
  1563  0541  0DFC               	rlf	___lldiv@quotient+3,f
  1564  0542  0BF8               	decfsz	??___lldiv,f
  1565  0543  2D3D               	goto	u655
  1566  0544  0873               	movf	___lldiv@divisor+3,w
  1567  0545  0277               	subwf	___lldiv@dividend+3,w
  1568  0546  1D03               	skipz
  1569  0547  2D52               	goto	u665
  1570  0548  0872               	movf	___lldiv@divisor+2,w
  1571  0549  0276               	subwf	___lldiv@dividend+2,w
  1572  054A  1D03               	skipz
  1573  054B  2D52               	goto	u665
  1574  054C  0871               	movf	___lldiv@divisor+1,w
  1575  054D  0275               	subwf	___lldiv@dividend+1,w
  1576  054E  1D03               	skipz
  1577  054F  2D52               	goto	u665
  1578  0550  0870               	movf	___lldiv@divisor,w
  1579  0551  0274               	subwf	___lldiv@dividend,w
  1580  0552                     u665:	
  1581  0552  1C03               	skipc
  1582  0553  2D63               	goto	l1347
  1583  0554  0870               	movf	___lldiv@divisor,w
  1584  0555  02F4               	subwf	___lldiv@dividend,f
  1585  0556  0871               	movf	___lldiv@divisor+1,w
  1586  0557  1C03               	skipc
  1587  0558  0F71               	incfsz	___lldiv@divisor+1,w
  1588  0559  02F5               	subwf	___lldiv@dividend+1,f
  1589  055A  0872               	movf	___lldiv@divisor+2,w
  1590  055B  1C03               	skipc
  1591  055C  0F72               	incfsz	___lldiv@divisor+2,w
  1592  055D  02F6               	subwf	___lldiv@dividend+2,f
  1593  055E  0873               	movf	___lldiv@divisor+3,w
  1594  055F  1C03               	skipc
  1595  0560  0F73               	incfsz	___lldiv@divisor+3,w
  1596  0561  02F7               	subwf	___lldiv@dividend+3,f
  1597  0562  1479               	bsf	___lldiv@quotient,0
  1598  0563                     l1347:	
  1599  0563  3001               	movlw	1
  1600  0564                     u675:	
  1601  0564  1003               	clrc
  1602  0565  0CF3               	rrf	___lldiv@divisor+3,f
  1603  0566  0CF2               	rrf	___lldiv@divisor+2,f
  1604  0567  0CF1               	rrf	___lldiv@divisor+1,f
  1605  0568  0CF0               	rrf	___lldiv@divisor,f
  1606  0569  3EFF               	addlw	-1
  1607  056A  1D03               	skipz
  1608  056B  2D64               	goto	u675
  1609  056C  3001               	movlw	1
  1610  056D  02FD               	subwf	___lldiv@counter,f
  1611  056E  1D03               	btfss	3,2
  1612  056F  2D3B               	goto	l1339
  1613  0570                     l1351:	
  1614  0570  087C               	movf	___lldiv@quotient+3,w
  1615  0571  00F3               	movwf	?___lldiv+3
  1616  0572  087B               	movf	___lldiv@quotient+2,w
  1617  0573  00F2               	movwf	?___lldiv+2
  1618  0574  087A               	movf	___lldiv@quotient+1,w
  1619  0575  00F1               	movwf	?___lldiv+1
  1620  0576  0879               	movf	___lldiv@quotient,w
  1621  0577  00F0               	movwf	?___lldiv
  1622  0578  0008               	return
  1623  0579                     __end_of___lldiv:	
  1624                           
  1625                           	psect	text7
  1626  0579                     __ptext7:	
  1627 ;; *************** function _get_time *****************
  1628 ;; Defined at:
  1629 ;;		line 101 in file "mainMaster.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  string_time     6    0[BANK0 ] unsigned char [6]
  1634 ;;  min             1    7[BANK0 ] unsigned char 
  1635 ;;  hour            1    6[BANK0 ] unsigned char 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      PTR unsigned char 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, status,0, pclath, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1645 ;;      Params:         0       0       0       0       0
  1646 ;;      Locals:         0       8       0       0       0
  1647 ;;      Temps:          2       0       0       0       0
  1648 ;;      Totals:         2       8       0       0       0
  1649 ;;Total ram usage:       10 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:    2
  1652 ;; This function calls:
  1653 ;;		_I2C_Master_Read
  1654 ;;		_I2C_Master_RepeatedStart
  1655 ;;		_I2C_Master_Start
  1656 ;;		_I2C_Master_Stop
  1657 ;;		_I2C_Master_Write
  1658 ;; This function is called by:
  1659 ;;		_main
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           
  1664                           ;psect for function _get_time
  1665  0579                     _get_time:	
  1666                           
  1667                           ;mainMaster.c: 102:     char hour, min;;mainMaster.c: 103:     char string_time[6];;main
      +                          Master.c: 105:     I2C_Master_Start();
  1668                           
  1669                           ;incstack = 0
  1670                           ; Regs used in _get_time: [wreg+status,2+status,0+pclath+cstack]
  1671  0579  120A  118A  21D3  120A  118A  	fcall	_I2C_Master_Start
  1672                           
  1673                           ;mainMaster.c: 106:     I2C_Master_Write(0xD0);
  1674  057E  30D0               	movlw	208
  1675  057F  00F0               	movwf	I2C_Master_Write@d
  1676  0580  3000               	movlw	0
  1677  0581  00F1               	movwf	I2C_Master_Write@d+1
  1678  0582  120A  118A  21E8  120A  118A  	fcall	_I2C_Master_Write
  1679                           
  1680                           ;mainMaster.c: 107:     I2C_Master_Write(0x01);
  1681  0587  3001               	movlw	1
  1682  0588  00F0               	movwf	I2C_Master_Write@d
  1683  0589  3000               	movlw	0
  1684  058A  00F1               	movwf	I2C_Master_Write@d+1
  1685  058B  120A  118A  21E8  120A  118A  	fcall	_I2C_Master_Write
  1686                           
  1687                           ;mainMaster.c: 108:     I2C_Master_RepeatedStart();
  1688  0590  120A  118A  21E1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1689                           
  1690                           ;mainMaster.c: 109:     I2C_Master_Write(0xD1);
  1691  0595  30D1               	movlw	209
  1692  0596  00F0               	movwf	I2C_Master_Write@d
  1693  0597  3000               	movlw	0
  1694  0598  00F1               	movwf	I2C_Master_Write@d+1
  1695  0599  120A  118A  21E8  120A  118A  	fcall	_I2C_Master_Write
  1696                           
  1697                           ;mainMaster.c: 110:     min = I2C_Master_Read(1);
  1698  059E  3001               	movlw	1
  1699  059F  00F0               	movwf	I2C_Master_Read@a
  1700  05A0  3000               	movlw	0
  1701  05A1  00F1               	movwf	I2C_Master_Read@a+1
  1702  05A2  120A  118A  22DB  120A  118A  	fcall	_I2C_Master_Read
  1703  05A7  0870               	movf	?_I2C_Master_Read,w
  1704  05A8  00F6               	movwf	??_get_time
  1705  05A9  0876               	movf	??_get_time,w
  1706  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  1707  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  1708  05AC  00A7               	movwf	get_time@min
  1709                           
  1710                           ;mainMaster.c: 111:     hour = I2C_Master_Read(0);
  1711  05AD  3000               	movlw	0
  1712  05AE  00F0               	movwf	I2C_Master_Read@a
  1713  05AF  00F1               	movwf	I2C_Master_Read@a+1
  1714  05B0  120A  118A  22DB  120A  118A  	fcall	_I2C_Master_Read
  1715  05B5  0870               	movf	?_I2C_Master_Read,w
  1716  05B6  00F6               	movwf	??_get_time
  1717  05B7  0876               	movf	??_get_time,w
  1718  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  1719  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  1720  05BA  00A6               	movwf	get_time@hour
  1721                           
  1722                           ;mainMaster.c: 112:     I2C_Master_Stop();
  1723  05BB  120A  118A  21DA  120A  118A  	fcall	_I2C_Master_Stop
  1724                           
  1725                           ;mainMaster.c: 114:     string_time[0] = (hour >> 4) + '0';
  1726  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  1727  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  1728  05C2  0826               	movf	get_time@hour,w
  1729  05C3  00F6               	movwf	??_get_time
  1730  05C4  3004               	movlw	4
  1731  05C5                     u1035:	
  1732  05C5  1003               	clrc
  1733  05C6  0CF6               	rrf	??_get_time,f
  1734  05C7  3EFF               	addlw	-1
  1735  05C8  1D03               	skipz
  1736  05C9  2DC5               	goto	u1035
  1737  05CA  0876               	movf	??_get_time,w
  1738  05CB  3E30               	addlw	48
  1739  05CC  00F7               	movwf	??_get_time+1
  1740  05CD  0877               	movf	??_get_time+1,w
  1741  05CE  00A0               	movwf	get_time@string_time
  1742                           
  1743                           ;mainMaster.c: 115:     string_time[1] = (hour & 0x0F) + '0';
  1744  05CF  0826               	movf	get_time@hour,w
  1745  05D0  390F               	andlw	15
  1746  05D1  3E30               	addlw	48
  1747  05D2  00F6               	movwf	??_get_time
  1748  05D3  0876               	movf	??_get_time,w
  1749  05D4  00A1               	movwf	get_time@string_time+1
  1750                           
  1751                           ;mainMaster.c: 116:     string_time[2] = ':';
  1752  05D5  303A               	movlw	58
  1753  05D6  00F6               	movwf	??_get_time
  1754  05D7  0876               	movf	??_get_time,w
  1755  05D8  00A2               	movwf	get_time@string_time+2
  1756                           
  1757                           ;mainMaster.c: 117:     string_time[3] = (min >> 4) + '0';
  1758  05D9  0827               	movf	get_time@min,w
  1759  05DA  00F6               	movwf	??_get_time
  1760  05DB  3004               	movlw	4
  1761  05DC                     u1045:	
  1762  05DC  1003               	clrc
  1763  05DD  0CF6               	rrf	??_get_time,f
  1764  05DE  3EFF               	addlw	-1
  1765  05DF  1D03               	skipz
  1766  05E0  2DDC               	goto	u1045
  1767  05E1  0876               	movf	??_get_time,w
  1768  05E2  3E30               	addlw	48
  1769  05E3  00F7               	movwf	??_get_time+1
  1770  05E4  0877               	movf	??_get_time+1,w
  1771  05E5  00A3               	movwf	get_time@string_time+3
  1772                           
  1773                           ;mainMaster.c: 118:     string_time[4] = (min & 0x0F) + '0';
  1774  05E6  0827               	movf	get_time@min,w
  1775  05E7  390F               	andlw	15
  1776  05E8  3E30               	addlw	48
  1777  05E9  00F6               	movwf	??_get_time
  1778  05EA  0876               	movf	??_get_time,w
  1779  05EB  00A4               	movwf	get_time@string_time+4
  1780                           
  1781                           ;mainMaster.c: 119:     string_time[5] = '\0';
  1782  05EC  01A5               	clrf	get_time@string_time+5
  1783                           
  1784                           ;mainMaster.c: 121:     return (string_time);
  1785  05ED  3020               	movlw	(low (get_time@string_time| 0))& (0+255)
  1786  05EE  0008               	return
  1787  05EF                     __end_of_get_time:	
  1788                           
  1789                           	psect	text8
  1790  0682                     __ptext8:	
  1791 ;; *************** function _get_temp *****************
  1792 ;; Defined at:
  1793 ;;		line 138 in file "mainMaster.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  temperature     6   16[BANK0 ] unsigned char [6]
  1798 ;;  decimal         3   22[BANK0 ] unsigned char [3]
  1799 ;;  tempLSB         1   26[BANK0 ] unsigned char 
  1800 ;;  tempMSB         1   25[BANK0 ] unsigned char 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      PTR unsigned char 
  1803 ;; Registers used:
  1804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1810 ;;      Params:         0       0       0       0       0
  1811 ;;      Locals:         0      11       0       0       0
  1812 ;;      Temps:          0       3       0       0       0
  1813 ;;      Totals:         0      14       0       0       0
  1814 ;;Total ram usage:       14 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    2
  1817 ;; This function calls:
  1818 ;;		_I2C_Master_Read
  1819 ;;		_I2C_Master_RepeatedStart
  1820 ;;		_I2C_Master_Start
  1821 ;;		_I2C_Master_Stop
  1822 ;;		_I2C_Master_Write
  1823 ;;		___bmul
  1824 ;;		_sprintf
  1825 ;;		_strcat
  1826 ;; This function is called by:
  1827 ;;		_main
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           
  1832                           ;psect for function _get_temp
  1833  0682                     _get_temp:	
  1834                           
  1835                           ;mainMaster.c: 139:     char tempLSB, tempMSB;;mainMaster.c: 140:     char temperature[6
      +                          ], decimal[3];;mainMaster.c: 142:     I2C_Master_Start();
  1836                           
  1837                           ;incstack = 0
  1838                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1839  0682  120A  118A  21D3  120A  118A  	fcall	_I2C_Master_Start
  1840                           
  1841                           ;mainMaster.c: 143:     I2C_Master_Write(0xD0);
  1842  0687  30D0               	movlw	208
  1843  0688  00F0               	movwf	I2C_Master_Write@d
  1844  0689  3000               	movlw	0
  1845  068A  00F1               	movwf	I2C_Master_Write@d+1
  1846  068B  120A  118A  21E8  120A  118A  	fcall	_I2C_Master_Write
  1847                           
  1848                           ;mainMaster.c: 144:     I2C_Master_Write(0x11);
  1849  0690  3011               	movlw	17
  1850  0691  00F0               	movwf	I2C_Master_Write@d
  1851  0692  3000               	movlw	0
  1852  0693  00F1               	movwf	I2C_Master_Write@d+1
  1853  0694  120A  118A  21E8  120A  118A  	fcall	_I2C_Master_Write
  1854                           
  1855                           ;mainMaster.c: 145:     I2C_Master_RepeatedStart();
  1856  0699  120A  118A  21E1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1857                           
  1858                           ;mainMaster.c: 146:     I2C_Master_Write(0xD1);
  1859  069E  30D1               	movlw	209
  1860  069F  00F0               	movwf	I2C_Master_Write@d
  1861  06A0  3000               	movlw	0
  1862  06A1  00F1               	movwf	I2C_Master_Write@d+1
  1863  06A2  120A  118A  21E8  120A  118A  	fcall	_I2C_Master_Write
  1864                           
  1865                           ;mainMaster.c: 147:     tempMSB = I2C_Master_Read(1);
  1866  06A7  3001               	movlw	1
  1867  06A8  00F0               	movwf	I2C_Master_Read@a
  1868  06A9  3000               	movlw	0
  1869  06AA  00F1               	movwf	I2C_Master_Read@a+1
  1870  06AB  120A  118A  22DB  120A  118A  	fcall	_I2C_Master_Read
  1871  06B0  0870               	movf	?_I2C_Master_Read,w
  1872  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1873  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1874  06B3  00AD               	movwf	??_get_temp
  1875  06B4  082D               	movf	??_get_temp,w
  1876  06B5  00B9               	movwf	get_temp@tempMSB
  1877                           
  1878                           ;mainMaster.c: 148:     tempLSB = I2C_Master_Read(0);
  1879  06B6  3000               	movlw	0
  1880  06B7  00F0               	movwf	I2C_Master_Read@a
  1881  06B8  00F1               	movwf	I2C_Master_Read@a+1
  1882  06B9  120A  118A  22DB  120A  118A  	fcall	_I2C_Master_Read
  1883  06BE  0870               	movf	?_I2C_Master_Read,w
  1884  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  1885  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  1886  06C1  00AD               	movwf	??_get_temp
  1887  06C2  082D               	movf	??_get_temp,w
  1888  06C3  00BA               	movwf	get_temp@tempLSB
  1889                           
  1890                           ;mainMaster.c: 149:     I2C_Master_Stop();
  1891  06C4  120A  118A  21DA  120A  118A  	fcall	_I2C_Master_Stop
  1892                           
  1893                           ;mainMaster.c: 151:     tempMSB = tempMSB - 4;
  1894  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1895  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1896  06CB  0839               	movf	get_temp@tempMSB,w
  1897  06CC  3EFC               	addlw	252
  1898  06CD  00AD               	movwf	??_get_temp
  1899  06CE  082D               	movf	??_get_temp,w
  1900  06CF  00B9               	movwf	get_temp@tempMSB
  1901                           
  1902                           ;mainMaster.c: 152:     tempLSB = (tempLSB >> 6) * 25;
  1903  06D0  3019               	movlw	25
  1904  06D1  00AD               	movwf	??_get_temp
  1905  06D2  082D               	movf	??_get_temp,w
  1906  06D3  00F0               	movwf	___bmul@multiplicand
  1907  06D4  083A               	movf	get_temp@tempLSB,w
  1908  06D5  00AE               	movwf	??_get_temp+1
  1909  06D6  3006               	movlw	6
  1910  06D7                     u1055:	
  1911  06D7  1003               	clrc
  1912  06D8  0CAE               	rrf	??_get_temp+1,f
  1913  06D9  3EFF               	addlw	-1
  1914  06DA  1D03               	skipz
  1915  06DB  2ED7               	goto	u1055
  1916  06DC  082E               	movf	??_get_temp+1,w
  1917  06DD  120A  118A  2204  120A  118A  	fcall	___bmul
  1918  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1919  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1920  06E4  00AF               	movwf	??_get_temp+2
  1921  06E5  082F               	movf	??_get_temp+2,w
  1922  06E6  00BA               	movwf	get_temp@tempLSB
  1923                           
  1924                           ;mainMaster.c: 153:     sprintf(temperature, "%d", tempMSB);
  1925  06E7  3029               	movlw	(low (((STR_6+1)-__stringbase)| (0+32768)))& (0+255)
  1926  06E8  00AD               	movwf	??_get_temp
  1927  06E9  082D               	movf	??_get_temp,w
  1928  06EA  00A0               	movwf	sprintf@f
  1929  06EB  0839               	movf	get_temp@tempMSB,w
  1930  06EC  00AE               	movwf	??_get_temp+1
  1931  06ED  01AF               	clrf	??_get_temp+2
  1932  06EE  082E               	movf	??_get_temp+1,w
  1933  06EF  00A1               	movwf	?_sprintf+1
  1934  06F0  082F               	movf	??_get_temp+2,w
  1935  06F1  00A2               	movwf	?_sprintf+2
  1936  06F2  3030               	movlw	(low (get_temp@temperature| 0))& (0+255)
  1937  06F3  120A  118A  271F  120A  118A  	fcall	_sprintf
  1938                           
  1939                           ;mainMaster.c: 154:     if (tempLSB == 0){
  1940  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  1941  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  1942  06FA  083A               	movf	get_temp@tempLSB,w
  1943  06FB  1D03               	btfss	3,2
  1944  06FC  2EFF               	goto	l1669
  1945                           
  1946                           ;mainMaster.c: 155:         sprintf(decimal, ".%d0", tempLSB);
  1947  06FD  3023               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1948  06FE  2F00               	goto	L7
  1949  06FF                     l1669:	
  1950                           ;mainMaster.c: 156:     } else {
  1951                           
  1952                           
  1953                           ;mainMaster.c: 157:         sprintf(decimal, ".%d", tempLSB);
  1954  06FF  3028               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1955  0700                     L7:	
  1956  0700  00AD               	movwf	??_get_temp
  1957  0701  082D               	movf	??_get_temp,w
  1958  0702  00A0               	movwf	sprintf@f
  1959  0703  083A               	movf	get_temp@tempLSB,w
  1960  0704  00AE               	movwf	??_get_temp+1
  1961  0705  01AF               	clrf	??_get_temp+2
  1962  0706  082E               	movf	??_get_temp+1,w
  1963  0707  00A1               	movwf	?_sprintf+1
  1964  0708  082F               	movf	??_get_temp+2,w
  1965  0709  00A2               	movwf	?_sprintf+2
  1966  070A  3036               	movlw	(low (get_temp@decimal| 0))& (0+255)
  1967  070B  120A  118A  271F  120A  118A  	fcall	_sprintf
  1968                           
  1969                           ;mainMaster.c: 159:     strcat(temperature, decimal);
  1970  0710  3036               	movlw	(low (get_temp@decimal| 0))& (0+255)
  1971  0711  1283               	bcf	3,5	;RP0=0, select bank0
  1972  0712  1303               	bcf	3,6	;RP1=0, select bank0
  1973  0713  00AD               	movwf	??_get_temp
  1974  0714  082D               	movf	??_get_temp,w
  1975  0715  00F0               	movwf	strcat@from
  1976  0716  3030               	movlw	(low (get_temp@temperature| 0))& (0+255)
  1977  0717  120A  118A  2268   	fcall	_strcat
  1978                           
  1979                           ;mainMaster.c: 160:     temperature[5] = '\0';
  1980  071A  1283               	bcf	3,5	;RP0=0, select bank0
  1981  071B  1303               	bcf	3,6	;RP1=0, select bank0
  1982  071C  01B5               	clrf	get_temp@temperature+5
  1983                           
  1984                           ;mainMaster.c: 162:     return (temperature);
  1985  071D  3030               	movlw	(low (get_temp@temperature| 0))& (0+255)
  1986  071E  0008               	return
  1987  071F                     __end_of_get_temp:	
  1988                           
  1989                           	psect	text9
  1990  0268                     __ptext9:	
  1991 ;; *************** function _strcat *****************
  1992 ;; Defined at:
  1993 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcat.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  to              1    wreg     PTR unsigned char 
  1996 ;;		 -> get_temp@temperature(6), 
  1997 ;;  from            1    0[COMMON] PTR const unsigned char 
  1998 ;;		 -> get_temp@decimal(3), 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  to              1    2[COMMON] PTR unsigned char 
  2001 ;;		 -> get_temp@temperature(6), 
  2002 ;;  cp              1    3[COMMON] PTR unsigned char 
  2003 ;;		 -> get_temp@temperature(6), 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      PTR unsigned char 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2013 ;;      Params:         1       0       0       0       0
  2014 ;;      Locals:         2       0       0       0       0
  2015 ;;      Temps:          1       0       0       0       0
  2016 ;;      Totals:         4       0       0       0       0
  2017 ;;Total ram usage:        4 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; This function calls:
  2020 ;;		Nothing
  2021 ;; This function is called by:
  2022 ;;		_get_temp
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           
  2027                           ;psect for function _strcat
  2028  0268                     _strcat:	
  2029                           
  2030                           ;incstack = 0
  2031                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2032                           ;strcat@to stored from wreg
  2033  0268  00F2               	movwf	strcat@to
  2034  0269  0872               	movf	strcat@to,w
  2035  026A  00F1               	movwf	??_strcat
  2036  026B  0871               	movf	??_strcat,w
  2037  026C  00F3               	movwf	strcat@cp
  2038  026D                     l1571:	
  2039  026D  0873               	movf	strcat@cp,w
  2040  026E  0084               	movwf	4
  2041  026F  1383               	bcf	3,7	;select IRP bank0
  2042  0270  0800               	movf	0,w
  2043  0271  1903               	btfsc	3,2
  2044  0272  2A80               	goto	l1575
  2045  0273  3001               	movlw	1
  2046  0274  00F1               	movwf	??_strcat
  2047  0275  0871               	movf	??_strcat,w
  2048  0276  07F3               	addwf	strcat@cp,f
  2049  0277  2A6D               	goto	l1571
  2050  0278                     l1573:	
  2051  0278  3001               	movlw	1
  2052  0279  00F1               	movwf	??_strcat
  2053  027A  0871               	movf	??_strcat,w
  2054  027B  07F3               	addwf	strcat@cp,f
  2055  027C  3001               	movlw	1
  2056  027D  00F1               	movwf	??_strcat
  2057  027E  0871               	movf	??_strcat,w
  2058  027F  07F0               	addwf	strcat@from,f
  2059  0280                     l1575:	
  2060  0280  0870               	movf	strcat@from,w
  2061  0281  0084               	movwf	4
  2062  0282  0800               	movf	0,w
  2063  0283  00F1               	movwf	??_strcat
  2064  0284  0873               	movf	strcat@cp,w
  2065  0285  0084               	movwf	4
  2066  0286  0871               	movf	??_strcat,w
  2067  0287  0080               	movwf	0
  2068  0288  0800               	movf	0,w
  2069  0289  1903               	btfsc	3,2
  2070  028A  0008               	return
  2071  028B  2A78               	goto	l1573
  2072  028C                     __end_of_strcat:	
  2073                           
  2074                           	psect	text10
  2075  071F                     __ptext10:	
  2076 ;; *************** function _sprintf *****************
  2077 ;; Defined at:
  2078 ;;		line 500 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  sp              1    wreg     PTR unsigned char 
  2081 ;;		 -> get_temp@decimal(3), get_temp@temperature(6), 
  2082 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2083 ;;		 -> STR_6(4), STR_5(5), STR_4(3), 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2086 ;;		 -> get_temp@decimal(3), get_temp@temperature(6), 
  2087 ;;  tmpval          4    0        struct .
  2088 ;;  val             2    9[BANK0 ] unsigned int 
  2089 ;;  cp              2    0        PTR const unsigned char 
  2090 ;;  len             2    0        unsigned int 
  2091 ;;  c               1   12[BANK0 ] unsigned char 
  2092 ;;  prec            1    8[BANK0 ] char 
  2093 ;;  flag            1    7[BANK0 ] unsigned char 
  2094 ;;  ap              1    6[BANK0 ] PTR void [1]
  2095 ;;		 -> ?_sprintf(2), 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  2    0[BANK0 ] int 
  2098 ;; Registers used:
  2099 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2105 ;;      Params:         0       3       0       0       0
  2106 ;;      Locals:         0       7       0       0       0
  2107 ;;      Temps:          0       3       0       0       0
  2108 ;;      Totals:         0      13       0       0       0
  2109 ;;Total ram usage:       13 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; Hardware stack levels required when called:    1
  2112 ;; This function calls:
  2113 ;;		___lwdiv
  2114 ;;		___lwmod
  2115 ;; This function is called by:
  2116 ;;		_get_temp
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           
  2121                           ;psect for function _sprintf
  2122  071F                     _sprintf:	
  2123                           
  2124                           ;incstack = 0
  2125                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2126                           ;sprintf@sp stored from wreg
  2127  071F  1283               	bcf	3,5	;RP0=0, select bank0
  2128  0720  1303               	bcf	3,6	;RP1=0, select bank0
  2129  0721  00AB               	movwf	sprintf@sp
  2130                           
  2131                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;D:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  2132  0722  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2133  0723  00A3               	movwf	??_sprintf
  2134  0724  0823               	movf	??_sprintf,w
  2135  0725  00A6               	movwf	sprintf@ap
  2136  0726                     l1557:	
  2137                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2138                           
  2139                           
  2140                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2141  0726  3001               	movlw	1
  2142  0727  07A0               	addwf	sprintf@f,f
  2143  0728  30FF               	movlw	-1
  2144  0729  0720               	addwf	sprintf@f,w
  2145  072A  0084               	movwf	4
  2146  072B  120A  118A  200D  120A  118A  	fcall	stringdir
  2147  0730  00A3               	movwf	??_sprintf
  2148  0731  0823               	movf	??_sprintf,w
  2149  0732  00AC               	movwf	sprintf@c
  2150  0733  082C               	movf	sprintf@c,w
  2151  0734  1903               	btfsc	3,2
  2152  0735  2FF2               	goto	l1559
  2153                           
  2154                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  2155  0736  3025               	movlw	37
  2156  0737  062C               	xorwf	sprintf@c,w
  2157  0738  1903               	btfsc	3,2
  2158  0739  2F46               	goto	l1513
  2159                           
  2160                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;D:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  2161  073A  082C               	movf	sprintf@c,w
  2162  073B  00A3               	movwf	??_sprintf
  2163  073C  082B               	movf	sprintf@sp,w
  2164  073D  0084               	movwf	4
  2165  073E  0823               	movf	??_sprintf,w
  2166  073F  1383               	bcf	3,7	;select IRP bank0
  2167  0740  0080               	movwf	0
  2168  0741  3001               	movlw	1
  2169  0742  00A3               	movwf	??_sprintf
  2170  0743  0823               	movf	??_sprintf,w
  2171  0744  07AB               	addwf	sprintf@sp,f
  2172                           
  2173                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  2174  0745  2F26               	goto	l1557
  2175  0746                     l1513:	
  2176                           
  2177                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  2178  0746  01A7               	clrf	sprintf@flag
  2179                           
  2180                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  2181  0747  3001               	movlw	1
  2182  0748  07A0               	addwf	sprintf@f,f
  2183  0749  30FF               	movlw	-1
  2184  074A  0720               	addwf	sprintf@f,w
  2185  074B  0084               	movwf	4
  2186  074C  120A  118A  200D  120A  118A  	fcall	stringdir
  2187  0751  00AC               	movwf	sprintf@c
  2188  0752  00A3               	movwf	??_sprintf
  2189  0753  01A4               	clrf	??_sprintf+1
  2190                           
  2191                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2192                           ; Switch size 1, requested type "simple"
  2193                           ; Number of cases is 1, Range of values is 0 to 0
  2194                           ; switch strategies available:
  2195                           ; Name         Instructions Cycles
  2196                           ; simple_byte            4     3 (average)
  2197                           ; direct_byte           11     8 (fixed)
  2198                           ; jumptable            260     6 (fixed)
  2199                           ;	Chosen strategy is simple_byte
  2200  0754  0824               	movf	??_sprintf+1,w
  2201  0755  3A00               	xorlw	0	; case 0
  2202  0756  1903               	skipnz
  2203  0757  2F59               	goto	l1783
  2204  0758  2F26               	goto	l1557
  2205  0759                     l1783:	
  2206                           
  2207                           ; Switch size 1, requested type "simple"
  2208                           ; Number of cases is 3, Range of values is 0 to 105
  2209                           ; switch strategies available:
  2210                           ; Name         Instructions Cycles
  2211                           ; simple_byte           10     6 (average)
  2212                           ; jumptable            260     6 (fixed)
  2213                           ;	Chosen strategy is simple_byte
  2214  0759  0823               	movf	??_sprintf,w
  2215  075A  3A00               	xorlw	0	; case 0
  2216  075B  1903               	skipnz
  2217  075C  2FF2               	goto	l1559
  2218  075D  3A64               	xorlw	100	; case 100
  2219  075E  1903               	skipnz
  2220  075F  2F64               	goto	l1519
  2221  0760  3A0D               	xorlw	13	; case 105
  2222  0761  1903               	skipnz
  2223  0762  2F64               	goto	l1519
  2224  0763  2F26               	goto	l1557
  2225  0764                     l1519:	
  2226                           
  2227                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2228  0764  0826               	movf	sprintf@ap,w
  2229  0765  0084               	movwf	4
  2230  0766  1383               	bcf	3,7	;select IRP bank0
  2231  0767  0800               	movf	0,w
  2232  0768  00A9               	movwf	sprintf@val
  2233  0769  0A84               	incf	4,f
  2234  076A  0800               	movf	0,w
  2235  076B  00AA               	movwf	sprintf@val+1
  2236  076C  3002               	movlw	2
  2237  076D  00A3               	movwf	??_sprintf
  2238  076E  0823               	movf	??_sprintf,w
  2239  076F  07A6               	addwf	sprintf@ap,f
  2240                           
  2241                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  2242  0770  1FAA               	btfss	sprintf@val+1,7
  2243  0771  2F7B               	goto	l1529
  2244                           
  2245                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  2246  0772  3003               	movlw	3
  2247  0773  00A3               	movwf	??_sprintf
  2248  0774  0823               	movf	??_sprintf,w
  2249  0775  04A7               	iorwf	sprintf@flag,f
  2250                           
  2251                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  2252  0776  09A9               	comf	sprintf@val,f
  2253  0777  09AA               	comf	sprintf@val+1,f
  2254  0778  0AA9               	incf	sprintf@val,f
  2255  0779  1903               	skipnz
  2256  077A  0AAA               	incf	sprintf@val+1,f
  2257  077B                     l1529:	
  2258                           
  2259                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2260  077B  01AC               	clrf	sprintf@c
  2261  077C  0AAC               	incf	sprintf@c,f
  2262  077D                     l1535:	
  2263                           
  2264                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  2265  077D  082C               	movf	sprintf@c,w
  2266  077E  00A3               	movwf	??_sprintf
  2267  077F  0723               	addwf	??_sprintf,w
  2268  0780  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2269  0781  0084               	movwf	4
  2270  0782  120A  118A  200D  120A  118A  	fcall	stringdir
  2271  0787  00A4               	movwf	??_sprintf+1
  2272  0788  120A  118A  200D  120A  118A  	fcall	stringdir
  2273  078D  00A5               	movwf	??_sprintf+2
  2274  078E  0825               	movf	??_sprintf+2,w
  2275  078F  022A               	subwf	sprintf@val+1,w
  2276  0790  1D03               	skipz
  2277  0791  2F94               	goto	u875
  2278  0792  0824               	movf	??_sprintf+1,w
  2279  0793  0229               	subwf	sprintf@val,w
  2280  0794                     u875:	
  2281  0794  1C03               	btfss	3,0
  2282  0795  2F9E               	goto	l1541
  2283  0796  3001               	movlw	1
  2284  0797  00A3               	movwf	??_sprintf
  2285  0798  0823               	movf	??_sprintf,w
  2286  0799  07AC               	addwf	sprintf@c,f
  2287  079A  3005               	movlw	5
  2288  079B  062C               	xorwf	sprintf@c,w
  2289  079C  1D03               	btfss	3,2
  2290  079D  2F7D               	goto	l1535
  2291  079E                     l1541:	
  2292                           
  2293                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  2294  079E  0827               	movf	sprintf@flag,w
  2295  079F  3903               	andlw	3
  2296  07A0  1903               	btfsc	3,2
  2297  07A1  2FAD               	goto	l1547
  2298                           
  2299                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  2300  07A2  302D               	movlw	45
  2301  07A3  00A3               	movwf	??_sprintf
  2302  07A4  082B               	movf	sprintf@sp,w
  2303  07A5  0084               	movwf	4
  2304  07A6  0823               	movf	??_sprintf,w
  2305  07A7  1383               	bcf	3,7	;select IRP bank0
  2306  07A8  0080               	movwf	0
  2307  07A9  3001               	movlw	1
  2308  07AA  00A3               	movwf	??_sprintf
  2309  07AB  0823               	movf	??_sprintf,w
  2310  07AC  07AB               	addwf	sprintf@sp,f
  2311  07AD                     l1547:	
  2312                           
  2313                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  2314  07AD  082C               	movf	sprintf@c,w
  2315  07AE  00A3               	movwf	??_sprintf
  2316  07AF  0823               	movf	??_sprintf,w
  2317  07B0  00A8               	movwf	sprintf@prec
  2318  07B1                     l1555:	
  2319                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2320                           
  2321                           
  2322                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2323  07B1  30FF               	movlw	255
  2324  07B2  00A3               	movwf	??_sprintf
  2325  07B3  0823               	movf	??_sprintf,w
  2326  07B4  07A8               	addwf	sprintf@prec,f
  2327  07B5  0A28               	incf	sprintf@prec,w
  2328  07B6  1903               	btfsc	3,2
  2329  07B7  2F26               	goto	l1557
  2330                           
  2331                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  2332  07B8  300A               	movlw	10
  2333  07B9  00F8               	movwf	___lwmod@divisor
  2334  07BA  3000               	movlw	0
  2335  07BB  00F9               	movwf	___lwmod@divisor+1
  2336  07BC  0828               	movf	sprintf@prec,w
  2337  07BD  00A3               	movwf	??_sprintf
  2338  07BE  0723               	addwf	??_sprintf,w
  2339  07BF  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2340  07C0  0084               	movwf	4
  2341  07C1  120A  118A  200D  120A  118A  	fcall	stringdir
  2342  07C6  00F0               	movwf	___lwdiv@divisor
  2343  07C7  120A  118A  200D  120A  118A  	fcall	stringdir
  2344  07CC  00F1               	movwf	___lwdiv@divisor+1
  2345  07CD  082A               	movf	sprintf@val+1,w
  2346  07CE  00F3               	movwf	___lwdiv@dividend+1
  2347  07CF  0829               	movf	sprintf@val,w
  2348  07D0  00F2               	movwf	___lwdiv@dividend
  2349  07D1  120A  118A  23A8  120A  118A  	fcall	___lwdiv
  2350  07D6  0871               	movf	?___lwdiv+1,w
  2351  07D7  00FB               	movwf	___lwmod@dividend+1
  2352  07D8  0870               	movf	?___lwdiv,w
  2353  07D9  00FA               	movwf	___lwmod@dividend
  2354  07DA  120A  118A  2307  120A  118A  	fcall	___lwmod
  2355  07DF  0878               	movf	?___lwmod,w
  2356  07E0  3E30               	addlw	48
  2357  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  2358  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  2359  07E3  00A4               	movwf	??_sprintf+1
  2360  07E4  0824               	movf	??_sprintf+1,w
  2361  07E5  00AC               	movwf	sprintf@c
  2362                           
  2363                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  2364  07E6  082C               	movf	sprintf@c,w
  2365  07E7  00A3               	movwf	??_sprintf
  2366  07E8  082B               	movf	sprintf@sp,w
  2367  07E9  0084               	movwf	4
  2368  07EA  0823               	movf	??_sprintf,w
  2369  07EB  1383               	bcf	3,7	;select IRP bank0
  2370  07EC  0080               	movwf	0
  2371  07ED  3001               	movlw	1
  2372  07EE  00A3               	movwf	??_sprintf
  2373  07EF  0823               	movf	??_sprintf,w
  2374  07F0  07AB               	addwf	sprintf@sp,f
  2375  07F1  2FB1               	goto	l1555
  2376  07F2                     l1559:	
  2377                           
  2378                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  2379  07F2  082B               	movf	sprintf@sp,w
  2380  07F3  0084               	movwf	4
  2381  07F4  1383               	bcf	3,7	;select IRP bank0
  2382  07F5  0180               	clrf	0
  2383  07F6  0008               	return
  2384  07F7                     __end_of_sprintf:	
  2385                           
  2386                           	psect	text11
  2387  0307                     __ptext11:	
  2388 ;; *************** function ___lwmod *****************
  2389 ;; Defined at:
  2390 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;  divisor         2    8[COMMON] unsigned int 
  2393 ;;  dividend        2   10[COMMON] unsigned int 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  counter         1   13[COMMON] unsigned char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  2    8[COMMON] unsigned int 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2405 ;;      Params:         4       0       0       0       0
  2406 ;;      Locals:         1       0       0       0       0
  2407 ;;      Temps:          1       0       0       0       0
  2408 ;;      Totals:         6       0       0       0       0
  2409 ;;Total ram usage:        6 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; This function calls:
  2412 ;;		Nothing
  2413 ;; This function is called by:
  2414 ;;		_sprintf
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           
  2419                           ;psect for function ___lwmod
  2420  0307                     ___lwmod:	
  2421                           
  2422                           ;incstack = 0
  2423                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2424  0307  0878               	movf	___lwmod@divisor,w
  2425  0308  0479               	iorwf	___lwmod@divisor+1,w
  2426  0309  1903               	btfsc	3,2
  2427  030A  2B34               	goto	l1399
  2428  030B  01FD               	clrf	___lwmod@counter
  2429  030C  0AFD               	incf	___lwmod@counter,f
  2430  030D                     l1389:	
  2431  030D  1BF9               	btfsc	___lwmod@divisor+1,7
  2432  030E  2B1B               	goto	l1391
  2433  030F  3001               	movlw	1
  2434  0310                     u775:	
  2435  0310  1003               	clrc
  2436  0311  0DF8               	rlf	___lwmod@divisor,f
  2437  0312  0DF9               	rlf	___lwmod@divisor+1,f
  2438  0313  3EFF               	addlw	-1
  2439  0314  1D03               	skipz
  2440  0315  2B10               	goto	u775
  2441  0316  3001               	movlw	1
  2442  0317  00FC               	movwf	??___lwmod
  2443  0318  087C               	movf	??___lwmod,w
  2444  0319  07FD               	addwf	___lwmod@counter,f
  2445  031A  2B0D               	goto	l1389
  2446  031B                     l1391:	
  2447  031B  0879               	movf	___lwmod@divisor+1,w
  2448  031C  027B               	subwf	___lwmod@dividend+1,w
  2449  031D  1D03               	skipz
  2450  031E  2B21               	goto	u795
  2451  031F  0878               	movf	___lwmod@divisor,w
  2452  0320  027A               	subwf	___lwmod@dividend,w
  2453  0321                     u795:	
  2454  0321  1C03               	skipc
  2455  0322  2B29               	goto	l1395
  2456  0323  0878               	movf	___lwmod@divisor,w
  2457  0324  02FA               	subwf	___lwmod@dividend,f
  2458  0325  0879               	movf	___lwmod@divisor+1,w
  2459  0326  1C03               	skipc
  2460  0327  03FB               	decf	___lwmod@dividend+1,f
  2461  0328  02FB               	subwf	___lwmod@dividend+1,f
  2462  0329                     l1395:	
  2463  0329  3001               	movlw	1
  2464  032A                     u805:	
  2465  032A  1003               	clrc
  2466  032B  0CF9               	rrf	___lwmod@divisor+1,f
  2467  032C  0CF8               	rrf	___lwmod@divisor,f
  2468  032D  3EFF               	addlw	-1
  2469  032E  1D03               	skipz
  2470  032F  2B2A               	goto	u805
  2471  0330  3001               	movlw	1
  2472  0331  02FD               	subwf	___lwmod@counter,f
  2473  0332  1D03               	btfss	3,2
  2474  0333  2B1B               	goto	l1391
  2475  0334                     l1399:	
  2476  0334  087B               	movf	___lwmod@dividend+1,w
  2477  0335  00F9               	movwf	?___lwmod+1
  2478  0336  087A               	movf	___lwmod@dividend,w
  2479  0337  00F8               	movwf	?___lwmod
  2480  0338  0008               	return
  2481  0339                     __end_of___lwmod:	
  2482                           
  2483                           	psect	text12
  2484  03A8                     __ptext12:	
  2485 ;; *************** function ___lwdiv *****************
  2486 ;; Defined at:
  2487 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  divisor         2    0[COMMON] unsigned int 
  2490 ;;  dividend        2    2[COMMON] unsigned int 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  quotient        2    5[COMMON] unsigned int 
  2493 ;;  counter         1    7[COMMON] unsigned char 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  2    0[COMMON] unsigned int 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2503 ;;      Params:         4       0       0       0       0
  2504 ;;      Locals:         3       0       0       0       0
  2505 ;;      Temps:          1       0       0       0       0
  2506 ;;      Totals:         8       0       0       0       0
  2507 ;;Total ram usage:        8 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_sprintf
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           
  2517                           ;psect for function ___lwdiv
  2518  03A8                     ___lwdiv:	
  2519                           
  2520                           ;incstack = 0
  2521                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2522  03A8  01F5               	clrf	___lwdiv@quotient
  2523  03A9  01F6               	clrf	___lwdiv@quotient+1
  2524  03AA  0870               	movf	___lwdiv@divisor,w
  2525  03AB  0471               	iorwf	___lwdiv@divisor+1,w
  2526  03AC  1903               	btfsc	3,2
  2527  03AD  2BDF               	goto	l1377
  2528  03AE  01F7               	clrf	___lwdiv@counter
  2529  03AF  0AF7               	incf	___lwdiv@counter,f
  2530  03B0                     l1365:	
  2531  03B0  1BF1               	btfsc	___lwdiv@divisor+1,7
  2532  03B1  2BBE               	goto	l1367
  2533  03B2  3001               	movlw	1
  2534  03B3                     u705:	
  2535  03B3  1003               	clrc
  2536  03B4  0DF0               	rlf	___lwdiv@divisor,f
  2537  03B5  0DF1               	rlf	___lwdiv@divisor+1,f
  2538  03B6  3EFF               	addlw	-1
  2539  03B7  1D03               	skipz
  2540  03B8  2BB3               	goto	u705
  2541  03B9  3001               	movlw	1
  2542  03BA  00F4               	movwf	??___lwdiv
  2543  03BB  0874               	movf	??___lwdiv,w
  2544  03BC  07F7               	addwf	___lwdiv@counter,f
  2545  03BD  2BB0               	goto	l1365
  2546  03BE                     l1367:	
  2547  03BE  3001               	movlw	1
  2548  03BF                     u725:	
  2549  03BF  1003               	clrc
  2550  03C0  0DF5               	rlf	___lwdiv@quotient,f
  2551  03C1  0DF6               	rlf	___lwdiv@quotient+1,f
  2552  03C2  3EFF               	addlw	-1
  2553  03C3  1D03               	skipz
  2554  03C4  2BBF               	goto	u725
  2555  03C5  0871               	movf	___lwdiv@divisor+1,w
  2556  03C6  0273               	subwf	___lwdiv@dividend+1,w
  2557  03C7  1D03               	skipz
  2558  03C8  2BCB               	goto	u735
  2559  03C9  0870               	movf	___lwdiv@divisor,w
  2560  03CA  0272               	subwf	___lwdiv@dividend,w
  2561  03CB                     u735:	
  2562  03CB  1C03               	skipc
  2563  03CC  2BD4               	goto	l1373
  2564  03CD  0870               	movf	___lwdiv@divisor,w
  2565  03CE  02F2               	subwf	___lwdiv@dividend,f
  2566  03CF  0871               	movf	___lwdiv@divisor+1,w
  2567  03D0  1C03               	skipc
  2568  03D1  03F3               	decf	___lwdiv@dividend+1,f
  2569  03D2  02F3               	subwf	___lwdiv@dividend+1,f
  2570  03D3  1475               	bsf	___lwdiv@quotient,0
  2571  03D4                     l1373:	
  2572  03D4  3001               	movlw	1
  2573  03D5                     u745:	
  2574  03D5  1003               	clrc
  2575  03D6  0CF1               	rrf	___lwdiv@divisor+1,f
  2576  03D7  0CF0               	rrf	___lwdiv@divisor,f
  2577  03D8  3EFF               	addlw	-1
  2578  03D9  1D03               	skipz
  2579  03DA  2BD5               	goto	u745
  2580  03DB  3001               	movlw	1
  2581  03DC  02F7               	subwf	___lwdiv@counter,f
  2582  03DD  1D03               	btfss	3,2
  2583  03DE  2BBE               	goto	l1367
  2584  03DF                     l1377:	
  2585  03DF  0876               	movf	___lwdiv@quotient+1,w
  2586  03E0  00F1               	movwf	?___lwdiv+1
  2587  03E1  0875               	movf	___lwdiv@quotient,w
  2588  03E2  00F0               	movwf	?___lwdiv
  2589  03E3  0008               	return
  2590  03E4                     __end_of___lwdiv:	
  2591                           
  2592                           	psect	text13
  2593  0204                     __ptext13:	
  2594 ;; *************** function ___bmul *****************
  2595 ;; Defined at:
  2596 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  multiplier      1    wreg     unsigned char 
  2599 ;;  multiplicand    1    0[COMMON] unsigned char 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  multiplier      1    3[COMMON] unsigned char 
  2602 ;;  product         1    2[COMMON] unsigned char 
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      unsigned char 
  2605 ;; Registers used:
  2606 ;;		wreg, status,2, status,0
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2612 ;;      Params:         1       0       0       0       0
  2613 ;;      Locals:         2       0       0       0       0
  2614 ;;      Temps:          1       0       0       0       0
  2615 ;;      Totals:         4       0       0       0       0
  2616 ;;Total ram usage:        4 bytes
  2617 ;; Hardware stack levels used:    1
  2618 ;; This function calls:
  2619 ;;		Nothing
  2620 ;; This function is called by:
  2621 ;;		_get_temp
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           
  2626                           ;psect for function ___bmul
  2627  0204                     ___bmul:	
  2628                           
  2629                           ;incstack = 0
  2630                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2631                           ;___bmul@multiplier stored from wreg
  2632  0204  00F3               	movwf	___bmul@multiplier
  2633  0205  01F2               	clrf	___bmul@product
  2634  0206                     l1579:	
  2635  0206  1C73               	btfss	___bmul@multiplier,0
  2636  0207  2A0C               	goto	l1583
  2637  0208  0870               	movf	___bmul@multiplicand,w
  2638  0209  00F1               	movwf	??___bmul
  2639  020A  0871               	movf	??___bmul,w
  2640  020B  07F2               	addwf	___bmul@product,f
  2641  020C                     l1583:	
  2642  020C  1003               	clrc
  2643  020D  0DF0               	rlf	___bmul@multiplicand,f
  2644  020E  1003               	clrc
  2645  020F  0CF3               	rrf	___bmul@multiplier,f
  2646  0210  0873               	movf	___bmul@multiplier,w
  2647  0211  1D03               	btfss	3,2
  2648  0212  2A06               	goto	l1579
  2649  0213  0872               	movf	___bmul@product,w
  2650  0214  0008               	return
  2651  0215                     __end_of___bmul:	
  2652                           
  2653                           	psect	text14
  2654  01E1                     __ptext14:	
  2655 ;; *************** function _I2C_Master_RepeatedStart *****************
  2656 ;; Defined at:
  2657 ;;		line 47 in file "./I2C.h"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;		None
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;		None
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      void 
  2664 ;; Registers used:
  2665 ;;		wreg, status,2, status,0, pclath, cstack
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2671 ;;      Params:         0       0       0       0       0
  2672 ;;      Locals:         0       0       0       0       0
  2673 ;;      Temps:          0       0       0       0       0
  2674 ;;      Totals:         0       0       0       0       0
  2675 ;;Total ram usage:        0 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:    1
  2678 ;; This function calls:
  2679 ;;		_I2C_Master_Wait
  2680 ;; This function is called by:
  2681 ;;		_get_time
  2682 ;;		_get_temp
  2683 ;;		_get_day
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           
  2688                           ;psect for function _I2C_Master_RepeatedStart
  2689  01E1                     _I2C_Master_RepeatedStart:	
  2690                           
  2691                           ;./I2C.h: 49:     I2C_Master_Wait();
  2692                           
  2693                           ;incstack = 0
  2694                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2695  01E1  120A  118A  21F0   	fcall	_I2C_Master_Wait
  2696                           
  2697                           ;./I2C.h: 50:     SSPCON2bits.RSEN = 1;
  2698  01E4  1683               	bsf	3,5	;RP0=1, select bank1
  2699  01E5  1303               	bcf	3,6	;RP1=0, select bank1
  2700  01E6  1491               	bsf	17,1	;volatile
  2701  01E7  0008               	return
  2702  01E8                     __end_of_I2C_Master_RepeatedStart:	
  2703                           
  2704                           	psect	text15
  2705  0249                     __ptext15:	
  2706 ;; *************** function _get_hall *****************
  2707 ;; Defined at:
  2708 ;;		line 165 in file "mainMaster.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;		None
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  key             1    7[COMMON] unsigned char 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1    wreg      unsigned char 
  2715 ;; Registers used:
  2716 ;;		wreg, status,2, status,0, pclath, cstack
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2722 ;;      Params:         0       0       0       0       0
  2723 ;;      Locals:         1       0       0       0       0
  2724 ;;      Temps:          1       0       0       0       0
  2725 ;;      Totals:         2       0       0       0       0
  2726 ;;Total ram usage:        2 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    2
  2729 ;; This function calls:
  2730 ;;		_I2C_Master_Read
  2731 ;;		_I2C_Master_Start
  2732 ;;		_I2C_Master_Stop
  2733 ;;		_I2C_Master_Write
  2734 ;; This function is called by:
  2735 ;;		_main
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           
  2740                           ;psect for function _get_hall
  2741  0249                     _get_hall:	
  2742                           
  2743                           ;mainMaster.c: 166:     char key;;mainMaster.c: 168:     I2C_Master_Start();
  2744                           
  2745                           ;incstack = 0
  2746                           ; Regs used in _get_hall: [wreg+status,2+status,0+pclath+cstack]
  2747  0249  120A  118A  21D3  120A  118A  	fcall	_I2C_Master_Start
  2748                           
  2749                           ;mainMaster.c: 169:     I2C_Master_Write(0x11);
  2750  024E  3011               	movlw	17
  2751  024F  00F0               	movwf	I2C_Master_Write@d
  2752  0250  3000               	movlw	0
  2753  0251  00F1               	movwf	I2C_Master_Write@d+1
  2754  0252  120A  118A  21E8  120A  118A  	fcall	_I2C_Master_Write
  2755                           
  2756                           ;mainMaster.c: 170:     key = I2C_Master_Read(0);
  2757  0257  3000               	movlw	0
  2758  0258  00F0               	movwf	I2C_Master_Read@a
  2759  0259  00F1               	movwf	I2C_Master_Read@a+1
  2760  025A  120A  118A  22DB  120A  118A  	fcall	_I2C_Master_Read
  2761  025F  0870               	movf	?_I2C_Master_Read,w
  2762  0260  00F6               	movwf	??_get_hall
  2763  0261  0876               	movf	??_get_hall,w
  2764  0262  00F7               	movwf	get_hall@key
  2765                           
  2766                           ;mainMaster.c: 171:     I2C_Master_Stop();
  2767  0263  120A  118A  21DA   	fcall	_I2C_Master_Stop
  2768                           
  2769                           ;mainMaster.c: 173:     return (key);
  2770  0266  0877               	movf	get_hall@key,w
  2771  0267  0008               	return
  2772  0268                     __end_of_get_hall:	
  2773                           
  2774                           	psect	text16
  2775  01E8                     __ptext16:	
  2776 ;; *************** function _I2C_Master_Write *****************
  2777 ;; Defined at:
  2778 ;;		line 65 in file "./I2C.h"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  d               2    0[COMMON] unsigned int 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      void 
  2785 ;; Registers used:
  2786 ;;		wreg, status,2, status,0, pclath, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2792 ;;      Params:         2       0       0       0       0
  2793 ;;      Locals:         0       0       0       0       0
  2794 ;;      Temps:          0       0       0       0       0
  2795 ;;      Totals:         2       0       0       0       0
  2796 ;;Total ram usage:        2 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:    1
  2799 ;; This function calls:
  2800 ;;		_I2C_Master_Wait
  2801 ;; This function is called by:
  2802 ;;		_get_time
  2803 ;;		_get_temp
  2804 ;;		_get_hall
  2805 ;;		_write_RTC
  2806 ;;		_get_day
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           
  2811                           ;psect for function _I2C_Master_Write
  2812  01E8                     _I2C_Master_Write:	
  2813                           
  2814                           ;./I2C.h: 65: void I2C_Master_Write(unsigned d);./I2C.h: 66: {;./I2C.h: 67:     I2C_Mast
      +                          er_Wait();
  2815                           
  2816                           ;incstack = 0
  2817                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2818  01E8  120A  118A  21F0   	fcall	_I2C_Master_Wait
  2819                           
  2820                           ;./I2C.h: 68:     SSPBUF = d;
  2821  01EB  0870               	movf	I2C_Master_Write@d,w
  2822  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2823  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2824  01EE  0093               	movwf	19	;volatile
  2825  01EF  0008               	return
  2826  01F0                     __end_of_I2C_Master_Write:	
  2827                           
  2828                           	psect	text17
  2829  01DA                     __ptext17:	
  2830 ;; *************** function _I2C_Master_Stop *****************
  2831 ;; Defined at:
  2832 ;;		line 55 in file "./I2C.h"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0, pclath, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         0       0       0       0       0
  2847 ;;      Locals:         0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0
  2849 ;;      Totals:         0       0       0       0       0
  2850 ;;Total ram usage:        0 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    1
  2853 ;; This function calls:
  2854 ;;		_I2C_Master_Wait
  2855 ;; This function is called by:
  2856 ;;		_get_time
  2857 ;;		_get_temp
  2858 ;;		_get_hall
  2859 ;;		_write_RTC
  2860 ;;		_get_day
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           
  2865                           ;psect for function _I2C_Master_Stop
  2866  01DA                     _I2C_Master_Stop:	
  2867                           
  2868                           ;./I2C.h: 57:     I2C_Master_Wait();
  2869                           
  2870                           ;incstack = 0
  2871                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2872  01DA  120A  118A  21F0   	fcall	_I2C_Master_Wait
  2873                           
  2874                           ;./I2C.h: 58:     SSPCON2bits.PEN = 1;
  2875  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  2876  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  2877  01DF  1511               	bsf	17,2	;volatile
  2878  01E0  0008               	return
  2879  01E1                     __end_of_I2C_Master_Stop:	
  2880                           
  2881                           	psect	text18
  2882  01D3                     __ptext18:	
  2883 ;; *************** function _I2C_Master_Start *****************
  2884 ;; Defined at:
  2885 ;;		line 39 in file "./I2C.h"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;		None
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;		None
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  1    wreg      void 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0, pclath, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2899 ;;      Params:         0       0       0       0       0
  2900 ;;      Locals:         0       0       0       0       0
  2901 ;;      Temps:          0       0       0       0       0
  2902 ;;      Totals:         0       0       0       0       0
  2903 ;;Total ram usage:        0 bytes
  2904 ;; Hardware stack levels used:    1
  2905 ;; Hardware stack levels required when called:    1
  2906 ;; This function calls:
  2907 ;;		_I2C_Master_Wait
  2908 ;; This function is called by:
  2909 ;;		_get_time
  2910 ;;		_get_temp
  2911 ;;		_get_hall
  2912 ;;		_write_RTC
  2913 ;;		_get_day
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           
  2918                           ;psect for function _I2C_Master_Start
  2919  01D3                     _I2C_Master_Start:	
  2920                           
  2921                           ;./I2C.h: 41:     I2C_Master_Wait();
  2922                           
  2923                           ;incstack = 0
  2924                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2925  01D3  120A  118A  21F0   	fcall	_I2C_Master_Wait
  2926                           
  2927                           ;./I2C.h: 42:     SSPCON2bits.SEN = 1;
  2928  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  2929  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  2930  01D8  1411               	bsf	17,0	;volatile
  2931  01D9  0008               	return
  2932  01DA                     __end_of_I2C_Master_Start:	
  2933                           
  2934                           	psect	text19
  2935  02DB                     __ptext19:	
  2936 ;; *************** function _I2C_Master_Read *****************
  2937 ;; Defined at:
  2938 ;;		line 74 in file "./I2C.h"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;  a               2    0[COMMON] unsigned short 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  temp            2    4[COMMON] unsigned short 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  2    0[COMMON] unsigned short 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0, pclath, cstack
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2952 ;;      Params:         2       0       0       0       0
  2953 ;;      Locals:         2       0       0       0       0
  2954 ;;      Temps:          2       0       0       0       0
  2955 ;;      Totals:         6       0       0       0       0
  2956 ;;Total ram usage:        6 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    1
  2959 ;; This function calls:
  2960 ;;		_I2C_Master_Wait
  2961 ;; This function is called by:
  2962 ;;		_get_time
  2963 ;;		_get_temp
  2964 ;;		_get_hall
  2965 ;;		_get_day
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           
  2970                           ;psect for function _I2C_Master_Read
  2971  02DB                     _I2C_Master_Read:	
  2972                           
  2973                           ;./I2C.h: 74: unsigned short I2C_Master_Read(unsigned short a);./I2C.h: 75: {;./I2C.h: 7
      +                          6:     unsigned short temp;;./I2C.h: 77:     I2C_Master_Wait();
  2974                           
  2975                           ;incstack = 0
  2976                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2977  02DB  120A  118A  21F0  120A  118A  	fcall	_I2C_Master_Wait
  2978                           
  2979                           ;./I2C.h: 78:     RCEN = 1;
  2980  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  2981  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  2982  02E2  1591               	bsf	17,3	;volatile
  2983                           
  2984                           ;./I2C.h: 79:     I2C_Master_Wait();
  2985  02E3  120A  118A  21F0  120A  118A  	fcall	_I2C_Master_Wait
  2986                           
  2987                           ;./I2C.h: 80:     temp = SSPBUF;
  2988  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2989  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  2990  02EA  0813               	movf	19,w	;volatile
  2991  02EB  00F2               	movwf	??_I2C_Master_Read
  2992  02EC  01F3               	clrf	??_I2C_Master_Read+1
  2993  02ED  0872               	movf	??_I2C_Master_Read,w
  2994  02EE  00F4               	movwf	I2C_Master_Read@temp
  2995  02EF  0873               	movf	??_I2C_Master_Read+1,w
  2996  02F0  00F5               	movwf	I2C_Master_Read@temp+1
  2997                           
  2998                           ;./I2C.h: 81:     I2C_Master_Wait();
  2999  02F1  120A  118A  21F0  120A  118A  	fcall	_I2C_Master_Wait
  3000                           
  3001                           ;./I2C.h: 83:     if(a == 1){
  3002  02F6  0370               	decf	I2C_Master_Read@a,w
  3003  02F7  0471               	iorwf	I2C_Master_Read@a+1,w
  3004  02F8  1D03               	btfss	3,2
  3005  02F9  2AFE               	goto	l84
  3006                           
  3007                           ;./I2C.h: 84:         SSPCON2bits.ACKDT = 0;
  3008  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  3009  02FB  1303               	bcf	3,6	;RP1=0, select bank1
  3010  02FC  1291               	bcf	17,5	;volatile
  3011                           
  3012                           ;./I2C.h: 85:     }else{
  3013  02FD  2B01               	goto	l85
  3014  02FE                     l84:	
  3015                           
  3016                           ;./I2C.h: 86:         SSPCON2bits.ACKDT = 1;
  3017  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  3018  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  3019  0300  1691               	bsf	17,5	;volatile
  3020  0301                     l85:	
  3021                           ;./I2C.h: 87:     }
  3022                           
  3023                           
  3024                           ;./I2C.h: 88:     SSPCON2bits.ACKEN = 1;
  3025  0301  1611               	bsf	17,4	;volatile
  3026                           
  3027                           ;./I2C.h: 89:     return temp;
  3028  0302  0875               	movf	I2C_Master_Read@temp+1,w
  3029  0303  00F1               	movwf	?_I2C_Master_Read+1
  3030  0304  0874               	movf	I2C_Master_Read@temp,w
  3031  0305  00F0               	movwf	?_I2C_Master_Read
  3032  0306  0008               	return
  3033  0307                     __end_of_I2C_Master_Read:	
  3034                           
  3035                           	psect	text20
  3036  01F0                     __ptext20:	
  3037 ;; *************** function _I2C_Master_Wait *****************
  3038 ;; Defined at:
  3039 ;;		line 32 in file "./I2C.h"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;		None
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;		None
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  1    wreg      void 
  3046 ;; Registers used:
  3047 ;;		wreg, status,2
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3053 ;;      Params:         0       0       0       0       0
  3054 ;;      Locals:         0       0       0       0       0
  3055 ;;      Temps:          0       0       0       0       0
  3056 ;;      Totals:         0       0       0       0       0
  3057 ;;Total ram usage:        0 bytes
  3058 ;; Hardware stack levels used:    1
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_I2C_Master_Start
  3063 ;;		_I2C_Master_RepeatedStart
  3064 ;;		_I2C_Master_Stop
  3065 ;;		_I2C_Master_Write
  3066 ;;		_I2C_Master_Read
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           
  3071                           ;psect for function _I2C_Master_Wait
  3072  01F0                     _I2C_Master_Wait:	
  3073  01F0                     l66:	
  3074                           ;./I2C.h: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3075                           
  3076                           ;incstack = 0
  3077                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3078                           
  3079  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  3080  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  3081  01F2  1914               	btfsc	20,2	;volatile
  3082  01F3  29F0               	goto	l66
  3083  01F4  0811               	movf	17,w	;volatile
  3084  01F5  391F               	andlw	31
  3085  01F6  1903               	btfsc	3,2
  3086  01F7  0008               	return
  3087  01F8  29F0               	goto	l66
  3088  01F9                     __end_of_I2C_Master_Wait:	
  3089                           
  3090                           	psect	text21
  3091  03E4                     __ptext21:	
  3092 ;; *************** function _Lcd_Write_String *****************
  3093 ;; Defined at:
  3094 ;;		line 100 in file "./LCD4bits.h"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;  a               2    5[COMMON] PTR unsigned char 
  3097 ;;		 -> NULL(0), get_temp@temperature(6), get_time@string_time(6), STR_2(9), 
  3098 ;;		 -> STR_1(9), 
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  i               2   10[COMMON] int 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3110 ;;      Params:         2       0       0       0       0
  3111 ;;      Locals:         2       0       0       0       0
  3112 ;;      Temps:          3       0       0       0       0
  3113 ;;      Totals:         7       0       0       0       0
  3114 ;;Total ram usage:        7 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    2
  3117 ;; This function calls:
  3118 ;;		_Lcd_Write_Char
  3119 ;; This function is called by:
  3120 ;;		_main
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           
  3125                           ;psect for function _Lcd_Write_String
  3126  03E4                     _Lcd_Write_String:	
  3127                           
  3128                           ;./LCD4bits.h: 100: void Lcd_Write_String(char *a);./LCD4bits.h: 101: {;./LCD4bits.h: 10
      +                          2:  int i;;./LCD4bits.h: 103:  for(i=0;a[i]!='\0';i++)
  3129                           
  3130                           ;incstack = 0
  3131                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3132  03E4  01FA               	clrf	Lcd_Write_String@i
  3133  03E5  01FB               	clrf	Lcd_Write_String@i+1
  3134  03E6                     l1619:	
  3135  03E6  087A               	movf	Lcd_Write_String@i,w
  3136  03E7  0775               	addwf	Lcd_Write_String@a,w
  3137  03E8  00F8               	movwf	??_Lcd_Write_String+1
  3138  03E9  0876               	movf	Lcd_Write_String@a+1,w
  3139  03EA  00F7               	movwf	??_Lcd_Write_String
  3140  03EB  1803               	skipnc
  3141  03EC  0AF7               	incf	??_Lcd_Write_String,f
  3142  03ED  1BFA               	btfsc	Lcd_Write_String@i,7
  3143  03EE  03F7               	decf	??_Lcd_Write_String,f
  3144  03EF  0877               	movf	??_Lcd_Write_String,w
  3145  03F0  00F9               	movwf	??_Lcd_Write_String+2
  3146  03F1  0879               	movf	??_Lcd_Write_String+2,w
  3147  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  3148  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  3149  03F4  00FF               	movwf	127
  3150  03F5  0878               	movf	??_Lcd_Write_String+1,w
  3151  03F6  0084               	movwf	4
  3152  03F7  120A  118A  2003  120A  118A  	fcall	stringtab
  3153  03FC  3A00               	xorlw	0
  3154  03FD  1903               	btfsc	3,2
  3155  03FE  0008               	return
  3156                           
  3157                           ;./LCD4bits.h: 104:     Lcd_Write_Char(a[i]);
  3158  03FF  087A               	movf	Lcd_Write_String@i,w
  3159  0400  0775               	addwf	Lcd_Write_String@a,w
  3160  0401  00F8               	movwf	??_Lcd_Write_String+1
  3161  0402  0876               	movf	Lcd_Write_String@a+1,w
  3162  0403  00F7               	movwf	??_Lcd_Write_String
  3163  0404  1803               	skipnc
  3164  0405  0AF7               	incf	??_Lcd_Write_String,f
  3165  0406  1BFA               	btfsc	Lcd_Write_String@i,7
  3166  0407  03F7               	decf	??_Lcd_Write_String,f
  3167  0408  0877               	movf	??_Lcd_Write_String,w
  3168  0409  00F9               	movwf	??_Lcd_Write_String+2
  3169  040A  0879               	movf	??_Lcd_Write_String+2,w
  3170  040B  1283               	bcf	3,5	;RP0=0, select bank0
  3171  040C  1303               	bcf	3,6	;RP1=0, select bank0
  3172  040D  00FF               	movwf	127
  3173  040E  0878               	movf	??_Lcd_Write_String+1,w
  3174  040F  0084               	movwf	4
  3175  0410  120A  118A  2003  120A  118A  	fcall	stringtab
  3176  0415  120A  118A  236F  120A  118A  	fcall	_Lcd_Write_Char
  3177  041A  3001               	movlw	1
  3178  041B  07FA               	addwf	Lcd_Write_String@i,f
  3179  041C  1803               	skipnc
  3180  041D  0AFB               	incf	Lcd_Write_String@i+1,f
  3181  041E  3000               	movlw	0
  3182  041F  07FB               	addwf	Lcd_Write_String@i+1,f
  3183  0420  2BE6               	goto	l1619
  3184  0421                     __end_of_Lcd_Write_String:	
  3185                           
  3186                           	psect	text22
  3187  036F                     __ptext22:	
  3188 ;; *************** function _Lcd_Write_Char *****************
  3189 ;; Defined at:
  3190 ;;		line 84 in file "./LCD4bits.h"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  a               1    wreg     unsigned char 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  a               1    4[COMMON] unsigned char 
  3195 ;;  y               1    3[COMMON] unsigned char 
  3196 ;;  temp            1    2[COMMON] unsigned char 
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      void 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2, status,0, pclath, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3206 ;;      Params:         0       0       0       0       0
  3207 ;;      Locals:         3       0       0       0       0
  3208 ;;      Temps:          1       0       0       0       0
  3209 ;;      Totals:         4       0       0       0       0
  3210 ;;Total ram usage:        4 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    1
  3213 ;; This function calls:
  3214 ;;		_Lcd_Port
  3215 ;; This function is called by:
  3216 ;;		_Lcd_Write_String
  3217 ;;		_main
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           
  3222                           ;psect for function _Lcd_Write_Char
  3223  036F                     _Lcd_Write_Char:	
  3224                           
  3225                           ;incstack = 0
  3226                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3227                           ;Lcd_Write_Char@a stored from wreg
  3228  036F  00F4               	movwf	Lcd_Write_Char@a
  3229                           
  3230                           ;./LCD4bits.h: 84: void Lcd_Write_Char(char a);./LCD4bits.h: 85: {;./LCD4bits.h: 86:    
      +                          char temp,y;;./LCD4bits.h: 87:    temp = a&0x0F;
  3231  0370  0874               	movf	Lcd_Write_Char@a,w
  3232  0371  390F               	andlw	15
  3233  0372  00F1               	movwf	??_Lcd_Write_Char
  3234  0373  0871               	movf	??_Lcd_Write_Char,w
  3235  0374  00F2               	movwf	Lcd_Write_Char@temp
  3236                           
  3237                           ;./LCD4bits.h: 88:    y = a&0xF0;
  3238  0375  0874               	movf	Lcd_Write_Char@a,w
  3239  0376  39F0               	andlw	240
  3240  0377  00F1               	movwf	??_Lcd_Write_Char
  3241  0378  0871               	movf	??_Lcd_Write_Char,w
  3242  0379  00F3               	movwf	Lcd_Write_Char@y
  3243                           
  3244                           ;./LCD4bits.h: 89:    PORTBbits.RB4 = 1;
  3245  037A  1283               	bcf	3,5	;RP0=0, select bank0
  3246  037B  1303               	bcf	3,6	;RP1=0, select bank0
  3247  037C  1606               	bsf	6,4	;volatile
  3248                           
  3249                           ;./LCD4bits.h: 90:    Lcd_Port(y>>4);
  3250  037D  0873               	movf	Lcd_Write_Char@y,w
  3251  037E  00F1               	movwf	??_Lcd_Write_Char
  3252  037F  3004               	movlw	4
  3253  0380                     u845:	
  3254  0380  1003               	clrc
  3255  0381  0CF1               	rrf	??_Lcd_Write_Char,f
  3256  0382  3EFF               	addlw	-1
  3257  0383  1D03               	skipz
  3258  0384  2B80               	goto	u845
  3259  0385  0871               	movf	??_Lcd_Write_Char,w
  3260  0386  120A  118A  2215  120A  118A  	fcall	_Lcd_Port
  3261                           
  3262                           ;./LCD4bits.h: 91:    PORTBbits.RB5 = 1;
  3263  038B  1283               	bcf	3,5	;RP0=0, select bank0
  3264  038C  1303               	bcf	3,6	;RP1=0, select bank0
  3265  038D  1686               	bsf	6,5	;volatile
  3266                           
  3267                           ;./LCD4bits.h: 92:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3268  038E  301A               	movlw	26
  3269  038F  00F1               	movwf	??_Lcd_Write_Char
  3270  0390                     u1147:	
  3271  0390  0BF1               	decfsz	??_Lcd_Write_Char,f
  3272  0391  2B90               	goto	u1147
  3273  0392  0000               	nop
  3274                           
  3275                           ;./LCD4bits.h: 93:    PORTBbits.RB5 = 0;
  3276  0393  1283               	bcf	3,5	;RP0=0, select bank0
  3277  0394  1303               	bcf	3,6	;RP1=0, select bank0
  3278  0395  1286               	bcf	6,5	;volatile
  3279                           
  3280                           ;./LCD4bits.h: 94:    Lcd_Port(temp);
  3281  0396  0872               	movf	Lcd_Write_Char@temp,w
  3282  0397  120A  118A  2215  120A  118A  	fcall	_Lcd_Port
  3283                           
  3284                           ;./LCD4bits.h: 95:    PORTBbits.RB5 = 1;
  3285  039C  1283               	bcf	3,5	;RP0=0, select bank0
  3286  039D  1303               	bcf	3,6	;RP1=0, select bank0
  3287  039E  1686               	bsf	6,5	;volatile
  3288                           
  3289                           ;./LCD4bits.h: 96:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3290  039F  301A               	movlw	26
  3291  03A0  00F1               	movwf	??_Lcd_Write_Char
  3292  03A1                     u1157:	
  3293  03A1  0BF1               	decfsz	??_Lcd_Write_Char,f
  3294  03A2  2BA1               	goto	u1157
  3295  03A3  0000               	nop
  3296                           
  3297                           ;./LCD4bits.h: 97:    PORTBbits.RB5 = 0;
  3298  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  3299  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  3300  03A6  1286               	bcf	6,5	;volatile
  3301  03A7  0008               	return
  3302  03A8                     __end_of_Lcd_Write_Char:	
  3303                           
  3304                           	psect	text23
  3305  0421                     __ptext23:	
  3306 ;; *************** function _Lcd_Set_Cursor *****************
  3307 ;; Defined at:
  3308 ;;		line 44 in file "./LCD4bits.h"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  a               1    wreg     unsigned char 
  3311 ;;  b               1    4[COMMON] unsigned char 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  a               1    7[COMMON] unsigned char 
  3314 ;;  temp            1   10[COMMON] unsigned char 
  3315 ;;  y               1    9[COMMON] unsigned char 
  3316 ;;  z               1    8[COMMON] unsigned char 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  1    wreg      void 
  3319 ;; Registers used:
  3320 ;;		wreg, status,2, status,0, pclath, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3326 ;;      Params:         1       0       0       0       0
  3327 ;;      Locals:         4       0       0       0       0
  3328 ;;      Temps:          2       0       0       0       0
  3329 ;;      Totals:         7       0       0       0       0
  3330 ;;Total ram usage:        7 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    2
  3333 ;; This function calls:
  3334 ;;		_Lcd_Cmd
  3335 ;; This function is called by:
  3336 ;;		_main
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           
  3341                           ;psect for function _Lcd_Set_Cursor
  3342  0421                     _Lcd_Set_Cursor:	
  3343                           
  3344                           ;incstack = 0
  3345                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3346                           ;Lcd_Set_Cursor@a stored from wreg
  3347  0421  00F7               	movwf	Lcd_Set_Cursor@a
  3348                           
  3349                           ;./LCD4bits.h: 44: void Lcd_Set_Cursor(char a, char b);./LCD4bits.h: 45: {;./LCD4bits.h:
      +                           46:  char temp,z,y;;./LCD4bits.h: 47:  if(a == 1)
  3350  0422  0377               	decf	Lcd_Set_Cursor@a,w
  3351  0423  1D03               	btfss	3,2
  3352  0424  2C46               	goto	l1603
  3353                           
  3354                           ;./LCD4bits.h: 48:  {;./LCD4bits.h: 49:    temp = 0x80 + b - 1;
  3355  0425  0874               	movf	Lcd_Set_Cursor@b,w
  3356  0426  3E7F               	addlw	127
  3357  0427  00F5               	movwf	??_Lcd_Set_Cursor
  3358  0428  0875               	movf	??_Lcd_Set_Cursor,w
  3359  0429  00FA               	movwf	Lcd_Set_Cursor@temp
  3360                           
  3361                           ;./LCD4bits.h: 50:   z = temp>>4;
  3362  042A  087A               	movf	Lcd_Set_Cursor@temp,w
  3363  042B  00F5               	movwf	??_Lcd_Set_Cursor
  3364  042C  3004               	movlw	4
  3365  042D                     u975:	
  3366  042D  1003               	clrc
  3367  042E  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3368  042F  3EFF               	addlw	-1
  3369  0430  1D03               	skipz
  3370  0431  2C2D               	goto	u975
  3371  0432  0875               	movf	??_Lcd_Set_Cursor,w
  3372  0433  00F6               	movwf	??_Lcd_Set_Cursor+1
  3373  0434  0876               	movf	??_Lcd_Set_Cursor+1,w
  3374  0435  00F8               	movwf	Lcd_Set_Cursor@z
  3375                           
  3376                           ;./LCD4bits.h: 51:   y = temp & 0x0F;
  3377  0436  087A               	movf	Lcd_Set_Cursor@temp,w
  3378  0437  390F               	andlw	15
  3379  0438  00F5               	movwf	??_Lcd_Set_Cursor
  3380  0439  0875               	movf	??_Lcd_Set_Cursor,w
  3381  043A  00F9               	movwf	Lcd_Set_Cursor@y
  3382                           
  3383                           ;./LCD4bits.h: 52:   Lcd_Cmd(z);
  3384  043B  0878               	movf	Lcd_Set_Cursor@z,w
  3385  043C  120A  118A  222F  120A  118A  	fcall	_Lcd_Cmd
  3386                           
  3387                           ;./LCD4bits.h: 53:   Lcd_Cmd(y);
  3388  0441  0879               	movf	Lcd_Set_Cursor@y,w
  3389  0442  120A  118A  222F   	fcall	_Lcd_Cmd
  3390                           
  3391                           ;./LCD4bits.h: 54:  }
  3392  0445  0008               	return
  3393  0446                     l1603:	
  3394  0446  3002               	movlw	2
  3395  0447  0677               	xorwf	Lcd_Set_Cursor@a,w
  3396  0448  1D03               	btfss	3,2
  3397  0449  0008               	return
  3398                           
  3399                           ;./LCD4bits.h: 56:  {;./LCD4bits.h: 57:   temp = 0xC0 + b - 1;
  3400  044A  0874               	movf	Lcd_Set_Cursor@b,w
  3401  044B  3EBF               	addlw	191
  3402  044C  00F5               	movwf	??_Lcd_Set_Cursor
  3403  044D  0875               	movf	??_Lcd_Set_Cursor,w
  3404  044E  00FA               	movwf	Lcd_Set_Cursor@temp
  3405                           
  3406                           ;./LCD4bits.h: 58:   z = temp>>4;
  3407  044F  087A               	movf	Lcd_Set_Cursor@temp,w
  3408  0450  00F5               	movwf	??_Lcd_Set_Cursor
  3409  0451  3004               	movlw	4
  3410  0452                     u995:	
  3411  0452  1003               	clrc
  3412  0453  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3413  0454  3EFF               	addlw	-1
  3414  0455  1D03               	skipz
  3415  0456  2C52               	goto	u995
  3416  0457  0875               	movf	??_Lcd_Set_Cursor,w
  3417  0458  00F6               	movwf	??_Lcd_Set_Cursor+1
  3418  0459  0876               	movf	??_Lcd_Set_Cursor+1,w
  3419  045A  00F8               	movwf	Lcd_Set_Cursor@z
  3420                           
  3421                           ;./LCD4bits.h: 59:   y = temp & 0x0F;
  3422  045B  087A               	movf	Lcd_Set_Cursor@temp,w
  3423  045C  390F               	andlw	15
  3424  045D  00F5               	movwf	??_Lcd_Set_Cursor
  3425  045E  0875               	movf	??_Lcd_Set_Cursor,w
  3426  045F  00F9               	movwf	Lcd_Set_Cursor@y
  3427                           
  3428                           ;./LCD4bits.h: 60:   Lcd_Cmd(z);
  3429  0460  0878               	movf	Lcd_Set_Cursor@z,w
  3430  0461  120A  118A  222F  120A  118A  	fcall	_Lcd_Cmd
  3431                           
  3432                           ;./LCD4bits.h: 61:   Lcd_Cmd(y);
  3433  0466  0879               	movf	Lcd_Set_Cursor@y,w
  3434  0467  120A  118A  222F   	fcall	_Lcd_Cmd
  3435  046A  0008               	return
  3436  046B                     __end_of_Lcd_Set_Cursor:	
  3437                           
  3438                           	psect	text24
  3439  01F9                     __ptext24:	
  3440 ;; *************** function _Lcd_Clear *****************
  3441 ;; Defined at:
  3442 ;;		line 38 in file "./LCD4bits.h"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0, pclath, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3456 ;;      Params:         0       0       0       0       0
  3457 ;;      Locals:         0       0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0
  3459 ;;      Totals:         0       0       0       0       0
  3460 ;;Total ram usage:        0 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    2
  3463 ;; This function calls:
  3464 ;;		_Lcd_Cmd
  3465 ;; This function is called by:
  3466 ;;		_main
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           
  3471                           ;psect for function _Lcd_Clear
  3472  01F9                     _Lcd_Clear:	
  3473                           
  3474                           ;./LCD4bits.h: 40:  Lcd_Cmd(0);
  3475                           
  3476                           ;incstack = 0
  3477                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3478  01F9  3000               	movlw	0
  3479  01FA  120A  118A  222F  120A  118A  	fcall	_Lcd_Cmd
  3480                           
  3481                           ;./LCD4bits.h: 41:  Lcd_Cmd(1);
  3482  01FF  3001               	movlw	1
  3483  0200  120A  118A  222F   	fcall	_Lcd_Cmd
  3484  0203  0008               	return
  3485  0204                     __end_of_Lcd_Clear:	
  3486                           
  3487                           	psect	text25
  3488  022F                     __ptext25:	
  3489 ;; *************** function _Lcd_Cmd *****************
  3490 ;; Defined at:
  3491 ;;		line 29 in file "./LCD4bits.h"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  a               1    wreg     unsigned char 
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  a               1    3[COMMON] unsigned char 
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  1    wreg      void 
  3498 ;; Registers used:
  3499 ;;		wreg, status,2, status,0, pclath, cstack
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3505 ;;      Params:         0       0       0       0       0
  3506 ;;      Locals:         1       0       0       0       0
  3507 ;;      Temps:          2       0       0       0       0
  3508 ;;      Totals:         3       0       0       0       0
  3509 ;;Total ram usage:        3 bytes
  3510 ;; Hardware stack levels used:    1
  3511 ;; Hardware stack levels required when called:    1
  3512 ;; This function calls:
  3513 ;;		_Lcd_Port
  3514 ;; This function is called by:
  3515 ;;		_Lcd_Clear
  3516 ;;		_Lcd_Set_Cursor
  3517 ;;		_Lcd_Init
  3518 ;;		_Lcd_Shift_Right
  3519 ;;		_Lcd_Shift_Left
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           
  3524                           ;psect for function _Lcd_Cmd
  3525  022F                     _Lcd_Cmd:	
  3526                           
  3527                           ;incstack = 0
  3528                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3529                           ;Lcd_Cmd@a stored from wreg
  3530  022F  00F3               	movwf	Lcd_Cmd@a
  3531                           
  3532                           ;./LCD4bits.h: 29: void Lcd_Cmd(char a);./LCD4bits.h: 30: {;./LCD4bits.h: 31:  PORTBbits
      +                          .RB4 = 0;
  3533  0230  1283               	bcf	3,5	;RP0=0, select bank0
  3534  0231  1303               	bcf	3,6	;RP1=0, select bank0
  3535  0232  1206               	bcf	6,4	;volatile
  3536                           
  3537                           ;./LCD4bits.h: 32:  Lcd_Port(a);
  3538  0233  0873               	movf	Lcd_Cmd@a,w
  3539  0234  120A  118A  2215  120A  118A  	fcall	_Lcd_Port
  3540                           
  3541                           ;./LCD4bits.h: 33:  PORTBbits.RB5 = 1;
  3542  0239  1283               	bcf	3,5	;RP0=0, select bank0
  3543  023A  1303               	bcf	3,6	;RP1=0, select bank0
  3544  023B  1686               	bsf	6,5	;volatile
  3545                           
  3546                           ;./LCD4bits.h: 34:         _delay((unsigned long)((4)*(8000000/4000.0)));
  3547  023C  300B               	movlw	11
  3548  023D  00F2               	movwf	??_Lcd_Cmd+1
  3549  023E  3062               	movlw	98
  3550  023F  00F1               	movwf	??_Lcd_Cmd
  3551  0240                     u1167:	
  3552  0240  0BF1               	decfsz	??_Lcd_Cmd,f
  3553  0241  2A40               	goto	u1167
  3554  0242  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3555  0243  2A40               	goto	u1167
  3556  0244  0000               	nop
  3557                           
  3558                           ;./LCD4bits.h: 35:         PORTBbits.RB5 = 0;
  3559  0245  1283               	bcf	3,5	;RP0=0, select bank0
  3560  0246  1303               	bcf	3,6	;RP1=0, select bank0
  3561  0247  1286               	bcf	6,5	;volatile
  3562  0248  0008               	return
  3563  0249                     __end_of_Lcd_Cmd:	
  3564                           
  3565                           	psect	text26
  3566  0215                     __ptext26:	
  3567 ;; *************** function _Lcd_Port *****************
  3568 ;; Defined at:
  3569 ;;		line 7 in file "./LCD4bits.h"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  a               1    wreg     unsigned char 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;  a               1    0[COMMON] unsigned char 
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      void 
  3576 ;; Registers used:
  3577 ;;		wreg
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3583 ;;      Params:         0       0       0       0       0
  3584 ;;      Locals:         1       0       0       0       0
  3585 ;;      Temps:          0       0       0       0       0
  3586 ;;      Totals:         1       0       0       0       0
  3587 ;;Total ram usage:        1 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; This function calls:
  3590 ;;		Nothing
  3591 ;; This function is called by:
  3592 ;;		_Lcd_Cmd
  3593 ;;		_Lcd_Init
  3594 ;;		_Lcd_Write_Char
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           
  3599                           ;psect for function _Lcd_Port
  3600  0215                     _Lcd_Port:	
  3601                           
  3602                           ;incstack = 0
  3603                           ; Regs used in _Lcd_Port: [wreg]
  3604                           ;Lcd_Port@a stored from wreg
  3605  0215  00F0               	movwf	Lcd_Port@a
  3606                           
  3607                           ;./LCD4bits.h: 7: void Lcd_Port(char a);./LCD4bits.h: 8: {;./LCD4bits.h: 9:  if(a & 1)
  3608  0216  1C70               	btfss	Lcd_Port@a,0
  3609  0217  2A1C               	goto	l92
  3610                           
  3611                           ;./LCD4bits.h: 10:   PORTBbits.RB0 = 1;
  3612  0218  1283               	bcf	3,5	;RP0=0, select bank0
  3613  0219  1303               	bcf	3,6	;RP1=0, select bank0
  3614  021A  1406               	bsf	6,0	;volatile
  3615  021B  2A1F               	goto	l93
  3616  021C                     l92:	
  3617                           ;./LCD4bits.h: 11:  else
  3618                           
  3619                           
  3620                           ;./LCD4bits.h: 12:   PORTBbits.RB0 = 0;
  3621  021C  1283               	bcf	3,5	;RP0=0, select bank0
  3622  021D  1303               	bcf	3,6	;RP1=0, select bank0
  3623  021E  1006               	bcf	6,0	;volatile
  3624  021F                     l93:	
  3625                           
  3626                           ;./LCD4bits.h: 14:  if(a & 2)
  3627  021F  1CF0               	btfss	Lcd_Port@a,1
  3628  0220  2A23               	goto	l94
  3629                           
  3630                           ;./LCD4bits.h: 15:   PORTBbits.RB1 = 1;
  3631  0221  1486               	bsf	6,1	;volatile
  3632  0222  2A24               	goto	l95
  3633  0223                     l94:	
  3634                           ;./LCD4bits.h: 16:  else
  3635                           
  3636                           
  3637                           ;./LCD4bits.h: 17:   PORTBbits.RB1 = 0;
  3638  0223  1086               	bcf	6,1	;volatile
  3639  0224                     l95:	
  3640                           
  3641                           ;./LCD4bits.h: 19:  if(a & 4)
  3642  0224  1D70               	btfss	Lcd_Port@a,2
  3643  0225  2A28               	goto	l96
  3644                           
  3645                           ;./LCD4bits.h: 20:   PORTBbits.RB2 = 1;
  3646  0226  1506               	bsf	6,2	;volatile
  3647  0227  2A29               	goto	l97
  3648  0228                     l96:	
  3649                           ;./LCD4bits.h: 21:  else
  3650                           
  3651                           
  3652                           ;./LCD4bits.h: 22:   PORTBbits.RB2 = 0;
  3653  0228  1106               	bcf	6,2	;volatile
  3654  0229                     l97:	
  3655                           
  3656                           ;./LCD4bits.h: 24:  if(a & 8)
  3657  0229  1DF0               	btfss	Lcd_Port@a,3
  3658  022A  2A2D               	goto	l98
  3659                           
  3660                           ;./LCD4bits.h: 25:   PORTBbits.RB3 = 1;
  3661  022B  1586               	bsf	6,3	;volatile
  3662  022C  0008               	return
  3663  022D                     l98:	
  3664                           ;./LCD4bits.h: 26:  else
  3665                           
  3666                           
  3667                           ;./LCD4bits.h: 27:   PORTBbits.RB3 = 0;
  3668  022D  1186               	bcf	6,3	;volatile
  3669  022E  0008               	return
  3670  022F                     __end_of_Lcd_Port:	
  3671  007E                     btemp	set	126	;btemp
  3672  007E                     wtemp0	set	126


Data Sizes:
    Strings     33
    Constant    10
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_3(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_temp@temperature(BANK0[6]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 3
		 -> get_temp@decimal(BANK0[3]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@decimal(BANK0[3]), get_temp@temperature(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    sp__get_temp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    temp	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_temp@temperature(BANK0[6]), 

    sp__get_time	PTR unsigned char  size(1) Largest target is 6
		 -> get_time@string_time(BANK0[6]), 

    time	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_time@string_time(BANK0[6]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 9
		 -> NULL(NULL[0]), get_temp@temperature(BANK0[6]), get_time@string_time(BANK0[6]), STR_2(CODE[9]), 
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _get_time->_I2C_Master_Read
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _get_hall->_I2C_Master_Read
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_get_temp
    _setup->_I2C_Master_Init
    _get_temp->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    9895
                                             27 BANK0      1     1      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _get_hall
                           _get_temp
                           _get_time
                              _setup
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               7     5      2     200
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     632
                    _I2C_Master_Init
                           _Lcd_Init
                      _initOscilador
 ---------------------------------------------------------------------------------
 (2) _initOscilador                                        3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _get_time                                            10    10      0    1974
                                              6 COMMON     2     2      0
                                              0 BANK0      8     8      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            14    14      0    3859
                                             13 BANK0     14    14      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___bmul
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     3      1     207
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1429
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _get_hall                                             2     2      0    1762
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1238
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     501
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     572
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     608
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _get_hall
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _get_temp
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___bmul
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _strcat
   _get_time
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _initOscilador
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      1F       5       38.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2D      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Feb 26 12:35:04 2019

                                pc 0002                     ___bmul@product 0072  
                      __CFG_CP$OFF 0000                                 l66 01F0  
                               l92 021C                                 l84 02FE  
                      get_hall@key 0077                                 l93 021F  
                               l85 0301                                 l94 0223  
                               l95 0224                                 l96 0228  
                               l97 0229                                 l98 022D  
                               fsr 0004                                l135 04BE  
                              l158 067E                                _GIE 005F  
                     __CFG_CPD$OFF 0000                                u705 03B3  
                              u635 052F                                u725 03BF  
                              u805 032A                                u735 03CB  
                              u655 053D                                u745 03D5  
                              u665 0552                                u825 034B  
                              u675 0564                                u845 0380  
                              u775 0310                                u795 0321  
                              u875 0794                                u975 042D  
                              u995 0452                                _key 003C  
                              fsr0 0004                                indf 0000  
                     __CFG_LVP$OFF 0000                               l1351 0570  
                             l1513 0746                               l1337 052B  
                             l1603 0446                               l1347 0563  
                             l1339 053B                               l1373 03D4  
                             l1365 03B0                               l1541 079E  
                             l1367 03BE                               l1391 031B  
                             l1535 077D                               l1519 0764  
                             l1377 03DF                               l1529 077B  
                             l1481 0472                               l1619 03E6  
                             l1395 0329                               l1555 07B1  
                             l1547 07AD                               l1571 026D  
                             l1491 0490                               l1483 0478  
                             l1731 065A                               l1707 05F9  
                             l1389 030D                               l1557 0726  
                             l1573 0278                               l1493 0497  
                             l1485 047E                               l1583 020C  
                             l1399 0334                               l1559 07F2  
                             l1575 0280                               l1495 0497  
                             l1487 0484                               l1479 046D  
                             l1489 048A                               l1579 0206  
                             l1499 049C                               l1691 02C0  
                             l1669 06FF                               l1781 04A4  
                             l1693 02B3                               l1783 0759  
                             l1695 02D5                               STR_1 001D  
                             STR_2 0026                        get_time@min 0027  
                             STR_3 002F                               STR_4 003B  
                             STR_5 0035                               STR_6 003A  
                             u1105 0678                               u1035 05C5  
                             u1045 05DC                               u1117 04CA  
                             u1055 06D7                               u1127 04D9  
                             u1137 04E8                               u1147 0390  
                             u1157 03A1                               u1167 0240  
                             _PEIE 005E                               _RCEN 048B  
                     __CFG_WRT$OFF 0000                  ?_Lcd_Write_String 0075  
 __end_of_I2C_Master_RepeatedStart 01E8                               _main 05EF  
                             _temp 003D                               _time 003E  
                             btemp 007E                               start 0000  
               ??_Lcd_Write_String 0077                      __CFG_IESO$OFF 0000  
                  __end_of_Lcd_Cmd 0249                  ___bmul@multiplier 0073  
                    __CFG_MCLRE$ON 0000                get_temp@temperature 0030  
                 ?_I2C_Master_Init 0020                   ?_I2C_Master_Read 0070  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                            ?_main 0070                      __CFG_WDTE$OFF 0000  
                     get_time@hour 0026                              _ANSEL 0188  
                  __end_of___lldiv 0579                    __end_of___lwdiv 03E4  
                  __end_of___lwmod 0339                              _PORTA 0005  
                            _PORTB 0006            __size_of_Lcd_Set_Cursor 004A  
                            _TRISA 0085                              _TRISB 0086  
                            _SSPIE 0463                              _SSPIF 0063  
                   __CFG_FCMEN$OFF 0000                    __end_of_dpowers 001D  
                            _setup 028C                     __CFG_BOREN$OFF 0000  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 07F7  
                 __end_of_Lcd_Init 051B                   __end_of_Lcd_Port 022F  
                  __initialization 07F7                       __end_of_main 0682  
           __size_of_initOscilador 0055                             ??_main 003B  
               __size_of_Lcd_Clear 000B                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0070                 ??_I2C_Master_Start 0070  
               ??_I2C_Master_Write 0072                             ?_setup 0070  
                           _ANSELH 0189                          ??_Lcd_Cmd 0071  
          __size_of_Lcd_Write_Char 0039                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
                   __CFG_PWRTE$OFF 0000           _I2C_Master_RepeatedStart 01E1  
                 __end_of_get_hall 0268                   __end_of_get_temp 071F  
                 __end_of_get_time 05EF                             ___bmul 0204  
                        ??___lldiv 0078                          ??___lwdiv 0074  
                        ??___lwmod 007C                             _strcat 0268  
                           _strcmp 02B1                          ??_sprintf 0023  
                  Lcd_Set_Cursor@a 0077                    Lcd_Set_Cursor@b 0074  
                  Lcd_Set_Cursor@y 0079                    Lcd_Set_Cursor@z 0078  
          __end_of__initialization 07FC                      _initOscilador 046B  
                __end_of_Lcd_Clear 0204                ___bmul@multiplicand 0070  
                   __pcstackCOMMON 0070                      __end_of_setup 02B1  
                   _Lcd_Set_Cursor 0421                          ?_Lcd_Init 0070  
                        ?_Lcd_Port 0070                            ??_setup 007E  
                       __pbssBANK0 003C                     ?_initOscilador 0070  
                       __pmaintext 05EF                            ?___bmul 0070  
        __size_of_Lcd_Write_String 003D             __end_of_Lcd_Set_Cursor 046B  
                          ?_strcat 0070                            ?_strcmp 0070  
                       ??_Lcd_Init 0074                         ??_Lcd_Port 0070  
                          _SSPCON2 0091                          ?_get_hall 0070  
                          _SSPSTAT 0094                          ?_get_temp 0070  
                        ?_get_time 0070                         __stringtab 0003  
              initOscilador@option 0072                     _Lcd_Write_Char 036F  
                          _Lcd_Cmd 022F                    __size_of___bmul 0011  
                          ___lldiv 051B                            ___lwdiv 03A8  
                          ___lwmod 0307                    ?_Lcd_Set_Cursor 0074  
                          __ptext1 02B1                            __ptext2 028C  
                          __ptext3 046B                            __ptext4 04C0  
                          __ptext5 0339                            __ptext6 051B  
                          __ptext7 0579                            __ptext8 0682  
                          __ptext9 0268                    __size_of_strcat 0024  
                  __size_of_strcmp 002A                            _dpowers 0013  
         __size_of_I2C_Master_Init 0036           __size_of_I2C_Master_Read 002C  
         __size_of_I2C_Master_Wait 0009           __size_of_I2C_Master_Stop 0007  
                  ??_initOscilador 0070                         ??_get_hall 0076  
                          _sprintf 071F             __end_of_Lcd_Write_Char 03A8  
                       ??_get_temp 002D                         ??_get_time 0076  
             end_of_initialization 07FC         ??_I2C_Master_RepeatedStart 0070  
        __size_of_I2C_Master_Start 0007          __size_of_I2C_Master_Write 0008  
                  ___lldiv@divisor 0070                    ___lldiv@counter 007D  
                 I2C_Master_Init@c 0020                   I2C_Master_Read@a 0070  
                        Lcd_Port@a 0070                            strcmp@r 0075  
                        _PORTAbits 0005                          _PORTBbits 0006  
                  ?_Lcd_Write_Char 0070                  Lcd_Write_String@a 0075  
                Lcd_Write_String@i 007A                get_time@string_time 0020  
                        _Lcd_Clear 01F9                     __end_of___bmul 0215  
                 _Lcd_Write_String 03E4                     __end_of_strcat 028C  
                   __end_of_strcmp 02DB                start_initialization 07F7  
                __size_of_Lcd_Init 005B                  __size_of_Lcd_Port 001A  
                ??_I2C_Master_Init 0024                  ??_I2C_Master_Read 0072  
                ??_I2C_Master_Wait 0070                  ??_I2C_Master_Stop 0070  
         __CFG_FOSC$INTRC_NOCLKOUT 0000                         ?_Lcd_Clear 0070  
                         ??___bmul 0071                    Lcd_Write_Char@a 0074  
                  Lcd_Write_Char@y 0073                           ??_strcat 0071  
                         ??_strcmp 0072                          ___latbits 0002  
                    __pcstackBANK0 0020                  __size_of_get_hall 001F  
                         ?_Lcd_Cmd 0070                  __size_of_get_temp 009D  
                __size_of_get_time 0076                        sprintf@flag 0027  
                      sprintf@prec 0028                   _I2C_Master_Start 01D3  
                 _I2C_Master_Write 01E8                   ___lwdiv@dividend 0072  
                 ??_Lcd_Set_Cursor 0075                    get_temp@decimal 0036  
                         ?___lldiv 0070                           ?___lwdiv 0070  
                         ?___lwmod 0078                          __pstrings 0003  
                  get_temp@tempLSB 003A                    get_temp@tempMSB 0039  
                 ___lwdiv@quotient 0075                           ?_sprintf 0020  
                   __size_of_setup 0025                           Lcd_Cmd@a 0073  
                      ??_Lcd_Clear 0074                        __stringbase 0012  
                 ??_Lcd_Write_Char 0071                           _Lcd_Init 04C0  
                         _Lcd_Port 0215                I2C_Master_Read@temp 0074  
            __end_of_initOscilador 04C0           __end_of_Lcd_Write_String 0421  
                 __size_of_Lcd_Cmd 001A  __size_of_I2C_Master_RepeatedStart 0007  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 005E  
                 __size_of___lwdiv 003C                   __size_of___lwmod 0032  
               __end_of__stringtab 0013                         sprintf@val 0029  
                  _I2C_Master_Init 0339                    _I2C_Master_Read 02DB  
                  _I2C_Master_Wait 01F0                         strcat@from 0070  
                  _I2C_Master_Stop 01DA                    ___lwdiv@divisor 0070  
                  ___lwdiv@counter 0077                           __ptext10 071F  
                         __ptext11 0307                           __ptext20 01F0  
                         __ptext12 03A8                           __ptext21 03E4  
                         __ptext13 0204                           __ptext22 036F  
                         __ptext14 01E1                           __ptext23 0421  
                         __ptext15 0249                           __ptext24 01F9  
                         __ptext16 01E8                           __ptext25 022F  
                         __ptext17 01DA                           __ptext26 0215  
                         __ptext18 01D3                           __ptext19 02DB  
                __CFG_BOR4V$BOR40V 0000                           _get_hall 0249  
                         _get_temp 0682                           _get_time 0579  
                 __size_of_sprintf 00D8                      __size_of_main 0093  
         __end_of_I2C_Master_Start 01DA           __end_of_I2C_Master_Write 01F0  
               Lcd_Write_Char@temp 0072                          sprintf@ap 0026  
                        sprintf@sp 002B                   ___lwmod@dividend 007A  
                 ___lldiv@dividend 0074                          stringcode 000D  
                       _OSCCONbits 008F            __end_of_I2C_Master_Init 036F  
          __end_of_I2C_Master_Read 0307            __end_of_I2C_Master_Wait 01F9  
          __end_of_I2C_Master_Stop 01E1                 Lcd_Set_Cursor@temp 007A  
                         sprintf@c 002C                           sprintf@f 0020  
                         strcat@cp 0073                           strcat@to 0072  
                         strcmp@s1 0076                           strcmp@s2 0070  
                 ___lldiv@quotient 0079                  I2C_Master_Write@d 0070  
                  ___lwmod@divisor 0078                    ___lwmod@counter 007D  
                         stringdir 000D                           stringtab 0003  
                      _SSPCON2bits 0091  
