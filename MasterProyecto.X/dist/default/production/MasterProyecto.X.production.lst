

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb 27 23:46:02 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.05
    40                           ; Generated 20/12/2018 GMT
    41                           ; 
    42                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229                           
   230                           	psect	strings
   231  0003                     __pstrings:	
   232  0003                     stringtab:	
   233  0003                     __stringtab:	
   234                           
   235                           ;	String table - string pointers are 1 byte each
   236  0003  1BFF               	btfsc	btemp+1,7
   237  0004  280D               	ljmp	stringcode
   238  0005  1383               	bcf	3,7
   239  0006  187F               	btfsc	btemp+1,0
   240  0007  1783               	bsf	3,7
   241  0008  0800               	movf	0,w
   242  0009  0A84               	incf	4,f
   243  000A  1903               	skipnz
   244  000B  0AFF               	incf	btemp+1,f
   245  000C  0008               	return
   246  000D                     stringcode:	
   247  000D                     stringdir:	
   248  000D  3000               	movlw	high stringdir
   249  000E  008A               	movwf	10
   250  000F  0804               	movf	4,w
   251  0010  0A84               	incf	4,f
   252  0011  0782               	addwf	2,f
   253  0012                     __stringbase:	
   254  0012  3400               	retlw	0
   255  0013                     __end_of__stringtab:	
   256  0013                     _dpowers:	
   257  0013  3401               	retlw	1
   258  0014  3400               	retlw	0
   259  0015  340A               	retlw	10
   260  0016  3400               	retlw	0
   261  0017  3464               	retlw	100
   262  0018  3400               	retlw	0
   263  0019  34E8               	retlw	232
   264  001A  3403               	retlw	3
   265  001B  3410               	retlw	16
   266  001C  3427               	retlw	39
   267  001D                     __end_of_dpowers:	
   268  0005                     _PORTA	set	5
   269  0006                     _PORTB	set	6
   270  0005                     _PORTAbits	set	5
   271  0006                     _PORTBbits	set	6
   272  0013                     _SSPBUF	set	19
   273  0014                     _SSPCON	set	20
   274  0063                     _SSPIF	set	99
   275  005E                     _PEIE	set	94
   276  005F                     _GIE	set	95
   277  0085                     _TRISA	set	133
   278  0086                     _TRISB	set	134
   279  008F                     _OSCCONbits	set	143
   280  0091                     _SSPCON2bits	set	145
   281  0094                     _SSPSTAT	set	148
   282  0093                     _SSPADD	set	147
   283  0091                     _SSPCON2	set	145
   284  0463                     _SSPIE	set	1123
   285  048B                     _RCEN	set	1163
   286  043C                     _TRISC4	set	1084
   287  043B                     _TRISC3	set	1083
   288  0188                     _ANSEL	set	392
   289  0189                     _ANSELH	set	393
   290  001D                     STR_1:	
   291  001D  3444               	retlw	68	;'D'
   292  001E  346F               	retlw	111	;'o'
   293  001F  346F               	retlw	111	;'o'
   294  0020  3472               	retlw	114	;'r'
   295  0021  3420               	retlw	32	;' '
   296  0022  344F               	retlw	79	;'O'
   297  0023  3450               	retlw	80	;'P'
   298  0024  3445               	retlw	69	;'E'
   299  0025  344E               	retlw	78	;'N'
   300  0026  3420               	retlw	32	;' '
   301  0027  3420               	retlw	32	;' '
   302  0028  3400               	retlw	0
   303  0029                     STR_2:	
   304  0029  3444               	retlw	68	;'D'
   305  002A  346F               	retlw	111	;'o'
   306  002B  346F               	retlw	111	;'o'
   307  002C  3472               	retlw	114	;'r'
   308  002D  3420               	retlw	32	;' '
   309  002E  3443               	retlw	67	;'C'
   310  002F  344C               	retlw	76	;'L'
   311  0030  344F               	retlw	79	;'O'
   312  0031  3453               	retlw	83	;'S'
   313  0032  3445               	retlw	69	;'E'
   314  0033  3444               	retlw	68	;'D'
   315  0034  3400               	retlw	0
   316  0035                     STR_4:	
   317  0035  3454               	retlw	84	;'T'
   318  0036  3472               	retlw	114	;'r'
   319  0037  3469               	retlw	105	;'i'
   320  0038  3470               	retlw	112	;'p'
   321  0039  3420               	retlw	32	;' '
   322  003A  344F               	retlw	79	;'O'
   323  003B  344E               	retlw	78	;'N'
   324  003C  3420               	retlw	32	;' '
   325  003D  3400               	retlw	0
   326  003E                     STR_5:	
   327  003E  3454               	retlw	84	;'T'
   328  003F  3472               	retlw	114	;'r'
   329  0040  3469               	retlw	105	;'i'
   330  0041  3470               	retlw	112	;'p'
   331  0042  3420               	retlw	32	;' '
   332  0043  344F               	retlw	79	;'O'
   333  0044  3446               	retlw	70	;'F'
   334  0045  3446               	retlw	70	;'F'
   335  0046  3400               	retlw	0
   336  0047                     STR_3:	
   337  0047  3432               	retlw	50	;'2'
   338  0048  3433               	retlw	51	;'3'
   339  0049  342E               	retlw	46	;'.'
   340  004A  3435               	retlw	53	;'5'
   341  004B  3430               	retlw	48	;'0'
   342  004C  3400               	retlw	0
   343  004D                     STR_7:	
   344  004D  342E               	retlw	46	;'.'
   345  004E  3425               	retlw	37	;'%'
   346  004F  3464               	retlw	100	;'d'
   347  0050  3430               	retlw	48	;'0'
   348  0051  3400               	retlw	0
   349  0052                     STR_8:	
   350  0052  342E               	retlw	46	;'.'
   351  0053  3425               	retlw	37	;'%'
   352  0054  3464               	retlw	100	;'d'
   353  0055  3400               	retlw	0
   354  0053                     
   355                           ; #config settings
   356  0000                     
   357                           	psect	cinit
   358  07F6                     start_initialization:	
   359  07F6                     __initialization:	
   360                           
   361                           ; Clear objects allocated to BANK0
   362  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   363  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   364  07F8  01BC               	clrf	__pbssBANK0& (0+127)
   365  07F9  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   366  07FA  01BE               	clrf	(__pbssBANK0+2)& (0+127)
   367  07FB  01BF               	clrf	(__pbssBANK0+3)& (0+127)
   368  07FC                     end_of_initialization:	
   369                           ;End of C runtime variable initialization code
   370                           
   371  07FC                     __end_of__initialization:	
   372  07FC  0183               	clrf	3
   373  07FD  120A  118A  2E5F   	ljmp	_main	;jump to C main() function
   374                           
   375                           	psect	bssBANK0
   376  003C                     __pbssBANK0:	
   377  003C                     _trip:	
   378  003C                     	ds	1
   379  003D                     _door:	
   380  003D                     	ds	1
   381  003E                     _temp:	
   382  003E                     	ds	1
   383  003F                     _time:	
   384  003F                     	ds	1
   385                           
   386                           	psect	cstackCOMMON
   387  0070                     __pcstackCOMMON:	
   388  0070                     ?_setup:	
   389  0070                     ?_get_time:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_get_temp:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_get_hall:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_get_tripwire:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_strcat:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_I2C_Master_Wait:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ??_I2C_Master_Wait:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_I2C_Master_Start:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ??_I2C_Master_Start:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_I2C_Master_RepeatedStart:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ??_I2C_Master_RepeatedStart:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_I2C_Master_Stop:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ??_I2C_Master_Stop:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_I2C_Master_Write:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_Lcd_Port:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ??_Lcd_Port:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_Lcd_Cmd:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_Lcd_Clear:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_Lcd_Init:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_Lcd_Write_Char:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_initOscilador:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ??_initOscilador:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_main:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?___bmul:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_strcmp:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_I2C_Master_Read:	
   465                           ; 2 bytes @ 0x0
   466                           
   467  0070                     ?___lwdiv:	
   468                           ; 2 bytes @ 0x0
   469                           
   470  0070                     ?___lldiv:	
   471                           ; 2 bytes @ 0x0
   472                           
   473  0070                     Lcd_Port@a:	
   474                           ; 4 bytes @ 0x0
   475                           
   476  0070                     ___bmul@multiplicand:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     strcat@from:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     strcmp@s2:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     I2C_Master_Write@d:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     I2C_Master_Read@a:	
   489                           ; 2 bytes @ 0x0
   490                           
   491  0070                     ___lwdiv@divisor:	
   492                           ; 2 bytes @ 0x0
   493                           
   494  0070                     ___lldiv@divisor:	
   495                           ; 2 bytes @ 0x0
   496                           
   497                           
   498                           ; 4 bytes @ 0x0
   499  0070                     	ds	1
   500  0071                     ??_strcat:	
   501  0071                     ??_Lcd_Cmd:	
   502                           ; 1 bytes @ 0x1
   503                           
   504  0071                     ??_Lcd_Write_Char:	
   505                           ; 1 bytes @ 0x1
   506                           
   507  0071                     ??___bmul:	
   508                           ; 1 bytes @ 0x1
   509                           
   510                           
   511                           ; 1 bytes @ 0x1
   512  0071                     	ds	1
   513  0072                     ??_strcmp:	
   514  0072                     ??_I2C_Master_Write:	
   515                           ; 1 bytes @ 0x2
   516                           
   517  0072                     ??_I2C_Master_Read:	
   518                           ; 1 bytes @ 0x2
   519                           
   520  0072                     Lcd_Write_Char@temp:	
   521                           ; 1 bytes @ 0x2
   522                           
   523  0072                     initOscilador@option:	
   524                           ; 1 bytes @ 0x2
   525                           
   526  0072                     ___bmul@product:	
   527                           ; 1 bytes @ 0x2
   528                           
   529  0072                     strcat@to:	
   530                           ; 1 bytes @ 0x2
   531                           
   532  0072                     ___lwdiv@dividend:	
   533                           ; 1 bytes @ 0x2
   534                           
   535                           
   536                           ; 2 bytes @ 0x2
   537  0072                     	ds	1
   538  0073                     Lcd_Cmd@a:	
   539  0073                     Lcd_Write_Char@y:	
   540                           ; 1 bytes @ 0x3
   541                           
   542  0073                     ___bmul@multiplier:	
   543                           ; 1 bytes @ 0x3
   544                           
   545  0073                     strcat@cp:	
   546                           ; 1 bytes @ 0x3
   547                           
   548                           
   549                           ; 1 bytes @ 0x3
   550  0073                     	ds	1
   551  0074                     ??_Lcd_Clear:	
   552  0074                     ?_Lcd_Set_Cursor:	
   553                           ; 1 bytes @ 0x4
   554                           
   555  0074                     ??_Lcd_Init:	
   556                           ; 1 bytes @ 0x4
   557                           
   558  0074                     ??___lwdiv:	
   559                           ; 1 bytes @ 0x4
   560                           
   561  0074                     Lcd_Set_Cursor@b:	
   562                           ; 1 bytes @ 0x4
   563                           
   564  0074                     Lcd_Write_Char@a:	
   565                           ; 1 bytes @ 0x4
   566                           
   567  0074                     I2C_Master_Read@temp:	
   568                           ; 1 bytes @ 0x4
   569                           
   570  0074                     ___lldiv@dividend:	
   571                           ; 2 bytes @ 0x4
   572                           
   573                           
   574                           ; 4 bytes @ 0x4
   575  0074                     	ds	1
   576  0075                     ??_Lcd_Set_Cursor:	
   577  0075                     ?_Lcd_Write_String:	
   578                           ; 1 bytes @ 0x5
   579                           
   580  0075                     strcmp@r:	
   581                           ; 1 bytes @ 0x5
   582                           
   583  0075                     Lcd_Write_String@a:	
   584                           ; 1 bytes @ 0x5
   585                           
   586  0075                     ___lwdiv@quotient:	
   587                           ; 2 bytes @ 0x5
   588                           
   589                           
   590                           ; 2 bytes @ 0x5
   591  0075                     	ds	1
   592  0076                     ??_get_time:	
   593  0076                     ??_get_hall:	
   594                           ; 1 bytes @ 0x6
   595                           
   596  0076                     ??_get_tripwire:	
   597                           ; 1 bytes @ 0x6
   598                           
   599  0076                     strcmp@s1:	
   600                           ; 1 bytes @ 0x6
   601                           
   602                           
   603                           ; 1 bytes @ 0x6
   604  0076                     	ds	1
   605  0077                     ??_Lcd_Write_String:	
   606  0077                     Lcd_Set_Cursor@a:	
   607                           ; 1 bytes @ 0x7
   608                           
   609  0077                     get_hall@key:	
   610                           ; 1 bytes @ 0x7
   611                           
   612  0077                     get_tripwire@trip:	
   613                           ; 1 bytes @ 0x7
   614                           
   615  0077                     ___lwdiv@counter:	
   616                           ; 1 bytes @ 0x7
   617                           
   618                           
   619                           ; 1 bytes @ 0x7
   620  0077                     	ds	1
   621  0078                     ??___lldiv:	
   622  0078                     ?___lwmod:	
   623                           ; 1 bytes @ 0x8
   624                           
   625  0078                     Lcd_Set_Cursor@z:	
   626                           ; 2 bytes @ 0x8
   627                           
   628  0078                     ___lwmod@divisor:	
   629                           ; 1 bytes @ 0x8
   630                           
   631                           
   632                           ; 2 bytes @ 0x8
   633  0078                     	ds	1
   634  0079                     Lcd_Set_Cursor@y:	
   635  0079                     ___lldiv@quotient:	
   636                           ; 1 bytes @ 0x9
   637                           
   638                           
   639                           ; 4 bytes @ 0x9
   640  0079                     	ds	1
   641  007A                     Lcd_Set_Cursor@temp:	
   642  007A                     Lcd_Write_String@i:	
   643                           ; 1 bytes @ 0xA
   644                           
   645  007A                     ___lwmod@dividend:	
   646                           ; 2 bytes @ 0xA
   647                           
   648                           
   649                           ; 2 bytes @ 0xA
   650  007A                     	ds	2
   651  007C                     ??___lwmod:	
   652                           
   653                           ; 1 bytes @ 0xC
   654  007C                     	ds	1
   655  007D                     ___lldiv@counter:	
   656  007D                     ___lwmod@counter:	
   657                           ; 1 bytes @ 0xD
   658                           
   659                           
   660                           ; 1 bytes @ 0xD
   661  007D                     	ds	1
   662  007E                     ??_setup:	
   663                           
   664                           	psect	cstackBANK0
   665  0020                     __pcstackBANK0:	
   666                           ; 1 bytes @ 0xE
   667                           
   668  0020                     ?_I2C_Master_Init:	
   669  0020                     ?_sprintf:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0020                     sprintf@f:	
   673                           ; 2 bytes @ 0x0
   674                           
   675  0020                     I2C_Master_Init@c:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0020                     get_time@string_time:	
   679                           ; 4 bytes @ 0x0
   680                           
   681                           
   682                           ; 6 bytes @ 0x0
   683  0020                     	ds	3
   684  0023                     ??_sprintf:	
   685                           
   686                           ; 1 bytes @ 0x3
   687  0023                     	ds	1
   688  0024                     ??_I2C_Master_Init:	
   689                           
   690                           ; 1 bytes @ 0x4
   691  0024                     	ds	2
   692  0026                     get_time@hour:	
   693  0026                     sprintf@ap:	
   694                           ; 1 bytes @ 0x6
   695                           
   696                           
   697                           ; 1 bytes @ 0x6
   698  0026                     	ds	1
   699  0027                     get_time@min:	
   700  0027                     sprintf@flag:	
   701                           ; 1 bytes @ 0x7
   702                           
   703                           
   704                           ; 1 bytes @ 0x7
   705  0027                     	ds	1
   706  0028                     sprintf@prec:	
   707                           
   708                           ; 1 bytes @ 0x8
   709  0028                     	ds	1
   710  0029                     sprintf@val:	
   711                           
   712                           ; 2 bytes @ 0x9
   713  0029                     	ds	2
   714  002B                     sprintf@sp:	
   715                           
   716                           ; 1 bytes @ 0xB
   717  002B                     	ds	1
   718  002C                     sprintf@c:	
   719                           
   720                           ; 1 bytes @ 0xC
   721  002C                     	ds	1
   722  002D                     ??_get_temp:	
   723                           
   724                           ; 1 bytes @ 0xD
   725  002D                     	ds	3
   726  0030                     get_temp@temperature:	
   727                           
   728                           ; 6 bytes @ 0x10
   729  0030                     	ds	6
   730  0036                     get_temp@decimal:	
   731                           
   732                           ; 3 bytes @ 0x16
   733  0036                     	ds	3
   734  0039                     get_temp@tempMSB:	
   735                           
   736                           ; 1 bytes @ 0x19
   737  0039                     	ds	1
   738  003A                     get_temp@tempLSB:	
   739                           
   740                           ; 1 bytes @ 0x1A
   741  003A                     	ds	1
   742  003B                     ??_main:	
   743                           
   744                           ; 1 bytes @ 0x1B
   745  003B                     	ds	1
   746                           
   747                           	psect	maintext
   748  065F                     __pmaintext:	
   749 ;;
   750 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   751 ;;
   752 ;; *************** function _main *****************
   753 ;; Defined at:
   754 ;;		line 49 in file "mainMaster.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;		None
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   763 ;; Tracked objects:
   764 ;;		On entry : B00/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   768 ;;      Params:         0       0       0       0       0
   769 ;;      Locals:         0       0       0       0       0
   770 ;;      Temps:          0       1       0       0       0
   771 ;;      Totals:         0       1       0       0       0
   772 ;;Total ram usage:        1 bytes
   773 ;; Hardware stack levels required when called:    4
   774 ;; This function calls:
   775 ;;		_Lcd_Clear
   776 ;;		_Lcd_Set_Cursor
   777 ;;		_Lcd_Write_Char
   778 ;;		_Lcd_Write_String
   779 ;;		_get_hall
   780 ;;		_get_temp
   781 ;;		_get_time
   782 ;;		_get_tripwire
   783 ;;		_setup
   784 ;;		_strcmp
   785 ;; This function is called by:
   786 ;;		Startup code after reset
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           
   791                           ;psect for function _main
   792  065F                     _main:	
   793                           
   794                           ;mainMaster.c: 50:     setup();
   795                           
   796                           ;incstack = 0
   797                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   798  065F  120A  118A  225F  120A  118A  	fcall	_setup
   799                           
   800                           ;mainMaster.c: 51:     Lcd_Clear();
   801  0664  120A  118A  21AD  120A  118A  	fcall	_Lcd_Clear
   802  0669                     l1736:	
   803                           
   804                           ;mainMaster.c: 54:         time = get_time();
   805  0669  120A  118A  254C  120A  118A  	fcall	_get_time
   806  066E  1283               	bcf	3,5	;RP0=0, select bank0
   807  066F  1303               	bcf	3,6	;RP1=0, select bank0
   808  0670  00BB               	movwf	??_main
   809  0671  083B               	movf	??_main,w
   810  0672  00BF               	movwf	_time
   811                           
   812                           ;mainMaster.c: 55:         Lcd_Set_Cursor(1,1);
   813  0673  01F4               	clrf	Lcd_Set_Cursor@b
   814  0674  0AF4               	incf	Lcd_Set_Cursor@b,f
   815  0675  3001               	movlw	1
   816  0676  120A  118A  23F4  120A  118A  	fcall	_Lcd_Set_Cursor
   817                           
   818                           ;mainMaster.c: 56:         Lcd_Write_String(time);
   819  067B  1283               	bcf	3,5	;RP0=0, select bank0
   820  067C  1303               	bcf	3,6	;RP1=0, select bank0
   821  067D  083F               	movf	_time,w
   822  067E  00F5               	movwf	Lcd_Write_String@a
   823  067F  3000               	movlw	0
   824  0680  00F6               	movwf	Lcd_Write_String@a+1
   825  0681  120A  118A  23B7  120A  118A  	fcall	_Lcd_Write_String
   826                           
   827                           ;mainMaster.c: 57:         temp = get_temp();
   828  0686  120A  118A  25C2  120A  118A  	fcall	_get_temp
   829  068B  1283               	bcf	3,5	;RP0=0, select bank0
   830  068C  1303               	bcf	3,6	;RP1=0, select bank0
   831  068D  00BB               	movwf	??_main
   832  068E  083B               	movf	??_main,w
   833  068F  00BE               	movwf	_temp
   834                           
   835                           ;mainMaster.c: 58:         Lcd_Set_Cursor(2,1);
   836  0690  01F4               	clrf	Lcd_Set_Cursor@b
   837  0691  0AF4               	incf	Lcd_Set_Cursor@b,f
   838  0692  3002               	movlw	2
   839  0693  120A  118A  23F4  120A  118A  	fcall	_Lcd_Set_Cursor
   840                           
   841                           ;mainMaster.c: 59:         Lcd_Write_String(temp);
   842  0698  1283               	bcf	3,5	;RP0=0, select bank0
   843  0699  1303               	bcf	3,6	;RP1=0, select bank0
   844  069A  083E               	movf	_temp,w
   845  069B  00F5               	movwf	Lcd_Write_String@a
   846  069C  3000               	movlw	0
   847  069D  00F6               	movwf	Lcd_Write_String@a+1
   848  069E  120A  118A  23B7  120A  118A  	fcall	_Lcd_Write_String
   849                           
   850                           ;mainMaster.c: 60:         Lcd_Write_Char(223);
   851  06A3  30DF               	movlw	223
   852  06A4  120A  118A  2342  120A  118A  	fcall	_Lcd_Write_Char
   853                           
   854                           ;mainMaster.c: 61:         Lcd_Write_Char('C');
   855  06A9  3043               	movlw	67
   856  06AA  120A  118A  2342  120A  118A  	fcall	_Lcd_Write_Char
   857                           
   858                           ;mainMaster.c: 62:         door = get_hall();
   859  06AF  120A  118A  21FD  120A  118A  	fcall	_get_hall
   860  06B4  1283               	bcf	3,5	;RP0=0, select bank0
   861  06B5  1303               	bcf	3,6	;RP1=0, select bank0
   862  06B6  00BB               	movwf	??_main
   863  06B7  083B               	movf	??_main,w
   864  06B8  00BD               	movwf	_door
   865                           
   866                           ;mainMaster.c: 63:         Lcd_Set_Cursor(1,7);
   867  06B9  3007               	movlw	7
   868  06BA  00BB               	movwf	??_main
   869  06BB  083B               	movf	??_main,w
   870  06BC  00F4               	movwf	Lcd_Set_Cursor@b
   871  06BD  3001               	movlw	1
   872  06BE  120A  118A  23F4  120A  118A  	fcall	_Lcd_Set_Cursor
   873                           
   874                           ;mainMaster.c: 64:         if (door == 1){
   875  06C3  1283               	bcf	3,5	;RP0=0, select bank0
   876  06C4  1303               	bcf	3,6	;RP1=0, select bank0
   877  06C5  033D               	decf	_door,w
   878  06C6  1D03               	btfss	3,2
   879  06C7  2ECA               	goto	l1760
   880                           
   881                           ;mainMaster.c: 65:             Lcd_Write_String("Door OPEN  ");
   882  06C8  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   883  06C9  2ECB               	goto	L1
   884  06CA                     l1760:	
   885                           ;mainMaster.c: 66:         } else {
   886                           
   887                           
   888                           ;mainMaster.c: 67:             Lcd_Write_String("Door CLOSED");
   889  06CA  3017               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   890  06CB                     L1:	
   891  06CB  00F5               	movwf	Lcd_Write_String@a
   892  06CC  3080               	movlw	128
   893  06CD  00F6               	movwf	Lcd_Write_String@a+1
   894  06CE  120A  118A  23B7  120A  118A  	fcall	_Lcd_Write_String
   895                           
   896                           ;mainMaster.c: 70:         if (strcmp(temp,"23.50") > 0){
   897                           
   898                           ;mainMaster.c: 68:         }
   899  06D3  3035               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   900  06D4  1283               	bcf	3,5	;RP0=0, select bank0
   901  06D5  1303               	bcf	3,6	;RP1=0, select bank0
   902  06D6  00BB               	movwf	??_main
   903  06D7  083B               	movf	??_main,w
   904  06D8  00F0               	movwf	strcmp@s2
   905  06D9  083E               	movf	_temp,w
   906  06DA  120A  118A  2284  120A  118A  	fcall	_strcmp
   907  06DF  0871               	movf	?_strcmp+1,w
   908  06E0  3A80               	xorlw	128
   909  06E1  00FF               	movwf	127
   910  06E2  3080               	movlw	128
   911  06E3  027F               	subwf	127,w
   912  06E4  1D03               	skipz
   913  06E5  2EE8               	goto	u1115
   914  06E6  3001               	movlw	1
   915  06E7  0270               	subwf	?_strcmp,w
   916  06E8                     u1115:	
   917  06E8  1C03               	skipc
   918  06E9  2EEE               	goto	l162
   919                           
   920                           ;mainMaster.c: 71:             PORTAbits.RA0 = 1;
   921  06EA  1283               	bcf	3,5	;RP0=0, select bank0
   922  06EB  1303               	bcf	3,6	;RP1=0, select bank0
   923  06EC  1405               	bsf	5,0	;volatile
   924                           
   925                           ;mainMaster.c: 72:         } else {
   926  06ED  2EF1               	goto	l1764
   927  06EE                     l162:	
   928                           
   929                           ;mainMaster.c: 73:             PORTAbits.RA0 = 0;
   930  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   931  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   932  06F0  1005               	bcf	5,0	;volatile
   933  06F1                     l1764:	
   934                           
   935                           ;mainMaster.c: 75:         trip = get_tripwire();
   936  06F1  120A  118A  221C  120A  118A  	fcall	_get_tripwire
   937  06F6  1283               	bcf	3,5	;RP0=0, select bank0
   938  06F7  1303               	bcf	3,6	;RP1=0, select bank0
   939  06F8  00BB               	movwf	??_main
   940  06F9  083B               	movf	??_main,w
   941  06FA  00BC               	movwf	_trip
   942                           
   943                           ;mainMaster.c: 76:         Lcd_Set_Cursor(2,9);
   944  06FB  3009               	movlw	9
   945  06FC  00BB               	movwf	??_main
   946  06FD  083B               	movf	??_main,w
   947  06FE  00F4               	movwf	Lcd_Set_Cursor@b
   948  06FF  3002               	movlw	2
   949  0700  120A  118A  23F4  120A  118A  	fcall	_Lcd_Set_Cursor
   950                           
   951                           ;mainMaster.c: 77:         if (trip == 1){
   952  0705  1283               	bcf	3,5	;RP0=0, select bank0
   953  0706  1303               	bcf	3,6	;RP1=0, select bank0
   954  0707  033C               	decf	_trip,w
   955  0708  1D03               	btfss	3,2
   956  0709  2F14               	goto	l1770
   957                           
   958                           ;mainMaster.c: 78:             Lcd_Write_String("Trip ON ");
   959  070A  3023               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   960  070B  00F5               	movwf	Lcd_Write_String@a
   961  070C  3080               	movlw	128
   962  070D  00F6               	movwf	Lcd_Write_String@a+1
   963  070E  120A  118A  23B7  120A  118A  	fcall	_Lcd_Write_String
   964                           
   965                           ;mainMaster.c: 79:         } else {
   966  0713  2E69               	goto	l1736
   967  0714                     l1770:	
   968                           
   969                           ;mainMaster.c: 80:             Lcd_Write_String("Trip OFF");
   970  0714  302C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   971  0715  00F5               	movwf	Lcd_Write_String@a
   972  0716  3080               	movlw	128
   973  0717  00F6               	movwf	Lcd_Write_String@a+1
   974  0718  120A  118A  23B7  120A  118A  	fcall	_Lcd_Write_String
   975  071D  2E69               	goto	l1736
   976  071E                     __end_of_main:	
   977                           
   978                           	psect	text1
   979  0284                     __ptext1:	
   980 ;; *************** function _strcmp *****************
   981 ;; Defined at:
   982 ;;		line 33 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcmp.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;  s1              1    wreg     PTR const unsigned char 
   985 ;;		 -> NULL(0), get_temp@temperature(6), 
   986 ;;  s2              1    0[COMMON] PTR const unsigned char 
   987 ;;		 -> STR_3(6), 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  s1              1    6[COMMON] PTR const unsigned char 
   990 ;;		 -> NULL(0), get_temp@temperature(6), 
   991 ;;  r               1    5[COMMON] char 
   992 ;; Return value:  Size  Location     Type
   993 ;;                  2    0[COMMON] int 
   994 ;; Registers used:
   995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1001 ;;      Params:         2       0       0       0       0
  1002 ;;      Locals:         2       0       0       0       0
  1003 ;;      Temps:          3       0       0       0       0
  1004 ;;      Totals:         7       0       0       0       0
  1005 ;;Total ram usage:        7 bytes
  1006 ;; Hardware stack levels used:    2
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_main
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           
  1015                           ;psect for function _strcmp
  1016  0284                     _strcmp:	
  1017                           
  1018                           ;incstack = 0
  1019                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+pclath]
  1020                           ;strcmp@s1 stored from wreg
  1021  0284  00F6               	movwf	strcmp@s1
  1022  0285  2A93               	goto	l1714
  1023  0286                     l1716:	
  1024  0286  0876               	movf	strcmp@s1,w
  1025  0287  0084               	movwf	4
  1026  0288  0800               	movf	0,w
  1027  0289  1903               	btfsc	3,2
  1028  028A  2AA8               	goto	l1718
  1029  028B  3001               	movlw	1
  1030  028C  00F2               	movwf	??_strcmp
  1031  028D  0872               	movf	??_strcmp,w
  1032  028E  07F6               	addwf	strcmp@s1,f
  1033  028F  3001               	movlw	1
  1034  0290  00F2               	movwf	??_strcmp
  1035  0291  0872               	movf	??_strcmp,w
  1036  0292  07F0               	addwf	strcmp@s2,f
  1037  0293                     l1714:	
  1038  0293  0870               	movf	strcmp@s2,w
  1039  0294  0084               	movwf	4
  1040  0295  120A  118A  200D  120A  118A  	fcall	stringdir
  1041  029A  00F2               	movwf	??_strcmp
  1042  029B  0876               	movf	strcmp@s1,w
  1043  029C  0084               	movwf	4
  1044  029D  1383               	bcf	3,7	;select IRP bank0
  1045  029E  0800               	movf	0,w
  1046  029F  00F3               	movwf	??_strcmp+1
  1047  02A0  0872               	movf	??_strcmp,w
  1048  02A1  0273               	subwf	??_strcmp+1,w
  1049  02A2  00F4               	movwf	??_strcmp+2
  1050  02A3  0874               	movf	??_strcmp+2,w
  1051  02A4  00F5               	movwf	strcmp@r
  1052  02A5  0875               	movf	strcmp@r,w
  1053  02A6  1903               	btfsc	3,2
  1054  02A7  2A86               	goto	l1716
  1055  02A8                     l1718:	
  1056  02A8  0875               	movf	strcmp@r,w
  1057  02A9  00F0               	movwf	?_strcmp
  1058  02AA  01F1               	clrf	?_strcmp+1
  1059  02AB  1BF0               	btfsc	?_strcmp,7
  1060  02AC  03F1               	decf	?_strcmp+1,f
  1061  02AD  0008               	return
  1062  02AE                     __end_of_strcmp:	
  1063                           
  1064                           	psect	text2
  1065  025F                     __ptext2:	
  1066 ;; *************** function _setup *****************
  1067 ;; Defined at:
  1068 ;;		line 86 in file "mainMaster.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;		None
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;		None
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1082 ;;      Params:         0       0       0       0       0
  1083 ;;      Locals:         0       0       0       0       0
  1084 ;;      Temps:          0       0       0       0       0
  1085 ;;      Totals:         0       0       0       0       0
  1086 ;;Total ram usage:        0 bytes
  1087 ;; Hardware stack levels used:    1
  1088 ;; Hardware stack levels required when called:    3
  1089 ;; This function calls:
  1090 ;;		_I2C_Master_Init
  1091 ;;		_Lcd_Init
  1092 ;;		_initOscilador
  1093 ;; This function is called by:
  1094 ;;		_main
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           
  1099                           ;psect for function _setup
  1100  025F                     _setup:	
  1101                           
  1102                           ;mainMaster.c: 87:     initOscilador(7);
  1103                           
  1104                           ;incstack = 0
  1105                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1106  025F  3007               	movlw	7
  1107  0260  120A  118A  243E  120A  118A  	fcall	_initOscilador
  1108                           
  1109                           ;mainMaster.c: 88:     ANSELH = 0;
  1110  0265  1683               	bsf	3,5	;RP0=1, select bank3
  1111  0266  1703               	bsf	3,6	;RP1=1, select bank3
  1112  0267  0189               	clrf	9	;volatile
  1113                           
  1114                           ;mainMaster.c: 89:     ANSEL = 0;
  1115  0268  0188               	clrf	8	;volatile
  1116                           
  1117                           ;mainMaster.c: 90:     TRISB = 0;
  1118  0269  1683               	bsf	3,5	;RP0=1, select bank1
  1119  026A  1303               	bcf	3,6	;RP1=0, select bank1
  1120  026B  0186               	clrf	6	;volatile
  1121                           
  1122                           ;mainMaster.c: 91:     TRISA = 0;
  1123  026C  0185               	clrf	5	;volatile
  1124                           
  1125                           ;mainMaster.c: 92:     PORTB = 0;
  1126  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1127  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1128  026F  0186               	clrf	6	;volatile
  1129                           
  1130                           ;mainMaster.c: 93:     PORTA = 0;
  1131  0270  0185               	clrf	5	;volatile
  1132                           
  1133                           ;mainMaster.c: 94:     Lcd_Init();
  1134  0271  120A  118A  2493  120A  118A  	fcall	_Lcd_Init
  1135                           
  1136                           ;mainMaster.c: 95:     I2C_Master_Init(100000);
  1137  0276  3000               	movlw	0
  1138  0277  1283               	bcf	3,5	;RP0=0, select bank0
  1139  0278  1303               	bcf	3,6	;RP1=0, select bank0
  1140  0279  00A3               	movwf	I2C_Master_Init@c+3
  1141  027A  3001               	movlw	1
  1142  027B  00A2               	movwf	I2C_Master_Init@c+2
  1143  027C  3086               	movlw	134
  1144  027D  00A1               	movwf	I2C_Master_Init@c+1
  1145  027E  30A0               	movlw	160
  1146  027F  00A0               	movwf	I2C_Master_Init@c
  1147  0280  120A  118A  230C   	fcall	_I2C_Master_Init
  1148  0283  0008               	return
  1149  0284                     __end_of_setup:	
  1150                           
  1151                           	psect	text3
  1152  043E                     __ptext3:	
  1153 ;; *************** function _initOscilador *****************
  1154 ;; Defined at:
  1155 ;;		line 11 in file "./Oscilador.h"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;  option          1    wreg     unsigned char 
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;  option          1    2[COMMON] unsigned char 
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      void 
  1162 ;; Registers used:
  1163 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1169 ;;      Params:         0       0       0       0       0
  1170 ;;      Locals:         1       0       0       0       0
  1171 ;;      Temps:          2       0       0       0       0
  1172 ;;      Totals:         3       0       0       0       0
  1173 ;;Total ram usage:        3 bytes
  1174 ;; Hardware stack levels used:    1
  1175 ;; This function calls:
  1176 ;;		Nothing
  1177 ;; This function is called by:
  1178 ;;		_setup
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           
  1183                           ;psect for function _initOscilador
  1184  043E                     _initOscilador:	
  1185                           
  1186                           ;incstack = 0
  1187                           ; Regs used in _initOscilador: [wreg-fsr0h+status,2+status,0]
  1188                           ;initOscilador@option stored from wreg
  1189  043E  00F2               	movwf	initOscilador@option
  1190                           
  1191                           ;./Oscilador.h: 13: 
  1192  043F  2C6F               	goto	l1522
  1193  0440                     l1502:	
  1194                           
  1195                           ;./Oscilador.h: 16:         case 3:
  1196  0440  308F               	movlw	-113
  1197  0441  1683               	bsf	3,5	;RP0=1, select bank1
  1198  0442  1303               	bcf	3,6	;RP1=0, select bank1
  1199  0443  058F               	andwf	15,f	;volatile
  1200                           
  1201                           ;./Oscilador.h: 17: 
  1202  0444  2C91               	goto	l137
  1203  0445                     l1504:	
  1204                           
  1205                           ;./Oscilador.h: 20:         case 4:
  1206  0445  1683               	bsf	3,5	;RP0=1, select bank1
  1207  0446  1303               	bcf	3,6	;RP1=0, select bank1
  1208  0447  080F               	movf	15,w	;volatile
  1209  0448  398F               	andlw	-113
  1210  0449  3810               	iorlw	16
  1211  044A  2C68               	goto	L6
  1212  044B                     l1506:	
  1213                           ;./Oscilador.h: 21: 
  1214                           
  1215                           
  1216                           ;./Oscilador.h: 24:         case 5:
  1217  044B  1683               	bsf	3,5	;RP0=1, select bank1
  1218  044C  1303               	bcf	3,6	;RP1=0, select bank1
  1219  044D  080F               	movf	15,w	;volatile
  1220  044E  398F               	andlw	-113
  1221  044F  3820               	iorlw	32
  1222  0450  2C68               	goto	L6
  1223  0451                     l1508:	
  1224                           ;./Oscilador.h: 25: 
  1225                           
  1226                           
  1227                           ;./Oscilador.h: 28:         case 6:
  1228  0451  1683               	bsf	3,5	;RP0=1, select bank1
  1229  0452  1303               	bcf	3,6	;RP1=0, select bank1
  1230  0453  080F               	movf	15,w	;volatile
  1231  0454  398F               	andlw	-113
  1232  0455  3830               	iorlw	48
  1233  0456  2C68               	goto	L6
  1234  0457                     l1510:	
  1235                           ;./Oscilador.h: 29: 
  1236                           
  1237                           
  1238                           ;./Oscilador.h: 32:         case 7:
  1239  0457  1683               	bsf	3,5	;RP0=1, select bank1
  1240  0458  1303               	bcf	3,6	;RP1=0, select bank1
  1241  0459  080F               	movf	15,w	;volatile
  1242  045A  398F               	andlw	-113
  1243  045B  3840               	iorlw	64
  1244  045C  2C68               	goto	L6
  1245  045D                     l1512:	
  1246                           ;./Oscilador.h: 33: 
  1247                           
  1248                           
  1249                           ;./Oscilador.h: 36:         default:
  1250  045D  1683               	bsf	3,5	;RP0=1, select bank1
  1251  045E  1303               	bcf	3,6	;RP1=0, select bank1
  1252  045F  080F               	movf	15,w	;volatile
  1253  0460  398F               	andlw	-113
  1254  0461  3850               	iorlw	80
  1255  0462  2C68               	goto	L6
  1256  0463                     l1514:	
  1257                           ;./Oscilador.h: 37: 
  1258                           
  1259                           
  1260                           ;./Oscilador.h: 40:     }
  1261  0463  1683               	bsf	3,5	;RP0=1, select bank1
  1262  0464  1303               	bcf	3,6	;RP1=0, select bank1
  1263  0465  080F               	movf	15,w	;volatile
  1264  0466  398F               	andlw	-113
  1265  0467  3860               	iorlw	96
  1266  0468                     L6:	
  1267  0468  008F               	movwf	15	;volatile
  1268                           
  1269                           ;./Oscilador.h: 41:     OSCCONbits.SCS = 1;
  1270  0469  2C91               	goto	l137
  1271  046A                     l1516:	
  1272  046A                     l1518:	
  1273  046A  3070               	movlw	112
  1274  046B  1683               	bsf	3,5	;RP0=1, select bank1
  1275  046C  1303               	bcf	3,6	;RP1=0, select bank1
  1276  046D  048F               	iorwf	15,f	;volatile
  1277  046E  2C91               	goto	l137
  1278  046F                     l1522:	
  1279  046F  0872               	movf	initOscilador@option,w
  1280  0470  00F0               	movwf	??_initOscilador
  1281  0471  01F1               	clrf	??_initOscilador+1
  1282                           
  1283                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1284                           ; Switch size 1, requested type "simple"
  1285                           ; Number of cases is 1, Range of values is 0 to 0
  1286                           ; switch strategies available:
  1287                           ; Name         Instructions Cycles
  1288                           ; simple_byte            4     3 (average)
  1289                           ; direct_byte           11     8 (fixed)
  1290                           ; jumptable            260     6 (fixed)
  1291                           ;	Chosen strategy is simple_byte
  1292  0472  0871               	movf	??_initOscilador+1,w
  1293  0473  3A00               	xorlw	0	; case 0
  1294  0474  1903               	skipnz
  1295  0475  2C77               	goto	l1818
  1296  0476  2C6A               	goto	l1518
  1297  0477                     l1818:	
  1298                           
  1299                           ; Switch size 1, requested type "simple"
  1300                           ; Number of cases is 8, Range of values is 0 to 7
  1301                           ; switch strategies available:
  1302                           ; Name         Instructions Cycles
  1303                           ; simple_byte           25    13 (average)
  1304                           ; direct_byte           32     8 (fixed)
  1305                           ; jumptable            260     6 (fixed)
  1306                           ;	Chosen strategy is simple_byte
  1307  0477  0870               	movf	??_initOscilador,w
  1308  0478  3A00               	xorlw	0	; case 0
  1309  0479  1903               	skipnz
  1310  047A  2C40               	goto	l1502
  1311  047B  3A01               	xorlw	1	; case 1
  1312  047C  1903               	skipnz
  1313  047D  2C45               	goto	l1504
  1314  047E  3A03               	xorlw	3	; case 2
  1315  047F  1903               	skipnz
  1316  0480  2C4B               	goto	l1506
  1317  0481  3A01               	xorlw	1	; case 3
  1318  0482  1903               	skipnz
  1319  0483  2C51               	goto	l1508
  1320  0484  3A07               	xorlw	7	; case 4
  1321  0485  1903               	skipnz
  1322  0486  2C57               	goto	l1510
  1323  0487  3A01               	xorlw	1	; case 5
  1324  0488  1903               	skipnz
  1325  0489  2C5D               	goto	l1512
  1326  048A  3A03               	xorlw	3	; case 6
  1327  048B  1903               	skipnz
  1328  048C  2C63               	goto	l1514
  1329  048D  3A01               	xorlw	1	; case 7
  1330  048E  1903               	skipnz
  1331  048F  2C6A               	goto	l1516
  1332  0490  2C6A               	goto	l1518
  1333  0491                     l137:	
  1334  0491  140F               	bsf	15,0	;volatile
  1335  0492  0008               	return
  1336  0493                     __end_of_initOscilador:	
  1337                           
  1338                           	psect	text4
  1339  0493                     __ptext4:	
  1340 ;; *************** function _Lcd_Init *****************
  1341 ;; Defined at:
  1342 ;;		line 65 in file "./LCD4bits.h"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0, pclath, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1356 ;;      Params:         0       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0
  1358 ;;      Temps:          2       0       0       0       0
  1359 ;;      Totals:         2       0       0       0       0
  1360 ;;Total ram usage:        2 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    2
  1363 ;; This function calls:
  1364 ;;		_Lcd_Cmd
  1365 ;;		_Lcd_Port
  1366 ;; This function is called by:
  1367 ;;		_setup
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           
  1372                           ;psect for function _Lcd_Init
  1373  0493                     _Lcd_Init:	
  1374                           
  1375                           ;./LCD4bits.h: 67:   Lcd_Port(0x00);
  1376                           
  1377                           ;incstack = 0
  1378                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1379  0493  3000               	movlw	0
  1380  0494  120A  118A  21C9  120A  118A  	fcall	_Lcd_Port
  1381                           
  1382                           ;./LCD4bits.h: 68:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1383  0499  3034               	movlw	52
  1384  049A  00F5               	movwf	??_Lcd_Init+1
  1385  049B  30F1               	movlw	241
  1386  049C  00F4               	movwf	??_Lcd_Init
  1387  049D                     u1137:	
  1388  049D  0BF4               	decfsz	??_Lcd_Init,f
  1389  049E  2C9D               	goto	u1137
  1390  049F  0BF5               	decfsz	??_Lcd_Init+1,f
  1391  04A0  2C9D               	goto	u1137
  1392  04A1  2CA2               	nop2
  1393                           
  1394                           ;./LCD4bits.h: 69:   Lcd_Cmd(0x03);
  1395  04A2  3003               	movlw	3
  1396  04A3  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  1397                           
  1398                           ;./LCD4bits.h: 70:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1399  04A8  300D               	movlw	13
  1400  04A9  00F5               	movwf	??_Lcd_Init+1
  1401  04AA  30FB               	movlw	251
  1402  04AB  00F4               	movwf	??_Lcd_Init
  1403  04AC                     u1147:	
  1404  04AC  0BF4               	decfsz	??_Lcd_Init,f
  1405  04AD  2CAC               	goto	u1147
  1406  04AE  0BF5               	decfsz	??_Lcd_Init+1,f
  1407  04AF  2CAC               	goto	u1147
  1408  04B0  2CB1               	nop2
  1409                           
  1410                           ;./LCD4bits.h: 71:   Lcd_Cmd(0x03);
  1411  04B1  3003               	movlw	3
  1412  04B2  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  1413                           
  1414                           ;./LCD4bits.h: 72:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1415  04B7  301D               	movlw	29
  1416  04B8  00F5               	movwf	??_Lcd_Init+1
  1417  04B9  3091               	movlw	145
  1418  04BA  00F4               	movwf	??_Lcd_Init
  1419  04BB                     u1157:	
  1420  04BB  0BF4               	decfsz	??_Lcd_Init,f
  1421  04BC  2CBB               	goto	u1157
  1422  04BD  0BF5               	decfsz	??_Lcd_Init+1,f
  1423  04BE  2CBB               	goto	u1157
  1424                           
  1425                           ;./LCD4bits.h: 73:   Lcd_Cmd(0x03);
  1426  04BF  3003               	movlw	3
  1427  04C0  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  1428                           
  1429                           ;./LCD4bits.h: 75:   Lcd_Cmd(0x02);
  1430  04C5  3002               	movlw	2
  1431  04C6  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  1432                           
  1433                           ;./LCD4bits.h: 76:   Lcd_Cmd(0x02);
  1434  04CB  3002               	movlw	2
  1435  04CC  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  1436                           
  1437                           ;./LCD4bits.h: 77:   Lcd_Cmd(0x08);
  1438  04D1  3008               	movlw	8
  1439  04D2  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  1440                           
  1441                           ;./LCD4bits.h: 78:   Lcd_Cmd(0x00);
  1442  04D7  3000               	movlw	0
  1443  04D8  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  1444                           
  1445                           ;./LCD4bits.h: 79:   Lcd_Cmd(0x0C);
  1446  04DD  300C               	movlw	12
  1447  04DE  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  1448                           
  1449                           ;./LCD4bits.h: 80:   Lcd_Cmd(0x00);
  1450  04E3  3000               	movlw	0
  1451  04E4  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  1452                           
  1453                           ;./LCD4bits.h: 81:   Lcd_Cmd(0x06);
  1454  04E9  3006               	movlw	6
  1455  04EA  120A  118A  21E3   	fcall	_Lcd_Cmd
  1456  04ED  0008               	return
  1457  04EE                     __end_of_Lcd_Init:	
  1458                           
  1459                           	psect	text5
  1460  030C                     __ptext5:	
  1461 ;; *************** function _I2C_Master_Init *****************
  1462 ;; Defined at:
  1463 ;;		line 16 in file "./I2C.h"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  c               4    0[BANK0 ] const unsigned long 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2, status,0, pclath, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1477 ;;      Params:         0       4       0       0       0
  1478 ;;      Locals:         0       0       0       0       0
  1479 ;;      Temps:          0       4       0       0       0
  1480 ;;      Totals:         0       8       0       0       0
  1481 ;;Total ram usage:        8 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    1
  1484 ;; This function calls:
  1485 ;;		___lldiv
  1486 ;; This function is called by:
  1487 ;;		_setup
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           
  1492                           ;psect for function _I2C_Master_Init
  1493  030C                     _I2C_Master_Init:	
  1494                           
  1495                           ;./I2C.h: 16: void I2C_Master_Init(const unsigned long c);./I2C.h: 17: {;./I2C.h: 18:   
      +                            SSPCON = 0b00101000;
  1496                           
  1497                           ;incstack = 0
  1498                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1499  030C  3028               	movlw	40
  1500  030D  1283               	bcf	3,5	;RP0=0, select bank0
  1501  030E  1303               	bcf	3,6	;RP1=0, select bank0
  1502  030F  0094               	movwf	20	;volatile
  1503                           
  1504                           ;./I2C.h: 19:     SSPCON2 = 0;
  1505  0310  1683               	bsf	3,5	;RP0=1, select bank1
  1506  0311  1303               	bcf	3,6	;RP1=0, select bank1
  1507  0312  0191               	clrf	17	;volatile
  1508                           
  1509                           ;./I2C.h: 20:     SSPADD = (8000000/(4*c))-1;
  1510  0313  1283               	bcf	3,5	;RP0=0, select bank0
  1511  0314  1303               	bcf	3,6	;RP1=0, select bank0
  1512  0315  0820               	movf	I2C_Master_Init@c,w
  1513  0316  00A4               	movwf	??_I2C_Master_Init
  1514  0317  0821               	movf	I2C_Master_Init@c+1,w
  1515  0318  00A5               	movwf	??_I2C_Master_Init+1
  1516  0319  0822               	movf	I2C_Master_Init@c+2,w
  1517  031A  00A6               	movwf	??_I2C_Master_Init+2
  1518  031B  0823               	movf	I2C_Master_Init@c+3,w
  1519  031C  00A7               	movwf	??_I2C_Master_Init+3
  1520  031D  3002               	movlw	2
  1521  031E                     u835:	
  1522  031E  1003               	clrc
  1523  031F  0DA4               	rlf	??_I2C_Master_Init,f
  1524  0320  0DA5               	rlf	??_I2C_Master_Init+1,f
  1525  0321  0DA6               	rlf	??_I2C_Master_Init+2,f
  1526  0322  0DA7               	rlf	??_I2C_Master_Init+3,f
  1527  0323  3EFF               	addlw	-1
  1528  0324  1D03               	skipz
  1529  0325  2B1E               	goto	u835
  1530  0326  0827               	movf	??_I2C_Master_Init+3,w
  1531  0327  00F3               	movwf	___lldiv@divisor+3
  1532  0328  0826               	movf	??_I2C_Master_Init+2,w
  1533  0329  00F2               	movwf	___lldiv@divisor+2
  1534  032A  0825               	movf	??_I2C_Master_Init+1,w
  1535  032B  00F1               	movwf	___lldiv@divisor+1
  1536  032C  0824               	movf	??_I2C_Master_Init,w
  1537  032D  00F0               	movwf	___lldiv@divisor
  1538  032E  3000               	movlw	0
  1539  032F  00F7               	movwf	___lldiv@dividend+3
  1540  0330  307A               	movlw	122
  1541  0331  00F6               	movwf	___lldiv@dividend+2
  1542  0332  3012               	movlw	18
  1543  0333  00F5               	movwf	___lldiv@dividend+1
  1544  0334  3000               	movlw	0
  1545  0335  00F4               	movwf	___lldiv@dividend
  1546  0336  120A  118A  24EE   	fcall	___lldiv
  1547  0339  0870               	movf	?___lldiv,w
  1548  033A  3EFF               	addlw	255
  1549  033B  1683               	bsf	3,5	;RP0=1, select bank1
  1550  033C  1303               	bcf	3,6	;RP1=0, select bank1
  1551  033D  0093               	movwf	19	;volatile
  1552                           
  1553                           ;./I2C.h: 21:     SSPSTAT = 0;
  1554  033E  0194               	clrf	20	;volatile
  1555                           
  1556                           ;./I2C.h: 22:     TRISC3 = 1;
  1557  033F  1587               	bsf	7,3	;volatile
  1558                           
  1559                           ;./I2C.h: 23:     TRISC4 = 1;
  1560  0340  1607               	bsf	7,4	;volatile
  1561  0341  0008               	return
  1562  0342                     __end_of_I2C_Master_Init:	
  1563                           
  1564                           	psect	text6
  1565  04EE                     __ptext6:	
  1566 ;; *************** function ___lldiv *****************
  1567 ;; Defined at:
  1568 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  divisor         4    0[COMMON] unsigned long 
  1571 ;;  dividend        4    4[COMMON] unsigned long 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  quotient        4    9[COMMON] unsigned long 
  1574 ;;  counter         1   13[COMMON] unsigned char 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  4    0[COMMON] unsigned long 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1584 ;;      Params:         8       0       0       0       0
  1585 ;;      Locals:         5       0       0       0       0
  1586 ;;      Temps:          1       0       0       0       0
  1587 ;;      Totals:        14       0       0       0       0
  1588 ;;Total ram usage:       14 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_I2C_Master_Init
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           
  1598                           ;psect for function ___lldiv
  1599  04EE                     ___lldiv:	
  1600                           
  1601                           ;incstack = 0
  1602                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1603  04EE  3000               	movlw	0
  1604  04EF  00FC               	movwf	___lldiv@quotient+3
  1605  04F0  3000               	movlw	0
  1606  04F1  00FB               	movwf	___lldiv@quotient+2
  1607  04F2  3000               	movlw	0
  1608  04F3  00FA               	movwf	___lldiv@quotient+1
  1609  04F4  3000               	movlw	0
  1610  04F5  00F9               	movwf	___lldiv@quotient
  1611  04F6  0873               	movf	___lldiv@divisor+3,w
  1612  04F7  0472               	iorwf	___lldiv@divisor+2,w
  1613  04F8  0471               	iorwf	___lldiv@divisor+1,w
  1614  04F9  0470               	iorwf	___lldiv@divisor,w
  1615  04FA  1903               	skipnz
  1616  04FB  2D43               	goto	l1374
  1617  04FC  01FD               	clrf	___lldiv@counter
  1618  04FD  0AFD               	incf	___lldiv@counter,f
  1619  04FE                     l1360:	
  1620  04FE  1BF3               	btfsc	___lldiv@divisor+3,7
  1621  04FF  2D0E               	goto	l1362
  1622  0500  3001               	movlw	1
  1623  0501  00F8               	movwf	??___lldiv
  1624  0502                     u645:	
  1625  0502  1003               	clrc
  1626  0503  0DF0               	rlf	___lldiv@divisor,f
  1627  0504  0DF1               	rlf	___lldiv@divisor+1,f
  1628  0505  0DF2               	rlf	___lldiv@divisor+2,f
  1629  0506  0DF3               	rlf	___lldiv@divisor+3,f
  1630  0507  0BF8               	decfsz	??___lldiv,f
  1631  0508  2D02               	goto	u645
  1632  0509  3001               	movlw	1
  1633  050A  00F8               	movwf	??___lldiv
  1634  050B  0878               	movf	??___lldiv,w
  1635  050C  07FD               	addwf	___lldiv@counter,f
  1636  050D  2CFE               	goto	l1360
  1637  050E                     l1362:	
  1638  050E  3001               	movlw	1
  1639  050F  00F8               	movwf	??___lldiv
  1640  0510                     u665:	
  1641  0510  1003               	clrc
  1642  0511  0DF9               	rlf	___lldiv@quotient,f
  1643  0512  0DFA               	rlf	___lldiv@quotient+1,f
  1644  0513  0DFB               	rlf	___lldiv@quotient+2,f
  1645  0514  0DFC               	rlf	___lldiv@quotient+3,f
  1646  0515  0BF8               	decfsz	??___lldiv,f
  1647  0516  2D10               	goto	u665
  1648  0517  0873               	movf	___lldiv@divisor+3,w
  1649  0518  0277               	subwf	___lldiv@dividend+3,w
  1650  0519  1D03               	skipz
  1651  051A  2D25               	goto	u675
  1652  051B  0872               	movf	___lldiv@divisor+2,w
  1653  051C  0276               	subwf	___lldiv@dividend+2,w
  1654  051D  1D03               	skipz
  1655  051E  2D25               	goto	u675
  1656  051F  0871               	movf	___lldiv@divisor+1,w
  1657  0520  0275               	subwf	___lldiv@dividend+1,w
  1658  0521  1D03               	skipz
  1659  0522  2D25               	goto	u675
  1660  0523  0870               	movf	___lldiv@divisor,w
  1661  0524  0274               	subwf	___lldiv@dividend,w
  1662  0525                     u675:	
  1663  0525  1C03               	skipc
  1664  0526  2D36               	goto	l1370
  1665  0527  0870               	movf	___lldiv@divisor,w
  1666  0528  02F4               	subwf	___lldiv@dividend,f
  1667  0529  0871               	movf	___lldiv@divisor+1,w
  1668  052A  1C03               	skipc
  1669  052B  0F71               	incfsz	___lldiv@divisor+1,w
  1670  052C  02F5               	subwf	___lldiv@dividend+1,f
  1671  052D  0872               	movf	___lldiv@divisor+2,w
  1672  052E  1C03               	skipc
  1673  052F  0F72               	incfsz	___lldiv@divisor+2,w
  1674  0530  02F6               	subwf	___lldiv@dividend+2,f
  1675  0531  0873               	movf	___lldiv@divisor+3,w
  1676  0532  1C03               	skipc
  1677  0533  0F73               	incfsz	___lldiv@divisor+3,w
  1678  0534  02F7               	subwf	___lldiv@dividend+3,f
  1679  0535  1479               	bsf	___lldiv@quotient,0
  1680  0536                     l1370:	
  1681  0536  3001               	movlw	1
  1682  0537                     u685:	
  1683  0537  1003               	clrc
  1684  0538  0CF3               	rrf	___lldiv@divisor+3,f
  1685  0539  0CF2               	rrf	___lldiv@divisor+2,f
  1686  053A  0CF1               	rrf	___lldiv@divisor+1,f
  1687  053B  0CF0               	rrf	___lldiv@divisor,f
  1688  053C  3EFF               	addlw	-1
  1689  053D  1D03               	skipz
  1690  053E  2D37               	goto	u685
  1691  053F  3001               	movlw	1
  1692  0540  02FD               	subwf	___lldiv@counter,f
  1693  0541  1D03               	btfss	3,2
  1694  0542  2D0E               	goto	l1362
  1695  0543                     l1374:	
  1696  0543  087C               	movf	___lldiv@quotient+3,w
  1697  0544  00F3               	movwf	?___lldiv+3
  1698  0545  087B               	movf	___lldiv@quotient+2,w
  1699  0546  00F2               	movwf	?___lldiv+2
  1700  0547  087A               	movf	___lldiv@quotient+1,w
  1701  0548  00F1               	movwf	?___lldiv+1
  1702  0549  0879               	movf	___lldiv@quotient,w
  1703  054A  00F0               	movwf	?___lldiv
  1704  054B  0008               	return
  1705  054C                     __end_of___lldiv:	
  1706                           
  1707                           	psect	text7
  1708  021C                     __ptext7:	
  1709 ;; *************** function _get_tripwire *****************
  1710 ;; Defined at:
  1711 ;;		line 184 in file "mainMaster.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  trip            1    7[COMMON] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      unsigned char 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0, pclath, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1725 ;;      Params:         0       0       0       0       0
  1726 ;;      Locals:         1       0       0       0       0
  1727 ;;      Temps:          1       0       0       0       0
  1728 ;;      Totals:         2       0       0       0       0
  1729 ;;Total ram usage:        2 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    2
  1732 ;; This function calls:
  1733 ;;		_I2C_Master_Read
  1734 ;;		_I2C_Master_Start
  1735 ;;		_I2C_Master_Stop
  1736 ;;		_I2C_Master_Write
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           
  1743                           ;psect for function _get_tripwire
  1744  021C                     _get_tripwire:	
  1745                           
  1746                           ;mainMaster.c: 185:     char trip;;mainMaster.c: 187:     I2C_Master_Start();
  1747                           
  1748                           ;incstack = 0
  1749                           ; Regs used in _get_tripwire: [wreg+status,2+status,0+pclath+cstack]
  1750  021C  120A  118A  2187  120A  118A  	fcall	_I2C_Master_Start
  1751                           
  1752                           ;mainMaster.c: 188:     I2C_Master_Write(0x21);
  1753  0221  3021               	movlw	33
  1754  0222  00F0               	movwf	I2C_Master_Write@d
  1755  0223  3000               	movlw	0
  1756  0224  00F1               	movwf	I2C_Master_Write@d+1
  1757  0225  120A  118A  219C  120A  118A  	fcall	_I2C_Master_Write
  1758                           
  1759                           ;mainMaster.c: 189:     trip = I2C_Master_Read(0);
  1760  022A  3000               	movlw	0
  1761  022B  00F0               	movwf	I2C_Master_Read@a
  1762  022C  00F1               	movwf	I2C_Master_Read@a+1
  1763  022D  120A  118A  22AE  120A  118A  	fcall	_I2C_Master_Read
  1764  0232  0870               	movf	?_I2C_Master_Read,w
  1765  0233  00F6               	movwf	??_get_tripwire
  1766  0234  0876               	movf	??_get_tripwire,w
  1767  0235  00F7               	movwf	get_tripwire@trip
  1768                           
  1769                           ;mainMaster.c: 190:     I2C_Master_Stop();
  1770  0236  120A  118A  218E   	fcall	_I2C_Master_Stop
  1771                           
  1772                           ;mainMaster.c: 192:     return (trip);
  1773  0239  0877               	movf	get_tripwire@trip,w
  1774  023A  0008               	return
  1775  023B                     __end_of_get_tripwire:	
  1776                           
  1777                           	psect	text8
  1778  054C                     __ptext8:	
  1779 ;; *************** function _get_time *****************
  1780 ;; Defined at:
  1781 ;;		line 109 in file "mainMaster.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;		None
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  string_time     6    0[BANK0 ] unsigned char [6]
  1786 ;;  min             1    7[BANK0 ] unsigned char 
  1787 ;;  hour            1    6[BANK0 ] unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      PTR unsigned char 
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0, pclath, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1797 ;;      Params:         0       0       0       0       0
  1798 ;;      Locals:         0       8       0       0       0
  1799 ;;      Temps:          2       0       0       0       0
  1800 ;;      Totals:         2       8       0       0       0
  1801 ;;Total ram usage:       10 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    2
  1804 ;; This function calls:
  1805 ;;		_I2C_Master_Read
  1806 ;;		_I2C_Master_RepeatedStart
  1807 ;;		_I2C_Master_Start
  1808 ;;		_I2C_Master_Stop
  1809 ;;		_I2C_Master_Write
  1810 ;; This function is called by:
  1811 ;;		_main
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           
  1816                           ;psect for function _get_time
  1817  054C                     _get_time:	
  1818                           
  1819                           ;mainMaster.c: 110:     char hour, min;;mainMaster.c: 111:     char string_time[6];;main
      +                          Master.c: 113:     I2C_Master_Start();
  1820                           
  1821                           ;incstack = 0
  1822                           ; Regs used in _get_time: [wreg+status,2+status,0+pclath+cstack]
  1823  054C  120A  118A  2187  120A  118A  	fcall	_I2C_Master_Start
  1824                           
  1825                           ;mainMaster.c: 114:     I2C_Master_Write(0xD0);
  1826  0551  30D0               	movlw	208
  1827  0552  00F0               	movwf	I2C_Master_Write@d
  1828  0553  3000               	movlw	0
  1829  0554  00F1               	movwf	I2C_Master_Write@d+1
  1830  0555  120A  118A  219C  120A  118A  	fcall	_I2C_Master_Write
  1831                           
  1832                           ;mainMaster.c: 115:     I2C_Master_Write(0x01);
  1833  055A  3001               	movlw	1
  1834  055B  00F0               	movwf	I2C_Master_Write@d
  1835  055C  3000               	movlw	0
  1836  055D  00F1               	movwf	I2C_Master_Write@d+1
  1837  055E  120A  118A  219C  120A  118A  	fcall	_I2C_Master_Write
  1838                           
  1839                           ;mainMaster.c: 116:     I2C_Master_RepeatedStart();
  1840  0563  120A  118A  2195  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1841                           
  1842                           ;mainMaster.c: 117:     I2C_Master_Write(0xD1);
  1843  0568  30D1               	movlw	209
  1844  0569  00F0               	movwf	I2C_Master_Write@d
  1845  056A  3000               	movlw	0
  1846  056B  00F1               	movwf	I2C_Master_Write@d+1
  1847  056C  120A  118A  219C  120A  118A  	fcall	_I2C_Master_Write
  1848                           
  1849                           ;mainMaster.c: 118:     min = I2C_Master_Read(1);
  1850  0571  3001               	movlw	1
  1851  0572  00F0               	movwf	I2C_Master_Read@a
  1852  0573  3000               	movlw	0
  1853  0574  00F1               	movwf	I2C_Master_Read@a+1
  1854  0575  120A  118A  22AE  120A  118A  	fcall	_I2C_Master_Read
  1855  057A  0870               	movf	?_I2C_Master_Read,w
  1856  057B  00F6               	movwf	??_get_time
  1857  057C  0876               	movf	??_get_time,w
  1858  057D  1283               	bcf	3,5	;RP0=0, select bank0
  1859  057E  1303               	bcf	3,6	;RP1=0, select bank0
  1860  057F  00A7               	movwf	get_time@min
  1861                           
  1862                           ;mainMaster.c: 119:     hour = I2C_Master_Read(0);
  1863  0580  3000               	movlw	0
  1864  0581  00F0               	movwf	I2C_Master_Read@a
  1865  0582  00F1               	movwf	I2C_Master_Read@a+1
  1866  0583  120A  118A  22AE  120A  118A  	fcall	_I2C_Master_Read
  1867  0588  0870               	movf	?_I2C_Master_Read,w
  1868  0589  00F6               	movwf	??_get_time
  1869  058A  0876               	movf	??_get_time,w
  1870  058B  1283               	bcf	3,5	;RP0=0, select bank0
  1871  058C  1303               	bcf	3,6	;RP1=0, select bank0
  1872  058D  00A6               	movwf	get_time@hour
  1873                           
  1874                           ;mainMaster.c: 120:     I2C_Master_Stop();
  1875  058E  120A  118A  218E  120A  118A  	fcall	_I2C_Master_Stop
  1876                           
  1877                           ;mainMaster.c: 122:     string_time[0] = (hour >> 4) + '0';
  1878  0593  1283               	bcf	3,5	;RP0=0, select bank0
  1879  0594  1303               	bcf	3,6	;RP1=0, select bank0
  1880  0595  0826               	movf	get_time@hour,w
  1881  0596  00F6               	movwf	??_get_time
  1882  0597  3004               	movlw	4
  1883  0598                     u1045:	
  1884  0598  1003               	clrc
  1885  0599  0CF6               	rrf	??_get_time,f
  1886  059A  3EFF               	addlw	-1
  1887  059B  1D03               	skipz
  1888  059C  2D98               	goto	u1045
  1889  059D  0876               	movf	??_get_time,w
  1890  059E  3E30               	addlw	48
  1891  059F  00F7               	movwf	??_get_time+1
  1892  05A0  0877               	movf	??_get_time+1,w
  1893  05A1  00A0               	movwf	get_time@string_time
  1894                           
  1895                           ;mainMaster.c: 123:     string_time[1] = (hour & 0x0F) + '0';
  1896  05A2  0826               	movf	get_time@hour,w
  1897  05A3  390F               	andlw	15
  1898  05A4  3E30               	addlw	48
  1899  05A5  00F6               	movwf	??_get_time
  1900  05A6  0876               	movf	??_get_time,w
  1901  05A7  00A1               	movwf	get_time@string_time+1
  1902                           
  1903                           ;mainMaster.c: 124:     string_time[2] = ':';
  1904  05A8  303A               	movlw	58
  1905  05A9  00F6               	movwf	??_get_time
  1906  05AA  0876               	movf	??_get_time,w
  1907  05AB  00A2               	movwf	get_time@string_time+2
  1908                           
  1909                           ;mainMaster.c: 125:     string_time[3] = (min >> 4) + '0';
  1910  05AC  0827               	movf	get_time@min,w
  1911  05AD  00F6               	movwf	??_get_time
  1912  05AE  3004               	movlw	4
  1913  05AF                     u1055:	
  1914  05AF  1003               	clrc
  1915  05B0  0CF6               	rrf	??_get_time,f
  1916  05B1  3EFF               	addlw	-1
  1917  05B2  1D03               	skipz
  1918  05B3  2DAF               	goto	u1055
  1919  05B4  0876               	movf	??_get_time,w
  1920  05B5  3E30               	addlw	48
  1921  05B6  00F7               	movwf	??_get_time+1
  1922  05B7  0877               	movf	??_get_time+1,w
  1923  05B8  00A3               	movwf	get_time@string_time+3
  1924                           
  1925                           ;mainMaster.c: 126:     string_time[4] = (min & 0x0F) + '0';
  1926  05B9  0827               	movf	get_time@min,w
  1927  05BA  390F               	andlw	15
  1928  05BB  3E30               	addlw	48
  1929  05BC  00F6               	movwf	??_get_time
  1930  05BD  0876               	movf	??_get_time,w
  1931  05BE  00A4               	movwf	get_time@string_time+4
  1932                           
  1933                           ;mainMaster.c: 127:     string_time[5] = '\0';
  1934  05BF  01A5               	clrf	get_time@string_time+5
  1935                           
  1936                           ;mainMaster.c: 129:     return (string_time);
  1937  05C0  3020               	movlw	(low (get_time@string_time| 0))& (0+255)
  1938  05C1  0008               	return
  1939  05C2                     __end_of_get_time:	
  1940                           
  1941                           	psect	text9
  1942  05C2                     __ptext9:	
  1943 ;; *************** function _get_temp *****************
  1944 ;; Defined at:
  1945 ;;		line 146 in file "mainMaster.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  temperature     6   16[BANK0 ] unsigned char [6]
  1950 ;;  decimal         3   22[BANK0 ] unsigned char [3]
  1951 ;;  tempLSB         1   26[BANK0 ] unsigned char 
  1952 ;;  tempMSB         1   25[BANK0 ] unsigned char 
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  1    wreg      PTR unsigned char 
  1955 ;; Registers used:
  1956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1962 ;;      Params:         0       0       0       0       0
  1963 ;;      Locals:         0      11       0       0       0
  1964 ;;      Temps:          0       3       0       0       0
  1965 ;;      Totals:         0      14       0       0       0
  1966 ;;Total ram usage:       14 bytes
  1967 ;; Hardware stack levels used:    1
  1968 ;; Hardware stack levels required when called:    2
  1969 ;; This function calls:
  1970 ;;		_I2C_Master_Read
  1971 ;;		_I2C_Master_RepeatedStart
  1972 ;;		_I2C_Master_Start
  1973 ;;		_I2C_Master_Stop
  1974 ;;		_I2C_Master_Write
  1975 ;;		___bmul
  1976 ;;		_sprintf
  1977 ;;		_strcat
  1978 ;; This function is called by:
  1979 ;;		_main
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           
  1984                           ;psect for function _get_temp
  1985  05C2                     _get_temp:	
  1986                           
  1987                           ;mainMaster.c: 147:     char tempLSB, tempMSB;;mainMaster.c: 148:     char temperature[6
      +                          ], decimal[3];;mainMaster.c: 150:     I2C_Master_Start();
  1988                           
  1989                           ;incstack = 0
  1990                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1991  05C2  120A  118A  2187  120A  118A  	fcall	_I2C_Master_Start
  1992                           
  1993                           ;mainMaster.c: 151:     I2C_Master_Write(0xD0);
  1994  05C7  30D0               	movlw	208
  1995  05C8  00F0               	movwf	I2C_Master_Write@d
  1996  05C9  3000               	movlw	0
  1997  05CA  00F1               	movwf	I2C_Master_Write@d+1
  1998  05CB  120A  118A  219C  120A  118A  	fcall	_I2C_Master_Write
  1999                           
  2000                           ;mainMaster.c: 152:     I2C_Master_Write(0x11);
  2001  05D0  3011               	movlw	17
  2002  05D1  00F0               	movwf	I2C_Master_Write@d
  2003  05D2  3000               	movlw	0
  2004  05D3  00F1               	movwf	I2C_Master_Write@d+1
  2005  05D4  120A  118A  219C  120A  118A  	fcall	_I2C_Master_Write
  2006                           
  2007                           ;mainMaster.c: 153:     I2C_Master_RepeatedStart();
  2008  05D9  120A  118A  2195  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2009                           
  2010                           ;mainMaster.c: 154:     I2C_Master_Write(0xD1);
  2011  05DE  30D1               	movlw	209
  2012  05DF  00F0               	movwf	I2C_Master_Write@d
  2013  05E0  3000               	movlw	0
  2014  05E1  00F1               	movwf	I2C_Master_Write@d+1
  2015  05E2  120A  118A  219C  120A  118A  	fcall	_I2C_Master_Write
  2016                           
  2017                           ;mainMaster.c: 155:     tempMSB = I2C_Master_Read(1);
  2018  05E7  3001               	movlw	1
  2019  05E8  00F0               	movwf	I2C_Master_Read@a
  2020  05E9  3000               	movlw	0
  2021  05EA  00F1               	movwf	I2C_Master_Read@a+1
  2022  05EB  120A  118A  22AE  120A  118A  	fcall	_I2C_Master_Read
  2023  05F0  0870               	movf	?_I2C_Master_Read,w
  2024  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  2025  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  2026  05F3  00AD               	movwf	??_get_temp
  2027  05F4  082D               	movf	??_get_temp,w
  2028  05F5  00B9               	movwf	get_temp@tempMSB
  2029                           
  2030                           ;mainMaster.c: 156:     tempLSB = I2C_Master_Read(0);
  2031  05F6  3000               	movlw	0
  2032  05F7  00F0               	movwf	I2C_Master_Read@a
  2033  05F8  00F1               	movwf	I2C_Master_Read@a+1
  2034  05F9  120A  118A  22AE  120A  118A  	fcall	_I2C_Master_Read
  2035  05FE  0870               	movf	?_I2C_Master_Read,w
  2036  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  2037  0600  1303               	bcf	3,6	;RP1=0, select bank0
  2038  0601  00AD               	movwf	??_get_temp
  2039  0602  082D               	movf	??_get_temp,w
  2040  0603  00BA               	movwf	get_temp@tempLSB
  2041                           
  2042                           ;mainMaster.c: 157:     I2C_Master_Stop();
  2043  0604  120A  118A  218E  120A  118A  	fcall	_I2C_Master_Stop
  2044                           
  2045                           ;mainMaster.c: 159:     tempMSB = tempMSB - 4;
  2046  0609  1283               	bcf	3,5	;RP0=0, select bank0
  2047  060A  1303               	bcf	3,6	;RP1=0, select bank0
  2048  060B  0839               	movf	get_temp@tempMSB,w
  2049  060C  3EFC               	addlw	252
  2050  060D  00AD               	movwf	??_get_temp
  2051  060E  082D               	movf	??_get_temp,w
  2052  060F  00B9               	movwf	get_temp@tempMSB
  2053                           
  2054                           ;mainMaster.c: 160:     tempLSB = (tempLSB >> 6) * 25;
  2055  0610  3019               	movlw	25
  2056  0611  00AD               	movwf	??_get_temp
  2057  0612  082D               	movf	??_get_temp,w
  2058  0613  00F0               	movwf	___bmul@multiplicand
  2059  0614  083A               	movf	get_temp@tempLSB,w
  2060  0615  00AE               	movwf	??_get_temp+1
  2061  0616  3006               	movlw	6
  2062  0617                     u1065:	
  2063  0617  1003               	clrc
  2064  0618  0CAE               	rrf	??_get_temp+1,f
  2065  0619  3EFF               	addlw	-1
  2066  061A  1D03               	skipz
  2067  061B  2E17               	goto	u1065
  2068  061C  082E               	movf	??_get_temp+1,w
  2069  061D  120A  118A  21B8  120A  118A  	fcall	___bmul
  2070  0622  1283               	bcf	3,5	;RP0=0, select bank0
  2071  0623  1303               	bcf	3,6	;RP1=0, select bank0
  2072  0624  00AF               	movwf	??_get_temp+2
  2073  0625  082F               	movf	??_get_temp+2,w
  2074  0626  00BA               	movwf	get_temp@tempLSB
  2075                           
  2076                           ;mainMaster.c: 161:     sprintf(temperature, "%d", tempMSB);
  2077  0627  3041               	movlw	(low (((STR_8+1)-__stringbase)| (0+32768)))& (0+255)
  2078  0628  00AD               	movwf	??_get_temp
  2079  0629  082D               	movf	??_get_temp,w
  2080  062A  00A0               	movwf	sprintf@f
  2081  062B  0839               	movf	get_temp@tempMSB,w
  2082  062C  00AE               	movwf	??_get_temp+1
  2083  062D  01AF               	clrf	??_get_temp+2
  2084  062E  082E               	movf	??_get_temp+1,w
  2085  062F  00A1               	movwf	?_sprintf+1
  2086  0630  082F               	movf	??_get_temp+2,w
  2087  0631  00A2               	movwf	?_sprintf+2
  2088  0632  3030               	movlw	(low (get_temp@temperature| 0))& (0+255)
  2089  0633  120A  118A  271E  120A  118A  	fcall	_sprintf
  2090                           
  2091                           ;mainMaster.c: 162:     if (tempLSB == 0){
  2092  0638  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0639  1303               	bcf	3,6	;RP1=0, select bank0
  2094  063A  083A               	movf	get_temp@tempLSB,w
  2095  063B  1D03               	btfss	3,2
  2096  063C  2E3F               	goto	l1692
  2097                           
  2098                           ;mainMaster.c: 163:         sprintf(decimal, ".%d0", tempLSB);
  2099  063D  303B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2100  063E  2E40               	goto	L7
  2101  063F                     l1692:	
  2102                           ;mainMaster.c: 164:     } else {
  2103                           
  2104                           
  2105                           ;mainMaster.c: 165:         sprintf(decimal, ".%d", tempLSB);
  2106  063F  3040               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2107  0640                     L7:	
  2108  0640  00AD               	movwf	??_get_temp
  2109  0641  082D               	movf	??_get_temp,w
  2110  0642  00A0               	movwf	sprintf@f
  2111  0643  083A               	movf	get_temp@tempLSB,w
  2112  0644  00AE               	movwf	??_get_temp+1
  2113  0645  01AF               	clrf	??_get_temp+2
  2114  0646  082E               	movf	??_get_temp+1,w
  2115  0647  00A1               	movwf	?_sprintf+1
  2116  0648  082F               	movf	??_get_temp+2,w
  2117  0649  00A2               	movwf	?_sprintf+2
  2118  064A  3036               	movlw	(low (get_temp@decimal| 0))& (0+255)
  2119  064B  120A  118A  271E  120A  118A  	fcall	_sprintf
  2120                           
  2121                           ;mainMaster.c: 167:     strcat(temperature, decimal);
  2122  0650  3036               	movlw	(low (get_temp@decimal| 0))& (0+255)
  2123  0651  1283               	bcf	3,5	;RP0=0, select bank0
  2124  0652  1303               	bcf	3,6	;RP1=0, select bank0
  2125  0653  00AD               	movwf	??_get_temp
  2126  0654  082D               	movf	??_get_temp,w
  2127  0655  00F0               	movwf	strcat@from
  2128  0656  3030               	movlw	(low (get_temp@temperature| 0))& (0+255)
  2129  0657  120A  118A  223B   	fcall	_strcat
  2130                           
  2131                           ;mainMaster.c: 168:     temperature[5] = '\0';
  2132  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2133  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2134  065C  01B5               	clrf	get_temp@temperature+5
  2135                           
  2136                           ;mainMaster.c: 170:     return (temperature);
  2137  065D  3030               	movlw	(low (get_temp@temperature| 0))& (0+255)
  2138  065E  0008               	return
  2139  065F                     __end_of_get_temp:	
  2140                           
  2141                           	psect	text10
  2142  023B                     __ptext10:	
  2143 ;; *************** function _strcat *****************
  2144 ;; Defined at:
  2145 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcat.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  to              1    wreg     PTR unsigned char 
  2148 ;;		 -> get_temp@temperature(6), 
  2149 ;;  from            1    0[COMMON] PTR const unsigned char 
  2150 ;;		 -> get_temp@decimal(3), 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  to              1    2[COMMON] PTR unsigned char 
  2153 ;;		 -> get_temp@temperature(6), 
  2154 ;;  cp              1    3[COMMON] PTR unsigned char 
  2155 ;;		 -> get_temp@temperature(6), 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      PTR unsigned char 
  2158 ;; Registers used:
  2159 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2165 ;;      Params:         1       0       0       0       0
  2166 ;;      Locals:         2       0       0       0       0
  2167 ;;      Temps:          1       0       0       0       0
  2168 ;;      Totals:         4       0       0       0       0
  2169 ;;Total ram usage:        4 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_get_temp
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           
  2179                           ;psect for function _strcat
  2180  023B                     _strcat:	
  2181                           
  2182                           ;incstack = 0
  2183                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2184                           ;strcat@to stored from wreg
  2185  023B  00F2               	movwf	strcat@to
  2186  023C  0872               	movf	strcat@to,w
  2187  023D  00F1               	movwf	??_strcat
  2188  023E  0871               	movf	??_strcat,w
  2189  023F  00F3               	movwf	strcat@cp
  2190  0240                     l1594:	
  2191  0240  0873               	movf	strcat@cp,w
  2192  0241  0084               	movwf	4
  2193  0242  1383               	bcf	3,7	;select IRP bank0
  2194  0243  0800               	movf	0,w
  2195  0244  1903               	btfsc	3,2
  2196  0245  2A53               	goto	l1598
  2197  0246  3001               	movlw	1
  2198  0247  00F1               	movwf	??_strcat
  2199  0248  0871               	movf	??_strcat,w
  2200  0249  07F3               	addwf	strcat@cp,f
  2201  024A  2A40               	goto	l1594
  2202  024B                     l1596:	
  2203  024B  3001               	movlw	1
  2204  024C  00F1               	movwf	??_strcat
  2205  024D  0871               	movf	??_strcat,w
  2206  024E  07F3               	addwf	strcat@cp,f
  2207  024F  3001               	movlw	1
  2208  0250  00F1               	movwf	??_strcat
  2209  0251  0871               	movf	??_strcat,w
  2210  0252  07F0               	addwf	strcat@from,f
  2211  0253                     l1598:	
  2212  0253  0870               	movf	strcat@from,w
  2213  0254  0084               	movwf	4
  2214  0255  0800               	movf	0,w
  2215  0256  00F1               	movwf	??_strcat
  2216  0257  0873               	movf	strcat@cp,w
  2217  0258  0084               	movwf	4
  2218  0259  0871               	movf	??_strcat,w
  2219  025A  0080               	movwf	0
  2220  025B  0800               	movf	0,w
  2221  025C  1903               	btfsc	3,2
  2222  025D  0008               	return
  2223  025E  2A4B               	goto	l1596
  2224  025F                     __end_of_strcat:	
  2225                           
  2226                           	psect	text11
  2227  071E                     __ptext11:	
  2228 ;; *************** function _sprintf *****************
  2229 ;; Defined at:
  2230 ;;		line 500 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;  sp              1    wreg     PTR unsigned char 
  2233 ;;		 -> get_temp@decimal(3), get_temp@temperature(6), 
  2234 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2235 ;;		 -> STR_8(4), STR_7(5), STR_6(3), 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2238 ;;		 -> get_temp@decimal(3), get_temp@temperature(6), 
  2239 ;;  tmpval          4    0        struct .
  2240 ;;  val             2    9[BANK0 ] unsigned int 
  2241 ;;  cp              2    0        PTR const unsigned char 
  2242 ;;  len             2    0        unsigned int 
  2243 ;;  c               1   12[BANK0 ] unsigned char 
  2244 ;;  prec            1    8[BANK0 ] char 
  2245 ;;  flag            1    7[BANK0 ] unsigned char 
  2246 ;;  ap              1    6[BANK0 ] PTR void [1]
  2247 ;;		 -> ?_sprintf(2), 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  2    0[BANK0 ] int 
  2250 ;; Registers used:
  2251 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2257 ;;      Params:         0       3       0       0       0
  2258 ;;      Locals:         0       7       0       0       0
  2259 ;;      Temps:          0       3       0       0       0
  2260 ;;      Totals:         0      13       0       0       0
  2261 ;;Total ram usage:       13 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; Hardware stack levels required when called:    1
  2264 ;; This function calls:
  2265 ;;		___lwdiv
  2266 ;;		___lwmod
  2267 ;; This function is called by:
  2268 ;;		_get_temp
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           
  2273                           ;psect for function _sprintf
  2274  071E                     _sprintf:	
  2275                           
  2276                           ;incstack = 0
  2277                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2278                           ;sprintf@sp stored from wreg
  2279  071E  1283               	bcf	3,5	;RP0=0, select bank0
  2280  071F  1303               	bcf	3,6	;RP1=0, select bank0
  2281  0720  00AB               	movwf	sprintf@sp
  2282                           
  2283                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;D:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  2284  0721  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2285  0722  00A3               	movwf	??_sprintf
  2286  0723  0823               	movf	??_sprintf,w
  2287  0724  00A6               	movwf	sprintf@ap
  2288  0725                     l1580:	
  2289                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2290                           
  2291                           
  2292                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2293  0725  3001               	movlw	1
  2294  0726  07A0               	addwf	sprintf@f,f
  2295  0727  30FF               	movlw	-1
  2296  0728  0720               	addwf	sprintf@f,w
  2297  0729  0084               	movwf	4
  2298  072A  120A  118A  200D  120A  118A  	fcall	stringdir
  2299  072F  00A3               	movwf	??_sprintf
  2300  0730  0823               	movf	??_sprintf,w
  2301  0731  00AC               	movwf	sprintf@c
  2302  0732  082C               	movf	sprintf@c,w
  2303  0733  1903               	btfsc	3,2
  2304  0734  2FF1               	goto	l1582
  2305                           
  2306                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  2307  0735  3025               	movlw	37
  2308  0736  062C               	xorwf	sprintf@c,w
  2309  0737  1903               	btfsc	3,2
  2310  0738  2F45               	goto	l1536
  2311                           
  2312                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;D:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  2313  0739  082C               	movf	sprintf@c,w
  2314  073A  00A3               	movwf	??_sprintf
  2315  073B  082B               	movf	sprintf@sp,w
  2316  073C  0084               	movwf	4
  2317  073D  0823               	movf	??_sprintf,w
  2318  073E  1383               	bcf	3,7	;select IRP bank0
  2319  073F  0080               	movwf	0
  2320  0740  3001               	movlw	1
  2321  0741  00A3               	movwf	??_sprintf
  2322  0742  0823               	movf	??_sprintf,w
  2323  0743  07AB               	addwf	sprintf@sp,f
  2324                           
  2325                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  2326  0744  2F25               	goto	l1580
  2327  0745                     l1536:	
  2328                           
  2329                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  2330  0745  01A7               	clrf	sprintf@flag
  2331                           
  2332                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  2333  0746  3001               	movlw	1
  2334  0747  07A0               	addwf	sprintf@f,f
  2335  0748  30FF               	movlw	-1
  2336  0749  0720               	addwf	sprintf@f,w
  2337  074A  0084               	movwf	4
  2338  074B  120A  118A  200D  120A  118A  	fcall	stringdir
  2339  0750  00AC               	movwf	sprintf@c
  2340  0751  00A3               	movwf	??_sprintf
  2341  0752  01A4               	clrf	??_sprintf+1
  2342                           
  2343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2344                           ; Switch size 1, requested type "simple"
  2345                           ; Number of cases is 1, Range of values is 0 to 0
  2346                           ; switch strategies available:
  2347                           ; Name         Instructions Cycles
  2348                           ; simple_byte            4     3 (average)
  2349                           ; direct_byte           11     8 (fixed)
  2350                           ; jumptable            260     6 (fixed)
  2351                           ;	Chosen strategy is simple_byte
  2352  0753  0824               	movf	??_sprintf+1,w
  2353  0754  3A00               	xorlw	0	; case 0
  2354  0755  1903               	skipnz
  2355  0756  2F58               	goto	l1820
  2356  0757  2F25               	goto	l1580
  2357  0758                     l1820:	
  2358                           
  2359                           ; Switch size 1, requested type "simple"
  2360                           ; Number of cases is 3, Range of values is 0 to 105
  2361                           ; switch strategies available:
  2362                           ; Name         Instructions Cycles
  2363                           ; simple_byte           10     6 (average)
  2364                           ; jumptable            260     6 (fixed)
  2365                           ;	Chosen strategy is simple_byte
  2366  0758  0823               	movf	??_sprintf,w
  2367  0759  3A00               	xorlw	0	; case 0
  2368  075A  1903               	skipnz
  2369  075B  2FF1               	goto	l1582
  2370  075C  3A64               	xorlw	100	; case 100
  2371  075D  1903               	skipnz
  2372  075E  2F63               	goto	l1542
  2373  075F  3A0D               	xorlw	13	; case 105
  2374  0760  1903               	skipnz
  2375  0761  2F63               	goto	l1542
  2376  0762  2F25               	goto	l1580
  2377  0763                     l1542:	
  2378                           
  2379                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2380  0763  0826               	movf	sprintf@ap,w
  2381  0764  0084               	movwf	4
  2382  0765  1383               	bcf	3,7	;select IRP bank0
  2383  0766  0800               	movf	0,w
  2384  0767  00A9               	movwf	sprintf@val
  2385  0768  0A84               	incf	4,f
  2386  0769  0800               	movf	0,w
  2387  076A  00AA               	movwf	sprintf@val+1
  2388  076B  3002               	movlw	2
  2389  076C  00A3               	movwf	??_sprintf
  2390  076D  0823               	movf	??_sprintf,w
  2391  076E  07A6               	addwf	sprintf@ap,f
  2392                           
  2393                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  2394  076F  1FAA               	btfss	sprintf@val+1,7
  2395  0770  2F7A               	goto	l1552
  2396                           
  2397                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  2398  0771  3003               	movlw	3
  2399  0772  00A3               	movwf	??_sprintf
  2400  0773  0823               	movf	??_sprintf,w
  2401  0774  04A7               	iorwf	sprintf@flag,f
  2402                           
  2403                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  2404  0775  09A9               	comf	sprintf@val,f
  2405  0776  09AA               	comf	sprintf@val+1,f
  2406  0777  0AA9               	incf	sprintf@val,f
  2407  0778  1903               	skipnz
  2408  0779  0AAA               	incf	sprintf@val+1,f
  2409  077A                     l1552:	
  2410                           
  2411                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2412  077A  01AC               	clrf	sprintf@c
  2413  077B  0AAC               	incf	sprintf@c,f
  2414  077C                     l1558:	
  2415                           
  2416                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  2417  077C  082C               	movf	sprintf@c,w
  2418  077D  00A3               	movwf	??_sprintf
  2419  077E  0723               	addwf	??_sprintf,w
  2420  077F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2421  0780  0084               	movwf	4
  2422  0781  120A  118A  200D  120A  118A  	fcall	stringdir
  2423  0786  00A4               	movwf	??_sprintf+1
  2424  0787  120A  118A  200D  120A  118A  	fcall	stringdir
  2425  078C  00A5               	movwf	??_sprintf+2
  2426  078D  0825               	movf	??_sprintf+2,w
  2427  078E  022A               	subwf	sprintf@val+1,w
  2428  078F  1D03               	skipz
  2429  0790  2F93               	goto	u885
  2430  0791  0824               	movf	??_sprintf+1,w
  2431  0792  0229               	subwf	sprintf@val,w
  2432  0793                     u885:	
  2433  0793  1C03               	btfss	3,0
  2434  0794  2F9D               	goto	l1564
  2435  0795  3001               	movlw	1
  2436  0796  00A3               	movwf	??_sprintf
  2437  0797  0823               	movf	??_sprintf,w
  2438  0798  07AC               	addwf	sprintf@c,f
  2439  0799  3005               	movlw	5
  2440  079A  062C               	xorwf	sprintf@c,w
  2441  079B  1D03               	btfss	3,2
  2442  079C  2F7C               	goto	l1558
  2443  079D                     l1564:	
  2444                           
  2445                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  2446  079D  0827               	movf	sprintf@flag,w
  2447  079E  3903               	andlw	3
  2448  079F  1903               	btfsc	3,2
  2449  07A0  2FAC               	goto	l1570
  2450                           
  2451                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  2452  07A1  302D               	movlw	45
  2453  07A2  00A3               	movwf	??_sprintf
  2454  07A3  082B               	movf	sprintf@sp,w
  2455  07A4  0084               	movwf	4
  2456  07A5  0823               	movf	??_sprintf,w
  2457  07A6  1383               	bcf	3,7	;select IRP bank0
  2458  07A7  0080               	movwf	0
  2459  07A8  3001               	movlw	1
  2460  07A9  00A3               	movwf	??_sprintf
  2461  07AA  0823               	movf	??_sprintf,w
  2462  07AB  07AB               	addwf	sprintf@sp,f
  2463  07AC                     l1570:	
  2464                           
  2465                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  2466  07AC  082C               	movf	sprintf@c,w
  2467  07AD  00A3               	movwf	??_sprintf
  2468  07AE  0823               	movf	??_sprintf,w
  2469  07AF  00A8               	movwf	sprintf@prec
  2470  07B0                     l1578:	
  2471                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2472                           
  2473                           
  2474                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2475  07B0  30FF               	movlw	255
  2476  07B1  00A3               	movwf	??_sprintf
  2477  07B2  0823               	movf	??_sprintf,w
  2478  07B3  07A8               	addwf	sprintf@prec,f
  2479  07B4  0A28               	incf	sprintf@prec,w
  2480  07B5  1903               	btfsc	3,2
  2481  07B6  2F25               	goto	l1580
  2482                           
  2483                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  2484  07B7  300A               	movlw	10
  2485  07B8  00F8               	movwf	___lwmod@divisor
  2486  07B9  3000               	movlw	0
  2487  07BA  00F9               	movwf	___lwmod@divisor+1
  2488  07BB  0828               	movf	sprintf@prec,w
  2489  07BC  00A3               	movwf	??_sprintf
  2490  07BD  0723               	addwf	??_sprintf,w
  2491  07BE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2492  07BF  0084               	movwf	4
  2493  07C0  120A  118A  200D  120A  118A  	fcall	stringdir
  2494  07C5  00F0               	movwf	___lwdiv@divisor
  2495  07C6  120A  118A  200D  120A  118A  	fcall	stringdir
  2496  07CB  00F1               	movwf	___lwdiv@divisor+1
  2497  07CC  082A               	movf	sprintf@val+1,w
  2498  07CD  00F3               	movwf	___lwdiv@dividend+1
  2499  07CE  0829               	movf	sprintf@val,w
  2500  07CF  00F2               	movwf	___lwdiv@dividend
  2501  07D0  120A  118A  237B  120A  118A  	fcall	___lwdiv
  2502  07D5  0871               	movf	?___lwdiv+1,w
  2503  07D6  00FB               	movwf	___lwmod@dividend+1
  2504  07D7  0870               	movf	?___lwdiv,w
  2505  07D8  00FA               	movwf	___lwmod@dividend
  2506  07D9  120A  118A  22DA  120A  118A  	fcall	___lwmod
  2507  07DE  0878               	movf	?___lwmod,w
  2508  07DF  3E30               	addlw	48
  2509  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  2510  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  2511  07E2  00A4               	movwf	??_sprintf+1
  2512  07E3  0824               	movf	??_sprintf+1,w
  2513  07E4  00AC               	movwf	sprintf@c
  2514                           
  2515                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  2516  07E5  082C               	movf	sprintf@c,w
  2517  07E6  00A3               	movwf	??_sprintf
  2518  07E7  082B               	movf	sprintf@sp,w
  2519  07E8  0084               	movwf	4
  2520  07E9  0823               	movf	??_sprintf,w
  2521  07EA  1383               	bcf	3,7	;select IRP bank0
  2522  07EB  0080               	movwf	0
  2523  07EC  3001               	movlw	1
  2524  07ED  00A3               	movwf	??_sprintf
  2525  07EE  0823               	movf	??_sprintf,w
  2526  07EF  07AB               	addwf	sprintf@sp,f
  2527  07F0  2FB0               	goto	l1578
  2528  07F1                     l1582:	
  2529                           
  2530                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  2531  07F1  082B               	movf	sprintf@sp,w
  2532  07F2  0084               	movwf	4
  2533  07F3  1383               	bcf	3,7	;select IRP bank0
  2534  07F4  0180               	clrf	0
  2535  07F5  0008               	return
  2536  07F6                     __end_of_sprintf:	
  2537                           
  2538                           	psect	text12
  2539  02DA                     __ptext12:	
  2540 ;; *************** function ___lwmod *****************
  2541 ;; Defined at:
  2542 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  divisor         2    8[COMMON] unsigned int 
  2545 ;;  dividend        2   10[COMMON] unsigned int 
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;  counter         1   13[COMMON] unsigned char 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  2    8[COMMON] unsigned int 
  2550 ;; Registers used:
  2551 ;;		wreg, status,2, status,0
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2557 ;;      Params:         4       0       0       0       0
  2558 ;;      Locals:         1       0       0       0       0
  2559 ;;      Temps:          1       0       0       0       0
  2560 ;;      Totals:         6       0       0       0       0
  2561 ;;Total ram usage:        6 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; This function calls:
  2564 ;;		Nothing
  2565 ;; This function is called by:
  2566 ;;		_sprintf
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           
  2571                           ;psect for function ___lwmod
  2572  02DA                     ___lwmod:	
  2573                           
  2574                           ;incstack = 0
  2575                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2576  02DA  0878               	movf	___lwmod@divisor,w
  2577  02DB  0479               	iorwf	___lwmod@divisor+1,w
  2578  02DC  1903               	btfsc	3,2
  2579  02DD  2B07               	goto	l1422
  2580  02DE  01FD               	clrf	___lwmod@counter
  2581  02DF  0AFD               	incf	___lwmod@counter,f
  2582  02E0                     l1412:	
  2583  02E0  1BF9               	btfsc	___lwmod@divisor+1,7
  2584  02E1  2AEE               	goto	l1414
  2585  02E2  3001               	movlw	1
  2586  02E3                     u785:	
  2587  02E3  1003               	clrc
  2588  02E4  0DF8               	rlf	___lwmod@divisor,f
  2589  02E5  0DF9               	rlf	___lwmod@divisor+1,f
  2590  02E6  3EFF               	addlw	-1
  2591  02E7  1D03               	skipz
  2592  02E8  2AE3               	goto	u785
  2593  02E9  3001               	movlw	1
  2594  02EA  00FC               	movwf	??___lwmod
  2595  02EB  087C               	movf	??___lwmod,w
  2596  02EC  07FD               	addwf	___lwmod@counter,f
  2597  02ED  2AE0               	goto	l1412
  2598  02EE                     l1414:	
  2599  02EE  0879               	movf	___lwmod@divisor+1,w
  2600  02EF  027B               	subwf	___lwmod@dividend+1,w
  2601  02F0  1D03               	skipz
  2602  02F1  2AF4               	goto	u805
  2603  02F2  0878               	movf	___lwmod@divisor,w
  2604  02F3  027A               	subwf	___lwmod@dividend,w
  2605  02F4                     u805:	
  2606  02F4  1C03               	skipc
  2607  02F5  2AFC               	goto	l1418
  2608  02F6  0878               	movf	___lwmod@divisor,w
  2609  02F7  02FA               	subwf	___lwmod@dividend,f
  2610  02F8  0879               	movf	___lwmod@divisor+1,w
  2611  02F9  1C03               	skipc
  2612  02FA  03FB               	decf	___lwmod@dividend+1,f
  2613  02FB  02FB               	subwf	___lwmod@dividend+1,f
  2614  02FC                     l1418:	
  2615  02FC  3001               	movlw	1
  2616  02FD                     u815:	
  2617  02FD  1003               	clrc
  2618  02FE  0CF9               	rrf	___lwmod@divisor+1,f
  2619  02FF  0CF8               	rrf	___lwmod@divisor,f
  2620  0300  3EFF               	addlw	-1
  2621  0301  1D03               	skipz
  2622  0302  2AFD               	goto	u815
  2623  0303  3001               	movlw	1
  2624  0304  02FD               	subwf	___lwmod@counter,f
  2625  0305  1D03               	btfss	3,2
  2626  0306  2AEE               	goto	l1414
  2627  0307                     l1422:	
  2628  0307  087B               	movf	___lwmod@dividend+1,w
  2629  0308  00F9               	movwf	?___lwmod+1
  2630  0309  087A               	movf	___lwmod@dividend,w
  2631  030A  00F8               	movwf	?___lwmod
  2632  030B  0008               	return
  2633  030C                     __end_of___lwmod:	
  2634                           
  2635                           	psect	text13
  2636  037B                     __ptext13:	
  2637 ;; *************** function ___lwdiv *****************
  2638 ;; Defined at:
  2639 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;  divisor         2    0[COMMON] unsigned int 
  2642 ;;  dividend        2    2[COMMON] unsigned int 
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;  quotient        2    5[COMMON] unsigned int 
  2645 ;;  counter         1    7[COMMON] unsigned char 
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  2    0[COMMON] unsigned int 
  2648 ;; Registers used:
  2649 ;;		wreg, status,2, status,0
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2655 ;;      Params:         4       0       0       0       0
  2656 ;;      Locals:         3       0       0       0       0
  2657 ;;      Temps:          1       0       0       0       0
  2658 ;;      Totals:         8       0       0       0       0
  2659 ;;Total ram usage:        8 bytes
  2660 ;; Hardware stack levels used:    1
  2661 ;; This function calls:
  2662 ;;		Nothing
  2663 ;; This function is called by:
  2664 ;;		_sprintf
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           
  2669                           ;psect for function ___lwdiv
  2670  037B                     ___lwdiv:	
  2671                           
  2672                           ;incstack = 0
  2673                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2674  037B  01F5               	clrf	___lwdiv@quotient
  2675  037C  01F6               	clrf	___lwdiv@quotient+1
  2676  037D  0870               	movf	___lwdiv@divisor,w
  2677  037E  0471               	iorwf	___lwdiv@divisor+1,w
  2678  037F  1903               	btfsc	3,2
  2679  0380  2BB2               	goto	l1400
  2680  0381  01F7               	clrf	___lwdiv@counter
  2681  0382  0AF7               	incf	___lwdiv@counter,f
  2682  0383                     l1388:	
  2683  0383  1BF1               	btfsc	___lwdiv@divisor+1,7
  2684  0384  2B91               	goto	l1390
  2685  0385  3001               	movlw	1
  2686  0386                     u715:	
  2687  0386  1003               	clrc
  2688  0387  0DF0               	rlf	___lwdiv@divisor,f
  2689  0388  0DF1               	rlf	___lwdiv@divisor+1,f
  2690  0389  3EFF               	addlw	-1
  2691  038A  1D03               	skipz
  2692  038B  2B86               	goto	u715
  2693  038C  3001               	movlw	1
  2694  038D  00F4               	movwf	??___lwdiv
  2695  038E  0874               	movf	??___lwdiv,w
  2696  038F  07F7               	addwf	___lwdiv@counter,f
  2697  0390  2B83               	goto	l1388
  2698  0391                     l1390:	
  2699  0391  3001               	movlw	1
  2700  0392                     u735:	
  2701  0392  1003               	clrc
  2702  0393  0DF5               	rlf	___lwdiv@quotient,f
  2703  0394  0DF6               	rlf	___lwdiv@quotient+1,f
  2704  0395  3EFF               	addlw	-1
  2705  0396  1D03               	skipz
  2706  0397  2B92               	goto	u735
  2707  0398  0871               	movf	___lwdiv@divisor+1,w
  2708  0399  0273               	subwf	___lwdiv@dividend+1,w
  2709  039A  1D03               	skipz
  2710  039B  2B9E               	goto	u745
  2711  039C  0870               	movf	___lwdiv@divisor,w
  2712  039D  0272               	subwf	___lwdiv@dividend,w
  2713  039E                     u745:	
  2714  039E  1C03               	skipc
  2715  039F  2BA7               	goto	l1396
  2716  03A0  0870               	movf	___lwdiv@divisor,w
  2717  03A1  02F2               	subwf	___lwdiv@dividend,f
  2718  03A2  0871               	movf	___lwdiv@divisor+1,w
  2719  03A3  1C03               	skipc
  2720  03A4  03F3               	decf	___lwdiv@dividend+1,f
  2721  03A5  02F3               	subwf	___lwdiv@dividend+1,f
  2722  03A6  1475               	bsf	___lwdiv@quotient,0
  2723  03A7                     l1396:	
  2724  03A7  3001               	movlw	1
  2725  03A8                     u755:	
  2726  03A8  1003               	clrc
  2727  03A9  0CF1               	rrf	___lwdiv@divisor+1,f
  2728  03AA  0CF0               	rrf	___lwdiv@divisor,f
  2729  03AB  3EFF               	addlw	-1
  2730  03AC  1D03               	skipz
  2731  03AD  2BA8               	goto	u755
  2732  03AE  3001               	movlw	1
  2733  03AF  02F7               	subwf	___lwdiv@counter,f
  2734  03B0  1D03               	btfss	3,2
  2735  03B1  2B91               	goto	l1390
  2736  03B2                     l1400:	
  2737  03B2  0876               	movf	___lwdiv@quotient+1,w
  2738  03B3  00F1               	movwf	?___lwdiv+1
  2739  03B4  0875               	movf	___lwdiv@quotient,w
  2740  03B5  00F0               	movwf	?___lwdiv
  2741  03B6  0008               	return
  2742  03B7                     __end_of___lwdiv:	
  2743                           
  2744                           	psect	text14
  2745  01B8                     __ptext14:	
  2746 ;; *************** function ___bmul *****************
  2747 ;; Defined at:
  2748 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  multiplier      1    wreg     unsigned char 
  2751 ;;  multiplicand    1    0[COMMON] unsigned char 
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;  multiplier      1    3[COMMON] unsigned char 
  2754 ;;  product         1    2[COMMON] unsigned char 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      unsigned char 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2764 ;;      Params:         1       0       0       0       0
  2765 ;;      Locals:         2       0       0       0       0
  2766 ;;      Temps:          1       0       0       0       0
  2767 ;;      Totals:         4       0       0       0       0
  2768 ;;Total ram usage:        4 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; This function calls:
  2771 ;;		Nothing
  2772 ;; This function is called by:
  2773 ;;		_get_temp
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           
  2778                           ;psect for function ___bmul
  2779  01B8                     ___bmul:	
  2780                           
  2781                           ;incstack = 0
  2782                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2783                           ;___bmul@multiplier stored from wreg
  2784  01B8  00F3               	movwf	___bmul@multiplier
  2785  01B9  01F2               	clrf	___bmul@product
  2786  01BA                     l1602:	
  2787  01BA  1C73               	btfss	___bmul@multiplier,0
  2788  01BB  29C0               	goto	l1606
  2789  01BC  0870               	movf	___bmul@multiplicand,w
  2790  01BD  00F1               	movwf	??___bmul
  2791  01BE  0871               	movf	??___bmul,w
  2792  01BF  07F2               	addwf	___bmul@product,f
  2793  01C0                     l1606:	
  2794  01C0  1003               	clrc
  2795  01C1  0DF0               	rlf	___bmul@multiplicand,f
  2796  01C2  1003               	clrc
  2797  01C3  0CF3               	rrf	___bmul@multiplier,f
  2798  01C4  0873               	movf	___bmul@multiplier,w
  2799  01C5  1D03               	btfss	3,2
  2800  01C6  29BA               	goto	l1602
  2801  01C7  0872               	movf	___bmul@product,w
  2802  01C8  0008               	return
  2803  01C9                     __end_of___bmul:	
  2804                           
  2805                           	psect	text15
  2806  0195                     __ptext15:	
  2807 ;; *************** function _I2C_Master_RepeatedStart *****************
  2808 ;; Defined at:
  2809 ;;		line 47 in file "./I2C.h"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;		None
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;		None
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg, status,2, status,0, pclath, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2823 ;;      Params:         0       0       0       0       0
  2824 ;;      Locals:         0       0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0
  2826 ;;      Totals:         0       0       0       0       0
  2827 ;;Total ram usage:        0 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; Hardware stack levels required when called:    1
  2830 ;; This function calls:
  2831 ;;		_I2C_Master_Wait
  2832 ;; This function is called by:
  2833 ;;		_get_time
  2834 ;;		_get_temp
  2835 ;;		_get_day
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           
  2840                           ;psect for function _I2C_Master_RepeatedStart
  2841  0195                     _I2C_Master_RepeatedStart:	
  2842                           
  2843                           ;./I2C.h: 49:     I2C_Master_Wait();
  2844                           
  2845                           ;incstack = 0
  2846                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2847  0195  120A  118A  21A4   	fcall	_I2C_Master_Wait
  2848                           
  2849                           ;./I2C.h: 50:     SSPCON2bits.RSEN = 1;
  2850  0198  1683               	bsf	3,5	;RP0=1, select bank1
  2851  0199  1303               	bcf	3,6	;RP1=0, select bank1
  2852  019A  1491               	bsf	17,1	;volatile
  2853  019B  0008               	return
  2854  019C                     __end_of_I2C_Master_RepeatedStart:	
  2855                           
  2856                           	psect	text16
  2857  01FD                     __ptext16:	
  2858 ;; *************** function _get_hall *****************
  2859 ;; Defined at:
  2860 ;;		line 173 in file "mainMaster.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;		None
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  key             1    7[COMMON] unsigned char 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      unsigned char 
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0, pclath, cstack
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2874 ;;      Params:         0       0       0       0       0
  2875 ;;      Locals:         1       0       0       0       0
  2876 ;;      Temps:          1       0       0       0       0
  2877 ;;      Totals:         2       0       0       0       0
  2878 ;;Total ram usage:        2 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    2
  2881 ;; This function calls:
  2882 ;;		_I2C_Master_Read
  2883 ;;		_I2C_Master_Start
  2884 ;;		_I2C_Master_Stop
  2885 ;;		_I2C_Master_Write
  2886 ;; This function is called by:
  2887 ;;		_main
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           
  2892                           ;psect for function _get_hall
  2893  01FD                     _get_hall:	
  2894                           
  2895                           ;mainMaster.c: 174:     char key;;mainMaster.c: 176:     I2C_Master_Start();
  2896                           
  2897                           ;incstack = 0
  2898                           ; Regs used in _get_hall: [wreg+status,2+status,0+pclath+cstack]
  2899  01FD  120A  118A  2187  120A  118A  	fcall	_I2C_Master_Start
  2900                           
  2901                           ;mainMaster.c: 177:     I2C_Master_Write(0x11);
  2902  0202  3011               	movlw	17
  2903  0203  00F0               	movwf	I2C_Master_Write@d
  2904  0204  3000               	movlw	0
  2905  0205  00F1               	movwf	I2C_Master_Write@d+1
  2906  0206  120A  118A  219C  120A  118A  	fcall	_I2C_Master_Write
  2907                           
  2908                           ;mainMaster.c: 178:     key = I2C_Master_Read(0);
  2909  020B  3000               	movlw	0
  2910  020C  00F0               	movwf	I2C_Master_Read@a
  2911  020D  00F1               	movwf	I2C_Master_Read@a+1
  2912  020E  120A  118A  22AE  120A  118A  	fcall	_I2C_Master_Read
  2913  0213  0870               	movf	?_I2C_Master_Read,w
  2914  0214  00F6               	movwf	??_get_hall
  2915  0215  0876               	movf	??_get_hall,w
  2916  0216  00F7               	movwf	get_hall@key
  2917                           
  2918                           ;mainMaster.c: 179:     I2C_Master_Stop();
  2919  0217  120A  118A  218E   	fcall	_I2C_Master_Stop
  2920                           
  2921                           ;mainMaster.c: 181:     return (key);
  2922  021A  0877               	movf	get_hall@key,w
  2923  021B  0008               	return
  2924  021C                     __end_of_get_hall:	
  2925                           
  2926                           	psect	text17
  2927  019C                     __ptext17:	
  2928 ;; *************** function _I2C_Master_Write *****************
  2929 ;; Defined at:
  2930 ;;		line 65 in file "./I2C.h"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  d               2    0[COMMON] unsigned int 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;		None
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  1    wreg      void 
  2937 ;; Registers used:
  2938 ;;		wreg, status,2, status,0, pclath, cstack
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2944 ;;      Params:         2       0       0       0       0
  2945 ;;      Locals:         0       0       0       0       0
  2946 ;;      Temps:          0       0       0       0       0
  2947 ;;      Totals:         2       0       0       0       0
  2948 ;;Total ram usage:        2 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; Hardware stack levels required when called:    1
  2951 ;; This function calls:
  2952 ;;		_I2C_Master_Wait
  2953 ;; This function is called by:
  2954 ;;		_get_time
  2955 ;;		_get_temp
  2956 ;;		_get_hall
  2957 ;;		_get_tripwire
  2958 ;;		_write_RTC
  2959 ;;		_get_day
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           
  2964                           ;psect for function _I2C_Master_Write
  2965  019C                     _I2C_Master_Write:	
  2966                           
  2967                           ;./I2C.h: 65: void I2C_Master_Write(unsigned d);./I2C.h: 66: {;./I2C.h: 67:     I2C_Mast
      +                          er_Wait();
  2968                           
  2969                           ;incstack = 0
  2970                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2971  019C  120A  118A  21A4   	fcall	_I2C_Master_Wait
  2972                           
  2973                           ;./I2C.h: 68:     SSPBUF = d;
  2974  019F  0870               	movf	I2C_Master_Write@d,w
  2975  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  2976  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  2977  01A2  0093               	movwf	19	;volatile
  2978  01A3  0008               	return
  2979  01A4                     __end_of_I2C_Master_Write:	
  2980                           
  2981                           	psect	text18
  2982  018E                     __ptext18:	
  2983 ;; *************** function _I2C_Master_Stop *****************
  2984 ;; Defined at:
  2985 ;;		line 55 in file "./I2C.h"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;		None
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg, status,2, status,0, pclath, cstack
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2999 ;;      Params:         0       0       0       0       0
  3000 ;;      Locals:         0       0       0       0       0
  3001 ;;      Temps:          0       0       0       0       0
  3002 ;;      Totals:         0       0       0       0       0
  3003 ;;Total ram usage:        0 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; Hardware stack levels required when called:    1
  3006 ;; This function calls:
  3007 ;;		_I2C_Master_Wait
  3008 ;; This function is called by:
  3009 ;;		_get_time
  3010 ;;		_get_temp
  3011 ;;		_get_hall
  3012 ;;		_get_tripwire
  3013 ;;		_write_RTC
  3014 ;;		_get_day
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function _I2C_Master_Stop
  3020  018E                     _I2C_Master_Stop:	
  3021                           
  3022                           ;./I2C.h: 57:     I2C_Master_Wait();
  3023                           
  3024                           ;incstack = 0
  3025                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3026  018E  120A  118A  21A4   	fcall	_I2C_Master_Wait
  3027                           
  3028                           ;./I2C.h: 58:     SSPCON2bits.PEN = 1;
  3029  0191  1683               	bsf	3,5	;RP0=1, select bank1
  3030  0192  1303               	bcf	3,6	;RP1=0, select bank1
  3031  0193  1511               	bsf	17,2	;volatile
  3032  0194  0008               	return
  3033  0195                     __end_of_I2C_Master_Stop:	
  3034                           
  3035                           	psect	text19
  3036  0187                     __ptext19:	
  3037 ;; *************** function _I2C_Master_Start *****************
  3038 ;; Defined at:
  3039 ;;		line 39 in file "./I2C.h"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;		None
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;		None
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  1    wreg      void 
  3046 ;; Registers used:
  3047 ;;		wreg, status,2, status,0, pclath, cstack
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3053 ;;      Params:         0       0       0       0       0
  3054 ;;      Locals:         0       0       0       0       0
  3055 ;;      Temps:          0       0       0       0       0
  3056 ;;      Totals:         0       0       0       0       0
  3057 ;;Total ram usage:        0 bytes
  3058 ;; Hardware stack levels used:    1
  3059 ;; Hardware stack levels required when called:    1
  3060 ;; This function calls:
  3061 ;;		_I2C_Master_Wait
  3062 ;; This function is called by:
  3063 ;;		_get_time
  3064 ;;		_get_temp
  3065 ;;		_get_hall
  3066 ;;		_get_tripwire
  3067 ;;		_write_RTC
  3068 ;;		_get_day
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           
  3073                           ;psect for function _I2C_Master_Start
  3074  0187                     _I2C_Master_Start:	
  3075                           
  3076                           ;./I2C.h: 41:     I2C_Master_Wait();
  3077                           
  3078                           ;incstack = 0
  3079                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3080  0187  120A  118A  21A4   	fcall	_I2C_Master_Wait
  3081                           
  3082                           ;./I2C.h: 42:     SSPCON2bits.SEN = 1;
  3083  018A  1683               	bsf	3,5	;RP0=1, select bank1
  3084  018B  1303               	bcf	3,6	;RP1=0, select bank1
  3085  018C  1411               	bsf	17,0	;volatile
  3086  018D  0008               	return
  3087  018E                     __end_of_I2C_Master_Start:	
  3088                           
  3089                           	psect	text20
  3090  02AE                     __ptext20:	
  3091 ;; *************** function _I2C_Master_Read *****************
  3092 ;; Defined at:
  3093 ;;		line 74 in file "./I2C.h"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  a               2    0[COMMON] unsigned short 
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;  temp            2    4[COMMON] unsigned short 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  2    0[COMMON] unsigned short 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2, status,0, pclath, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3107 ;;      Params:         2       0       0       0       0
  3108 ;;      Locals:         2       0       0       0       0
  3109 ;;      Temps:          2       0       0       0       0
  3110 ;;      Totals:         6       0       0       0       0
  3111 ;;Total ram usage:        6 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; Hardware stack levels required when called:    1
  3114 ;; This function calls:
  3115 ;;		_I2C_Master_Wait
  3116 ;; This function is called by:
  3117 ;;		_get_time
  3118 ;;		_get_temp
  3119 ;;		_get_hall
  3120 ;;		_get_tripwire
  3121 ;;		_get_day
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           
  3126                           ;psect for function _I2C_Master_Read
  3127  02AE                     _I2C_Master_Read:	
  3128                           
  3129                           ;./I2C.h: 74: unsigned short I2C_Master_Read(unsigned short a);./I2C.h: 75: {;./I2C.h: 7
      +                          6:     unsigned short temp;;./I2C.h: 77:     I2C_Master_Wait();
  3130                           
  3131                           ;incstack = 0
  3132                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3133  02AE  120A  118A  21A4  120A  118A  	fcall	_I2C_Master_Wait
  3134                           
  3135                           ;./I2C.h: 78:     RCEN = 1;
  3136  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  3137  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  3138  02B5  1591               	bsf	17,3	;volatile
  3139                           
  3140                           ;./I2C.h: 79:     I2C_Master_Wait();
  3141  02B6  120A  118A  21A4  120A  118A  	fcall	_I2C_Master_Wait
  3142                           
  3143                           ;./I2C.h: 80:     temp = SSPBUF;
  3144  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  3145  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  3146  02BD  0813               	movf	19,w	;volatile
  3147  02BE  00F2               	movwf	??_I2C_Master_Read
  3148  02BF  01F3               	clrf	??_I2C_Master_Read+1
  3149  02C0  0872               	movf	??_I2C_Master_Read,w
  3150  02C1  00F4               	movwf	I2C_Master_Read@temp
  3151  02C2  0873               	movf	??_I2C_Master_Read+1,w
  3152  02C3  00F5               	movwf	I2C_Master_Read@temp+1
  3153                           
  3154                           ;./I2C.h: 81:     I2C_Master_Wait();
  3155  02C4  120A  118A  21A4  120A  118A  	fcall	_I2C_Master_Wait
  3156                           
  3157                           ;./I2C.h: 83:     if(a == 1){
  3158  02C9  0370               	decf	I2C_Master_Read@a,w
  3159  02CA  0471               	iorwf	I2C_Master_Read@a+1,w
  3160  02CB  1D03               	btfss	3,2
  3161  02CC  2AD1               	goto	l86
  3162                           
  3163                           ;./I2C.h: 84:         SSPCON2bits.ACKDT = 0;
  3164  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  3165  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  3166  02CF  1291               	bcf	17,5	;volatile
  3167                           
  3168                           ;./I2C.h: 85:     }else{
  3169  02D0  2AD4               	goto	l87
  3170  02D1                     l86:	
  3171                           
  3172                           ;./I2C.h: 86:         SSPCON2bits.ACKDT = 1;
  3173  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  3174  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  3175  02D3  1691               	bsf	17,5	;volatile
  3176  02D4                     l87:	
  3177                           ;./I2C.h: 87:     }
  3178                           
  3179                           
  3180                           ;./I2C.h: 88:     SSPCON2bits.ACKEN = 1;
  3181  02D4  1611               	bsf	17,4	;volatile
  3182                           
  3183                           ;./I2C.h: 89:     return temp;
  3184  02D5  0875               	movf	I2C_Master_Read@temp+1,w
  3185  02D6  00F1               	movwf	?_I2C_Master_Read+1
  3186  02D7  0874               	movf	I2C_Master_Read@temp,w
  3187  02D8  00F0               	movwf	?_I2C_Master_Read
  3188  02D9  0008               	return
  3189  02DA                     __end_of_I2C_Master_Read:	
  3190                           
  3191                           	psect	text21
  3192  01A4                     __ptext21:	
  3193 ;; *************** function _I2C_Master_Wait *****************
  3194 ;; Defined at:
  3195 ;;		line 32 in file "./I2C.h"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;		None
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;		None
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  1    wreg      void 
  3202 ;; Registers used:
  3203 ;;		wreg, status,2
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3209 ;;      Params:         0       0       0       0       0
  3210 ;;      Locals:         0       0       0       0       0
  3211 ;;      Temps:          0       0       0       0       0
  3212 ;;      Totals:         0       0       0       0       0
  3213 ;;Total ram usage:        0 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; This function calls:
  3216 ;;		Nothing
  3217 ;; This function is called by:
  3218 ;;		_I2C_Master_Start
  3219 ;;		_I2C_Master_RepeatedStart
  3220 ;;		_I2C_Master_Stop
  3221 ;;		_I2C_Master_Write
  3222 ;;		_I2C_Master_Read
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           
  3227                           ;psect for function _I2C_Master_Wait
  3228  01A4                     _I2C_Master_Wait:	
  3229  01A4                     l68:	
  3230                           ;./I2C.h: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3231                           
  3232                           ;incstack = 0
  3233                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3234                           
  3235  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  3236  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  3237  01A6  1914               	btfsc	20,2	;volatile
  3238  01A7  29A4               	goto	l68
  3239  01A8  0811               	movf	17,w	;volatile
  3240  01A9  391F               	andlw	31
  3241  01AA  1903               	btfsc	3,2
  3242  01AB  0008               	return
  3243  01AC  29A4               	goto	l68
  3244  01AD                     __end_of_I2C_Master_Wait:	
  3245                           
  3246                           	psect	text22
  3247  03B7                     __ptext22:	
  3248 ;; *************** function _Lcd_Write_String *****************
  3249 ;; Defined at:
  3250 ;;		line 100 in file "./LCD4bits.h"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  a               2    5[COMMON] PTR unsigned char 
  3253 ;;		 -> NULL(0), get_temp@temperature(6), get_time@string_time(6), STR_5(9), 
  3254 ;;		 -> STR_4(9), STR_2(12), STR_1(12), 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  i               2   10[COMMON] int 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3266 ;;      Params:         2       0       0       0       0
  3267 ;;      Locals:         2       0       0       0       0
  3268 ;;      Temps:          3       0       0       0       0
  3269 ;;      Totals:         7       0       0       0       0
  3270 ;;Total ram usage:        7 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; Hardware stack levels required when called:    2
  3273 ;; This function calls:
  3274 ;;		_Lcd_Write_Char
  3275 ;; This function is called by:
  3276 ;;		_main
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           
  3281                           ;psect for function _Lcd_Write_String
  3282  03B7                     _Lcd_Write_String:	
  3283                           
  3284                           ;./LCD4bits.h: 100: void Lcd_Write_String(char *a);./LCD4bits.h: 101: {;./LCD4bits.h: 10
      +                          2:  int i;;./LCD4bits.h: 103:  for(i=0;a[i]!='\0';i++)
  3285                           
  3286                           ;incstack = 0
  3287                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3288  03B7  01FA               	clrf	Lcd_Write_String@i
  3289  03B8  01FB               	clrf	Lcd_Write_String@i+1
  3290  03B9                     l1642:	
  3291  03B9  087A               	movf	Lcd_Write_String@i,w
  3292  03BA  0775               	addwf	Lcd_Write_String@a,w
  3293  03BB  00F8               	movwf	??_Lcd_Write_String+1
  3294  03BC  0876               	movf	Lcd_Write_String@a+1,w
  3295  03BD  00F7               	movwf	??_Lcd_Write_String
  3296  03BE  1803               	skipnc
  3297  03BF  0AF7               	incf	??_Lcd_Write_String,f
  3298  03C0  1BFA               	btfsc	Lcd_Write_String@i,7
  3299  03C1  03F7               	decf	??_Lcd_Write_String,f
  3300  03C2  0877               	movf	??_Lcd_Write_String,w
  3301  03C3  00F9               	movwf	??_Lcd_Write_String+2
  3302  03C4  0879               	movf	??_Lcd_Write_String+2,w
  3303  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  3304  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  3305  03C7  00FF               	movwf	127
  3306  03C8  0878               	movf	??_Lcd_Write_String+1,w
  3307  03C9  0084               	movwf	4
  3308  03CA  120A  118A  2003  120A  118A  	fcall	stringtab
  3309  03CF  3A00               	xorlw	0
  3310  03D0  1903               	btfsc	3,2
  3311  03D1  0008               	return
  3312                           
  3313                           ;./LCD4bits.h: 104:     Lcd_Write_Char(a[i]);
  3314  03D2  087A               	movf	Lcd_Write_String@i,w
  3315  03D3  0775               	addwf	Lcd_Write_String@a,w
  3316  03D4  00F8               	movwf	??_Lcd_Write_String+1
  3317  03D5  0876               	movf	Lcd_Write_String@a+1,w
  3318  03D6  00F7               	movwf	??_Lcd_Write_String
  3319  03D7  1803               	skipnc
  3320  03D8  0AF7               	incf	??_Lcd_Write_String,f
  3321  03D9  1BFA               	btfsc	Lcd_Write_String@i,7
  3322  03DA  03F7               	decf	??_Lcd_Write_String,f
  3323  03DB  0877               	movf	??_Lcd_Write_String,w
  3324  03DC  00F9               	movwf	??_Lcd_Write_String+2
  3325  03DD  0879               	movf	??_Lcd_Write_String+2,w
  3326  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  3327  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  3328  03E0  00FF               	movwf	127
  3329  03E1  0878               	movf	??_Lcd_Write_String+1,w
  3330  03E2  0084               	movwf	4
  3331  03E3  120A  118A  2003  120A  118A  	fcall	stringtab
  3332  03E8  120A  118A  2342  120A  118A  	fcall	_Lcd_Write_Char
  3333  03ED  3001               	movlw	1
  3334  03EE  07FA               	addwf	Lcd_Write_String@i,f
  3335  03EF  1803               	skipnc
  3336  03F0  0AFB               	incf	Lcd_Write_String@i+1,f
  3337  03F1  3000               	movlw	0
  3338  03F2  07FB               	addwf	Lcd_Write_String@i+1,f
  3339  03F3  2BB9               	goto	l1642
  3340  03F4                     __end_of_Lcd_Write_String:	
  3341                           
  3342                           	psect	text23
  3343  0342                     __ptext23:	
  3344 ;; *************** function _Lcd_Write_Char *****************
  3345 ;; Defined at:
  3346 ;;		line 84 in file "./LCD4bits.h"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  a               1    wreg     unsigned char 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  a               1    4[COMMON] unsigned char 
  3351 ;;  y               1    3[COMMON] unsigned char 
  3352 ;;  temp            1    2[COMMON] unsigned char 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      void 
  3355 ;; Registers used:
  3356 ;;		wreg, status,2, status,0, pclath, cstack
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3362 ;;      Params:         0       0       0       0       0
  3363 ;;      Locals:         3       0       0       0       0
  3364 ;;      Temps:          1       0       0       0       0
  3365 ;;      Totals:         4       0       0       0       0
  3366 ;;Total ram usage:        4 bytes
  3367 ;; Hardware stack levels used:    1
  3368 ;; Hardware stack levels required when called:    1
  3369 ;; This function calls:
  3370 ;;		_Lcd_Port
  3371 ;; This function is called by:
  3372 ;;		_Lcd_Write_String
  3373 ;;		_main
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           
  3378                           ;psect for function _Lcd_Write_Char
  3379  0342                     _Lcd_Write_Char:	
  3380                           
  3381                           ;incstack = 0
  3382                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3383                           ;Lcd_Write_Char@a stored from wreg
  3384  0342  00F4               	movwf	Lcd_Write_Char@a
  3385                           
  3386                           ;./LCD4bits.h: 84: void Lcd_Write_Char(char a);./LCD4bits.h: 85: {;./LCD4bits.h: 86:    
      +                          char temp,y;;./LCD4bits.h: 87:    temp = a&0x0F;
  3387  0343  0874               	movf	Lcd_Write_Char@a,w
  3388  0344  390F               	andlw	15
  3389  0345  00F1               	movwf	??_Lcd_Write_Char
  3390  0346  0871               	movf	??_Lcd_Write_Char,w
  3391  0347  00F2               	movwf	Lcd_Write_Char@temp
  3392                           
  3393                           ;./LCD4bits.h: 88:    y = a&0xF0;
  3394  0348  0874               	movf	Lcd_Write_Char@a,w
  3395  0349  39F0               	andlw	240
  3396  034A  00F1               	movwf	??_Lcd_Write_Char
  3397  034B  0871               	movf	??_Lcd_Write_Char,w
  3398  034C  00F3               	movwf	Lcd_Write_Char@y
  3399                           
  3400                           ;./LCD4bits.h: 89:    PORTBbits.RB4 = 1;
  3401  034D  1283               	bcf	3,5	;RP0=0, select bank0
  3402  034E  1303               	bcf	3,6	;RP1=0, select bank0
  3403  034F  1606               	bsf	6,4	;volatile
  3404                           
  3405                           ;./LCD4bits.h: 90:    Lcd_Port(y>>4);
  3406  0350  0873               	movf	Lcd_Write_Char@y,w
  3407  0351  00F1               	movwf	??_Lcd_Write_Char
  3408  0352  3004               	movlw	4
  3409  0353                     u855:	
  3410  0353  1003               	clrc
  3411  0354  0CF1               	rrf	??_Lcd_Write_Char,f
  3412  0355  3EFF               	addlw	-1
  3413  0356  1D03               	skipz
  3414  0357  2B53               	goto	u855
  3415  0358  0871               	movf	??_Lcd_Write_Char,w
  3416  0359  120A  118A  21C9  120A  118A  	fcall	_Lcd_Port
  3417                           
  3418                           ;./LCD4bits.h: 91:    PORTBbits.RB5 = 1;
  3419  035E  1283               	bcf	3,5	;RP0=0, select bank0
  3420  035F  1303               	bcf	3,6	;RP1=0, select bank0
  3421  0360  1686               	bsf	6,5	;volatile
  3422                           
  3423                           ;./LCD4bits.h: 92:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3424  0361  301A               	movlw	26
  3425  0362  00F1               	movwf	??_Lcd_Write_Char
  3426  0363                     u1167:	
  3427  0363  0BF1               	decfsz	??_Lcd_Write_Char,f
  3428  0364  2B63               	goto	u1167
  3429  0365  0000               	nop
  3430                           
  3431                           ;./LCD4bits.h: 93:    PORTBbits.RB5 = 0;
  3432  0366  1283               	bcf	3,5	;RP0=0, select bank0
  3433  0367  1303               	bcf	3,6	;RP1=0, select bank0
  3434  0368  1286               	bcf	6,5	;volatile
  3435                           
  3436                           ;./LCD4bits.h: 94:    Lcd_Port(temp);
  3437  0369  0872               	movf	Lcd_Write_Char@temp,w
  3438  036A  120A  118A  21C9  120A  118A  	fcall	_Lcd_Port
  3439                           
  3440                           ;./LCD4bits.h: 95:    PORTBbits.RB5 = 1;
  3441  036F  1283               	bcf	3,5	;RP0=0, select bank0
  3442  0370  1303               	bcf	3,6	;RP1=0, select bank0
  3443  0371  1686               	bsf	6,5	;volatile
  3444                           
  3445                           ;./LCD4bits.h: 96:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3446  0372  301A               	movlw	26
  3447  0373  00F1               	movwf	??_Lcd_Write_Char
  3448  0374                     u1177:	
  3449  0374  0BF1               	decfsz	??_Lcd_Write_Char,f
  3450  0375  2B74               	goto	u1177
  3451  0376  0000               	nop
  3452                           
  3453                           ;./LCD4bits.h: 97:    PORTBbits.RB5 = 0;
  3454  0377  1283               	bcf	3,5	;RP0=0, select bank0
  3455  0378  1303               	bcf	3,6	;RP1=0, select bank0
  3456  0379  1286               	bcf	6,5	;volatile
  3457  037A  0008               	return
  3458  037B                     __end_of_Lcd_Write_Char:	
  3459                           
  3460                           	psect	text24
  3461  03F4                     __ptext24:	
  3462 ;; *************** function _Lcd_Set_Cursor *****************
  3463 ;; Defined at:
  3464 ;;		line 44 in file "./LCD4bits.h"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  a               1    wreg     unsigned char 
  3467 ;;  b               1    4[COMMON] unsigned char 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  a               1    7[COMMON] unsigned char 
  3470 ;;  temp            1   10[COMMON] unsigned char 
  3471 ;;  y               1    9[COMMON] unsigned char 
  3472 ;;  z               1    8[COMMON] unsigned char 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, status,0, pclath, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3482 ;;      Params:         1       0       0       0       0
  3483 ;;      Locals:         4       0       0       0       0
  3484 ;;      Temps:          2       0       0       0       0
  3485 ;;      Totals:         7       0       0       0       0
  3486 ;;Total ram usage:        7 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; Hardware stack levels required when called:    2
  3489 ;; This function calls:
  3490 ;;		_Lcd_Cmd
  3491 ;; This function is called by:
  3492 ;;		_main
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           
  3497                           ;psect for function _Lcd_Set_Cursor
  3498  03F4                     _Lcd_Set_Cursor:	
  3499                           
  3500                           ;incstack = 0
  3501                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3502                           ;Lcd_Set_Cursor@a stored from wreg
  3503  03F4  00F7               	movwf	Lcd_Set_Cursor@a
  3504                           
  3505                           ;./LCD4bits.h: 44: void Lcd_Set_Cursor(char a, char b);./LCD4bits.h: 45: {;./LCD4bits.h:
      +                           46:  char temp,z,y;;./LCD4bits.h: 47:  if(a == 1)
  3506  03F5  0377               	decf	Lcd_Set_Cursor@a,w
  3507  03F6  1D03               	btfss	3,2
  3508  03F7  2C19               	goto	l1626
  3509                           
  3510                           ;./LCD4bits.h: 48:  {;./LCD4bits.h: 49:    temp = 0x80 + b - 1;
  3511  03F8  0874               	movf	Lcd_Set_Cursor@b,w
  3512  03F9  3E7F               	addlw	127
  3513  03FA  00F5               	movwf	??_Lcd_Set_Cursor
  3514  03FB  0875               	movf	??_Lcd_Set_Cursor,w
  3515  03FC  00FA               	movwf	Lcd_Set_Cursor@temp
  3516                           
  3517                           ;./LCD4bits.h: 50:   z = temp>>4;
  3518  03FD  087A               	movf	Lcd_Set_Cursor@temp,w
  3519  03FE  00F5               	movwf	??_Lcd_Set_Cursor
  3520  03FF  3004               	movlw	4
  3521  0400                     u985:	
  3522  0400  1003               	clrc
  3523  0401  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3524  0402  3EFF               	addlw	-1
  3525  0403  1D03               	skipz
  3526  0404  2C00               	goto	u985
  3527  0405  0875               	movf	??_Lcd_Set_Cursor,w
  3528  0406  00F6               	movwf	??_Lcd_Set_Cursor+1
  3529  0407  0876               	movf	??_Lcd_Set_Cursor+1,w
  3530  0408  00F8               	movwf	Lcd_Set_Cursor@z
  3531                           
  3532                           ;./LCD4bits.h: 51:   y = temp & 0x0F;
  3533  0409  087A               	movf	Lcd_Set_Cursor@temp,w
  3534  040A  390F               	andlw	15
  3535  040B  00F5               	movwf	??_Lcd_Set_Cursor
  3536  040C  0875               	movf	??_Lcd_Set_Cursor,w
  3537  040D  00F9               	movwf	Lcd_Set_Cursor@y
  3538                           
  3539                           ;./LCD4bits.h: 52:   Lcd_Cmd(z);
  3540  040E  0878               	movf	Lcd_Set_Cursor@z,w
  3541  040F  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  3542                           
  3543                           ;./LCD4bits.h: 53:   Lcd_Cmd(y);
  3544  0414  0879               	movf	Lcd_Set_Cursor@y,w
  3545  0415  120A  118A  21E3   	fcall	_Lcd_Cmd
  3546                           
  3547                           ;./LCD4bits.h: 54:  }
  3548  0418  0008               	return
  3549  0419                     l1626:	
  3550  0419  3002               	movlw	2
  3551  041A  0677               	xorwf	Lcd_Set_Cursor@a,w
  3552  041B  1D03               	btfss	3,2
  3553  041C  0008               	return
  3554                           
  3555                           ;./LCD4bits.h: 56:  {;./LCD4bits.h: 57:   temp = 0xC0 + b - 1;
  3556  041D  0874               	movf	Lcd_Set_Cursor@b,w
  3557  041E  3EBF               	addlw	191
  3558  041F  00F5               	movwf	??_Lcd_Set_Cursor
  3559  0420  0875               	movf	??_Lcd_Set_Cursor,w
  3560  0421  00FA               	movwf	Lcd_Set_Cursor@temp
  3561                           
  3562                           ;./LCD4bits.h: 58:   z = temp>>4;
  3563  0422  087A               	movf	Lcd_Set_Cursor@temp,w
  3564  0423  00F5               	movwf	??_Lcd_Set_Cursor
  3565  0424  3004               	movlw	4
  3566  0425                     u1005:	
  3567  0425  1003               	clrc
  3568  0426  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3569  0427  3EFF               	addlw	-1
  3570  0428  1D03               	skipz
  3571  0429  2C25               	goto	u1005
  3572  042A  0875               	movf	??_Lcd_Set_Cursor,w
  3573  042B  00F6               	movwf	??_Lcd_Set_Cursor+1
  3574  042C  0876               	movf	??_Lcd_Set_Cursor+1,w
  3575  042D  00F8               	movwf	Lcd_Set_Cursor@z
  3576                           
  3577                           ;./LCD4bits.h: 59:   y = temp & 0x0F;
  3578  042E  087A               	movf	Lcd_Set_Cursor@temp,w
  3579  042F  390F               	andlw	15
  3580  0430  00F5               	movwf	??_Lcd_Set_Cursor
  3581  0431  0875               	movf	??_Lcd_Set_Cursor,w
  3582  0432  00F9               	movwf	Lcd_Set_Cursor@y
  3583                           
  3584                           ;./LCD4bits.h: 60:   Lcd_Cmd(z);
  3585  0433  0878               	movf	Lcd_Set_Cursor@z,w
  3586  0434  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  3587                           
  3588                           ;./LCD4bits.h: 61:   Lcd_Cmd(y);
  3589  0439  0879               	movf	Lcd_Set_Cursor@y,w
  3590  043A  120A  118A  21E3   	fcall	_Lcd_Cmd
  3591  043D  0008               	return
  3592  043E                     __end_of_Lcd_Set_Cursor:	
  3593                           
  3594                           	psect	text25
  3595  01AD                     __ptext25:	
  3596 ;; *************** function _Lcd_Clear *****************
  3597 ;; Defined at:
  3598 ;;		line 38 in file "./LCD4bits.h"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;		None
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;		None
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      void 
  3605 ;; Registers used:
  3606 ;;		wreg, status,2, status,0, pclath, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3612 ;;      Params:         0       0       0       0       0
  3613 ;;      Locals:         0       0       0       0       0
  3614 ;;      Temps:          0       0       0       0       0
  3615 ;;      Totals:         0       0       0       0       0
  3616 ;;Total ram usage:        0 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; Hardware stack levels required when called:    2
  3619 ;; This function calls:
  3620 ;;		_Lcd_Cmd
  3621 ;; This function is called by:
  3622 ;;		_main
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           
  3627                           ;psect for function _Lcd_Clear
  3628  01AD                     _Lcd_Clear:	
  3629                           
  3630                           ;./LCD4bits.h: 40:  Lcd_Cmd(0);
  3631                           
  3632                           ;incstack = 0
  3633                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3634  01AD  3000               	movlw	0
  3635  01AE  120A  118A  21E3  120A  118A  	fcall	_Lcd_Cmd
  3636                           
  3637                           ;./LCD4bits.h: 41:  Lcd_Cmd(1);
  3638  01B3  3001               	movlw	1
  3639  01B4  120A  118A  21E3   	fcall	_Lcd_Cmd
  3640  01B7  0008               	return
  3641  01B8                     __end_of_Lcd_Clear:	
  3642                           
  3643                           	psect	text26
  3644  01E3                     __ptext26:	
  3645 ;; *************** function _Lcd_Cmd *****************
  3646 ;; Defined at:
  3647 ;;		line 29 in file "./LCD4bits.h"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  a               1    wreg     unsigned char 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;  a               1    3[COMMON] unsigned char 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1    wreg      void 
  3654 ;; Registers used:
  3655 ;;		wreg, status,2, status,0, pclath, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3661 ;;      Params:         0       0       0       0       0
  3662 ;;      Locals:         1       0       0       0       0
  3663 ;;      Temps:          2       0       0       0       0
  3664 ;;      Totals:         3       0       0       0       0
  3665 ;;Total ram usage:        3 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:    1
  3668 ;; This function calls:
  3669 ;;		_Lcd_Port
  3670 ;; This function is called by:
  3671 ;;		_Lcd_Clear
  3672 ;;		_Lcd_Set_Cursor
  3673 ;;		_Lcd_Init
  3674 ;;		_Lcd_Shift_Right
  3675 ;;		_Lcd_Shift_Left
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679                           
  3680                           ;psect for function _Lcd_Cmd
  3681  01E3                     _Lcd_Cmd:	
  3682                           
  3683                           ;incstack = 0
  3684                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3685                           ;Lcd_Cmd@a stored from wreg
  3686  01E3  00F3               	movwf	Lcd_Cmd@a
  3687                           
  3688                           ;./LCD4bits.h: 29: void Lcd_Cmd(char a);./LCD4bits.h: 30: {;./LCD4bits.h: 31:  PORTBbits
      +                          .RB4 = 0;
  3689  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  3690  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  3691  01E6  1206               	bcf	6,4	;volatile
  3692                           
  3693                           ;./LCD4bits.h: 32:  Lcd_Port(a);
  3694  01E7  0873               	movf	Lcd_Cmd@a,w
  3695  01E8  120A  118A  21C9  120A  118A  	fcall	_Lcd_Port
  3696                           
  3697                           ;./LCD4bits.h: 33:  PORTBbits.RB5 = 1;
  3698  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  3699  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  3700  01EF  1686               	bsf	6,5	;volatile
  3701                           
  3702                           ;./LCD4bits.h: 34:         _delay((unsigned long)((4)*(8000000/4000.0)));
  3703  01F0  300B               	movlw	11
  3704  01F1  00F2               	movwf	??_Lcd_Cmd+1
  3705  01F2  3062               	movlw	98
  3706  01F3  00F1               	movwf	??_Lcd_Cmd
  3707  01F4                     u1187:	
  3708  01F4  0BF1               	decfsz	??_Lcd_Cmd,f
  3709  01F5  29F4               	goto	u1187
  3710  01F6  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3711  01F7  29F4               	goto	u1187
  3712  01F8  0000               	nop
  3713                           
  3714                           ;./LCD4bits.h: 35:         PORTBbits.RB5 = 0;
  3715  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  3716  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  3717  01FB  1286               	bcf	6,5	;volatile
  3718  01FC  0008               	return
  3719  01FD                     __end_of_Lcd_Cmd:	
  3720                           
  3721                           	psect	text27
  3722  01C9                     __ptext27:	
  3723 ;; *************** function _Lcd_Port *****************
  3724 ;; Defined at:
  3725 ;;		line 7 in file "./LCD4bits.h"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  a               1    wreg     unsigned char 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;  a               1    0[COMMON] unsigned char 
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  1    wreg      void 
  3732 ;; Registers used:
  3733 ;;		wreg
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3739 ;;      Params:         0       0       0       0       0
  3740 ;;      Locals:         1       0       0       0       0
  3741 ;;      Temps:          0       0       0       0       0
  3742 ;;      Totals:         1       0       0       0       0
  3743 ;;Total ram usage:        1 bytes
  3744 ;; Hardware stack levels used:    1
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_Lcd_Cmd
  3749 ;;		_Lcd_Init
  3750 ;;		_Lcd_Write_Char
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           
  3755                           ;psect for function _Lcd_Port
  3756  01C9                     _Lcd_Port:	
  3757                           
  3758                           ;incstack = 0
  3759                           ; Regs used in _Lcd_Port: [wreg]
  3760                           ;Lcd_Port@a stored from wreg
  3761  01C9  00F0               	movwf	Lcd_Port@a
  3762                           
  3763                           ;./LCD4bits.h: 7: void Lcd_Port(char a);./LCD4bits.h: 8: {;./LCD4bits.h: 9:  if(a & 1)
  3764  01CA  1C70               	btfss	Lcd_Port@a,0
  3765  01CB  29D0               	goto	l94
  3766                           
  3767                           ;./LCD4bits.h: 10:   PORTBbits.RB0 = 1;
  3768  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3769  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3770  01CE  1406               	bsf	6,0	;volatile
  3771  01CF  29D3               	goto	l95
  3772  01D0                     l94:	
  3773                           ;./LCD4bits.h: 11:  else
  3774                           
  3775                           
  3776                           ;./LCD4bits.h: 12:   PORTBbits.RB0 = 0;
  3777  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  3778  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  3779  01D2  1006               	bcf	6,0	;volatile
  3780  01D3                     l95:	
  3781                           
  3782                           ;./LCD4bits.h: 14:  if(a & 2)
  3783  01D3  1CF0               	btfss	Lcd_Port@a,1
  3784  01D4  29D7               	goto	l96
  3785                           
  3786                           ;./LCD4bits.h: 15:   PORTBbits.RB1 = 1;
  3787  01D5  1486               	bsf	6,1	;volatile
  3788  01D6  29D8               	goto	l97
  3789  01D7                     l96:	
  3790                           ;./LCD4bits.h: 16:  else
  3791                           
  3792                           
  3793                           ;./LCD4bits.h: 17:   PORTBbits.RB1 = 0;
  3794  01D7  1086               	bcf	6,1	;volatile
  3795  01D8                     l97:	
  3796                           
  3797                           ;./LCD4bits.h: 19:  if(a & 4)
  3798  01D8  1D70               	btfss	Lcd_Port@a,2
  3799  01D9  29DC               	goto	l98
  3800                           
  3801                           ;./LCD4bits.h: 20:   PORTBbits.RB2 = 1;
  3802  01DA  1506               	bsf	6,2	;volatile
  3803  01DB  29DD               	goto	l99
  3804  01DC                     l98:	
  3805                           ;./LCD4bits.h: 21:  else
  3806                           
  3807                           
  3808                           ;./LCD4bits.h: 22:   PORTBbits.RB2 = 0;
  3809  01DC  1106               	bcf	6,2	;volatile
  3810  01DD                     l99:	
  3811                           
  3812                           ;./LCD4bits.h: 24:  if(a & 8)
  3813  01DD  1DF0               	btfss	Lcd_Port@a,3
  3814  01DE  29E1               	goto	l100
  3815                           
  3816                           ;./LCD4bits.h: 25:   PORTBbits.RB3 = 1;
  3817  01DF  1586               	bsf	6,3	;volatile
  3818  01E0  0008               	return
  3819  01E1                     l100:	
  3820                           ;./LCD4bits.h: 26:  else
  3821                           
  3822                           
  3823                           ;./LCD4bits.h: 27:   PORTBbits.RB3 = 0;
  3824  01E1  1186               	bcf	6,3	;volatile
  3825  01E2  0008               	return
  3826  01E3                     __end_of_Lcd_Port:	
  3827  007E                     btemp	set	126	;btemp
  3828  007E                     wtemp0	set	126


Data Sizes:
    Strings     57
    Constant    10
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_3(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_temp@temperature(BANK0[6]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 3
		 -> get_temp@decimal(BANK0[3]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_8(CODE[4]), STR_7(CODE[5]), STR_6(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@decimal(BANK0[3]), get_temp@temperature(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    sp__get_temp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    temp	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_temp@temperature(BANK0[6]), 

    sp__get_time	PTR unsigned char  size(1) Largest target is 6
		 -> get_time@string_time(BANK0[6]), 

    time	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_time@string_time(BANK0[6]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 12
		 -> NULL(NULL[0]), get_temp@temperature(BANK0[6]), get_time@string_time(BANK0[6]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_2(CODE[12]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _get_tripwire->_I2C_Master_Read
    _get_time->_I2C_Master_Read
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _get_hall->_I2C_Master_Read
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_get_temp
    _setup->_I2C_Master_Init
    _get_temp->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   12493
                                             27 BANK0      1     1      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _get_hall
                           _get_temp
                           _get_time
                       _get_tripwire
                              _setup
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               7     5      2     200
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     632
                    _I2C_Master_Init
                           _Lcd_Init
                      _initOscilador
 ---------------------------------------------------------------------------------
 (2) _initOscilador                                        3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _get_tripwire                                         2     2      0    1914
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_time                                            10    10      0    2126
                                              6 COMMON     2     2      0
                                              0 BANK0      8     8      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            14    14      0    4011
                                             13 BANK0     14    14      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___bmul
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     3      1     207
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1429
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _get_hall                                             2     2      0    1914
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1314
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     577
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     724
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     684
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _get_hall
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _get_temp
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___bmul
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _strcat
   _get_time
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _get_tripwire
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _initOscilador
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      20       5       40.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2E      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb 27 23:46:02 2019

                                pc 0002                     ___bmul@product 0072  
                      __CFG_CP$OFF 0000                                 l68 01A4  
                      get_hall@key 0077                                 l94 01D0  
                               l86 02D1                                 l95 01D3  
                               l87 02D4                                 l96 01D7  
                               l97 01D8                                 l98 01DC  
                               l99 01DD                                 fsr 0004  
                              l100 01E1                                l137 0491  
                              l162 06EE                                _GIE 005F  
                     __CFG_CPD$OFF 0000                                u715 0386  
                              u805 02F4                                u645 0502  
                              u735 0392                                u815 02FD  
                              u745 039E                                u665 0510  
                              u755 03A8                                u675 0525  
                              u835 031E                                u685 0537  
                              u855 0353                                u785 02E3  
                              u885 0793                                u985 0400  
                    ?_get_tripwire 0070                                fsr0 0004  
                              indf 0000                       __CFG_LVP$OFF 0000  
                             l1400 03B2                               l1412 02E0  
                             l1414 02EE                               l1422 0307  
                             l1510 0457                               l1502 0440  
                             l1360 04FE                               l1512 045D  
                             l1504 0445                               l1602 01BA  
                             l1418 02FC                               l1370 0536  
                             l1362 050E                               l1514 0463  
                             l1506 044B                               l1522 046F  
                             l1516 046A                               l1508 0451  
                             l1606 01C0                               l1390 0391  
                             l1542 0763                               l1374 0543  
                             l1518 046A                               l1552 077A  
                             l1536 0745                               l1626 0419  
                             l1642 03B9                               l1570 07AC  
                             l1714 0293                               l1396 03A7  
                             l1388 0383                               l1564 079D  
                             l1820 0758                               l1580 0725  
                             l1716 0286                               l1558 077C  
                             l1582 07F1                               l1718 02A8  
                             l1760 06CA                               l1736 0669  
                             l1578 07B0                               l1594 0240  
                             l1818 0477                               l1770 0714  
                             l1596 024B                               l1692 063F  
                             l1764 06F1                               l1598 0253  
                             STR_1 001D                               STR_2 0029  
                      get_time@min 0027                               STR_3 0047  
                             STR_4 0035                               STR_5 003E  
                             STR_6 0053                               STR_7 004D  
                             STR_8 0052                               u1005 0425  
                             u1115 06E8                               u1045 0598  
                             u1055 05AF                               u1065 0617  
                             u1137 049D                               u1147 04AC  
                             u1157 04BB                               u1167 0363  
                             u1177 0374                               u1187 01F4  
                             _PEIE 005E                               _RCEN 048B  
                     __CFG_WRT$OFF 0000                  ?_Lcd_Write_String 0075  
 __end_of_I2C_Master_RepeatedStart 019C                               _door 003D  
                             _main 065F                               _temp 003E  
                             _time 003F                               _trip 003C  
                             btemp 007E                               start 0000  
               ??_Lcd_Write_String 0077                      __CFG_IESO$OFF 0000  
                  __end_of_Lcd_Cmd 01FD                  ___bmul@multiplier 0073  
                    __CFG_MCLRE$ON 0000                get_temp@temperature 0030  
                 ?_I2C_Master_Init 0020                   ?_I2C_Master_Read 0070  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                            ?_main 0070                      __CFG_WDTE$OFF 0000  
                     get_time@hour 0026                              _ANSEL 0188  
                  __end_of___lldiv 054C                     ??_get_tripwire 0076  
                  __end_of___lwdiv 03B7                    __end_of___lwmod 030C  
                            _PORTA 0005                              _PORTB 0006  
          __size_of_Lcd_Set_Cursor 004A                              _TRISA 0085  
                            _TRISB 0086                              _SSPIE 0463  
                            _SSPIF 0063                     __CFG_FCMEN$OFF 0000  
                  __end_of_dpowers 001D                              _setup 025F  
                   __CFG_BOREN$OFF 0000                              pclath 000A  
                            status 0003                              wtemp0 007E  
                  __end_of_sprintf 07F6                   __end_of_Lcd_Init 04EE  
                 __end_of_Lcd_Port 01E3                    __initialization 07F6  
                     __end_of_main 071E             __size_of_initOscilador 0055  
                           ??_main 003B                 __size_of_Lcd_Clear 000B  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0070  
               ??_I2C_Master_Start 0070                 ??_I2C_Master_Write 0072  
                           ?_setup 0070                             _ANSELH 0189  
                        ??_Lcd_Cmd 0071            __size_of_Lcd_Write_Char 0039  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013                     __CFG_PWRTE$OFF 0000  
         _I2C_Master_RepeatedStart 0195                   __end_of_get_hall 021C  
                 __end_of_get_temp 065F                   __end_of_get_time 05C2  
                           ___bmul 01B8                          ??___lldiv 0078  
                        ??___lwdiv 0074                          ??___lwmod 007C  
                           _strcat 023B                             _strcmp 0284  
                        ??_sprintf 0023                    Lcd_Set_Cursor@a 0077  
                  Lcd_Set_Cursor@b 0074                    Lcd_Set_Cursor@y 0079  
                  Lcd_Set_Cursor@z 0078            __end_of__initialization 07FC  
                    _initOscilador 043E                  __end_of_Lcd_Clear 01B8  
             __end_of_get_tripwire 023B                ___bmul@multiplicand 0070  
                   __pcstackCOMMON 0070                      __end_of_setup 0284  
                   _Lcd_Set_Cursor 03F4                          ?_Lcd_Init 0070  
                        ?_Lcd_Port 0070                            ??_setup 007E  
                       __pbssBANK0 003C                     ?_initOscilador 0070  
                       __pmaintext 065F                            ?___bmul 0070  
        __size_of_Lcd_Write_String 003D             __end_of_Lcd_Set_Cursor 043E  
                          ?_strcat 0070                            ?_strcmp 0070  
                       ??_Lcd_Init 0074                         ??_Lcd_Port 0070  
                          _SSPCON2 0091                          ?_get_hall 0070  
                          _SSPSTAT 0094                          ?_get_temp 0070  
                        ?_get_time 0070                         __stringtab 0003  
              initOscilador@option 0072                     _Lcd_Write_Char 0342  
                          _Lcd_Cmd 01E3                    __size_of___bmul 0011  
                          ___lldiv 04EE                            ___lwdiv 037B  
                          ___lwmod 02DA                    ?_Lcd_Set_Cursor 0074  
                          __ptext1 0284                            __ptext2 025F  
                          __ptext3 043E                            __ptext4 0493  
                          __ptext5 030C                            __ptext6 04EE  
                          __ptext7 021C                            __ptext8 054C  
                          __ptext9 05C2                    __size_of_strcat 0024  
                  __size_of_strcmp 002A                            _dpowers 0013  
         __size_of_I2C_Master_Init 0036           __size_of_I2C_Master_Read 002C  
         __size_of_I2C_Master_Wait 0009           __size_of_I2C_Master_Stop 0007  
                  ??_initOscilador 0070                         ??_get_hall 0076  
                          _sprintf 071E             __end_of_Lcd_Write_Char 037B  
                       ??_get_temp 002D                         ??_get_time 0076  
             end_of_initialization 07FC              __size_of_get_tripwire 001F  
       ??_I2C_Master_RepeatedStart 0070          __size_of_I2C_Master_Start 0007  
        __size_of_I2C_Master_Write 0008                    ___lldiv@divisor 0070  
                  ___lldiv@counter 007D                   I2C_Master_Init@c 0020  
                 I2C_Master_Read@a 0070                          Lcd_Port@a 0070  
                          strcmp@r 0075                          _PORTAbits 0005  
                        _PORTBbits 0006                       _get_tripwire 021C  
                  ?_Lcd_Write_Char 0070                  Lcd_Write_String@a 0075  
                Lcd_Write_String@i 007A                get_time@string_time 0020  
                        _Lcd_Clear 01AD                     __end_of___bmul 01C9  
                 _Lcd_Write_String 03B7                     __end_of_strcat 025F  
                   __end_of_strcmp 02AE                start_initialization 07F6  
                __size_of_Lcd_Init 005B                  __size_of_Lcd_Port 001A  
                ??_I2C_Master_Init 0024                  ??_I2C_Master_Read 0072  
                ??_I2C_Master_Wait 0070                  ??_I2C_Master_Stop 0070  
         __CFG_FOSC$INTRC_NOCLKOUT 0000                         ?_Lcd_Clear 0070  
                         ??___bmul 0071                    Lcd_Write_Char@a 0074  
                  Lcd_Write_Char@y 0073                           ??_strcat 0071  
                         ??_strcmp 0072                          ___latbits 0002  
                    __pcstackBANK0 0020                  __size_of_get_hall 001F  
                         ?_Lcd_Cmd 0070                  __size_of_get_temp 009D  
                __size_of_get_time 0076                        sprintf@flag 0027  
                      sprintf@prec 0028                   _I2C_Master_Start 0187  
                 _I2C_Master_Write 019C                   ___lwdiv@dividend 0072  
                 ??_Lcd_Set_Cursor 0075                    get_temp@decimal 0036  
                         ?___lldiv 0070                           ?___lwdiv 0070  
                         ?___lwmod 0078                          __pstrings 0003  
                  get_temp@tempLSB 003A                    get_temp@tempMSB 0039  
                 ___lwdiv@quotient 0075                           ?_sprintf 0020  
                   __size_of_setup 0025                           Lcd_Cmd@a 0073  
                      ??_Lcd_Clear 0074                        __stringbase 0012  
                 ??_Lcd_Write_Char 0071                           _Lcd_Init 0493  
                         _Lcd_Port 01C9                I2C_Master_Read@temp 0074  
            __end_of_initOscilador 0493           __end_of_Lcd_Write_String 03F4  
                 __size_of_Lcd_Cmd 001A  __size_of_I2C_Master_RepeatedStart 0007  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 005E  
                 __size_of___lwdiv 003C                   __size_of___lwmod 0032  
               __end_of__stringtab 0013                         sprintf@val 0029  
                  _I2C_Master_Init 030C                    _I2C_Master_Read 02AE  
                  _I2C_Master_Wait 01A4                         strcat@from 0070  
                  _I2C_Master_Stop 018E                    ___lwdiv@divisor 0070  
                  ___lwdiv@counter 0077                           __ptext10 023B  
                         __ptext11 071E                           __ptext20 02AE  
                         __ptext12 02DA                           __ptext21 01A4  
                         __ptext13 037B                           __ptext22 03B7  
                         __ptext14 01B8                           __ptext23 0342  
                         __ptext15 0195                           __ptext24 03F4  
                         __ptext16 01FD                           __ptext25 01AD  
                         __ptext17 019C                           __ptext26 01E3  
                         __ptext18 018E                           __ptext27 01C9  
                         __ptext19 0187                  __CFG_BOR4V$BOR40V 0000  
                         _get_hall 01FD                           _get_temp 05C2  
                         _get_time 054C                   __size_of_sprintf 00D8  
                    __size_of_main 00BF           __end_of_I2C_Master_Start 018E  
         __end_of_I2C_Master_Write 01A4                 Lcd_Write_Char@temp 0072  
                        sprintf@ap 0026                          sprintf@sp 002B  
                 ___lwmod@dividend 007A                   ___lldiv@dividend 0074  
                        stringcode 000D                         _OSCCONbits 008F  
          __end_of_I2C_Master_Init 0342            __end_of_I2C_Master_Read 02DA  
          __end_of_I2C_Master_Wait 01AD            __end_of_I2C_Master_Stop 0195  
               Lcd_Set_Cursor@temp 007A                           sprintf@c 002C  
                         sprintf@f 0020                           strcat@cp 0073  
                         strcat@to 0072                           strcmp@s1 0076  
                         strcmp@s2 0070                   ___lldiv@quotient 0079  
                I2C_Master_Write@d 0070                    ___lwmod@divisor 0078  
                  ___lwmod@counter 007D                           stringdir 000D  
                 get_tripwire@trip 0077                           stringtab 0003  
                      _SSPCON2bits 0091  
