

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Feb 25 11:54:41 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.05
    39                           ; Generated 20/12/2018 GMT
    40                           ; 
    41                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228                           
   229                           	psect	strings
   230  0003                     __pstrings:	
   231  0003                     stringtab:	
   232  0003                     __stringtab:	
   233                           
   234                           ;	String table - string pointers are 1 byte each
   235  0003  1BFF               	btfsc	btemp+1,7
   236  0004  280D               	ljmp	stringcode
   237  0005  1383               	bcf	3,7
   238  0006  187F               	btfsc	btemp+1,0
   239  0007  1783               	bsf	3,7
   240  0008  0800               	movf	0,w
   241  0009  0A84               	incf	4,f
   242  000A  1903               	skipnz
   243  000B  0AFF               	incf	btemp+1,f
   244  000C  0008               	return
   245  000D                     stringcode:	
   246  000D                     stringdir:	
   247  000D  3000               	movlw	high stringdir
   248  000E  008A               	movwf	10
   249  000F  0804               	movf	4,w
   250  0010  0A84               	incf	4,f
   251  0011  0782               	addwf	2,f
   252  0012                     __stringbase:	
   253  0012  3400               	retlw	0
   254  0013                     __end_of__stringtab:	
   255  0013                     _dpowers:	
   256  0013  3401               	retlw	1
   257  0014  3400               	retlw	0
   258  0015  340A               	retlw	10
   259  0016  3400               	retlw	0
   260  0017  3464               	retlw	100
   261  0018  3400               	retlw	0
   262  0019  34E8               	retlw	232
   263  001A  3403               	retlw	3
   264  001B  3410               	retlw	16
   265  001C  3427               	retlw	39
   266  001D                     __end_of_dpowers:	
   267  0005                     _PORTA	set	5
   268  0006                     _PORTB	set	6
   269  0005                     _PORTAbits	set	5
   270  0006                     _PORTBbits	set	6
   271  0013                     _SSPBUF	set	19
   272  0014                     _SSPCON	set	20
   273  0063                     _SSPIF	set	99
   274  005E                     _PEIE	set	94
   275  005F                     _GIE	set	95
   276  0085                     _TRISA	set	133
   277  0086                     _TRISB	set	134
   278  008F                     _OSCCONbits	set	143
   279  0091                     _SSPCON2bits	set	145
   280  0094                     _SSPSTAT	set	148
   281  0093                     _SSPADD	set	147
   282  0091                     _SSPCON2	set	145
   283  0463                     _SSPIE	set	1123
   284  048B                     _RCEN	set	1163
   285  043C                     _TRISC4	set	1084
   286  043B                     _TRISC3	set	1083
   287  0188                     _ANSEL	set	392
   288  0189                     _ANSELH	set	393
   289  001D                     STR_1:	
   290  001D  344B               	retlw	75	;'K'
   291  001E  3465               	retlw	101	;'e'
   292  001F  3479               	retlw	121	;'y'
   293  0020  3420               	retlw	32	;' '
   294  0021  344F               	retlw	79	;'O'
   295  0022  344E               	retlw	78	;'N'
   296  0023  3420               	retlw	32	;' '
   297  0024  3420               	retlw	32	;' '
   298  0025  3400               	retlw	0
   299  0026                     STR_2:	
   300  0026  344B               	retlw	75	;'K'
   301  0027  3465               	retlw	101	;'e'
   302  0028  3479               	retlw	121	;'y'
   303  0029  3420               	retlw	32	;' '
   304  002A  344F               	retlw	79	;'O'
   305  002B  3446               	retlw	70	;'F'
   306  002C  3446               	retlw	70	;'F'
   307  002D  3420               	retlw	32	;' '
   308  002E  3400               	retlw	0
   309  002F                     STR_3:	
   310  002F  3432               	retlw	50	;'2'
   311  0030  3433               	retlw	51	;'3'
   312  0031  342E               	retlw	46	;'.'
   313  0032  3435               	retlw	53	;'5'
   314  0033  3430               	retlw	48	;'0'
   315  0034  3400               	retlw	0
   316  0035                     STR_5:	
   317  0035  342E               	retlw	46	;'.'
   318  0036  3425               	retlw	37	;'%'
   319  0037  3464               	retlw	100	;'d'
   320  0038  3430               	retlw	48	;'0'
   321  0039  3400               	retlw	0
   322  003A                     STR_6:	
   323  003A  342E               	retlw	46	;'.'
   324  003B  3425               	retlw	37	;'%'
   325  003C  3464               	retlw	100	;'d'
   326  003D  3400               	retlw	0
   327  003B                     
   328                           ; #config settings
   329  0000                     
   330                           	psect	cinit
   331  07F7                     start_initialization:	
   332  07F7                     __initialization:	
   333                           
   334                           ; Clear objects allocated to BANK0
   335  07F7  1283               	bcf	3,5	;RP0=0, select bank0
   336  07F8  1303               	bcf	3,6	;RP1=0, select bank0
   337  07F9  01BC               	clrf	__pbssBANK0& (0+127)
   338  07FA  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   339  07FB  01BE               	clrf	(__pbssBANK0+2)& (0+127)
   340  07FC                     end_of_initialization:	
   341                           ;End of C runtime variable initialization code
   342                           
   343  07FC                     __end_of__initialization:	
   344  07FC  0183               	clrf	3
   345  07FD  120A  118A  2DFB   	ljmp	_main	;jump to C main() function
   346                           
   347                           	psect	bssBANK0
   348  003C                     __pbssBANK0:	
   349  003C                     _key:	
   350  003C                     	ds	1
   351  003D                     _temp:	
   352  003D                     	ds	1
   353  003E                     _time:	
   354  003E                     	ds	1
   355                           
   356                           	psect	cstackCOMMON
   357  0070                     __pcstackCOMMON:	
   358  0070                     ?_setup:	
   359  0070                     ?_get_time:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_get_temp:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_get_hall:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_strcat:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_I2C_Master_Wait:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ??_I2C_Master_Wait:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_I2C_Master_Start:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ??_I2C_Master_Start:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_I2C_Master_RepeatedStart:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ??_I2C_Master_RepeatedStart:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_I2C_Master_Stop:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ??_I2C_Master_Stop:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_I2C_Master_Write:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_Lcd_Port:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ??_Lcd_Port:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_Lcd_Cmd:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_Lcd_Clear:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_Lcd_Init:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_Lcd_Write_Char:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_initOscilador:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ??_initOscilador:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_main:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?___bmul:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_strcmp:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_I2C_Master_Read:	
   432                           ; 2 bytes @ 0x0
   433                           
   434  0070                     ?___lwdiv:	
   435                           ; 2 bytes @ 0x0
   436                           
   437  0070                     ?___lldiv:	
   438                           ; 2 bytes @ 0x0
   439                           
   440  0070                     Lcd_Port@a:	
   441                           ; 4 bytes @ 0x0
   442                           
   443  0070                     ___bmul@multiplicand:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     strcat@from:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     strcmp@s2:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     I2C_Master_Write@d:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     I2C_Master_Read@a:	
   456                           ; 2 bytes @ 0x0
   457                           
   458  0070                     ___lwdiv@divisor:	
   459                           ; 2 bytes @ 0x0
   460                           
   461  0070                     ___lldiv@divisor:	
   462                           ; 2 bytes @ 0x0
   463                           
   464                           
   465                           ; 4 bytes @ 0x0
   466  0070                     	ds	1
   467  0071                     ??_strcat:	
   468  0071                     ??_Lcd_Cmd:	
   469                           ; 1 bytes @ 0x1
   470                           
   471  0071                     ??_Lcd_Write_Char:	
   472                           ; 1 bytes @ 0x1
   473                           
   474  0071                     ??___bmul:	
   475                           ; 1 bytes @ 0x1
   476                           
   477                           
   478                           ; 1 bytes @ 0x1
   479  0071                     	ds	1
   480  0072                     ??_strcmp:	
   481  0072                     ??_I2C_Master_Write:	
   482                           ; 1 bytes @ 0x2
   483                           
   484  0072                     ??_I2C_Master_Read:	
   485                           ; 1 bytes @ 0x2
   486                           
   487  0072                     Lcd_Write_Char@temp:	
   488                           ; 1 bytes @ 0x2
   489                           
   490  0072                     initOscilador@option:	
   491                           ; 1 bytes @ 0x2
   492                           
   493  0072                     ___bmul@product:	
   494                           ; 1 bytes @ 0x2
   495                           
   496  0072                     strcat@to:	
   497                           ; 1 bytes @ 0x2
   498                           
   499  0072                     ___lwdiv@dividend:	
   500                           ; 1 bytes @ 0x2
   501                           
   502                           
   503                           ; 2 bytes @ 0x2
   504  0072                     	ds	1
   505  0073                     Lcd_Cmd@a:	
   506  0073                     Lcd_Write_Char@y:	
   507                           ; 1 bytes @ 0x3
   508                           
   509  0073                     ___bmul@multiplier:	
   510                           ; 1 bytes @ 0x3
   511                           
   512  0073                     strcat@cp:	
   513                           ; 1 bytes @ 0x3
   514                           
   515                           
   516                           ; 1 bytes @ 0x3
   517  0073                     	ds	1
   518  0074                     ??_Lcd_Clear:	
   519  0074                     ?_Lcd_Set_Cursor:	
   520                           ; 1 bytes @ 0x4
   521                           
   522  0074                     ??_Lcd_Init:	
   523                           ; 1 bytes @ 0x4
   524                           
   525  0074                     ??___lwdiv:	
   526                           ; 1 bytes @ 0x4
   527                           
   528  0074                     Lcd_Set_Cursor@b:	
   529                           ; 1 bytes @ 0x4
   530                           
   531  0074                     Lcd_Write_Char@a:	
   532                           ; 1 bytes @ 0x4
   533                           
   534  0074                     I2C_Master_Read@temp:	
   535                           ; 1 bytes @ 0x4
   536                           
   537  0074                     ___lldiv@dividend:	
   538                           ; 2 bytes @ 0x4
   539                           
   540                           
   541                           ; 4 bytes @ 0x4
   542  0074                     	ds	1
   543  0075                     ??_Lcd_Set_Cursor:	
   544  0075                     ?_Lcd_Write_String:	
   545                           ; 1 bytes @ 0x5
   546                           
   547  0075                     strcmp@r:	
   548                           ; 1 bytes @ 0x5
   549                           
   550  0075                     Lcd_Write_String@a:	
   551                           ; 1 bytes @ 0x5
   552                           
   553  0075                     ___lwdiv@quotient:	
   554                           ; 2 bytes @ 0x5
   555                           
   556                           
   557                           ; 2 bytes @ 0x5
   558  0075                     	ds	1
   559  0076                     ??_get_time:	
   560  0076                     ??_get_hall:	
   561                           ; 1 bytes @ 0x6
   562                           
   563  0076                     strcmp@s1:	
   564                           ; 1 bytes @ 0x6
   565                           
   566                           
   567                           ; 1 bytes @ 0x6
   568  0076                     	ds	1
   569  0077                     ??_Lcd_Write_String:	
   570  0077                     Lcd_Set_Cursor@a:	
   571                           ; 1 bytes @ 0x7
   572                           
   573  0077                     get_hall@key:	
   574                           ; 1 bytes @ 0x7
   575                           
   576  0077                     ___lwdiv@counter:	
   577                           ; 1 bytes @ 0x7
   578                           
   579                           
   580                           ; 1 bytes @ 0x7
   581  0077                     	ds	1
   582  0078                     ??___lldiv:	
   583  0078                     ?___lwmod:	
   584                           ; 1 bytes @ 0x8
   585                           
   586  0078                     Lcd_Set_Cursor@z:	
   587                           ; 2 bytes @ 0x8
   588                           
   589  0078                     ___lwmod@divisor:	
   590                           ; 1 bytes @ 0x8
   591                           
   592                           
   593                           ; 2 bytes @ 0x8
   594  0078                     	ds	1
   595  0079                     Lcd_Set_Cursor@y:	
   596  0079                     ___lldiv@quotient:	
   597                           ; 1 bytes @ 0x9
   598                           
   599                           
   600                           ; 4 bytes @ 0x9
   601  0079                     	ds	1
   602  007A                     Lcd_Set_Cursor@temp:	
   603  007A                     Lcd_Write_String@i:	
   604                           ; 1 bytes @ 0xA
   605                           
   606  007A                     ___lwmod@dividend:	
   607                           ; 2 bytes @ 0xA
   608                           
   609                           
   610                           ; 2 bytes @ 0xA
   611  007A                     	ds	2
   612  007C                     ??___lwmod:	
   613                           
   614                           ; 1 bytes @ 0xC
   615  007C                     	ds	1
   616  007D                     ___lldiv@counter:	
   617  007D                     ___lwmod@counter:	
   618                           ; 1 bytes @ 0xD
   619                           
   620                           
   621                           ; 1 bytes @ 0xD
   622  007D                     	ds	1
   623  007E                     ??_setup:	
   624                           
   625                           	psect	cstackBANK0
   626  0020                     __pcstackBANK0:	
   627                           ; 1 bytes @ 0xE
   628                           
   629  0020                     ?_I2C_Master_Init:	
   630  0020                     ?_sprintf:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0020                     sprintf@f:	
   634                           ; 2 bytes @ 0x0
   635                           
   636  0020                     I2C_Master_Init@c:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0020                     get_time@string_time:	
   640                           ; 4 bytes @ 0x0
   641                           
   642                           
   643                           ; 6 bytes @ 0x0
   644  0020                     	ds	3
   645  0023                     ??_sprintf:	
   646                           
   647                           ; 1 bytes @ 0x3
   648  0023                     	ds	1
   649  0024                     ??_I2C_Master_Init:	
   650                           
   651                           ; 1 bytes @ 0x4
   652  0024                     	ds	2
   653  0026                     get_time@hour:	
   654  0026                     sprintf@ap:	
   655                           ; 1 bytes @ 0x6
   656                           
   657                           
   658                           ; 1 bytes @ 0x6
   659  0026                     	ds	1
   660  0027                     get_time@min:	
   661  0027                     sprintf@flag:	
   662                           ; 1 bytes @ 0x7
   663                           
   664                           
   665                           ; 1 bytes @ 0x7
   666  0027                     	ds	1
   667  0028                     sprintf@prec:	
   668                           
   669                           ; 1 bytes @ 0x8
   670  0028                     	ds	1
   671  0029                     sprintf@val:	
   672                           
   673                           ; 2 bytes @ 0x9
   674  0029                     	ds	2
   675  002B                     sprintf@sp:	
   676                           
   677                           ; 1 bytes @ 0xB
   678  002B                     	ds	1
   679  002C                     sprintf@c:	
   680                           
   681                           ; 1 bytes @ 0xC
   682  002C                     	ds	1
   683  002D                     ??_get_temp:	
   684                           
   685                           ; 1 bytes @ 0xD
   686  002D                     	ds	3
   687  0030                     get_temp@temperature:	
   688                           
   689                           ; 6 bytes @ 0x10
   690  0030                     	ds	6
   691  0036                     get_temp@decimal:	
   692                           
   693                           ; 3 bytes @ 0x16
   694  0036                     	ds	3
   695  0039                     get_temp@tempMSB:	
   696                           
   697                           ; 1 bytes @ 0x19
   698  0039                     	ds	1
   699  003A                     get_temp@tempLSB:	
   700                           
   701                           ; 1 bytes @ 0x1A
   702  003A                     	ds	1
   703  003B                     ??_main:	
   704                           
   705                           ; 1 bytes @ 0x1B
   706  003B                     	ds	1
   707                           
   708                           	psect	maintext
   709  05FB                     __pmaintext:	
   710 ;;
   711 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   712 ;;
   713 ;; *************** function _main *****************
   714 ;; Defined at:
   715 ;;		line 48 in file "mainMaster.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : B00/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   729 ;;      Params:         0       0       0       0       0
   730 ;;      Locals:         0       0       0       0       0
   731 ;;      Temps:          0       1       0       0       0
   732 ;;      Totals:         0       1       0       0       0
   733 ;;Total ram usage:        1 bytes
   734 ;; Hardware stack levels required when called:    4
   735 ;; This function calls:
   736 ;;		_Lcd_Clear
   737 ;;		_Lcd_Set_Cursor
   738 ;;		_Lcd_Write_String
   739 ;;		_get_hall
   740 ;;		_get_temp
   741 ;;		_get_time
   742 ;;		_setup
   743 ;;		_strcmp
   744 ;; This function is called by:
   745 ;;		Startup code after reset
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           
   750                           ;psect for function _main
   751  05FB                     _main:	
   752                           
   753                           ;mainMaster.c: 49:     setup();
   754                           
   755                           ;incstack = 0
   756                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   757  05FB  120A  118A  2298  120A  118A  	fcall	_setup
   758                           
   759                           ;mainMaster.c: 50:     Lcd_Clear();
   760  0600  120A  118A  2205  120A  118A  	fcall	_Lcd_Clear
   761  0605                     l1703:	
   762                           
   763                           ;mainMaster.c: 53:         time = get_time();
   764  0605  120A  118A  2585  120A  118A  	fcall	_get_time
   765  060A  1283               	bcf	3,5	;RP0=0, select bank0
   766  060B  1303               	bcf	3,6	;RP1=0, select bank0
   767  060C  00BB               	movwf	??_main
   768  060D  083B               	movf	??_main,w
   769  060E  00BE               	movwf	_time
   770                           
   771                           ;mainMaster.c: 54:         Lcd_Set_Cursor(1,1);
   772  060F  01F4               	clrf	Lcd_Set_Cursor@b
   773  0610  0AF4               	incf	Lcd_Set_Cursor@b,f
   774  0611  3001               	movlw	1
   775  0612  120A  118A  242D  120A  118A  	fcall	_Lcd_Set_Cursor
   776                           
   777                           ;mainMaster.c: 55:         Lcd_Write_String(time);
   778  0617  1283               	bcf	3,5	;RP0=0, select bank0
   779  0618  1303               	bcf	3,6	;RP1=0, select bank0
   780  0619  083E               	movf	_time,w
   781  061A  00F5               	movwf	Lcd_Write_String@a
   782  061B  3000               	movlw	0
   783  061C  00F6               	movwf	Lcd_Write_String@a+1
   784  061D  120A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
   785                           
   786                           ;mainMaster.c: 56:         temp = get_temp();
   787  0622  120A  118A  2682  120A  118A  	fcall	_get_temp
   788  0627  1283               	bcf	3,5	;RP0=0, select bank0
   789  0628  1303               	bcf	3,6	;RP1=0, select bank0
   790  0629  00BB               	movwf	??_main
   791  062A  083B               	movf	??_main,w
   792  062B  00BD               	movwf	_temp
   793                           
   794                           ;mainMaster.c: 57:         Lcd_Set_Cursor(2,1);
   795  062C  01F4               	clrf	Lcd_Set_Cursor@b
   796  062D  0AF4               	incf	Lcd_Set_Cursor@b,f
   797  062E  3002               	movlw	2
   798  062F  120A  118A  242D  120A  118A  	fcall	_Lcd_Set_Cursor
   799                           
   800                           ;mainMaster.c: 58:         Lcd_Write_String(temp);
   801  0634  1283               	bcf	3,5	;RP0=0, select bank0
   802  0635  1303               	bcf	3,6	;RP1=0, select bank0
   803  0636  083D               	movf	_temp,w
   804  0637  00F5               	movwf	Lcd_Write_String@a
   805  0638  3000               	movlw	0
   806  0639  00F6               	movwf	Lcd_Write_String@a+1
   807  063A  120A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
   808                           
   809                           ;mainMaster.c: 59:         key = get_hall();
   810  063F  120A  118A  2255  120A  118A  	fcall	_get_hall
   811  0644  1283               	bcf	3,5	;RP0=0, select bank0
   812  0645  1303               	bcf	3,6	;RP1=0, select bank0
   813  0646  00BB               	movwf	??_main
   814  0647  083B               	movf	??_main,w
   815  0648  00BC               	movwf	_key
   816                           
   817                           ;mainMaster.c: 60:         Lcd_Set_Cursor(1,7);
   818  0649  3007               	movlw	7
   819  064A  00BB               	movwf	??_main
   820  064B  083B               	movf	??_main,w
   821  064C  00F4               	movwf	Lcd_Set_Cursor@b
   822  064D  3001               	movlw	1
   823  064E  120A  118A  242D  120A  118A  	fcall	_Lcd_Set_Cursor
   824                           
   825                           ;mainMaster.c: 61:         if (key == 1){
   826  0653  1283               	bcf	3,5	;RP0=0, select bank0
   827  0654  1303               	bcf	3,6	;RP1=0, select bank0
   828  0655  033C               	decf	_key,w
   829  0656  1D03               	btfss	3,2
   830  0657  2E5A               	goto	l1723
   831                           
   832                           ;mainMaster.c: 62:             Lcd_Write_String("Key ON  ");
   833  0658  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   834  0659  2E5B               	goto	L1
   835  065A                     l1723:	
   836                           ;mainMaster.c: 63:         } else {
   837                           
   838                           
   839                           ;mainMaster.c: 64:             Lcd_Write_String("Key OFF ");
   840  065A  3014               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   841  065B                     L1:	
   842  065B  00F5               	movwf	Lcd_Write_String@a
   843  065C  3080               	movlw	128
   844  065D  00F6               	movwf	Lcd_Write_String@a+1
   845  065E  120A  118A  23F0  120A  118A  	fcall	_Lcd_Write_String
   846                           
   847                           ;mainMaster.c: 67:         if (strcmp(temp,"23.50") > 0){
   848                           
   849                           ;mainMaster.c: 65:         }
   850  0663  301D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   851  0664  1283               	bcf	3,5	;RP0=0, select bank0
   852  0665  1303               	bcf	3,6	;RP1=0, select bank0
   853  0666  00BB               	movwf	??_main
   854  0667  083B               	movf	??_main,w
   855  0668  00F0               	movwf	strcmp@s2
   856  0669  083D               	movf	_temp,w
   857  066A  120A  118A  22BD  120A  118A  	fcall	_strcmp
   858  066F  0871               	movf	?_strcmp+1,w
   859  0670  3A80               	xorlw	128
   860  0671  00FF               	movwf	127
   861  0672  3080               	movlw	128
   862  0673  027F               	subwf	127,w
   863  0674  1D03               	skipz
   864  0675  2E78               	goto	u1105
   865  0676  3001               	movlw	1
   866  0677  0270               	subwf	?_strcmp,w
   867  0678                     u1105:	
   868  0678  1C03               	skipc
   869  0679  2E7E               	goto	l158
   870                           
   871                           ;mainMaster.c: 68:             PORTAbits.RA0 = 1;
   872  067A  1283               	bcf	3,5	;RP0=0, select bank0
   873  067B  1303               	bcf	3,6	;RP1=0, select bank0
   874  067C  1405               	bsf	5,0	;volatile
   875                           
   876                           ;mainMaster.c: 69:         } else {
   877  067D  2E05               	goto	l1703
   878  067E                     l158:	
   879                           
   880                           ;mainMaster.c: 70:             PORTAbits.RA0 = 0;
   881  067E  1283               	bcf	3,5	;RP0=0, select bank0
   882  067F  1303               	bcf	3,6	;RP1=0, select bank0
   883  0680  1005               	bcf	5,0	;volatile
   884  0681  2E05               	goto	l1703
   885  0682                     __end_of_main:	
   886                           
   887                           	psect	text1
   888  02BD                     __ptext1:	
   889 ;; *************** function _strcmp *****************
   890 ;; Defined at:
   891 ;;		line 33 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcmp.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  s1              1    wreg     PTR const unsigned char 
   894 ;;		 -> NULL(0), get_temp@temperature(6), 
   895 ;;  s2              1    0[COMMON] PTR const unsigned char 
   896 ;;		 -> STR_3(6), 
   897 ;; Auto vars:     Size  Location     Type
   898 ;;  s1              1    6[COMMON] PTR const unsigned char 
   899 ;;		 -> NULL(0), get_temp@temperature(6), 
   900 ;;  r               1    5[COMMON] char 
   901 ;; Return value:  Size  Location     Type
   902 ;;                  2    0[COMMON] int 
   903 ;; Registers used:
   904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   910 ;;      Params:         2       0       0       0       0
   911 ;;      Locals:         2       0       0       0       0
   912 ;;      Temps:          3       0       0       0       0
   913 ;;      Totals:         7       0       0       0       0
   914 ;;Total ram usage:        7 bytes
   915 ;; Hardware stack levels used:    2
   916 ;; This function calls:
   917 ;;		Nothing
   918 ;; This function is called by:
   919 ;;		_main
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           
   924                           ;psect for function _strcmp
   925  02BD                     _strcmp:	
   926                           
   927                           ;incstack = 0
   928                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+pclath]
   929                           ;strcmp@s1 stored from wreg
   930  02BD  00F6               	movwf	strcmp@s1
   931  02BE  2ACC               	goto	l1687
   932  02BF                     l1689:	
   933  02BF  0876               	movf	strcmp@s1,w
   934  02C0  0084               	movwf	4
   935  02C1  0800               	movf	0,w
   936  02C2  1903               	btfsc	3,2
   937  02C3  2AE1               	goto	l1691
   938  02C4  3001               	movlw	1
   939  02C5  00F2               	movwf	??_strcmp
   940  02C6  0872               	movf	??_strcmp,w
   941  02C7  07F6               	addwf	strcmp@s1,f
   942  02C8  3001               	movlw	1
   943  02C9  00F2               	movwf	??_strcmp
   944  02CA  0872               	movf	??_strcmp,w
   945  02CB  07F0               	addwf	strcmp@s2,f
   946  02CC                     l1687:	
   947  02CC  0870               	movf	strcmp@s2,w
   948  02CD  0084               	movwf	4
   949  02CE  120A  118A  200D  120A  118A  	fcall	stringdir
   950  02D3  00F2               	movwf	??_strcmp
   951  02D4  0876               	movf	strcmp@s1,w
   952  02D5  0084               	movwf	4
   953  02D6  1383               	bcf	3,7	;select IRP bank0
   954  02D7  0800               	movf	0,w
   955  02D8  00F3               	movwf	??_strcmp+1
   956  02D9  0872               	movf	??_strcmp,w
   957  02DA  0273               	subwf	??_strcmp+1,w
   958  02DB  00F4               	movwf	??_strcmp+2
   959  02DC  0874               	movf	??_strcmp+2,w
   960  02DD  00F5               	movwf	strcmp@r
   961  02DE  0875               	movf	strcmp@r,w
   962  02DF  1903               	btfsc	3,2
   963  02E0  2ABF               	goto	l1689
   964  02E1                     l1691:	
   965  02E1  0875               	movf	strcmp@r,w
   966  02E2  00F0               	movwf	?_strcmp
   967  02E3  01F1               	clrf	?_strcmp+1
   968  02E4  1BF0               	btfsc	?_strcmp,7
   969  02E5  03F1               	decf	?_strcmp+1,f
   970  02E6  0008               	return
   971  02E7                     __end_of_strcmp:	
   972                           
   973                           	psect	text2
   974  0298                     __ptext2:	
   975 ;; *************** function _setup *****************
   976 ;; Defined at:
   977 ;;		line 76 in file "mainMaster.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;		None
   980 ;; Auto vars:     Size  Location     Type
   981 ;;		None
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      void 
   984 ;; Registers used:
   985 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   991 ;;      Params:         0       0       0       0       0
   992 ;;      Locals:         0       0       0       0       0
   993 ;;      Temps:          0       0       0       0       0
   994 ;;      Totals:         0       0       0       0       0
   995 ;;Total ram usage:        0 bytes
   996 ;; Hardware stack levels used:    1
   997 ;; Hardware stack levels required when called:    3
   998 ;; This function calls:
   999 ;;		_I2C_Master_Init
  1000 ;;		_Lcd_Init
  1001 ;;		_initOscilador
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           
  1008                           ;psect for function _setup
  1009  0298                     _setup:	
  1010                           
  1011                           ;mainMaster.c: 77:     initOscilador(7);
  1012                           
  1013                           ;incstack = 0
  1014                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1015  0298  3007               	movlw	7
  1016  0299  120A  118A  2477  120A  118A  	fcall	_initOscilador
  1017                           
  1018                           ;mainMaster.c: 78:     ANSELH = 0;
  1019  029E  1683               	bsf	3,5	;RP0=1, select bank3
  1020  029F  1703               	bsf	3,6	;RP1=1, select bank3
  1021  02A0  0189               	clrf	9	;volatile
  1022                           
  1023                           ;mainMaster.c: 79:     ANSEL = 0;
  1024  02A1  0188               	clrf	8	;volatile
  1025                           
  1026                           ;mainMaster.c: 80:     TRISB = 0;
  1027  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  1028  02A3  1303               	bcf	3,6	;RP1=0, select bank1
  1029  02A4  0186               	clrf	6	;volatile
  1030                           
  1031                           ;mainMaster.c: 81:     TRISA = 0;
  1032  02A5  0185               	clrf	5	;volatile
  1033                           
  1034                           ;mainMaster.c: 82:     PORTB = 0;
  1035  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  1036  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  1037  02A8  0186               	clrf	6	;volatile
  1038                           
  1039                           ;mainMaster.c: 83:     PORTA = 0;
  1040  02A9  0185               	clrf	5	;volatile
  1041                           
  1042                           ;mainMaster.c: 84:     Lcd_Init();
  1043  02AA  120A  118A  24CC  120A  118A  	fcall	_Lcd_Init
  1044                           
  1045                           ;mainMaster.c: 85:     I2C_Master_Init(100000);
  1046  02AF  3000               	movlw	0
  1047  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1048  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1049  02B2  00A3               	movwf	I2C_Master_Init@c+3
  1050  02B3  3001               	movlw	1
  1051  02B4  00A2               	movwf	I2C_Master_Init@c+2
  1052  02B5  3086               	movlw	134
  1053  02B6  00A1               	movwf	I2C_Master_Init@c+1
  1054  02B7  30A0               	movlw	160
  1055  02B8  00A0               	movwf	I2C_Master_Init@c
  1056  02B9  120A  118A  2345   	fcall	_I2C_Master_Init
  1057  02BC  0008               	return
  1058  02BD                     __end_of_setup:	
  1059                           
  1060                           	psect	text3
  1061  0477                     __ptext3:	
  1062 ;; *************** function _initOscilador *****************
  1063 ;; Defined at:
  1064 ;;		line 11 in file "./Oscilador.h"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;  option          1    wreg     unsigned char 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  option          1    2[COMMON] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1078 ;;      Params:         0       0       0       0       0
  1079 ;;      Locals:         1       0       0       0       0
  1080 ;;      Temps:          2       0       0       0       0
  1081 ;;      Totals:         3       0       0       0       0
  1082 ;;Total ram usage:        3 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_setup
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           
  1092                           ;psect for function _initOscilador
  1093  0477                     _initOscilador:	
  1094                           
  1095                           ;incstack = 0
  1096                           ; Regs used in _initOscilador: [wreg-fsr0h+status,2+status,0]
  1097                           ;initOscilador@option stored from wreg
  1098  0477  00F2               	movwf	initOscilador@option
  1099                           
  1100                           ;./Oscilador.h: 13: 
  1101  0478  2CA8               	goto	l1495
  1102  0479                     l1475:	
  1103                           
  1104                           ;./Oscilador.h: 16:         case 3:
  1105  0479  308F               	movlw	-113
  1106  047A  1683               	bsf	3,5	;RP0=1, select bank1
  1107  047B  1303               	bcf	3,6	;RP1=0, select bank1
  1108  047C  058F               	andwf	15,f	;volatile
  1109                           
  1110                           ;./Oscilador.h: 17: 
  1111  047D  2CCA               	goto	l135
  1112  047E                     l1477:	
  1113                           
  1114                           ;./Oscilador.h: 20:         case 4:
  1115  047E  1683               	bsf	3,5	;RP0=1, select bank1
  1116  047F  1303               	bcf	3,6	;RP1=0, select bank1
  1117  0480  080F               	movf	15,w	;volatile
  1118  0481  398F               	andlw	-113
  1119  0482  3810               	iorlw	16
  1120  0483  2CA1               	goto	L6
  1121  0484                     l1479:	
  1122                           ;./Oscilador.h: 21: 
  1123                           
  1124                           
  1125                           ;./Oscilador.h: 24:         case 5:
  1126  0484  1683               	bsf	3,5	;RP0=1, select bank1
  1127  0485  1303               	bcf	3,6	;RP1=0, select bank1
  1128  0486  080F               	movf	15,w	;volatile
  1129  0487  398F               	andlw	-113
  1130  0488  3820               	iorlw	32
  1131  0489  2CA1               	goto	L6
  1132  048A                     l1481:	
  1133                           ;./Oscilador.h: 25: 
  1134                           
  1135                           
  1136                           ;./Oscilador.h: 28:         case 6:
  1137  048A  1683               	bsf	3,5	;RP0=1, select bank1
  1138  048B  1303               	bcf	3,6	;RP1=0, select bank1
  1139  048C  080F               	movf	15,w	;volatile
  1140  048D  398F               	andlw	-113
  1141  048E  3830               	iorlw	48
  1142  048F  2CA1               	goto	L6
  1143  0490                     l1483:	
  1144                           ;./Oscilador.h: 29: 
  1145                           
  1146                           
  1147                           ;./Oscilador.h: 32:         case 7:
  1148  0490  1683               	bsf	3,5	;RP0=1, select bank1
  1149  0491  1303               	bcf	3,6	;RP1=0, select bank1
  1150  0492  080F               	movf	15,w	;volatile
  1151  0493  398F               	andlw	-113
  1152  0494  3840               	iorlw	64
  1153  0495  2CA1               	goto	L6
  1154  0496                     l1485:	
  1155                           ;./Oscilador.h: 33: 
  1156                           
  1157                           
  1158                           ;./Oscilador.h: 36:         default:
  1159  0496  1683               	bsf	3,5	;RP0=1, select bank1
  1160  0497  1303               	bcf	3,6	;RP1=0, select bank1
  1161  0498  080F               	movf	15,w	;volatile
  1162  0499  398F               	andlw	-113
  1163  049A  3850               	iorlw	80
  1164  049B  2CA1               	goto	L6
  1165  049C                     l1487:	
  1166                           ;./Oscilador.h: 37: 
  1167                           
  1168                           
  1169                           ;./Oscilador.h: 40:     }
  1170  049C  1683               	bsf	3,5	;RP0=1, select bank1
  1171  049D  1303               	bcf	3,6	;RP1=0, select bank1
  1172  049E  080F               	movf	15,w	;volatile
  1173  049F  398F               	andlw	-113
  1174  04A0  3860               	iorlw	96
  1175  04A1                     L6:	
  1176  04A1  008F               	movwf	15	;volatile
  1177                           
  1178                           ;./Oscilador.h: 41:     OSCCONbits.SCS = 1;
  1179  04A2  2CCA               	goto	l135
  1180  04A3                     l1489:	
  1181  04A3                     l1491:	
  1182  04A3  3070               	movlw	112
  1183  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  1184  04A5  1303               	bcf	3,6	;RP1=0, select bank1
  1185  04A6  048F               	iorwf	15,f	;volatile
  1186  04A7  2CCA               	goto	l135
  1187  04A8                     l1495:	
  1188  04A8  0872               	movf	initOscilador@option,w
  1189  04A9  00F0               	movwf	??_initOscilador
  1190  04AA  01F1               	clrf	??_initOscilador+1
  1191                           
  1192                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1193                           ; Switch size 1, requested type "simple"
  1194                           ; Number of cases is 1, Range of values is 0 to 0
  1195                           ; switch strategies available:
  1196                           ; Name         Instructions Cycles
  1197                           ; simple_byte            4     3 (average)
  1198                           ; direct_byte           11     8 (fixed)
  1199                           ; jumptable            260     6 (fixed)
  1200                           ;	Chosen strategy is simple_byte
  1201  04AB  0871               	movf	??_initOscilador+1,w
  1202  04AC  3A00               	xorlw	0	; case 0
  1203  04AD  1903               	skipnz
  1204  04AE  2CB0               	goto	l1773
  1205  04AF  2CA3               	goto	l1491
  1206  04B0                     l1773:	
  1207                           
  1208                           ; Switch size 1, requested type "simple"
  1209                           ; Number of cases is 8, Range of values is 0 to 7
  1210                           ; switch strategies available:
  1211                           ; Name         Instructions Cycles
  1212                           ; simple_byte           25    13 (average)
  1213                           ; direct_byte           32     8 (fixed)
  1214                           ; jumptable            260     6 (fixed)
  1215                           ;	Chosen strategy is simple_byte
  1216  04B0  0870               	movf	??_initOscilador,w
  1217  04B1  3A00               	xorlw	0	; case 0
  1218  04B2  1903               	skipnz
  1219  04B3  2C79               	goto	l1475
  1220  04B4  3A01               	xorlw	1	; case 1
  1221  04B5  1903               	skipnz
  1222  04B6  2C7E               	goto	l1477
  1223  04B7  3A03               	xorlw	3	; case 2
  1224  04B8  1903               	skipnz
  1225  04B9  2C84               	goto	l1479
  1226  04BA  3A01               	xorlw	1	; case 3
  1227  04BB  1903               	skipnz
  1228  04BC  2C8A               	goto	l1481
  1229  04BD  3A07               	xorlw	7	; case 4
  1230  04BE  1903               	skipnz
  1231  04BF  2C90               	goto	l1483
  1232  04C0  3A01               	xorlw	1	; case 5
  1233  04C1  1903               	skipnz
  1234  04C2  2C96               	goto	l1485
  1235  04C3  3A03               	xorlw	3	; case 6
  1236  04C4  1903               	skipnz
  1237  04C5  2C9C               	goto	l1487
  1238  04C6  3A01               	xorlw	1	; case 7
  1239  04C7  1903               	skipnz
  1240  04C8  2CA3               	goto	l1489
  1241  04C9  2CA3               	goto	l1491
  1242  04CA                     l135:	
  1243  04CA  140F               	bsf	15,0	;volatile
  1244  04CB  0008               	return
  1245  04CC                     __end_of_initOscilador:	
  1246                           
  1247                           	psect	text4
  1248  04CC                     __ptext4:	
  1249 ;; *************** function _Lcd_Init *****************
  1250 ;; Defined at:
  1251 ;;		line 65 in file "./LCD4bits.h"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;		None
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;		None
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1    wreg      void 
  1258 ;; Registers used:
  1259 ;;		wreg, status,2, status,0, pclath, cstack
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1265 ;;      Params:         0       0       0       0       0
  1266 ;;      Locals:         0       0       0       0       0
  1267 ;;      Temps:          2       0       0       0       0
  1268 ;;      Totals:         2       0       0       0       0
  1269 ;;Total ram usage:        2 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; Hardware stack levels required when called:    2
  1272 ;; This function calls:
  1273 ;;		_Lcd_Cmd
  1274 ;;		_Lcd_Port
  1275 ;; This function is called by:
  1276 ;;		_setup
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           
  1281                           ;psect for function _Lcd_Init
  1282  04CC                     _Lcd_Init:	
  1283                           
  1284                           ;./LCD4bits.h: 67:   Lcd_Port(0x00);
  1285                           
  1286                           ;incstack = 0
  1287                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1288  04CC  3000               	movlw	0
  1289  04CD  120A  118A  2221  120A  118A  	fcall	_Lcd_Port
  1290                           
  1291                           ;./LCD4bits.h: 68:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1292  04D2  3034               	movlw	52
  1293  04D3  00F5               	movwf	??_Lcd_Init+1
  1294  04D4  30F1               	movlw	241
  1295  04D5  00F4               	movwf	??_Lcd_Init
  1296  04D6                     u1117:	
  1297  04D6  0BF4               	decfsz	??_Lcd_Init,f
  1298  04D7  2CD6               	goto	u1117
  1299  04D8  0BF5               	decfsz	??_Lcd_Init+1,f
  1300  04D9  2CD6               	goto	u1117
  1301  04DA  2CDB               	nop2
  1302                           
  1303                           ;./LCD4bits.h: 69:   Lcd_Cmd(0x03);
  1304  04DB  3003               	movlw	3
  1305  04DC  120A  118A  223B  120A  118A  	fcall	_Lcd_Cmd
  1306                           
  1307                           ;./LCD4bits.h: 70:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1308  04E1  300D               	movlw	13
  1309  04E2  00F5               	movwf	??_Lcd_Init+1
  1310  04E3  30FB               	movlw	251
  1311  04E4  00F4               	movwf	??_Lcd_Init
  1312  04E5                     u1127:	
  1313  04E5  0BF4               	decfsz	??_Lcd_Init,f
  1314  04E6  2CE5               	goto	u1127
  1315  04E7  0BF5               	decfsz	??_Lcd_Init+1,f
  1316  04E8  2CE5               	goto	u1127
  1317  04E9  2CEA               	nop2
  1318                           
  1319                           ;./LCD4bits.h: 71:   Lcd_Cmd(0x03);
  1320  04EA  3003               	movlw	3
  1321  04EB  120A  118A  223B  120A  118A  	fcall	_Lcd_Cmd
  1322                           
  1323                           ;./LCD4bits.h: 72:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1324  04F0  301D               	movlw	29
  1325  04F1  00F5               	movwf	??_Lcd_Init+1
  1326  04F2  3091               	movlw	145
  1327  04F3  00F4               	movwf	??_Lcd_Init
  1328  04F4                     u1137:	
  1329  04F4  0BF4               	decfsz	??_Lcd_Init,f
  1330  04F5  2CF4               	goto	u1137
  1331  04F6  0BF5               	decfsz	??_Lcd_Init+1,f
  1332  04F7  2CF4               	goto	u1137
  1333                           
  1334                           ;./LCD4bits.h: 73:   Lcd_Cmd(0x03);
  1335  04F8  3003               	movlw	3
  1336  04F9  120A  118A  223B  120A  118A  	fcall	_Lcd_Cmd
  1337                           
  1338                           ;./LCD4bits.h: 75:   Lcd_Cmd(0x02);
  1339  04FE  3002               	movlw	2
  1340  04FF  120A  118A  223B  120A  118A  	fcall	_Lcd_Cmd
  1341                           
  1342                           ;./LCD4bits.h: 76:   Lcd_Cmd(0x02);
  1343  0504  3002               	movlw	2
  1344  0505  120A  118A  223B  120A  118A  	fcall	_Lcd_Cmd
  1345                           
  1346                           ;./LCD4bits.h: 77:   Lcd_Cmd(0x08);
  1347  050A  3008               	movlw	8
  1348  050B  120A  118A  223B  120A  118A  	fcall	_Lcd_Cmd
  1349                           
  1350                           ;./LCD4bits.h: 78:   Lcd_Cmd(0x00);
  1351  0510  3000               	movlw	0
  1352  0511  120A  118A  223B  120A  118A  	fcall	_Lcd_Cmd
  1353                           
  1354                           ;./LCD4bits.h: 79:   Lcd_Cmd(0x0C);
  1355  0516  300C               	movlw	12
  1356  0517  120A  118A  223B  120A  118A  	fcall	_Lcd_Cmd
  1357                           
  1358                           ;./LCD4bits.h: 80:   Lcd_Cmd(0x00);
  1359  051C  3000               	movlw	0
  1360  051D  120A  118A  223B  120A  118A  	fcall	_Lcd_Cmd
  1361                           
  1362                           ;./LCD4bits.h: 81:   Lcd_Cmd(0x06);
  1363  0522  3006               	movlw	6
  1364  0523  120A  118A  223B   	fcall	_Lcd_Cmd
  1365  0526  0008               	return
  1366  0527                     __end_of_Lcd_Init:	
  1367                           
  1368                           	psect	text5
  1369  0345                     __ptext5:	
  1370 ;; *************** function _I2C_Master_Init *****************
  1371 ;; Defined at:
  1372 ;;		line 16 in file "./I2C.h"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;  c               4    0[BANK0 ] const unsigned long 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg, status,2, status,0, pclath, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1386 ;;      Params:         0       4       0       0       0
  1387 ;;      Locals:         0       0       0       0       0
  1388 ;;      Temps:          0       4       0       0       0
  1389 ;;      Totals:         0       8       0       0       0
  1390 ;;Total ram usage:        8 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:    1
  1393 ;; This function calls:
  1394 ;;		___lldiv
  1395 ;; This function is called by:
  1396 ;;		_setup
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           
  1401                           ;psect for function _I2C_Master_Init
  1402  0345                     _I2C_Master_Init:	
  1403                           
  1404                           ;./I2C.h: 16: void I2C_Master_Init(const unsigned long c);./I2C.h: 17: {;./I2C.h: 18:   
      +                            SSPCON = 0b00101000;
  1405                           
  1406                           ;incstack = 0
  1407                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1408  0345  3028               	movlw	40
  1409  0346  1283               	bcf	3,5	;RP0=0, select bank0
  1410  0347  1303               	bcf	3,6	;RP1=0, select bank0
  1411  0348  0094               	movwf	20	;volatile
  1412                           
  1413                           ;./I2C.h: 19:     SSPCON2 = 0;
  1414  0349  1683               	bsf	3,5	;RP0=1, select bank1
  1415  034A  1303               	bcf	3,6	;RP1=0, select bank1
  1416  034B  0191               	clrf	17	;volatile
  1417                           
  1418                           ;./I2C.h: 20:     SSPADD = (8000000/(4*c))-1;
  1419  034C  1283               	bcf	3,5	;RP0=0, select bank0
  1420  034D  1303               	bcf	3,6	;RP1=0, select bank0
  1421  034E  0820               	movf	I2C_Master_Init@c,w
  1422  034F  00A4               	movwf	??_I2C_Master_Init
  1423  0350  0821               	movf	I2C_Master_Init@c+1,w
  1424  0351  00A5               	movwf	??_I2C_Master_Init+1
  1425  0352  0822               	movf	I2C_Master_Init@c+2,w
  1426  0353  00A6               	movwf	??_I2C_Master_Init+2
  1427  0354  0823               	movf	I2C_Master_Init@c+3,w
  1428  0355  00A7               	movwf	??_I2C_Master_Init+3
  1429  0356  3002               	movlw	2
  1430  0357                     u825:	
  1431  0357  1003               	clrc
  1432  0358  0DA4               	rlf	??_I2C_Master_Init,f
  1433  0359  0DA5               	rlf	??_I2C_Master_Init+1,f
  1434  035A  0DA6               	rlf	??_I2C_Master_Init+2,f
  1435  035B  0DA7               	rlf	??_I2C_Master_Init+3,f
  1436  035C  3EFF               	addlw	-1
  1437  035D  1D03               	skipz
  1438  035E  2B57               	goto	u825
  1439  035F  0827               	movf	??_I2C_Master_Init+3,w
  1440  0360  00F3               	movwf	___lldiv@divisor+3
  1441  0361  0826               	movf	??_I2C_Master_Init+2,w
  1442  0362  00F2               	movwf	___lldiv@divisor+2
  1443  0363  0825               	movf	??_I2C_Master_Init+1,w
  1444  0364  00F1               	movwf	___lldiv@divisor+1
  1445  0365  0824               	movf	??_I2C_Master_Init,w
  1446  0366  00F0               	movwf	___lldiv@divisor
  1447  0367  3000               	movlw	0
  1448  0368  00F7               	movwf	___lldiv@dividend+3
  1449  0369  307A               	movlw	122
  1450  036A  00F6               	movwf	___lldiv@dividend+2
  1451  036B  3012               	movlw	18
  1452  036C  00F5               	movwf	___lldiv@dividend+1
  1453  036D  3000               	movlw	0
  1454  036E  00F4               	movwf	___lldiv@dividend
  1455  036F  120A  118A  2527   	fcall	___lldiv
  1456  0372  0870               	movf	?___lldiv,w
  1457  0373  3EFF               	addlw	255
  1458  0374  1683               	bsf	3,5	;RP0=1, select bank1
  1459  0375  1303               	bcf	3,6	;RP1=0, select bank1
  1460  0376  0093               	movwf	19	;volatile
  1461                           
  1462                           ;./I2C.h: 21:     SSPSTAT = 0;
  1463  0377  0194               	clrf	20	;volatile
  1464                           
  1465                           ;./I2C.h: 22:     TRISC3 = 1;
  1466  0378  1587               	bsf	7,3	;volatile
  1467                           
  1468                           ;./I2C.h: 23:     TRISC4 = 1;
  1469  0379  1607               	bsf	7,4	;volatile
  1470  037A  0008               	return
  1471  037B                     __end_of_I2C_Master_Init:	
  1472                           
  1473                           	psect	text6
  1474  0527                     __ptext6:	
  1475 ;; *************** function ___lldiv *****************
  1476 ;; Defined at:
  1477 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;  divisor         4    0[COMMON] unsigned long 
  1480 ;;  dividend        4    4[COMMON] unsigned long 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  quotient        4    9[COMMON] unsigned long 
  1483 ;;  counter         1   13[COMMON] unsigned char 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  4    0[COMMON] unsigned long 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1493 ;;      Params:         8       0       0       0       0
  1494 ;;      Locals:         5       0       0       0       0
  1495 ;;      Temps:          1       0       0       0       0
  1496 ;;      Totals:        14       0       0       0       0
  1497 ;;Total ram usage:       14 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_I2C_Master_Init
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           
  1507                           ;psect for function ___lldiv
  1508  0527                     ___lldiv:	
  1509                           
  1510                           ;incstack = 0
  1511                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1512  0527  3000               	movlw	0
  1513  0528  00FC               	movwf	___lldiv@quotient+3
  1514  0529  3000               	movlw	0
  1515  052A  00FB               	movwf	___lldiv@quotient+2
  1516  052B  3000               	movlw	0
  1517  052C  00FA               	movwf	___lldiv@quotient+1
  1518  052D  3000               	movlw	0
  1519  052E  00F9               	movwf	___lldiv@quotient
  1520  052F  0873               	movf	___lldiv@divisor+3,w
  1521  0530  0472               	iorwf	___lldiv@divisor+2,w
  1522  0531  0471               	iorwf	___lldiv@divisor+1,w
  1523  0532  0470               	iorwf	___lldiv@divisor,w
  1524  0533  1903               	skipnz
  1525  0534  2D7C               	goto	l1347
  1526  0535  01FD               	clrf	___lldiv@counter
  1527  0536  0AFD               	incf	___lldiv@counter,f
  1528  0537                     l1333:	
  1529  0537  1BF3               	btfsc	___lldiv@divisor+3,7
  1530  0538  2D47               	goto	l1335
  1531  0539  3001               	movlw	1
  1532  053A  00F8               	movwf	??___lldiv
  1533  053B                     u635:	
  1534  053B  1003               	clrc
  1535  053C  0DF0               	rlf	___lldiv@divisor,f
  1536  053D  0DF1               	rlf	___lldiv@divisor+1,f
  1537  053E  0DF2               	rlf	___lldiv@divisor+2,f
  1538  053F  0DF3               	rlf	___lldiv@divisor+3,f
  1539  0540  0BF8               	decfsz	??___lldiv,f
  1540  0541  2D3B               	goto	u635
  1541  0542  3001               	movlw	1
  1542  0543  00F8               	movwf	??___lldiv
  1543  0544  0878               	movf	??___lldiv,w
  1544  0545  07FD               	addwf	___lldiv@counter,f
  1545  0546  2D37               	goto	l1333
  1546  0547                     l1335:	
  1547  0547  3001               	movlw	1
  1548  0548  00F8               	movwf	??___lldiv
  1549  0549                     u655:	
  1550  0549  1003               	clrc
  1551  054A  0DF9               	rlf	___lldiv@quotient,f
  1552  054B  0DFA               	rlf	___lldiv@quotient+1,f
  1553  054C  0DFB               	rlf	___lldiv@quotient+2,f
  1554  054D  0DFC               	rlf	___lldiv@quotient+3,f
  1555  054E  0BF8               	decfsz	??___lldiv,f
  1556  054F  2D49               	goto	u655
  1557  0550  0873               	movf	___lldiv@divisor+3,w
  1558  0551  0277               	subwf	___lldiv@dividend+3,w
  1559  0552  1D03               	skipz
  1560  0553  2D5E               	goto	u665
  1561  0554  0872               	movf	___lldiv@divisor+2,w
  1562  0555  0276               	subwf	___lldiv@dividend+2,w
  1563  0556  1D03               	skipz
  1564  0557  2D5E               	goto	u665
  1565  0558  0871               	movf	___lldiv@divisor+1,w
  1566  0559  0275               	subwf	___lldiv@dividend+1,w
  1567  055A  1D03               	skipz
  1568  055B  2D5E               	goto	u665
  1569  055C  0870               	movf	___lldiv@divisor,w
  1570  055D  0274               	subwf	___lldiv@dividend,w
  1571  055E                     u665:	
  1572  055E  1C03               	skipc
  1573  055F  2D6F               	goto	l1343
  1574  0560  0870               	movf	___lldiv@divisor,w
  1575  0561  02F4               	subwf	___lldiv@dividend,f
  1576  0562  0871               	movf	___lldiv@divisor+1,w
  1577  0563  1C03               	skipc
  1578  0564  0F71               	incfsz	___lldiv@divisor+1,w
  1579  0565  02F5               	subwf	___lldiv@dividend+1,f
  1580  0566  0872               	movf	___lldiv@divisor+2,w
  1581  0567  1C03               	skipc
  1582  0568  0F72               	incfsz	___lldiv@divisor+2,w
  1583  0569  02F6               	subwf	___lldiv@dividend+2,f
  1584  056A  0873               	movf	___lldiv@divisor+3,w
  1585  056B  1C03               	skipc
  1586  056C  0F73               	incfsz	___lldiv@divisor+3,w
  1587  056D  02F7               	subwf	___lldiv@dividend+3,f
  1588  056E  1479               	bsf	___lldiv@quotient,0
  1589  056F                     l1343:	
  1590  056F  3001               	movlw	1
  1591  0570                     u675:	
  1592  0570  1003               	clrc
  1593  0571  0CF3               	rrf	___lldiv@divisor+3,f
  1594  0572  0CF2               	rrf	___lldiv@divisor+2,f
  1595  0573  0CF1               	rrf	___lldiv@divisor+1,f
  1596  0574  0CF0               	rrf	___lldiv@divisor,f
  1597  0575  3EFF               	addlw	-1
  1598  0576  1D03               	skipz
  1599  0577  2D70               	goto	u675
  1600  0578  3001               	movlw	1
  1601  0579  02FD               	subwf	___lldiv@counter,f
  1602  057A  1D03               	btfss	3,2
  1603  057B  2D47               	goto	l1335
  1604  057C                     l1347:	
  1605  057C  087C               	movf	___lldiv@quotient+3,w
  1606  057D  00F3               	movwf	?___lldiv+3
  1607  057E  087B               	movf	___lldiv@quotient+2,w
  1608  057F  00F2               	movwf	?___lldiv+2
  1609  0580  087A               	movf	___lldiv@quotient+1,w
  1610  0581  00F1               	movwf	?___lldiv+1
  1611  0582  0879               	movf	___lldiv@quotient,w
  1612  0583  00F0               	movwf	?___lldiv
  1613  0584  0008               	return
  1614  0585                     __end_of___lldiv:	
  1615                           
  1616                           	psect	text7
  1617  0585                     __ptext7:	
  1618 ;; *************** function _get_time *****************
  1619 ;; Defined at:
  1620 ;;		line 99 in file "mainMaster.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  string_time     6    0[BANK0 ] unsigned char [6]
  1625 ;;  min             1    7[BANK0 ] unsigned char 
  1626 ;;  hour            1    6[BANK0 ] unsigned char 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      PTR unsigned char 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0, pclath, cstack
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1636 ;;      Params:         0       0       0       0       0
  1637 ;;      Locals:         0       8       0       0       0
  1638 ;;      Temps:          2       0       0       0       0
  1639 ;;      Totals:         2       8       0       0       0
  1640 ;;Total ram usage:       10 bytes
  1641 ;; Hardware stack levels used:    1
  1642 ;; Hardware stack levels required when called:    2
  1643 ;; This function calls:
  1644 ;;		_I2C_Master_Read
  1645 ;;		_I2C_Master_RepeatedStart
  1646 ;;		_I2C_Master_Start
  1647 ;;		_I2C_Master_Stop
  1648 ;;		_I2C_Master_Write
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           
  1655                           ;psect for function _get_time
  1656  0585                     _get_time:	
  1657                           
  1658                           ;mainMaster.c: 100:     char hour, min;;mainMaster.c: 101:     char string_time[6];;main
      +                          Master.c: 103:     I2C_Master_Start();
  1659                           
  1660                           ;incstack = 0
  1661                           ; Regs used in _get_time: [wreg+status,2+status,0+pclath+cstack]
  1662  0585  120A  118A  21DF  120A  118A  	fcall	_I2C_Master_Start
  1663                           
  1664                           ;mainMaster.c: 104:     I2C_Master_Write(0xD0);
  1665  058A  30D0               	movlw	208
  1666  058B  00F0               	movwf	I2C_Master_Write@d
  1667  058C  3000               	movlw	0
  1668  058D  00F1               	movwf	I2C_Master_Write@d+1
  1669  058E  120A  118A  21F4  120A  118A  	fcall	_I2C_Master_Write
  1670                           
  1671                           ;mainMaster.c: 105:     I2C_Master_Write(0x01);
  1672  0593  3001               	movlw	1
  1673  0594  00F0               	movwf	I2C_Master_Write@d
  1674  0595  3000               	movlw	0
  1675  0596  00F1               	movwf	I2C_Master_Write@d+1
  1676  0597  120A  118A  21F4  120A  118A  	fcall	_I2C_Master_Write
  1677                           
  1678                           ;mainMaster.c: 106:     I2C_Master_RepeatedStart();
  1679  059C  120A  118A  21ED  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1680                           
  1681                           ;mainMaster.c: 107:     I2C_Master_Write(0xD1);
  1682  05A1  30D1               	movlw	209
  1683  05A2  00F0               	movwf	I2C_Master_Write@d
  1684  05A3  3000               	movlw	0
  1685  05A4  00F1               	movwf	I2C_Master_Write@d+1
  1686  05A5  120A  118A  21F4  120A  118A  	fcall	_I2C_Master_Write
  1687                           
  1688                           ;mainMaster.c: 108:     min = I2C_Master_Read(1);
  1689  05AA  3001               	movlw	1
  1690  05AB  00F0               	movwf	I2C_Master_Read@a
  1691  05AC  3000               	movlw	0
  1692  05AD  00F1               	movwf	I2C_Master_Read@a+1
  1693  05AE  120A  118A  22E7  120A  118A  	fcall	_I2C_Master_Read
  1694  05B3  0870               	movf	?_I2C_Master_Read,w
  1695  05B4  00F6               	movwf	??_get_time
  1696  05B5  0876               	movf	??_get_time,w
  1697  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  1698  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  1699  05B8  00A7               	movwf	get_time@min
  1700                           
  1701                           ;mainMaster.c: 109:     hour = I2C_Master_Read(0);
  1702  05B9  3000               	movlw	0
  1703  05BA  00F0               	movwf	I2C_Master_Read@a
  1704  05BB  00F1               	movwf	I2C_Master_Read@a+1
  1705  05BC  120A  118A  22E7  120A  118A  	fcall	_I2C_Master_Read
  1706  05C1  0870               	movf	?_I2C_Master_Read,w
  1707  05C2  00F6               	movwf	??_get_time
  1708  05C3  0876               	movf	??_get_time,w
  1709  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  1710  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  1711  05C6  00A6               	movwf	get_time@hour
  1712                           
  1713                           ;mainMaster.c: 110:     I2C_Master_Stop();
  1714  05C7  120A  118A  21E6  120A  118A  	fcall	_I2C_Master_Stop
  1715                           
  1716                           ;mainMaster.c: 112:     string_time[0] = (hour >> 4) + '0';
  1717  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  1718  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  1719  05CE  0826               	movf	get_time@hour,w
  1720  05CF  00F6               	movwf	??_get_time
  1721  05D0  3004               	movlw	4
  1722  05D1                     u1035:	
  1723  05D1  1003               	clrc
  1724  05D2  0CF6               	rrf	??_get_time,f
  1725  05D3  3EFF               	addlw	-1
  1726  05D4  1D03               	skipz
  1727  05D5  2DD1               	goto	u1035
  1728  05D6  0876               	movf	??_get_time,w
  1729  05D7  3E30               	addlw	48
  1730  05D8  00F7               	movwf	??_get_time+1
  1731  05D9  0877               	movf	??_get_time+1,w
  1732  05DA  00A0               	movwf	get_time@string_time
  1733                           
  1734                           ;mainMaster.c: 113:     string_time[1] = (hour & 0x0F) + '0';
  1735  05DB  0826               	movf	get_time@hour,w
  1736  05DC  390F               	andlw	15
  1737  05DD  3E30               	addlw	48
  1738  05DE  00F6               	movwf	??_get_time
  1739  05DF  0876               	movf	??_get_time,w
  1740  05E0  00A1               	movwf	get_time@string_time+1
  1741                           
  1742                           ;mainMaster.c: 114:     string_time[2] = ':';
  1743  05E1  303A               	movlw	58
  1744  05E2  00F6               	movwf	??_get_time
  1745  05E3  0876               	movf	??_get_time,w
  1746  05E4  00A2               	movwf	get_time@string_time+2
  1747                           
  1748                           ;mainMaster.c: 115:     string_time[3] = (min >> 4) + '0';
  1749  05E5  0827               	movf	get_time@min,w
  1750  05E6  00F6               	movwf	??_get_time
  1751  05E7  3004               	movlw	4
  1752  05E8                     u1045:	
  1753  05E8  1003               	clrc
  1754  05E9  0CF6               	rrf	??_get_time,f
  1755  05EA  3EFF               	addlw	-1
  1756  05EB  1D03               	skipz
  1757  05EC  2DE8               	goto	u1045
  1758  05ED  0876               	movf	??_get_time,w
  1759  05EE  3E30               	addlw	48
  1760  05EF  00F7               	movwf	??_get_time+1
  1761  05F0  0877               	movf	??_get_time+1,w
  1762  05F1  00A3               	movwf	get_time@string_time+3
  1763                           
  1764                           ;mainMaster.c: 116:     string_time[4] = (min & 0x0F) + '0';
  1765  05F2  0827               	movf	get_time@min,w
  1766  05F3  390F               	andlw	15
  1767  05F4  3E30               	addlw	48
  1768  05F5  00F6               	movwf	??_get_time
  1769  05F6  0876               	movf	??_get_time,w
  1770  05F7  00A4               	movwf	get_time@string_time+4
  1771                           
  1772                           ;mainMaster.c: 117:     string_time[5] = '\0';
  1773  05F8  01A5               	clrf	get_time@string_time+5
  1774                           
  1775                           ;mainMaster.c: 119:     return (string_time);
  1776  05F9  3020               	movlw	(low (get_time@string_time| 0))& (0+255)
  1777  05FA  0008               	return
  1778  05FB                     __end_of_get_time:	
  1779                           
  1780                           	psect	text8
  1781  0682                     __ptext8:	
  1782 ;; *************** function _get_temp *****************
  1783 ;; Defined at:
  1784 ;;		line 136 in file "mainMaster.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  temperature     6   16[BANK0 ] unsigned char [6]
  1789 ;;  decimal         3   22[BANK0 ] unsigned char [3]
  1790 ;;  tempLSB         1   26[BANK0 ] unsigned char 
  1791 ;;  tempMSB         1   25[BANK0 ] unsigned char 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      PTR unsigned char 
  1794 ;; Registers used:
  1795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1801 ;;      Params:         0       0       0       0       0
  1802 ;;      Locals:         0      11       0       0       0
  1803 ;;      Temps:          0       3       0       0       0
  1804 ;;      Totals:         0      14       0       0       0
  1805 ;;Total ram usage:       14 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    2
  1808 ;; This function calls:
  1809 ;;		_I2C_Master_Read
  1810 ;;		_I2C_Master_RepeatedStart
  1811 ;;		_I2C_Master_Start
  1812 ;;		_I2C_Master_Stop
  1813 ;;		_I2C_Master_Write
  1814 ;;		___bmul
  1815 ;;		_sprintf
  1816 ;;		_strcat
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           
  1823                           ;psect for function _get_temp
  1824  0682                     _get_temp:	
  1825                           
  1826                           ;mainMaster.c: 137:     char tempLSB, tempMSB;;mainMaster.c: 138:     char temperature[6
      +                          ], decimal[3];;mainMaster.c: 140:     I2C_Master_Start();
  1827                           
  1828                           ;incstack = 0
  1829                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1830  0682  120A  118A  21DF  120A  118A  	fcall	_I2C_Master_Start
  1831                           
  1832                           ;mainMaster.c: 141:     I2C_Master_Write(0xD0);
  1833  0687  30D0               	movlw	208
  1834  0688  00F0               	movwf	I2C_Master_Write@d
  1835  0689  3000               	movlw	0
  1836  068A  00F1               	movwf	I2C_Master_Write@d+1
  1837  068B  120A  118A  21F4  120A  118A  	fcall	_I2C_Master_Write
  1838                           
  1839                           ;mainMaster.c: 142:     I2C_Master_Write(0x11);
  1840  0690  3011               	movlw	17
  1841  0691  00F0               	movwf	I2C_Master_Write@d
  1842  0692  3000               	movlw	0
  1843  0693  00F1               	movwf	I2C_Master_Write@d+1
  1844  0694  120A  118A  21F4  120A  118A  	fcall	_I2C_Master_Write
  1845                           
  1846                           ;mainMaster.c: 143:     I2C_Master_RepeatedStart();
  1847  0699  120A  118A  21ED  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1848                           
  1849                           ;mainMaster.c: 144:     I2C_Master_Write(0xD1);
  1850  069E  30D1               	movlw	209
  1851  069F  00F0               	movwf	I2C_Master_Write@d
  1852  06A0  3000               	movlw	0
  1853  06A1  00F1               	movwf	I2C_Master_Write@d+1
  1854  06A2  120A  118A  21F4  120A  118A  	fcall	_I2C_Master_Write
  1855                           
  1856                           ;mainMaster.c: 145:     tempMSB = I2C_Master_Read(1);
  1857  06A7  3001               	movlw	1
  1858  06A8  00F0               	movwf	I2C_Master_Read@a
  1859  06A9  3000               	movlw	0
  1860  06AA  00F1               	movwf	I2C_Master_Read@a+1
  1861  06AB  120A  118A  22E7  120A  118A  	fcall	_I2C_Master_Read
  1862  06B0  0870               	movf	?_I2C_Master_Read,w
  1863  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1864  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1865  06B3  00AD               	movwf	??_get_temp
  1866  06B4  082D               	movf	??_get_temp,w
  1867  06B5  00B9               	movwf	get_temp@tempMSB
  1868                           
  1869                           ;mainMaster.c: 146:     tempLSB = I2C_Master_Read(0);
  1870  06B6  3000               	movlw	0
  1871  06B7  00F0               	movwf	I2C_Master_Read@a
  1872  06B8  00F1               	movwf	I2C_Master_Read@a+1
  1873  06B9  120A  118A  22E7  120A  118A  	fcall	_I2C_Master_Read
  1874  06BE  0870               	movf	?_I2C_Master_Read,w
  1875  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  1876  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  1877  06C1  00AD               	movwf	??_get_temp
  1878  06C2  082D               	movf	??_get_temp,w
  1879  06C3  00BA               	movwf	get_temp@tempLSB
  1880                           
  1881                           ;mainMaster.c: 147:     I2C_Master_Stop();
  1882  06C4  120A  118A  21E6  120A  118A  	fcall	_I2C_Master_Stop
  1883                           
  1884                           ;mainMaster.c: 149:     tempMSB = tempMSB - 4;
  1885  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1886  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1887  06CB  0839               	movf	get_temp@tempMSB,w
  1888  06CC  3EFC               	addlw	252
  1889  06CD  00AD               	movwf	??_get_temp
  1890  06CE  082D               	movf	??_get_temp,w
  1891  06CF  00B9               	movwf	get_temp@tempMSB
  1892                           
  1893                           ;mainMaster.c: 150:     tempLSB = (tempLSB >> 6) * 25;
  1894  06D0  3019               	movlw	25
  1895  06D1  00AD               	movwf	??_get_temp
  1896  06D2  082D               	movf	??_get_temp,w
  1897  06D3  00F0               	movwf	___bmul@multiplicand
  1898  06D4  083A               	movf	get_temp@tempLSB,w
  1899  06D5  00AE               	movwf	??_get_temp+1
  1900  06D6  3006               	movlw	6
  1901  06D7                     u1055:	
  1902  06D7  1003               	clrc
  1903  06D8  0CAE               	rrf	??_get_temp+1,f
  1904  06D9  3EFF               	addlw	-1
  1905  06DA  1D03               	skipz
  1906  06DB  2ED7               	goto	u1055
  1907  06DC  082E               	movf	??_get_temp+1,w
  1908  06DD  120A  118A  2210  120A  118A  	fcall	___bmul
  1909  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1910  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1911  06E4  00AF               	movwf	??_get_temp+2
  1912  06E5  082F               	movf	??_get_temp+2,w
  1913  06E6  00BA               	movwf	get_temp@tempLSB
  1914                           
  1915                           ;mainMaster.c: 151:     sprintf(temperature, "%d", tempMSB);
  1916  06E7  3029               	movlw	(low (((STR_6+1)-__stringbase)| (0+32768)))& (0+255)
  1917  06E8  00AD               	movwf	??_get_temp
  1918  06E9  082D               	movf	??_get_temp,w
  1919  06EA  00A0               	movwf	sprintf@f
  1920  06EB  0839               	movf	get_temp@tempMSB,w
  1921  06EC  00AE               	movwf	??_get_temp+1
  1922  06ED  01AF               	clrf	??_get_temp+2
  1923  06EE  082E               	movf	??_get_temp+1,w
  1924  06EF  00A1               	movwf	?_sprintf+1
  1925  06F0  082F               	movf	??_get_temp+2,w
  1926  06F1  00A2               	movwf	?_sprintf+2
  1927  06F2  3030               	movlw	(low (get_temp@temperature| 0))& (0+255)
  1928  06F3  120A  118A  271F  120A  118A  	fcall	_sprintf
  1929                           
  1930                           ;mainMaster.c: 152:     if (tempLSB == 0){
  1931  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  1932  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  1933  06FA  083A               	movf	get_temp@tempLSB,w
  1934  06FB  1D03               	btfss	3,2
  1935  06FC  2EFF               	goto	l1665
  1936                           
  1937                           ;mainMaster.c: 153:         sprintf(decimal, ".%d0", tempLSB);
  1938  06FD  3023               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1939  06FE  2F00               	goto	L7
  1940  06FF                     l1665:	
  1941                           ;mainMaster.c: 154:     } else {
  1942                           
  1943                           
  1944                           ;mainMaster.c: 155:         sprintf(decimal, ".%d", tempLSB);
  1945  06FF  3028               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1946  0700                     L7:	
  1947  0700  00AD               	movwf	??_get_temp
  1948  0701  082D               	movf	??_get_temp,w
  1949  0702  00A0               	movwf	sprintf@f
  1950  0703  083A               	movf	get_temp@tempLSB,w
  1951  0704  00AE               	movwf	??_get_temp+1
  1952  0705  01AF               	clrf	??_get_temp+2
  1953  0706  082E               	movf	??_get_temp+1,w
  1954  0707  00A1               	movwf	?_sprintf+1
  1955  0708  082F               	movf	??_get_temp+2,w
  1956  0709  00A2               	movwf	?_sprintf+2
  1957  070A  3036               	movlw	(low (get_temp@decimal| 0))& (0+255)
  1958  070B  120A  118A  271F  120A  118A  	fcall	_sprintf
  1959                           
  1960                           ;mainMaster.c: 157:     strcat(temperature, decimal);
  1961  0710  3036               	movlw	(low (get_temp@decimal| 0))& (0+255)
  1962  0711  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0712  1303               	bcf	3,6	;RP1=0, select bank0
  1964  0713  00AD               	movwf	??_get_temp
  1965  0714  082D               	movf	??_get_temp,w
  1966  0715  00F0               	movwf	strcat@from
  1967  0716  3030               	movlw	(low (get_temp@temperature| 0))& (0+255)
  1968  0717  120A  118A  2274   	fcall	_strcat
  1969                           
  1970                           ;mainMaster.c: 158:     temperature[5] = '\0';
  1971  071A  1283               	bcf	3,5	;RP0=0, select bank0
  1972  071B  1303               	bcf	3,6	;RP1=0, select bank0
  1973  071C  01B5               	clrf	get_temp@temperature+5
  1974                           
  1975                           ;mainMaster.c: 160:     return (temperature);
  1976  071D  3030               	movlw	(low (get_temp@temperature| 0))& (0+255)
  1977  071E  0008               	return
  1978  071F                     __end_of_get_temp:	
  1979                           
  1980                           	psect	text9
  1981  0274                     __ptext9:	
  1982 ;; *************** function _strcat *****************
  1983 ;; Defined at:
  1984 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcat.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  to              1    wreg     PTR unsigned char 
  1987 ;;		 -> get_temp@temperature(6), 
  1988 ;;  from            1    0[COMMON] PTR const unsigned char 
  1989 ;;		 -> get_temp@decimal(3), 
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;  to              1    2[COMMON] PTR unsigned char 
  1992 ;;		 -> get_temp@temperature(6), 
  1993 ;;  cp              1    3[COMMON] PTR unsigned char 
  1994 ;;		 -> get_temp@temperature(6), 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      PTR unsigned char 
  1997 ;; Registers used:
  1998 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2004 ;;      Params:         1       0       0       0       0
  2005 ;;      Locals:         2       0       0       0       0
  2006 ;;      Temps:          1       0       0       0       0
  2007 ;;      Totals:         4       0       0       0       0
  2008 ;;Total ram usage:        4 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_get_temp
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           
  2018                           ;psect for function _strcat
  2019  0274                     _strcat:	
  2020                           
  2021                           ;incstack = 0
  2022                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2023                           ;strcat@to stored from wreg
  2024  0274  00F2               	movwf	strcat@to
  2025  0275  0872               	movf	strcat@to,w
  2026  0276  00F1               	movwf	??_strcat
  2027  0277  0871               	movf	??_strcat,w
  2028  0278  00F3               	movwf	strcat@cp
  2029  0279                     l1567:	
  2030  0279  0873               	movf	strcat@cp,w
  2031  027A  0084               	movwf	4
  2032  027B  1383               	bcf	3,7	;select IRP bank0
  2033  027C  0800               	movf	0,w
  2034  027D  1903               	btfsc	3,2
  2035  027E  2A8C               	goto	l1571
  2036  027F  3001               	movlw	1
  2037  0280  00F1               	movwf	??_strcat
  2038  0281  0871               	movf	??_strcat,w
  2039  0282  07F3               	addwf	strcat@cp,f
  2040  0283  2A79               	goto	l1567
  2041  0284                     l1569:	
  2042  0284  3001               	movlw	1
  2043  0285  00F1               	movwf	??_strcat
  2044  0286  0871               	movf	??_strcat,w
  2045  0287  07F3               	addwf	strcat@cp,f
  2046  0288  3001               	movlw	1
  2047  0289  00F1               	movwf	??_strcat
  2048  028A  0871               	movf	??_strcat,w
  2049  028B  07F0               	addwf	strcat@from,f
  2050  028C                     l1571:	
  2051  028C  0870               	movf	strcat@from,w
  2052  028D  0084               	movwf	4
  2053  028E  0800               	movf	0,w
  2054  028F  00F1               	movwf	??_strcat
  2055  0290  0873               	movf	strcat@cp,w
  2056  0291  0084               	movwf	4
  2057  0292  0871               	movf	??_strcat,w
  2058  0293  0080               	movwf	0
  2059  0294  0800               	movf	0,w
  2060  0295  1903               	btfsc	3,2
  2061  0296  0008               	return
  2062  0297  2A84               	goto	l1569
  2063  0298                     __end_of_strcat:	
  2064                           
  2065                           	psect	text10
  2066  071F                     __ptext10:	
  2067 ;; *************** function _sprintf *****************
  2068 ;; Defined at:
  2069 ;;		line 500 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  sp              1    wreg     PTR unsigned char 
  2072 ;;		 -> get_temp@decimal(3), get_temp@temperature(6), 
  2073 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2074 ;;		 -> STR_6(4), STR_5(5), STR_4(3), 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2077 ;;		 -> get_temp@decimal(3), get_temp@temperature(6), 
  2078 ;;  tmpval          4    0        struct .
  2079 ;;  val             2    9[BANK0 ] unsigned int 
  2080 ;;  cp              2    0        PTR const unsigned char 
  2081 ;;  len             2    0        unsigned int 
  2082 ;;  c               1   12[BANK0 ] unsigned char 
  2083 ;;  prec            1    8[BANK0 ] char 
  2084 ;;  flag            1    7[BANK0 ] unsigned char 
  2085 ;;  ap              1    6[BANK0 ] PTR void [1]
  2086 ;;		 -> ?_sprintf(2), 
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  2    0[BANK0 ] int 
  2089 ;; Registers used:
  2090 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2096 ;;      Params:         0       3       0       0       0
  2097 ;;      Locals:         0       7       0       0       0
  2098 ;;      Temps:          0       3       0       0       0
  2099 ;;      Totals:         0      13       0       0       0
  2100 ;;Total ram usage:       13 bytes
  2101 ;; Hardware stack levels used:    1
  2102 ;; Hardware stack levels required when called:    1
  2103 ;; This function calls:
  2104 ;;		___lwdiv
  2105 ;;		___lwmod
  2106 ;; This function is called by:
  2107 ;;		_get_temp
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           
  2112                           ;psect for function _sprintf
  2113  071F                     _sprintf:	
  2114                           
  2115                           ;incstack = 0
  2116                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2117                           ;sprintf@sp stored from wreg
  2118  071F  1283               	bcf	3,5	;RP0=0, select bank0
  2119  0720  1303               	bcf	3,6	;RP1=0, select bank0
  2120  0721  00AB               	movwf	sprintf@sp
  2121                           
  2122                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;D:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  2123  0722  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2124  0723  00A3               	movwf	??_sprintf
  2125  0724  0823               	movf	??_sprintf,w
  2126  0725  00A6               	movwf	sprintf@ap
  2127  0726                     l1553:	
  2128                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2129                           
  2130                           
  2131                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2132  0726  3001               	movlw	1
  2133  0727  07A0               	addwf	sprintf@f,f
  2134  0728  30FF               	movlw	-1
  2135  0729  0720               	addwf	sprintf@f,w
  2136  072A  0084               	movwf	4
  2137  072B  120A  118A  200D  120A  118A  	fcall	stringdir
  2138  0730  00A3               	movwf	??_sprintf
  2139  0731  0823               	movf	??_sprintf,w
  2140  0732  00AC               	movwf	sprintf@c
  2141  0733  082C               	movf	sprintf@c,w
  2142  0734  1903               	btfsc	3,2
  2143  0735  2FF2               	goto	l1555
  2144                           
  2145                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  2146  0736  3025               	movlw	37
  2147  0737  062C               	xorwf	sprintf@c,w
  2148  0738  1903               	btfsc	3,2
  2149  0739  2F46               	goto	l1509
  2150                           
  2151                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;D:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  2152  073A  082C               	movf	sprintf@c,w
  2153  073B  00A3               	movwf	??_sprintf
  2154  073C  082B               	movf	sprintf@sp,w
  2155  073D  0084               	movwf	4
  2156  073E  0823               	movf	??_sprintf,w
  2157  073F  1383               	bcf	3,7	;select IRP bank0
  2158  0740  0080               	movwf	0
  2159  0741  3001               	movlw	1
  2160  0742  00A3               	movwf	??_sprintf
  2161  0743  0823               	movf	??_sprintf,w
  2162  0744  07AB               	addwf	sprintf@sp,f
  2163                           
  2164                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  2165  0745  2F26               	goto	l1553
  2166  0746                     l1509:	
  2167                           
  2168                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  2169  0746  01A7               	clrf	sprintf@flag
  2170                           
  2171                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  2172  0747  3001               	movlw	1
  2173  0748  07A0               	addwf	sprintf@f,f
  2174  0749  30FF               	movlw	-1
  2175  074A  0720               	addwf	sprintf@f,w
  2176  074B  0084               	movwf	4
  2177  074C  120A  118A  200D  120A  118A  	fcall	stringdir
  2178  0751  00AC               	movwf	sprintf@c
  2179  0752  00A3               	movwf	??_sprintf
  2180  0753  01A4               	clrf	??_sprintf+1
  2181                           
  2182                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2183                           ; Switch size 1, requested type "simple"
  2184                           ; Number of cases is 1, Range of values is 0 to 0
  2185                           ; switch strategies available:
  2186                           ; Name         Instructions Cycles
  2187                           ; simple_byte            4     3 (average)
  2188                           ; direct_byte           11     8 (fixed)
  2189                           ; jumptable            260     6 (fixed)
  2190                           ;	Chosen strategy is simple_byte
  2191  0754  0824               	movf	??_sprintf+1,w
  2192  0755  3A00               	xorlw	0	; case 0
  2193  0756  1903               	skipnz
  2194  0757  2F59               	goto	l1775
  2195  0758  2F26               	goto	l1553
  2196  0759                     l1775:	
  2197                           
  2198                           ; Switch size 1, requested type "simple"
  2199                           ; Number of cases is 3, Range of values is 0 to 105
  2200                           ; switch strategies available:
  2201                           ; Name         Instructions Cycles
  2202                           ; simple_byte           10     6 (average)
  2203                           ; jumptable            260     6 (fixed)
  2204                           ;	Chosen strategy is simple_byte
  2205  0759  0823               	movf	??_sprintf,w
  2206  075A  3A00               	xorlw	0	; case 0
  2207  075B  1903               	skipnz
  2208  075C  2FF2               	goto	l1555
  2209  075D  3A64               	xorlw	100	; case 100
  2210  075E  1903               	skipnz
  2211  075F  2F64               	goto	l1515
  2212  0760  3A0D               	xorlw	13	; case 105
  2213  0761  1903               	skipnz
  2214  0762  2F64               	goto	l1515
  2215  0763  2F26               	goto	l1553
  2216  0764                     l1515:	
  2217                           
  2218                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2219  0764  0826               	movf	sprintf@ap,w
  2220  0765  0084               	movwf	4
  2221  0766  1383               	bcf	3,7	;select IRP bank0
  2222  0767  0800               	movf	0,w
  2223  0768  00A9               	movwf	sprintf@val
  2224  0769  0A84               	incf	4,f
  2225  076A  0800               	movf	0,w
  2226  076B  00AA               	movwf	sprintf@val+1
  2227  076C  3002               	movlw	2
  2228  076D  00A3               	movwf	??_sprintf
  2229  076E  0823               	movf	??_sprintf,w
  2230  076F  07A6               	addwf	sprintf@ap,f
  2231                           
  2232                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  2233  0770  1FAA               	btfss	sprintf@val+1,7
  2234  0771  2F7B               	goto	l1525
  2235                           
  2236                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  2237  0772  3003               	movlw	3
  2238  0773  00A3               	movwf	??_sprintf
  2239  0774  0823               	movf	??_sprintf,w
  2240  0775  04A7               	iorwf	sprintf@flag,f
  2241                           
  2242                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  2243  0776  09A9               	comf	sprintf@val,f
  2244  0777  09AA               	comf	sprintf@val+1,f
  2245  0778  0AA9               	incf	sprintf@val,f
  2246  0779  1903               	skipnz
  2247  077A  0AAA               	incf	sprintf@val+1,f
  2248  077B                     l1525:	
  2249                           
  2250                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2251  077B  01AC               	clrf	sprintf@c
  2252  077C  0AAC               	incf	sprintf@c,f
  2253  077D                     l1531:	
  2254                           
  2255                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  2256  077D  082C               	movf	sprintf@c,w
  2257  077E  00A3               	movwf	??_sprintf
  2258  077F  0723               	addwf	??_sprintf,w
  2259  0780  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2260  0781  0084               	movwf	4
  2261  0782  120A  118A  200D  120A  118A  	fcall	stringdir
  2262  0787  00A4               	movwf	??_sprintf+1
  2263  0788  120A  118A  200D  120A  118A  	fcall	stringdir
  2264  078D  00A5               	movwf	??_sprintf+2
  2265  078E  0825               	movf	??_sprintf+2,w
  2266  078F  022A               	subwf	sprintf@val+1,w
  2267  0790  1D03               	skipz
  2268  0791  2F94               	goto	u875
  2269  0792  0824               	movf	??_sprintf+1,w
  2270  0793  0229               	subwf	sprintf@val,w
  2271  0794                     u875:	
  2272  0794  1C03               	btfss	3,0
  2273  0795  2F9E               	goto	l1537
  2274  0796  3001               	movlw	1
  2275  0797  00A3               	movwf	??_sprintf
  2276  0798  0823               	movf	??_sprintf,w
  2277  0799  07AC               	addwf	sprintf@c,f
  2278  079A  3005               	movlw	5
  2279  079B  062C               	xorwf	sprintf@c,w
  2280  079C  1D03               	btfss	3,2
  2281  079D  2F7D               	goto	l1531
  2282  079E                     l1537:	
  2283                           
  2284                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  2285  079E  0827               	movf	sprintf@flag,w
  2286  079F  3903               	andlw	3
  2287  07A0  1903               	btfsc	3,2
  2288  07A1  2FAD               	goto	l1543
  2289                           
  2290                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  2291  07A2  302D               	movlw	45
  2292  07A3  00A3               	movwf	??_sprintf
  2293  07A4  082B               	movf	sprintf@sp,w
  2294  07A5  0084               	movwf	4
  2295  07A6  0823               	movf	??_sprintf,w
  2296  07A7  1383               	bcf	3,7	;select IRP bank0
  2297  07A8  0080               	movwf	0
  2298  07A9  3001               	movlw	1
  2299  07AA  00A3               	movwf	??_sprintf
  2300  07AB  0823               	movf	??_sprintf,w
  2301  07AC  07AB               	addwf	sprintf@sp,f
  2302  07AD                     l1543:	
  2303                           
  2304                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };D
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  2305  07AD  082C               	movf	sprintf@c,w
  2306  07AE  00A3               	movwf	??_sprintf
  2307  07AF  0823               	movf	??_sprintf,w
  2308  07B0  00A8               	movwf	sprintf@prec
  2309  07B1                     l1551:	
  2310                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2311                           
  2312                           
  2313                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2314  07B1  30FF               	movlw	255
  2315  07B2  00A3               	movwf	??_sprintf
  2316  07B3  0823               	movf	??_sprintf,w
  2317  07B4  07A8               	addwf	sprintf@prec,f
  2318  07B5  0A28               	incf	sprintf@prec,w
  2319  07B6  1903               	btfsc	3,2
  2320  07B7  2F26               	goto	l1553
  2321                           
  2322                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  2323  07B8  300A               	movlw	10
  2324  07B9  00F8               	movwf	___lwmod@divisor
  2325  07BA  3000               	movlw	0
  2326  07BB  00F9               	movwf	___lwmod@divisor+1
  2327  07BC  0828               	movf	sprintf@prec,w
  2328  07BD  00A3               	movwf	??_sprintf
  2329  07BE  0723               	addwf	??_sprintf,w
  2330  07BF  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2331  07C0  0084               	movwf	4
  2332  07C1  120A  118A  200D  120A  118A  	fcall	stringdir
  2333  07C6  00F0               	movwf	___lwdiv@divisor
  2334  07C7  120A  118A  200D  120A  118A  	fcall	stringdir
  2335  07CC  00F1               	movwf	___lwdiv@divisor+1
  2336  07CD  082A               	movf	sprintf@val+1,w
  2337  07CE  00F3               	movwf	___lwdiv@dividend+1
  2338  07CF  0829               	movf	sprintf@val,w
  2339  07D0  00F2               	movwf	___lwdiv@dividend
  2340  07D1  120A  118A  23B4  120A  118A  	fcall	___lwdiv
  2341  07D6  0871               	movf	?___lwdiv+1,w
  2342  07D7  00FB               	movwf	___lwmod@dividend+1
  2343  07D8  0870               	movf	?___lwdiv,w
  2344  07D9  00FA               	movwf	___lwmod@dividend
  2345  07DA  120A  118A  2313  120A  118A  	fcall	___lwmod
  2346  07DF  0878               	movf	?___lwmod,w
  2347  07E0  3E30               	addlw	48
  2348  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  2349  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  2350  07E3  00A4               	movwf	??_sprintf+1
  2351  07E4  0824               	movf	??_sprintf+1,w
  2352  07E5  00AC               	movwf	sprintf@c
  2353                           
  2354                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  2355  07E6  082C               	movf	sprintf@c,w
  2356  07E7  00A3               	movwf	??_sprintf
  2357  07E8  082B               	movf	sprintf@sp,w
  2358  07E9  0084               	movwf	4
  2359  07EA  0823               	movf	??_sprintf,w
  2360  07EB  1383               	bcf	3,7	;select IRP bank0
  2361  07EC  0080               	movwf	0
  2362  07ED  3001               	movlw	1
  2363  07EE  00A3               	movwf	??_sprintf
  2364  07EF  0823               	movf	??_sprintf,w
  2365  07F0  07AB               	addwf	sprintf@sp,f
  2366  07F1  2FB1               	goto	l1551
  2367  07F2                     l1555:	
  2368                           
  2369                           ;D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  2370  07F2  082B               	movf	sprintf@sp,w
  2371  07F3  0084               	movwf	4
  2372  07F4  1383               	bcf	3,7	;select IRP bank0
  2373  07F5  0180               	clrf	0
  2374  07F6  0008               	return
  2375  07F7                     __end_of_sprintf:	
  2376                           
  2377                           	psect	text11
  2378  0313                     __ptext11:	
  2379 ;; *************** function ___lwmod *****************
  2380 ;; Defined at:
  2381 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  divisor         2    8[COMMON] unsigned int 
  2384 ;;  dividend        2   10[COMMON] unsigned int 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  counter         1   13[COMMON] unsigned char 
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  2    8[COMMON] unsigned int 
  2389 ;; Registers used:
  2390 ;;		wreg, status,2, status,0
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2396 ;;      Params:         4       0       0       0       0
  2397 ;;      Locals:         1       0       0       0       0
  2398 ;;      Temps:          1       0       0       0       0
  2399 ;;      Totals:         6       0       0       0       0
  2400 ;;Total ram usage:        6 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; This function calls:
  2403 ;;		Nothing
  2404 ;; This function is called by:
  2405 ;;		_sprintf
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           
  2410                           ;psect for function ___lwmod
  2411  0313                     ___lwmod:	
  2412                           
  2413                           ;incstack = 0
  2414                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2415  0313  0878               	movf	___lwmod@divisor,w
  2416  0314  0479               	iorwf	___lwmod@divisor+1,w
  2417  0315  1903               	btfsc	3,2
  2418  0316  2B40               	goto	l1395
  2419  0317  01FD               	clrf	___lwmod@counter
  2420  0318  0AFD               	incf	___lwmod@counter,f
  2421  0319                     l1385:	
  2422  0319  1BF9               	btfsc	___lwmod@divisor+1,7
  2423  031A  2B27               	goto	l1387
  2424  031B  3001               	movlw	1
  2425  031C                     u775:	
  2426  031C  1003               	clrc
  2427  031D  0DF8               	rlf	___lwmod@divisor,f
  2428  031E  0DF9               	rlf	___lwmod@divisor+1,f
  2429  031F  3EFF               	addlw	-1
  2430  0320  1D03               	skipz
  2431  0321  2B1C               	goto	u775
  2432  0322  3001               	movlw	1
  2433  0323  00FC               	movwf	??___lwmod
  2434  0324  087C               	movf	??___lwmod,w
  2435  0325  07FD               	addwf	___lwmod@counter,f
  2436  0326  2B19               	goto	l1385
  2437  0327                     l1387:	
  2438  0327  0879               	movf	___lwmod@divisor+1,w
  2439  0328  027B               	subwf	___lwmod@dividend+1,w
  2440  0329  1D03               	skipz
  2441  032A  2B2D               	goto	u795
  2442  032B  0878               	movf	___lwmod@divisor,w
  2443  032C  027A               	subwf	___lwmod@dividend,w
  2444  032D                     u795:	
  2445  032D  1C03               	skipc
  2446  032E  2B35               	goto	l1391
  2447  032F  0878               	movf	___lwmod@divisor,w
  2448  0330  02FA               	subwf	___lwmod@dividend,f
  2449  0331  0879               	movf	___lwmod@divisor+1,w
  2450  0332  1C03               	skipc
  2451  0333  03FB               	decf	___lwmod@dividend+1,f
  2452  0334  02FB               	subwf	___lwmod@dividend+1,f
  2453  0335                     l1391:	
  2454  0335  3001               	movlw	1
  2455  0336                     u805:	
  2456  0336  1003               	clrc
  2457  0337  0CF9               	rrf	___lwmod@divisor+1,f
  2458  0338  0CF8               	rrf	___lwmod@divisor,f
  2459  0339  3EFF               	addlw	-1
  2460  033A  1D03               	skipz
  2461  033B  2B36               	goto	u805
  2462  033C  3001               	movlw	1
  2463  033D  02FD               	subwf	___lwmod@counter,f
  2464  033E  1D03               	btfss	3,2
  2465  033F  2B27               	goto	l1387
  2466  0340                     l1395:	
  2467  0340  087B               	movf	___lwmod@dividend+1,w
  2468  0341  00F9               	movwf	?___lwmod+1
  2469  0342  087A               	movf	___lwmod@dividend,w
  2470  0343  00F8               	movwf	?___lwmod
  2471  0344  0008               	return
  2472  0345                     __end_of___lwmod:	
  2473                           
  2474                           	psect	text12
  2475  03B4                     __ptext12:	
  2476 ;; *************** function ___lwdiv *****************
  2477 ;; Defined at:
  2478 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  divisor         2    0[COMMON] unsigned int 
  2481 ;;  dividend        2    2[COMMON] unsigned int 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  quotient        2    5[COMMON] unsigned int 
  2484 ;;  counter         1    7[COMMON] unsigned char 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  2    0[COMMON] unsigned int 
  2487 ;; Registers used:
  2488 ;;		wreg, status,2, status,0
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2494 ;;      Params:         4       0       0       0       0
  2495 ;;      Locals:         3       0       0       0       0
  2496 ;;      Temps:          1       0       0       0       0
  2497 ;;      Totals:         8       0       0       0       0
  2498 ;;Total ram usage:        8 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		_sprintf
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           
  2508                           ;psect for function ___lwdiv
  2509  03B4                     ___lwdiv:	
  2510                           
  2511                           ;incstack = 0
  2512                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2513  03B4  01F5               	clrf	___lwdiv@quotient
  2514  03B5  01F6               	clrf	___lwdiv@quotient+1
  2515  03B6  0870               	movf	___lwdiv@divisor,w
  2516  03B7  0471               	iorwf	___lwdiv@divisor+1,w
  2517  03B8  1903               	btfsc	3,2
  2518  03B9  2BEB               	goto	l1373
  2519  03BA  01F7               	clrf	___lwdiv@counter
  2520  03BB  0AF7               	incf	___lwdiv@counter,f
  2521  03BC                     l1361:	
  2522  03BC  1BF1               	btfsc	___lwdiv@divisor+1,7
  2523  03BD  2BCA               	goto	l1363
  2524  03BE  3001               	movlw	1
  2525  03BF                     u705:	
  2526  03BF  1003               	clrc
  2527  03C0  0DF0               	rlf	___lwdiv@divisor,f
  2528  03C1  0DF1               	rlf	___lwdiv@divisor+1,f
  2529  03C2  3EFF               	addlw	-1
  2530  03C3  1D03               	skipz
  2531  03C4  2BBF               	goto	u705
  2532  03C5  3001               	movlw	1
  2533  03C6  00F4               	movwf	??___lwdiv
  2534  03C7  0874               	movf	??___lwdiv,w
  2535  03C8  07F7               	addwf	___lwdiv@counter,f
  2536  03C9  2BBC               	goto	l1361
  2537  03CA                     l1363:	
  2538  03CA  3001               	movlw	1
  2539  03CB                     u725:	
  2540  03CB  1003               	clrc
  2541  03CC  0DF5               	rlf	___lwdiv@quotient,f
  2542  03CD  0DF6               	rlf	___lwdiv@quotient+1,f
  2543  03CE  3EFF               	addlw	-1
  2544  03CF  1D03               	skipz
  2545  03D0  2BCB               	goto	u725
  2546  03D1  0871               	movf	___lwdiv@divisor+1,w
  2547  03D2  0273               	subwf	___lwdiv@dividend+1,w
  2548  03D3  1D03               	skipz
  2549  03D4  2BD7               	goto	u735
  2550  03D5  0870               	movf	___lwdiv@divisor,w
  2551  03D6  0272               	subwf	___lwdiv@dividend,w
  2552  03D7                     u735:	
  2553  03D7  1C03               	skipc
  2554  03D8  2BE0               	goto	l1369
  2555  03D9  0870               	movf	___lwdiv@divisor,w
  2556  03DA  02F2               	subwf	___lwdiv@dividend,f
  2557  03DB  0871               	movf	___lwdiv@divisor+1,w
  2558  03DC  1C03               	skipc
  2559  03DD  03F3               	decf	___lwdiv@dividend+1,f
  2560  03DE  02F3               	subwf	___lwdiv@dividend+1,f
  2561  03DF  1475               	bsf	___lwdiv@quotient,0
  2562  03E0                     l1369:	
  2563  03E0  3001               	movlw	1
  2564  03E1                     u745:	
  2565  03E1  1003               	clrc
  2566  03E2  0CF1               	rrf	___lwdiv@divisor+1,f
  2567  03E3  0CF0               	rrf	___lwdiv@divisor,f
  2568  03E4  3EFF               	addlw	-1
  2569  03E5  1D03               	skipz
  2570  03E6  2BE1               	goto	u745
  2571  03E7  3001               	movlw	1
  2572  03E8  02F7               	subwf	___lwdiv@counter,f
  2573  03E9  1D03               	btfss	3,2
  2574  03EA  2BCA               	goto	l1363
  2575  03EB                     l1373:	
  2576  03EB  0876               	movf	___lwdiv@quotient+1,w
  2577  03EC  00F1               	movwf	?___lwdiv+1
  2578  03ED  0875               	movf	___lwdiv@quotient,w
  2579  03EE  00F0               	movwf	?___lwdiv
  2580  03EF  0008               	return
  2581  03F0                     __end_of___lwdiv:	
  2582                           
  2583                           	psect	text13
  2584  0210                     __ptext13:	
  2585 ;; *************** function ___bmul *****************
  2586 ;; Defined at:
  2587 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  multiplier      1    wreg     unsigned char 
  2590 ;;  multiplicand    1    0[COMMON] unsigned char 
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;  multiplier      1    3[COMMON] unsigned char 
  2593 ;;  product         1    2[COMMON] unsigned char 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      unsigned char 
  2596 ;; Registers used:
  2597 ;;		wreg, status,2, status,0
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2603 ;;      Params:         1       0       0       0       0
  2604 ;;      Locals:         2       0       0       0       0
  2605 ;;      Temps:          1       0       0       0       0
  2606 ;;      Totals:         4       0       0       0       0
  2607 ;;Total ram usage:        4 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_get_temp
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           
  2617                           ;psect for function ___bmul
  2618  0210                     ___bmul:	
  2619                           
  2620                           ;incstack = 0
  2621                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2622                           ;___bmul@multiplier stored from wreg
  2623  0210  00F3               	movwf	___bmul@multiplier
  2624  0211  01F2               	clrf	___bmul@product
  2625  0212                     l1575:	
  2626  0212  1C73               	btfss	___bmul@multiplier,0
  2627  0213  2A18               	goto	l1579
  2628  0214  0870               	movf	___bmul@multiplicand,w
  2629  0215  00F1               	movwf	??___bmul
  2630  0216  0871               	movf	??___bmul,w
  2631  0217  07F2               	addwf	___bmul@product,f
  2632  0218                     l1579:	
  2633  0218  1003               	clrc
  2634  0219  0DF0               	rlf	___bmul@multiplicand,f
  2635  021A  1003               	clrc
  2636  021B  0CF3               	rrf	___bmul@multiplier,f
  2637  021C  0873               	movf	___bmul@multiplier,w
  2638  021D  1D03               	btfss	3,2
  2639  021E  2A12               	goto	l1575
  2640  021F  0872               	movf	___bmul@product,w
  2641  0220  0008               	return
  2642  0221                     __end_of___bmul:	
  2643                           
  2644                           	psect	text14
  2645  01ED                     __ptext14:	
  2646 ;; *************** function _I2C_Master_RepeatedStart *****************
  2647 ;; Defined at:
  2648 ;;		line 47 in file "./I2C.h"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;		None
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;		None
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0, pclath, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2662 ;;      Params:         0       0       0       0       0
  2663 ;;      Locals:         0       0       0       0       0
  2664 ;;      Temps:          0       0       0       0       0
  2665 ;;      Totals:         0       0       0       0       0
  2666 ;;Total ram usage:        0 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:    1
  2669 ;; This function calls:
  2670 ;;		_I2C_Master_Wait
  2671 ;; This function is called by:
  2672 ;;		_get_time
  2673 ;;		_get_temp
  2674 ;;		_get_day
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           
  2679                           ;psect for function _I2C_Master_RepeatedStart
  2680  01ED                     _I2C_Master_RepeatedStart:	
  2681                           
  2682                           ;./I2C.h: 49:     I2C_Master_Wait();
  2683                           
  2684                           ;incstack = 0
  2685                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2686  01ED  120A  118A  21FC   	fcall	_I2C_Master_Wait
  2687                           
  2688                           ;./I2C.h: 50:     SSPCON2bits.RSEN = 1;
  2689  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  2690  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  2691  01F2  1491               	bsf	17,1	;volatile
  2692  01F3  0008               	return
  2693  01F4                     __end_of_I2C_Master_RepeatedStart:	
  2694                           
  2695                           	psect	text15
  2696  0255                     __ptext15:	
  2697 ;; *************** function _get_hall *****************
  2698 ;; Defined at:
  2699 ;;		line 163 in file "mainMaster.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;		None
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;  key             1    7[COMMON] unsigned char 
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      unsigned char 
  2706 ;; Registers used:
  2707 ;;		wreg, status,2, status,0, pclath, cstack
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2713 ;;      Params:         0       0       0       0       0
  2714 ;;      Locals:         1       0       0       0       0
  2715 ;;      Temps:          1       0       0       0       0
  2716 ;;      Totals:         2       0       0       0       0
  2717 ;;Total ram usage:        2 bytes
  2718 ;; Hardware stack levels used:    1
  2719 ;; Hardware stack levels required when called:    2
  2720 ;; This function calls:
  2721 ;;		_I2C_Master_Read
  2722 ;;		_I2C_Master_Start
  2723 ;;		_I2C_Master_Stop
  2724 ;;		_I2C_Master_Write
  2725 ;; This function is called by:
  2726 ;;		_main
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           
  2731                           ;psect for function _get_hall
  2732  0255                     _get_hall:	
  2733                           
  2734                           ;mainMaster.c: 164:     char key;;mainMaster.c: 166:     I2C_Master_Start();
  2735                           
  2736                           ;incstack = 0
  2737                           ; Regs used in _get_hall: [wreg+status,2+status,0+pclath+cstack]
  2738  0255  120A  118A  21DF  120A  118A  	fcall	_I2C_Master_Start
  2739                           
  2740                           ;mainMaster.c: 167:     I2C_Master_Write(0x11);
  2741  025A  3011               	movlw	17
  2742  025B  00F0               	movwf	I2C_Master_Write@d
  2743  025C  3000               	movlw	0
  2744  025D  00F1               	movwf	I2C_Master_Write@d+1
  2745  025E  120A  118A  21F4  120A  118A  	fcall	_I2C_Master_Write
  2746                           
  2747                           ;mainMaster.c: 168:     key = I2C_Master_Read(0);
  2748  0263  3000               	movlw	0
  2749  0264  00F0               	movwf	I2C_Master_Read@a
  2750  0265  00F1               	movwf	I2C_Master_Read@a+1
  2751  0266  120A  118A  22E7  120A  118A  	fcall	_I2C_Master_Read
  2752  026B  0870               	movf	?_I2C_Master_Read,w
  2753  026C  00F6               	movwf	??_get_hall
  2754  026D  0876               	movf	??_get_hall,w
  2755  026E  00F7               	movwf	get_hall@key
  2756                           
  2757                           ;mainMaster.c: 169:     I2C_Master_Stop();
  2758  026F  120A  118A  21E6   	fcall	_I2C_Master_Stop
  2759                           
  2760                           ;mainMaster.c: 171:     return (key);
  2761  0272  0877               	movf	get_hall@key,w
  2762  0273  0008               	return
  2763  0274                     __end_of_get_hall:	
  2764                           
  2765                           	psect	text16
  2766  01F4                     __ptext16:	
  2767 ;; *************** function _I2C_Master_Write *****************
  2768 ;; Defined at:
  2769 ;;		line 65 in file "./I2C.h"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  d               2    0[COMMON] unsigned int 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0, pclath, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2783 ;;      Params:         2       0       0       0       0
  2784 ;;      Locals:         0       0       0       0       0
  2785 ;;      Temps:          0       0       0       0       0
  2786 ;;      Totals:         2       0       0       0       0
  2787 ;;Total ram usage:        2 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    1
  2790 ;; This function calls:
  2791 ;;		_I2C_Master_Wait
  2792 ;; This function is called by:
  2793 ;;		_get_time
  2794 ;;		_get_temp
  2795 ;;		_get_hall
  2796 ;;		_write_RTC
  2797 ;;		_get_day
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           
  2802                           ;psect for function _I2C_Master_Write
  2803  01F4                     _I2C_Master_Write:	
  2804                           
  2805                           ;./I2C.h: 65: void I2C_Master_Write(unsigned d);./I2C.h: 66: {;./I2C.h: 67:     I2C_Mast
      +                          er_Wait();
  2806                           
  2807                           ;incstack = 0
  2808                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2809  01F4  120A  118A  21FC   	fcall	_I2C_Master_Wait
  2810                           
  2811                           ;./I2C.h: 68:     SSPBUF = d;
  2812  01F7  0870               	movf	I2C_Master_Write@d,w
  2813  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  2814  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  2815  01FA  0093               	movwf	19	;volatile
  2816  01FB  0008               	return
  2817  01FC                     __end_of_I2C_Master_Write:	
  2818                           
  2819                           	psect	text17
  2820  01E6                     __ptext17:	
  2821 ;; *************** function _I2C_Master_Stop *****************
  2822 ;; Defined at:
  2823 ;;		line 55 in file "./I2C.h"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;		None
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;		None
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2, status,0, pclath, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2837 ;;      Params:         0       0       0       0       0
  2838 ;;      Locals:         0       0       0       0       0
  2839 ;;      Temps:          0       0       0       0       0
  2840 ;;      Totals:         0       0       0       0       0
  2841 ;;Total ram usage:        0 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; Hardware stack levels required when called:    1
  2844 ;; This function calls:
  2845 ;;		_I2C_Master_Wait
  2846 ;; This function is called by:
  2847 ;;		_get_time
  2848 ;;		_get_temp
  2849 ;;		_get_hall
  2850 ;;		_write_RTC
  2851 ;;		_get_day
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           
  2856                           ;psect for function _I2C_Master_Stop
  2857  01E6                     _I2C_Master_Stop:	
  2858                           
  2859                           ;./I2C.h: 57:     I2C_Master_Wait();
  2860                           
  2861                           ;incstack = 0
  2862                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2863  01E6  120A  118A  21FC   	fcall	_I2C_Master_Wait
  2864                           
  2865                           ;./I2C.h: 58:     SSPCON2bits.PEN = 1;
  2866  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  2867  01EA  1303               	bcf	3,6	;RP1=0, select bank1
  2868  01EB  1511               	bsf	17,2	;volatile
  2869  01EC  0008               	return
  2870  01ED                     __end_of_I2C_Master_Stop:	
  2871                           
  2872                           	psect	text18
  2873  01DF                     __ptext18:	
  2874 ;; *************** function _I2C_Master_Start *****************
  2875 ;; Defined at:
  2876 ;;		line 39 in file "./I2C.h"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;		None
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;		None
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      void 
  2883 ;; Registers used:
  2884 ;;		wreg, status,2, status,0, pclath, cstack
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2890 ;;      Params:         0       0       0       0       0
  2891 ;;      Locals:         0       0       0       0       0
  2892 ;;      Temps:          0       0       0       0       0
  2893 ;;      Totals:         0       0       0       0       0
  2894 ;;Total ram usage:        0 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:    1
  2897 ;; This function calls:
  2898 ;;		_I2C_Master_Wait
  2899 ;; This function is called by:
  2900 ;;		_get_time
  2901 ;;		_get_temp
  2902 ;;		_get_hall
  2903 ;;		_write_RTC
  2904 ;;		_get_day
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           
  2909                           ;psect for function _I2C_Master_Start
  2910  01DF                     _I2C_Master_Start:	
  2911                           
  2912                           ;./I2C.h: 41:     I2C_Master_Wait();
  2913                           
  2914                           ;incstack = 0
  2915                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2916  01DF  120A  118A  21FC   	fcall	_I2C_Master_Wait
  2917                           
  2918                           ;./I2C.h: 42:     SSPCON2bits.SEN = 1;
  2919  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  2920  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  2921  01E4  1411               	bsf	17,0	;volatile
  2922  01E5  0008               	return
  2923  01E6                     __end_of_I2C_Master_Start:	
  2924                           
  2925                           	psect	text19
  2926  02E7                     __ptext19:	
  2927 ;; *************** function _I2C_Master_Read *****************
  2928 ;; Defined at:
  2929 ;;		line 74 in file "./I2C.h"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  a               2    0[COMMON] unsigned short 
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;  temp            2    4[COMMON] unsigned short 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  2    0[COMMON] unsigned short 
  2936 ;; Registers used:
  2937 ;;		wreg, status,2, status,0, pclath, cstack
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2943 ;;      Params:         2       0       0       0       0
  2944 ;;      Locals:         2       0       0       0       0
  2945 ;;      Temps:          2       0       0       0       0
  2946 ;;      Totals:         6       0       0       0       0
  2947 ;;Total ram usage:        6 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    1
  2950 ;; This function calls:
  2951 ;;		_I2C_Master_Wait
  2952 ;; This function is called by:
  2953 ;;		_get_time
  2954 ;;		_get_temp
  2955 ;;		_get_hall
  2956 ;;		_get_day
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           
  2961                           ;psect for function _I2C_Master_Read
  2962  02E7                     _I2C_Master_Read:	
  2963                           
  2964                           ;./I2C.h: 74: unsigned short I2C_Master_Read(unsigned short a);./I2C.h: 75: {;./I2C.h: 7
      +                          6:     unsigned short temp;;./I2C.h: 77:     I2C_Master_Wait();
  2965                           
  2966                           ;incstack = 0
  2967                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2968  02E7  120A  118A  21FC  120A  118A  	fcall	_I2C_Master_Wait
  2969                           
  2970                           ;./I2C.h: 78:     RCEN = 1;
  2971  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  2972  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  2973  02EE  1591               	bsf	17,3	;volatile
  2974                           
  2975                           ;./I2C.h: 79:     I2C_Master_Wait();
  2976  02EF  120A  118A  21FC  120A  118A  	fcall	_I2C_Master_Wait
  2977                           
  2978                           ;./I2C.h: 80:     temp = SSPBUF;
  2979  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2980  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2981  02F6  0813               	movf	19,w	;volatile
  2982  02F7  00F2               	movwf	??_I2C_Master_Read
  2983  02F8  01F3               	clrf	??_I2C_Master_Read+1
  2984  02F9  0872               	movf	??_I2C_Master_Read,w
  2985  02FA  00F4               	movwf	I2C_Master_Read@temp
  2986  02FB  0873               	movf	??_I2C_Master_Read+1,w
  2987  02FC  00F5               	movwf	I2C_Master_Read@temp+1
  2988                           
  2989                           ;./I2C.h: 81:     I2C_Master_Wait();
  2990  02FD  120A  118A  21FC  120A  118A  	fcall	_I2C_Master_Wait
  2991                           
  2992                           ;./I2C.h: 83:     if(a == 1){
  2993  0302  0370               	decf	I2C_Master_Read@a,w
  2994  0303  0471               	iorwf	I2C_Master_Read@a+1,w
  2995  0304  1D03               	btfss	3,2
  2996  0305  2B0A               	goto	l84
  2997                           
  2998                           ;./I2C.h: 84:         SSPCON2bits.ACKDT = 0;
  2999  0306  1683               	bsf	3,5	;RP0=1, select bank1
  3000  0307  1303               	bcf	3,6	;RP1=0, select bank1
  3001  0308  1291               	bcf	17,5	;volatile
  3002                           
  3003                           ;./I2C.h: 85:     }else{
  3004  0309  2B0D               	goto	l85
  3005  030A                     l84:	
  3006                           
  3007                           ;./I2C.h: 86:         SSPCON2bits.ACKDT = 1;
  3008  030A  1683               	bsf	3,5	;RP0=1, select bank1
  3009  030B  1303               	bcf	3,6	;RP1=0, select bank1
  3010  030C  1691               	bsf	17,5	;volatile
  3011  030D                     l85:	
  3012                           ;./I2C.h: 87:     }
  3013                           
  3014                           
  3015                           ;./I2C.h: 88:     SSPCON2bits.ACKEN = 1;
  3016  030D  1611               	bsf	17,4	;volatile
  3017                           
  3018                           ;./I2C.h: 89:     return temp;
  3019  030E  0875               	movf	I2C_Master_Read@temp+1,w
  3020  030F  00F1               	movwf	?_I2C_Master_Read+1
  3021  0310  0874               	movf	I2C_Master_Read@temp,w
  3022  0311  00F0               	movwf	?_I2C_Master_Read
  3023  0312  0008               	return
  3024  0313                     __end_of_I2C_Master_Read:	
  3025                           
  3026                           	psect	text20
  3027  01FC                     __ptext20:	
  3028 ;; *************** function _I2C_Master_Wait *****************
  3029 ;; Defined at:
  3030 ;;		line 32 in file "./I2C.h"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3044 ;;      Params:         0       0       0       0       0
  3045 ;;      Locals:         0       0       0       0       0
  3046 ;;      Temps:          0       0       0       0       0
  3047 ;;      Totals:         0       0       0       0       0
  3048 ;;Total ram usage:        0 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_I2C_Master_Start
  3054 ;;		_I2C_Master_RepeatedStart
  3055 ;;		_I2C_Master_Stop
  3056 ;;		_I2C_Master_Write
  3057 ;;		_I2C_Master_Read
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           
  3062                           ;psect for function _I2C_Master_Wait
  3063  01FC                     _I2C_Master_Wait:	
  3064  01FC                     l66:	
  3065                           ;./I2C.h: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3066                           
  3067                           ;incstack = 0
  3068                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3069                           
  3070  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  3071  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  3072  01FE  1914               	btfsc	20,2	;volatile
  3073  01FF  29FC               	goto	l66
  3074  0200  0811               	movf	17,w	;volatile
  3075  0201  391F               	andlw	31
  3076  0202  1903               	btfsc	3,2
  3077  0203  0008               	return
  3078  0204  29FC               	goto	l66
  3079  0205                     __end_of_I2C_Master_Wait:	
  3080                           
  3081                           	psect	text21
  3082  03F0                     __ptext21:	
  3083 ;; *************** function _Lcd_Write_String *****************
  3084 ;; Defined at:
  3085 ;;		line 100 in file "./LCD4bits.h"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  a               2    5[COMMON] PTR unsigned char 
  3088 ;;		 -> NULL(0), get_temp@temperature(6), get_time@string_time(6), STR_2(9), 
  3089 ;;		 -> STR_1(9), 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;  i               2   10[COMMON] int 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  1    wreg      void 
  3094 ;; Registers used:
  3095 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3101 ;;      Params:         2       0       0       0       0
  3102 ;;      Locals:         2       0       0       0       0
  3103 ;;      Temps:          3       0       0       0       0
  3104 ;;      Totals:         7       0       0       0       0
  3105 ;;Total ram usage:        7 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    2
  3108 ;; This function calls:
  3109 ;;		_Lcd_Write_Char
  3110 ;; This function is called by:
  3111 ;;		_main
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           
  3116                           ;psect for function _Lcd_Write_String
  3117  03F0                     _Lcd_Write_String:	
  3118                           
  3119                           ;./LCD4bits.h: 100: void Lcd_Write_String(char *a);./LCD4bits.h: 101: {;./LCD4bits.h: 10
      +                          2:  int i;;./LCD4bits.h: 103:  for(i=0;a[i]!='\0';i++)
  3120                           
  3121                           ;incstack = 0
  3122                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3123  03F0  01FA               	clrf	Lcd_Write_String@i
  3124  03F1  01FB               	clrf	Lcd_Write_String@i+1
  3125  03F2                     l1615:	
  3126  03F2  087A               	movf	Lcd_Write_String@i,w
  3127  03F3  0775               	addwf	Lcd_Write_String@a,w
  3128  03F4  00F8               	movwf	??_Lcd_Write_String+1
  3129  03F5  0876               	movf	Lcd_Write_String@a+1,w
  3130  03F6  00F7               	movwf	??_Lcd_Write_String
  3131  03F7  1803               	skipnc
  3132  03F8  0AF7               	incf	??_Lcd_Write_String,f
  3133  03F9  1BFA               	btfsc	Lcd_Write_String@i,7
  3134  03FA  03F7               	decf	??_Lcd_Write_String,f
  3135  03FB  0877               	movf	??_Lcd_Write_String,w
  3136  03FC  00F9               	movwf	??_Lcd_Write_String+2
  3137  03FD  0879               	movf	??_Lcd_Write_String+2,w
  3138  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  3139  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  3140  0400  00FF               	movwf	127
  3141  0401  0878               	movf	??_Lcd_Write_String+1,w
  3142  0402  0084               	movwf	4
  3143  0403  120A  118A  2003  120A  118A  	fcall	stringtab
  3144  0408  3A00               	xorlw	0
  3145  0409  1903               	btfsc	3,2
  3146  040A  0008               	return
  3147                           
  3148                           ;./LCD4bits.h: 104:     Lcd_Write_Char(a[i]);
  3149  040B  087A               	movf	Lcd_Write_String@i,w
  3150  040C  0775               	addwf	Lcd_Write_String@a,w
  3151  040D  00F8               	movwf	??_Lcd_Write_String+1
  3152  040E  0876               	movf	Lcd_Write_String@a+1,w
  3153  040F  00F7               	movwf	??_Lcd_Write_String
  3154  0410  1803               	skipnc
  3155  0411  0AF7               	incf	??_Lcd_Write_String,f
  3156  0412  1BFA               	btfsc	Lcd_Write_String@i,7
  3157  0413  03F7               	decf	??_Lcd_Write_String,f
  3158  0414  0877               	movf	??_Lcd_Write_String,w
  3159  0415  00F9               	movwf	??_Lcd_Write_String+2
  3160  0416  0879               	movf	??_Lcd_Write_String+2,w
  3161  0417  1283               	bcf	3,5	;RP0=0, select bank0
  3162  0418  1303               	bcf	3,6	;RP1=0, select bank0
  3163  0419  00FF               	movwf	127
  3164  041A  0878               	movf	??_Lcd_Write_String+1,w
  3165  041B  0084               	movwf	4
  3166  041C  120A  118A  2003  120A  118A  	fcall	stringtab
  3167  0421  120A  118A  237B  120A  118A  	fcall	_Lcd_Write_Char
  3168  0426  3001               	movlw	1
  3169  0427  07FA               	addwf	Lcd_Write_String@i,f
  3170  0428  1803               	skipnc
  3171  0429  0AFB               	incf	Lcd_Write_String@i+1,f
  3172  042A  3000               	movlw	0
  3173  042B  07FB               	addwf	Lcd_Write_String@i+1,f
  3174  042C  2BF2               	goto	l1615
  3175  042D                     __end_of_Lcd_Write_String:	
  3176                           
  3177                           	psect	text22
  3178  037B                     __ptext22:	
  3179 ;; *************** function _Lcd_Write_Char *****************
  3180 ;; Defined at:
  3181 ;;		line 84 in file "./LCD4bits.h"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  a               1    wreg     unsigned char 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  a               1    4[COMMON] unsigned char 
  3186 ;;  y               1    3[COMMON] unsigned char 
  3187 ;;  temp            1    2[COMMON] unsigned char 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      void 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0, pclath, cstack
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3197 ;;      Params:         0       0       0       0       0
  3198 ;;      Locals:         3       0       0       0       0
  3199 ;;      Temps:          1       0       0       0       0
  3200 ;;      Totals:         4       0       0       0       0
  3201 ;;Total ram usage:        4 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    1
  3204 ;; This function calls:
  3205 ;;		_Lcd_Port
  3206 ;; This function is called by:
  3207 ;;		_Lcd_Write_String
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           
  3212                           ;psect for function _Lcd_Write_Char
  3213  037B                     _Lcd_Write_Char:	
  3214                           
  3215                           ;incstack = 0
  3216                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3217                           ;Lcd_Write_Char@a stored from wreg
  3218  037B  00F4               	movwf	Lcd_Write_Char@a
  3219                           
  3220                           ;./LCD4bits.h: 84: void Lcd_Write_Char(char a);./LCD4bits.h: 85: {;./LCD4bits.h: 86:    
      +                          char temp,y;;./LCD4bits.h: 87:    temp = a&0x0F;
  3221  037C  0874               	movf	Lcd_Write_Char@a,w
  3222  037D  390F               	andlw	15
  3223  037E  00F1               	movwf	??_Lcd_Write_Char
  3224  037F  0871               	movf	??_Lcd_Write_Char,w
  3225  0380  00F2               	movwf	Lcd_Write_Char@temp
  3226                           
  3227                           ;./LCD4bits.h: 88:    y = a&0xF0;
  3228  0381  0874               	movf	Lcd_Write_Char@a,w
  3229  0382  39F0               	andlw	240
  3230  0383  00F1               	movwf	??_Lcd_Write_Char
  3231  0384  0871               	movf	??_Lcd_Write_Char,w
  3232  0385  00F3               	movwf	Lcd_Write_Char@y
  3233                           
  3234                           ;./LCD4bits.h: 89:    PORTBbits.RB4 = 1;
  3235  0386  1283               	bcf	3,5	;RP0=0, select bank0
  3236  0387  1303               	bcf	3,6	;RP1=0, select bank0
  3237  0388  1606               	bsf	6,4	;volatile
  3238                           
  3239                           ;./LCD4bits.h: 90:    Lcd_Port(y>>4);
  3240  0389  0873               	movf	Lcd_Write_Char@y,w
  3241  038A  00F1               	movwf	??_Lcd_Write_Char
  3242  038B  3004               	movlw	4
  3243  038C                     u845:	
  3244  038C  1003               	clrc
  3245  038D  0CF1               	rrf	??_Lcd_Write_Char,f
  3246  038E  3EFF               	addlw	-1
  3247  038F  1D03               	skipz
  3248  0390  2B8C               	goto	u845
  3249  0391  0871               	movf	??_Lcd_Write_Char,w
  3250  0392  120A  118A  2221  120A  118A  	fcall	_Lcd_Port
  3251                           
  3252                           ;./LCD4bits.h: 91:    PORTBbits.RB5 = 1;
  3253  0397  1283               	bcf	3,5	;RP0=0, select bank0
  3254  0398  1303               	bcf	3,6	;RP1=0, select bank0
  3255  0399  1686               	bsf	6,5	;volatile
  3256                           
  3257                           ;./LCD4bits.h: 92:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3258  039A  301A               	movlw	26
  3259  039B  00F1               	movwf	??_Lcd_Write_Char
  3260  039C                     u1147:	
  3261  039C  0BF1               	decfsz	??_Lcd_Write_Char,f
  3262  039D  2B9C               	goto	u1147
  3263  039E  0000               	nop
  3264                           
  3265                           ;./LCD4bits.h: 93:    PORTBbits.RB5 = 0;
  3266  039F  1283               	bcf	3,5	;RP0=0, select bank0
  3267  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  3268  03A1  1286               	bcf	6,5	;volatile
  3269                           
  3270                           ;./LCD4bits.h: 94:    Lcd_Port(temp);
  3271  03A2  0872               	movf	Lcd_Write_Char@temp,w
  3272  03A3  120A  118A  2221  120A  118A  	fcall	_Lcd_Port
  3273                           
  3274                           ;./LCD4bits.h: 95:    PORTBbits.RB5 = 1;
  3275  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  3276  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  3277  03AA  1686               	bsf	6,5	;volatile
  3278                           
  3279                           ;./LCD4bits.h: 96:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3280  03AB  301A               	movlw	26
  3281  03AC  00F1               	movwf	??_Lcd_Write_Char
  3282  03AD                     u1157:	
  3283  03AD  0BF1               	decfsz	??_Lcd_Write_Char,f
  3284  03AE  2BAD               	goto	u1157
  3285  03AF  0000               	nop
  3286                           
  3287                           ;./LCD4bits.h: 97:    PORTBbits.RB5 = 0;
  3288  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  3289  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  3290  03B2  1286               	bcf	6,5	;volatile
  3291  03B3  0008               	return
  3292  03B4                     __end_of_Lcd_Write_Char:	
  3293                           
  3294                           	psect	text23
  3295  042D                     __ptext23:	
  3296 ;; *************** function _Lcd_Set_Cursor *****************
  3297 ;; Defined at:
  3298 ;;		line 44 in file "./LCD4bits.h"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  a               1    wreg     unsigned char 
  3301 ;;  b               1    4[COMMON] unsigned char 
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;  a               1    7[COMMON] unsigned char 
  3304 ;;  temp            1   10[COMMON] unsigned char 
  3305 ;;  y               1    9[COMMON] unsigned char 
  3306 ;;  z               1    8[COMMON] unsigned char 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg, status,2, status,0, pclath, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3316 ;;      Params:         1       0       0       0       0
  3317 ;;      Locals:         4       0       0       0       0
  3318 ;;      Temps:          2       0       0       0       0
  3319 ;;      Totals:         7       0       0       0       0
  3320 ;;Total ram usage:        7 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    2
  3323 ;; This function calls:
  3324 ;;		_Lcd_Cmd
  3325 ;; This function is called by:
  3326 ;;		_main
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           
  3331                           ;psect for function _Lcd_Set_Cursor
  3332  042D                     _Lcd_Set_Cursor:	
  3333                           
  3334                           ;incstack = 0
  3335                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3336                           ;Lcd_Set_Cursor@a stored from wreg
  3337  042D  00F7               	movwf	Lcd_Set_Cursor@a
  3338                           
  3339                           ;./LCD4bits.h: 44: void Lcd_Set_Cursor(char a, char b);./LCD4bits.h: 45: {;./LCD4bits.h:
      +                           46:  char temp,z,y;;./LCD4bits.h: 47:  if(a == 1)
  3340  042E  0377               	decf	Lcd_Set_Cursor@a,w
  3341  042F  1D03               	btfss	3,2
  3342  0430  2C52               	goto	l1599
  3343                           
  3344                           ;./LCD4bits.h: 48:  {;./LCD4bits.h: 49:    temp = 0x80 + b - 1;
  3345  0431  0874               	movf	Lcd_Set_Cursor@b,w
  3346  0432  3E7F               	addlw	127
  3347  0433  00F5               	movwf	??_Lcd_Set_Cursor
  3348  0434  0875               	movf	??_Lcd_Set_Cursor,w
  3349  0435  00FA               	movwf	Lcd_Set_Cursor@temp
  3350                           
  3351                           ;./LCD4bits.h: 50:   z = temp>>4;
  3352  0436  087A               	movf	Lcd_Set_Cursor@temp,w
  3353  0437  00F5               	movwf	??_Lcd_Set_Cursor
  3354  0438  3004               	movlw	4
  3355  0439                     u975:	
  3356  0439  1003               	clrc
  3357  043A  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3358  043B  3EFF               	addlw	-1
  3359  043C  1D03               	skipz
  3360  043D  2C39               	goto	u975
  3361  043E  0875               	movf	??_Lcd_Set_Cursor,w
  3362  043F  00F6               	movwf	??_Lcd_Set_Cursor+1
  3363  0440  0876               	movf	??_Lcd_Set_Cursor+1,w
  3364  0441  00F8               	movwf	Lcd_Set_Cursor@z
  3365                           
  3366                           ;./LCD4bits.h: 51:   y = temp & 0x0F;
  3367  0442  087A               	movf	Lcd_Set_Cursor@temp,w
  3368  0443  390F               	andlw	15
  3369  0444  00F5               	movwf	??_Lcd_Set_Cursor
  3370  0445  0875               	movf	??_Lcd_Set_Cursor,w
  3371  0446  00F9               	movwf	Lcd_Set_Cursor@y
  3372                           
  3373                           ;./LCD4bits.h: 52:   Lcd_Cmd(z);
  3374  0447  0878               	movf	Lcd_Set_Cursor@z,w
  3375  0448  120A  118A  223B  120A  118A  	fcall	_Lcd_Cmd
  3376                           
  3377                           ;./LCD4bits.h: 53:   Lcd_Cmd(y);
  3378  044D  0879               	movf	Lcd_Set_Cursor@y,w
  3379  044E  120A  118A  223B   	fcall	_Lcd_Cmd
  3380                           
  3381                           ;./LCD4bits.h: 54:  }
  3382  0451  0008               	return
  3383  0452                     l1599:	
  3384  0452  3002               	movlw	2
  3385  0453  0677               	xorwf	Lcd_Set_Cursor@a,w
  3386  0454  1D03               	btfss	3,2
  3387  0455  0008               	return
  3388                           
  3389                           ;./LCD4bits.h: 56:  {;./LCD4bits.h: 57:   temp = 0xC0 + b - 1;
  3390  0456  0874               	movf	Lcd_Set_Cursor@b,w
  3391  0457  3EBF               	addlw	191
  3392  0458  00F5               	movwf	??_Lcd_Set_Cursor
  3393  0459  0875               	movf	??_Lcd_Set_Cursor,w
  3394  045A  00FA               	movwf	Lcd_Set_Cursor@temp
  3395                           
  3396                           ;./LCD4bits.h: 58:   z = temp>>4;
  3397  045B  087A               	movf	Lcd_Set_Cursor@temp,w
  3398  045C  00F5               	movwf	??_Lcd_Set_Cursor
  3399  045D  3004               	movlw	4
  3400  045E                     u995:	
  3401  045E  1003               	clrc
  3402  045F  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3403  0460  3EFF               	addlw	-1
  3404  0461  1D03               	skipz
  3405  0462  2C5E               	goto	u995
  3406  0463  0875               	movf	??_Lcd_Set_Cursor,w
  3407  0464  00F6               	movwf	??_Lcd_Set_Cursor+1
  3408  0465  0876               	movf	??_Lcd_Set_Cursor+1,w
  3409  0466  00F8               	movwf	Lcd_Set_Cursor@z
  3410                           
  3411                           ;./LCD4bits.h: 59:   y = temp & 0x0F;
  3412  0467  087A               	movf	Lcd_Set_Cursor@temp,w
  3413  0468  390F               	andlw	15
  3414  0469  00F5               	movwf	??_Lcd_Set_Cursor
  3415  046A  0875               	movf	??_Lcd_Set_Cursor,w
  3416  046B  00F9               	movwf	Lcd_Set_Cursor@y
  3417                           
  3418                           ;./LCD4bits.h: 60:   Lcd_Cmd(z);
  3419  046C  0878               	movf	Lcd_Set_Cursor@z,w
  3420  046D  120A  118A  223B  120A  118A  	fcall	_Lcd_Cmd
  3421                           
  3422                           ;./LCD4bits.h: 61:   Lcd_Cmd(y);
  3423  0472  0879               	movf	Lcd_Set_Cursor@y,w
  3424  0473  120A  118A  223B   	fcall	_Lcd_Cmd
  3425  0476  0008               	return
  3426  0477                     __end_of_Lcd_Set_Cursor:	
  3427                           
  3428                           	psect	text24
  3429  0205                     __ptext24:	
  3430 ;; *************** function _Lcd_Clear *****************
  3431 ;; Defined at:
  3432 ;;		line 38 in file "./LCD4bits.h"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;		None
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;		None
  3437 ;; Return value:  Size  Location     Type
  3438 ;;                  1    wreg      void 
  3439 ;; Registers used:
  3440 ;;		wreg, status,2, status,0, pclath, cstack
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3446 ;;      Params:         0       0       0       0       0
  3447 ;;      Locals:         0       0       0       0       0
  3448 ;;      Temps:          0       0       0       0       0
  3449 ;;      Totals:         0       0       0       0       0
  3450 ;;Total ram usage:        0 bytes
  3451 ;; Hardware stack levels used:    1
  3452 ;; Hardware stack levels required when called:    2
  3453 ;; This function calls:
  3454 ;;		_Lcd_Cmd
  3455 ;; This function is called by:
  3456 ;;		_main
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           
  3461                           ;psect for function _Lcd_Clear
  3462  0205                     _Lcd_Clear:	
  3463                           
  3464                           ;./LCD4bits.h: 40:  Lcd_Cmd(0);
  3465                           
  3466                           ;incstack = 0
  3467                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3468  0205  3000               	movlw	0
  3469  0206  120A  118A  223B  120A  118A  	fcall	_Lcd_Cmd
  3470                           
  3471                           ;./LCD4bits.h: 41:  Lcd_Cmd(1);
  3472  020B  3001               	movlw	1
  3473  020C  120A  118A  223B   	fcall	_Lcd_Cmd
  3474  020F  0008               	return
  3475  0210                     __end_of_Lcd_Clear:	
  3476                           
  3477                           	psect	text25
  3478  023B                     __ptext25:	
  3479 ;; *************** function _Lcd_Cmd *****************
  3480 ;; Defined at:
  3481 ;;		line 29 in file "./LCD4bits.h"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;  a               1    wreg     unsigned char 
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;  a               1    3[COMMON] unsigned char 
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  1    wreg      void 
  3488 ;; Registers used:
  3489 ;;		wreg, status,2, status,0, pclath, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3495 ;;      Params:         0       0       0       0       0
  3496 ;;      Locals:         1       0       0       0       0
  3497 ;;      Temps:          2       0       0       0       0
  3498 ;;      Totals:         3       0       0       0       0
  3499 ;;Total ram usage:        3 bytes
  3500 ;; Hardware stack levels used:    1
  3501 ;; Hardware stack levels required when called:    1
  3502 ;; This function calls:
  3503 ;;		_Lcd_Port
  3504 ;; This function is called by:
  3505 ;;		_Lcd_Clear
  3506 ;;		_Lcd_Set_Cursor
  3507 ;;		_Lcd_Init
  3508 ;;		_Lcd_Shift_Right
  3509 ;;		_Lcd_Shift_Left
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           
  3514                           ;psect for function _Lcd_Cmd
  3515  023B                     _Lcd_Cmd:	
  3516                           
  3517                           ;incstack = 0
  3518                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3519                           ;Lcd_Cmd@a stored from wreg
  3520  023B  00F3               	movwf	Lcd_Cmd@a
  3521                           
  3522                           ;./LCD4bits.h: 29: void Lcd_Cmd(char a);./LCD4bits.h: 30: {;./LCD4bits.h: 31:  PORTBbits
      +                          .RB4 = 0;
  3523  023C  1283               	bcf	3,5	;RP0=0, select bank0
  3524  023D  1303               	bcf	3,6	;RP1=0, select bank0
  3525  023E  1206               	bcf	6,4	;volatile
  3526                           
  3527                           ;./LCD4bits.h: 32:  Lcd_Port(a);
  3528  023F  0873               	movf	Lcd_Cmd@a,w
  3529  0240  120A  118A  2221  120A  118A  	fcall	_Lcd_Port
  3530                           
  3531                           ;./LCD4bits.h: 33:  PORTBbits.RB5 = 1;
  3532  0245  1283               	bcf	3,5	;RP0=0, select bank0
  3533  0246  1303               	bcf	3,6	;RP1=0, select bank0
  3534  0247  1686               	bsf	6,5	;volatile
  3535                           
  3536                           ;./LCD4bits.h: 34:         _delay((unsigned long)((4)*(8000000/4000.0)));
  3537  0248  300B               	movlw	11
  3538  0249  00F2               	movwf	??_Lcd_Cmd+1
  3539  024A  3062               	movlw	98
  3540  024B  00F1               	movwf	??_Lcd_Cmd
  3541  024C                     u1167:	
  3542  024C  0BF1               	decfsz	??_Lcd_Cmd,f
  3543  024D  2A4C               	goto	u1167
  3544  024E  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3545  024F  2A4C               	goto	u1167
  3546  0250  0000               	nop
  3547                           
  3548                           ;./LCD4bits.h: 35:         PORTBbits.RB5 = 0;
  3549  0251  1283               	bcf	3,5	;RP0=0, select bank0
  3550  0252  1303               	bcf	3,6	;RP1=0, select bank0
  3551  0253  1286               	bcf	6,5	;volatile
  3552  0254  0008               	return
  3553  0255                     __end_of_Lcd_Cmd:	
  3554                           
  3555                           	psect	text26
  3556  0221                     __ptext26:	
  3557 ;; *************** function _Lcd_Port *****************
  3558 ;; Defined at:
  3559 ;;		line 7 in file "./LCD4bits.h"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  a               1    wreg     unsigned char 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  a               1    0[COMMON] unsigned char 
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  1    wreg      void 
  3566 ;; Registers used:
  3567 ;;		wreg
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3573 ;;      Params:         0       0       0       0       0
  3574 ;;      Locals:         1       0       0       0       0
  3575 ;;      Temps:          0       0       0       0       0
  3576 ;;      Totals:         1       0       0       0       0
  3577 ;;Total ram usage:        1 bytes
  3578 ;; Hardware stack levels used:    1
  3579 ;; This function calls:
  3580 ;;		Nothing
  3581 ;; This function is called by:
  3582 ;;		_Lcd_Cmd
  3583 ;;		_Lcd_Init
  3584 ;;		_Lcd_Write_Char
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           
  3589                           ;psect for function _Lcd_Port
  3590  0221                     _Lcd_Port:	
  3591                           
  3592                           ;incstack = 0
  3593                           ; Regs used in _Lcd_Port: [wreg]
  3594                           ;Lcd_Port@a stored from wreg
  3595  0221  00F0               	movwf	Lcd_Port@a
  3596                           
  3597                           ;./LCD4bits.h: 7: void Lcd_Port(char a);./LCD4bits.h: 8: {;./LCD4bits.h: 9:  if(a & 1)
  3598  0222  1C70               	btfss	Lcd_Port@a,0
  3599  0223  2A28               	goto	l92
  3600                           
  3601                           ;./LCD4bits.h: 10:   PORTBbits.RB0 = 1;
  3602  0224  1283               	bcf	3,5	;RP0=0, select bank0
  3603  0225  1303               	bcf	3,6	;RP1=0, select bank0
  3604  0226  1406               	bsf	6,0	;volatile
  3605  0227  2A2B               	goto	l93
  3606  0228                     l92:	
  3607                           ;./LCD4bits.h: 11:  else
  3608                           
  3609                           
  3610                           ;./LCD4bits.h: 12:   PORTBbits.RB0 = 0;
  3611  0228  1283               	bcf	3,5	;RP0=0, select bank0
  3612  0229  1303               	bcf	3,6	;RP1=0, select bank0
  3613  022A  1006               	bcf	6,0	;volatile
  3614  022B                     l93:	
  3615                           
  3616                           ;./LCD4bits.h: 14:  if(a & 2)
  3617  022B  1CF0               	btfss	Lcd_Port@a,1
  3618  022C  2A2F               	goto	l94
  3619                           
  3620                           ;./LCD4bits.h: 15:   PORTBbits.RB1 = 1;
  3621  022D  1486               	bsf	6,1	;volatile
  3622  022E  2A30               	goto	l95
  3623  022F                     l94:	
  3624                           ;./LCD4bits.h: 16:  else
  3625                           
  3626                           
  3627                           ;./LCD4bits.h: 17:   PORTBbits.RB1 = 0;
  3628  022F  1086               	bcf	6,1	;volatile
  3629  0230                     l95:	
  3630                           
  3631                           ;./LCD4bits.h: 19:  if(a & 4)
  3632  0230  1D70               	btfss	Lcd_Port@a,2
  3633  0231  2A34               	goto	l96
  3634                           
  3635                           ;./LCD4bits.h: 20:   PORTBbits.RB2 = 1;
  3636  0232  1506               	bsf	6,2	;volatile
  3637  0233  2A35               	goto	l97
  3638  0234                     l96:	
  3639                           ;./LCD4bits.h: 21:  else
  3640                           
  3641                           
  3642                           ;./LCD4bits.h: 22:   PORTBbits.RB2 = 0;
  3643  0234  1106               	bcf	6,2	;volatile
  3644  0235                     l97:	
  3645                           
  3646                           ;./LCD4bits.h: 24:  if(a & 8)
  3647  0235  1DF0               	btfss	Lcd_Port@a,3
  3648  0236  2A39               	goto	l98
  3649                           
  3650                           ;./LCD4bits.h: 25:   PORTBbits.RB3 = 1;
  3651  0237  1586               	bsf	6,3	;volatile
  3652  0238  0008               	return
  3653  0239                     l98:	
  3654                           ;./LCD4bits.h: 26:  else
  3655                           
  3656                           
  3657                           ;./LCD4bits.h: 27:   PORTBbits.RB3 = 0;
  3658  0239  1186               	bcf	6,3	;volatile
  3659  023A  0008               	return
  3660  023B                     __end_of_Lcd_Port:	
  3661  007E                     btemp	set	126	;btemp
  3662  007E                     wtemp0	set	126


Data Sizes:
    Strings     33
    Constant    10
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_3(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_temp@temperature(BANK0[6]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 3
		 -> get_temp@decimal(BANK0[3]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@decimal(BANK0[3]), get_temp@temperature(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    sp__get_temp	PTR unsigned char  size(1) Largest target is 6
		 -> get_temp@temperature(BANK0[6]), 

    temp	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_temp@temperature(BANK0[6]), 

    sp__get_time	PTR unsigned char  size(1) Largest target is 6
		 -> get_time@string_time(BANK0[6]), 

    time	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), get_time@string_time(BANK0[6]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 9
		 -> NULL(NULL[0]), get_temp@temperature(BANK0[6]), get_time@string_time(BANK0[6]), STR_2(CODE[9]), 
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _get_time->_I2C_Master_Read
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _get_hall->_I2C_Master_Read
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_get_temp
    _setup->_I2C_Master_Init
    _get_temp->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    9717
                                             27 BANK0      1     1      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _get_hall
                           _get_temp
                           _get_time
                              _setup
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               7     5      2     200
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     632
                    _I2C_Master_Init
                           _Lcd_Init
                      _initOscilador
 ---------------------------------------------------------------------------------
 (2) _initOscilador                                        3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _get_time                                            10    10      0    1974
                                              6 COMMON     2     2      0
                                              0 BANK0      8     8      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            14    14      0    3859
                                             13 BANK0     14    14      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___bmul
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     3      1     207
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1429
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _get_hall                                             2     2      0    1762
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1238
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     501
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     572
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     608
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _get_hall
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _get_temp
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___bmul
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _strcat
   _get_time
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _initOscilador
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      1F       5       38.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2D      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Feb 25 11:54:41 2019

                                pc 0002                     ___bmul@product 0072  
                      __CFG_CP$OFF 0000                                 l66 01FC  
                               l92 0228                                 l84 030A  
                      get_hall@key 0077                                 l93 022B  
                               l85 030D                                 l94 022F  
                               l95 0230                                 l96 0234  
                               l97 0235                                 l98 0239  
                               fsr 0004                                l135 04CA  
                              l158 067E                                _GIE 005F  
                     __CFG_CPD$OFF 0000                                u705 03BF  
                              u635 053B                                u725 03CB  
                              u805 0336                                u735 03D7  
                              u655 0549                                u745 03E1  
                              u665 055E                                u825 0357  
                              u675 0570                                u845 038C  
                              u775 031C                                u795 032D  
                              u875 0794                                u975 0439  
                              u995 045E                                _key 003C  
                              fsr0 0004                                indf 0000  
                     __CFG_LVP$OFF 0000                               l1333 0537  
                             l1343 056F                               l1335 0547  
                             l1361 03BC                               l1363 03CA  
                             l1531 077D                               l1515 0764  
                             l1347 057C                               l1373 03EB  
                             l1525 077B                               l1509 0746  
                             l1615 03F2                               l1391 0335  
                             l1551 07B1                               l1543 07AD  
                             l1703 0605                               l1369 03E0  
                             l1385 0319                               l1537 079E  
                             l1553 0726                               l1481 048A  
                             l1387 0327                               l1395 0340  
                             l1555 07F2                               l1571 028C  
                             l1491 04A3                               l1483 0490  
                             l1475 0479                               l1723 065A  
                             l1485 0496                               l1477 047E  
                             l1575 0212                               l1567 0279  
                             l1487 049C                               l1479 0484  
                             l1495 04A8                               l1569 0284  
                             l1665 06FF                               l1489 04A3  
                             l1579 0218                               l1691 02E1  
                             l1773 04B0                               l1599 0452  
                             l1775 0759                               l1687 02CC  
                             l1689 02BF                               STR_1 001D  
                             STR_2 0026                        get_time@min 0027  
                             STR_3 002F                               STR_4 003B  
                             STR_5 0035                               STR_6 003A  
                             u1105 0678                               u1035 05D1  
                             u1045 05E8                               u1117 04D6  
                             u1055 06D7                               u1127 04E5  
                             u1137 04F4                               u1147 039C  
                             u1157 03AD                               u1167 024C  
                             _PEIE 005E                               _RCEN 048B  
                     __CFG_WRT$OFF 0000                  ?_Lcd_Write_String 0075  
 __end_of_I2C_Master_RepeatedStart 01F4                               _main 05FB  
                             _temp 003D                               _time 003E  
                             btemp 007E                               start 0000  
               ??_Lcd_Write_String 0077                      __CFG_IESO$OFF 0000  
                  __end_of_Lcd_Cmd 0255                  ___bmul@multiplier 0073  
                    __CFG_MCLRE$ON 0000                get_temp@temperature 0030  
                 ?_I2C_Master_Init 0020                   ?_I2C_Master_Read 0070  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                            ?_main 0070                      __CFG_WDTE$OFF 0000  
                     get_time@hour 0026                              _ANSEL 0188  
                  __end_of___lldiv 0585                    __end_of___lwdiv 03F0  
                  __end_of___lwmod 0345                              _PORTA 0005  
                            _PORTB 0006            __size_of_Lcd_Set_Cursor 004A  
                            _TRISA 0085                              _TRISB 0086  
                            _SSPIE 0463                              _SSPIF 0063  
                   __CFG_FCMEN$OFF 0000                    __end_of_dpowers 001D  
                            _setup 0298                     __CFG_BOREN$OFF 0000  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 07F7  
                 __end_of_Lcd_Init 0527                   __end_of_Lcd_Port 023B  
                  __initialization 07F7                       __end_of_main 0682  
           __size_of_initOscilador 0055                             ??_main 003B  
               __size_of_Lcd_Clear 000B                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0070                 ??_I2C_Master_Start 0070  
               ??_I2C_Master_Write 0072                             ?_setup 0070  
                           _ANSELH 0189                          ??_Lcd_Cmd 0071  
          __size_of_Lcd_Write_Char 0039                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
                   __CFG_PWRTE$OFF 0000           _I2C_Master_RepeatedStart 01ED  
                 __end_of_get_hall 0274                   __end_of_get_temp 071F  
                 __end_of_get_time 05FB                             ___bmul 0210  
                        ??___lldiv 0078                          ??___lwdiv 0074  
                        ??___lwmod 007C                             _strcat 0274  
                           _strcmp 02BD                          ??_sprintf 0023  
                  Lcd_Set_Cursor@a 0077                    Lcd_Set_Cursor@b 0074  
                  Lcd_Set_Cursor@y 0079                    Lcd_Set_Cursor@z 0078  
          __end_of__initialization 07FC                      _initOscilador 0477  
                __end_of_Lcd_Clear 0210                ___bmul@multiplicand 0070  
                   __pcstackCOMMON 0070                      __end_of_setup 02BD  
                   _Lcd_Set_Cursor 042D                          ?_Lcd_Init 0070  
                        ?_Lcd_Port 0070                            ??_setup 007E  
                       __pbssBANK0 003C                     ?_initOscilador 0070  
                       __pmaintext 05FB                            ?___bmul 0070  
        __size_of_Lcd_Write_String 003D             __end_of_Lcd_Set_Cursor 0477  
                          ?_strcat 0070                            ?_strcmp 0070  
                       ??_Lcd_Init 0074                         ??_Lcd_Port 0070  
                          _SSPCON2 0091                          ?_get_hall 0070  
                          _SSPSTAT 0094                          ?_get_temp 0070  
                        ?_get_time 0070                         __stringtab 0003  
              initOscilador@option 0072                     _Lcd_Write_Char 037B  
                          _Lcd_Cmd 023B                    __size_of___bmul 0011  
                          ___lldiv 0527                            ___lwdiv 03B4  
                          ___lwmod 0313                    ?_Lcd_Set_Cursor 0074  
                          __ptext1 02BD                            __ptext2 0298  
                          __ptext3 0477                            __ptext4 04CC  
                          __ptext5 0345                            __ptext6 0527  
                          __ptext7 0585                            __ptext8 0682  
                          __ptext9 0274                    __size_of_strcat 0024  
                  __size_of_strcmp 002A                            _dpowers 0013  
         __size_of_I2C_Master_Init 0036           __size_of_I2C_Master_Read 002C  
         __size_of_I2C_Master_Wait 0009           __size_of_I2C_Master_Stop 0007  
                  ??_initOscilador 0070                         ??_get_hall 0076  
                          _sprintf 071F             __end_of_Lcd_Write_Char 03B4  
                       ??_get_temp 002D                         ??_get_time 0076  
             end_of_initialization 07FC         ??_I2C_Master_RepeatedStart 0070  
        __size_of_I2C_Master_Start 0007          __size_of_I2C_Master_Write 0008  
                  ___lldiv@divisor 0070                    ___lldiv@counter 007D  
                 I2C_Master_Init@c 0020                   I2C_Master_Read@a 0070  
                        Lcd_Port@a 0070                            strcmp@r 0075  
                        _PORTAbits 0005                          _PORTBbits 0006  
                  ?_Lcd_Write_Char 0070                  Lcd_Write_String@a 0075  
                Lcd_Write_String@i 007A                get_time@string_time 0020  
                        _Lcd_Clear 0205                     __end_of___bmul 0221  
                 _Lcd_Write_String 03F0                     __end_of_strcat 0298  
                   __end_of_strcmp 02E7                start_initialization 07F7  
                __size_of_Lcd_Init 005B                  __size_of_Lcd_Port 001A  
                ??_I2C_Master_Init 0024                  ??_I2C_Master_Read 0072  
                ??_I2C_Master_Wait 0070                  ??_I2C_Master_Stop 0070  
         __CFG_FOSC$INTRC_NOCLKOUT 0000                         ?_Lcd_Clear 0070  
                         ??___bmul 0071                    Lcd_Write_Char@a 0074  
                  Lcd_Write_Char@y 0073                           ??_strcat 0071  
                         ??_strcmp 0072                          ___latbits 0002  
                    __pcstackBANK0 0020                  __size_of_get_hall 001F  
                         ?_Lcd_Cmd 0070                  __size_of_get_temp 009D  
                __size_of_get_time 0076                        sprintf@flag 0027  
                      sprintf@prec 0028                   _I2C_Master_Start 01DF  
                 _I2C_Master_Write 01F4                   ___lwdiv@dividend 0072  
                 ??_Lcd_Set_Cursor 0075                    get_temp@decimal 0036  
                         ?___lldiv 0070                           ?___lwdiv 0070  
                         ?___lwmod 0078                          __pstrings 0003  
                  get_temp@tempLSB 003A                    get_temp@tempMSB 0039  
                 ___lwdiv@quotient 0075                           ?_sprintf 0020  
                   __size_of_setup 0025                           Lcd_Cmd@a 0073  
                      ??_Lcd_Clear 0074                        __stringbase 0012  
                 ??_Lcd_Write_Char 0071                           _Lcd_Init 04CC  
                         _Lcd_Port 0221                I2C_Master_Read@temp 0074  
            __end_of_initOscilador 04CC           __end_of_Lcd_Write_String 042D  
                 __size_of_Lcd_Cmd 001A  __size_of_I2C_Master_RepeatedStart 0007  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 005E  
                 __size_of___lwdiv 003C                   __size_of___lwmod 0032  
               __end_of__stringtab 0013                         sprintf@val 0029  
                  _I2C_Master_Init 0345                    _I2C_Master_Read 02E7  
                  _I2C_Master_Wait 01FC                         strcat@from 0070  
                  _I2C_Master_Stop 01E6                    ___lwdiv@divisor 0070  
                  ___lwdiv@counter 0077                           __ptext10 071F  
                         __ptext11 0313                           __ptext20 01FC  
                         __ptext12 03B4                           __ptext21 03F0  
                         __ptext13 0210                           __ptext22 037B  
                         __ptext14 01ED                           __ptext23 042D  
                         __ptext15 0255                           __ptext24 0205  
                         __ptext16 01F4                           __ptext25 023B  
                         __ptext17 01E6                           __ptext26 0221  
                         __ptext18 01DF                           __ptext19 02E7  
                __CFG_BOR4V$BOR40V 0000                           _get_hall 0255  
                         _get_temp 0682                           _get_time 0585  
                 __size_of_sprintf 00D8                      __size_of_main 0087  
         __end_of_I2C_Master_Start 01E6           __end_of_I2C_Master_Write 01FC  
               Lcd_Write_Char@temp 0072                          sprintf@ap 0026  
                        sprintf@sp 002B                   ___lwmod@dividend 007A  
                 ___lldiv@dividend 0074                          stringcode 000D  
                       _OSCCONbits 008F            __end_of_I2C_Master_Init 037B  
          __end_of_I2C_Master_Read 0313            __end_of_I2C_Master_Wait 0205  
          __end_of_I2C_Master_Stop 01ED                 Lcd_Set_Cursor@temp 007A  
                         sprintf@c 002C                           sprintf@f 0020  
                         strcat@cp 0073                           strcat@to 0072  
                         strcmp@s1 0076                           strcmp@s2 0070  
                 ___lldiv@quotient 0079                  I2C_Master_Write@d 0070  
                  ___lwmod@divisor 0078                    ___lwmod@counter 007D  
                         stringdir 000D                           stringtab 0003  
                      _SSPCON2bits 0091  
