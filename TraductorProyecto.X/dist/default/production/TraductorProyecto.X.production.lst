

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Feb 28 15:55:38 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.05
    14                           ; Generated 20/12/2018 GMT
    15                           ; 
    16                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000D                     	;# 
   217  000E                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0014                     	;# 
   225  0015                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0017                     	;# 
   229  0018                     	;# 
   230  0019                     	;# 
   231  001A                     	;# 
   232  001B                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001D                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  0081                     	;# 
   239  0085                     	;# 
   240  0086                     	;# 
   241  0087                     	;# 
   242  0088                     	;# 
   243  0089                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  008F                     	;# 
   248  0090                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0094                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0097                     	;# 
   258  0098                     	;# 
   259  0099                     	;# 
   260  009A                     	;# 
   261  009B                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  009F                     	;# 
   266  0105                     	;# 
   267  0107                     	;# 
   268  0108                     	;# 
   269  0109                     	;# 
   270  010C                     	;# 
   271  010C                     	;# 
   272  010D                     	;# 
   273  010E                     	;# 
   274  010F                     	;# 
   275  0185                     	;# 
   276  0187                     	;# 
   277  0188                     	;# 
   278  0189                     	;# 
   279  018C                     	;# 
   280  018D                     	;# 
   281  0005                     _PORTA	set	5
   282  0013                     _SSPBUF	set	19
   283  0014                     _SSPCON	set	20
   284  0085                     _TRISA	set	133
   285  008F                     _OSCCONbits	set	143
   286  0094                     _SSPSTATbits	set	148
   287  0094                     _SSPSTAT	set	148
   288  043B                     _TRISC3	set	1083
   289  043D                     _TRISC5	set	1085
   290  0188                     _ANSEL	set	392
   291                           
   292                           ; #config settings
   293  0000                     
   294                           	psect	cinit
   295  07FC                     start_initialization:	
   296  07FC                     __initialization:	
   297  07FC                     end_of_initialization:	
   298                           ;End of C runtime variable initialization code
   299                           
   300  07FC                     __end_of__initialization:	
   301  07FC  0183               	clrf	3
   302  07FD  120A  118A  2F88   	ljmp	_main	;jump to C main() function
   303                           
   304                           	psect	cstackCOMMON
   305  0070                     __pcstackCOMMON:	
   306  0070                     ?_setup:	
   307  0070                     ?_spiInit:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_spiWrite:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ??_spiWrite:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_initOscilador:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ??_initOscilador:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_main:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     spiInit@sDataSample:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     spiWrite@dat:	
   329                           ; 1 bytes @ 0x0
   330                           
   331                           
   332                           ; 1 bytes @ 0x0
   333  0070                     	ds	1
   334  0071                     spiInit@sClockIdle:	
   335                           
   336                           ; 1 bytes @ 0x1
   337  0071                     	ds	1
   338  0072                     spiInit@sTransmitEdge:	
   339  0072                     initOscilador@option:	
   340                           ; 1 bytes @ 0x2
   341                           
   342                           
   343                           ; 1 bytes @ 0x2
   344  0072                     	ds	1
   345  0073                     ??_spiInit:	
   346  0073                     spiInit@sType:	
   347                           ; 1 bytes @ 0x3
   348                           
   349                           
   350                           ; 1 bytes @ 0x3
   351  0073                     	ds	1
   352  0074                     ??_setup:	
   353  0074                     ??_main:	
   354                           ; 1 bytes @ 0x4
   355                           
   356                           
   357                           ; 1 bytes @ 0x4
   358  0074                     	ds	3
   359                           
   360                           	psect	maintext
   361  0788                     __pmaintext:	
   362 ;;
   363 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   364 ;;
   365 ;; *************** function _main *****************
   366 ;; Defined at:
   367 ;;		line 32 in file "mainTraductor.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;		None
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   376 ;; Tracked objects:
   377 ;;		On entry : B00/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   381 ;;      Params:         0       0       0       0       0
   382 ;;      Locals:         0       0       0       0       0
   383 ;;      Temps:          3       0       0       0       0
   384 ;;      Totals:         3       0       0       0       0
   385 ;;Total ram usage:        3 bytes
   386 ;; Hardware stack levels required when called:    2
   387 ;; This function calls:
   388 ;;		_setup
   389 ;;		_spiWrite
   390 ;; This function is called by:
   391 ;;		Startup code after reset
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           
   396                           ;psect for function _main
   397  0788                     _main:	
   398                           
   399                           ;mainTraductor.c: 33:     setup();
   400                           
   401                           ;incstack = 0
   402                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   403  0788  120A  118A  2771  120A  118A  	fcall	_setup
   404  078D                     l781:	
   405                           
   406                           ;mainTraductor.c: 35:         PORTA++;
   407  078D  3001               	movlw	1
   408  078E  00F4               	movwf	??_main
   409  078F  0874               	movf	??_main,w
   410  0790  1283               	bcf	3,5	;RP0=0, select bank0
   411  0791  1303               	bcf	3,6	;RP1=0, select bank0
   412  0792  0785               	addwf	5,f	;volatile
   413                           
   414                           ;mainTraductor.c: 36:         spiWrite(PORTA);
   415  0793  0805               	movf	5,w	;volatile
   416  0794  120A  118A  2757  120A  118A  	fcall	_spiWrite
   417                           
   418                           ;mainTraductor.c: 37:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   419  0799  300B               	movlw	11
   420  079A  00F6               	movwf	??_main+2
   421  079B  3026               	movlw	38
   422  079C  00F5               	movwf	??_main+1
   423  079D  305D               	movlw	93
   424  079E  00F4               	movwf	??_main
   425  079F                     u47:	
   426  079F  0BF4               	decfsz	??_main,f
   427  07A0  2F9F               	goto	u47
   428  07A1  0BF5               	decfsz	??_main+1,f
   429  07A2  2F9F               	goto	u47
   430  07A3  0BF6               	decfsz	??_main+2,f
   431  07A4  2F9F               	goto	u47
   432  07A5  2FA6               	nop2
   433  07A6  2F8D               	goto	l781
   434  07A7                     __end_of_main:	
   435                           
   436                           	psect	text1
   437  0757                     __ptext1:	
   438 ;; *************** function _spiWrite *****************
   439 ;; Defined at:
   440 ;;		line 35 in file "SPI.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;  dat             1    wreg     unsigned char 
   443 ;; Auto vars:     Size  Location     Type
   444 ;;  dat             1    0[COMMON] unsigned char 
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         1       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0
   457 ;;      Totals:         1       0       0       0       0
   458 ;;Total ram usage:        1 bytes
   459 ;; Hardware stack levels used:    1
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           
   468                           ;psect for function _spiWrite
   469  0757                     _spiWrite:	
   470                           
   471                           ;incstack = 0
   472                           ; Regs used in _spiWrite: [wreg]
   473                           ;spiWrite@dat stored from wreg
   474  0757  00F0               	movwf	spiWrite@dat
   475                           
   476                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
   477  0758  0870               	movf	spiWrite@dat,w
   478  0759  1283               	bcf	3,5	;RP0=0, select bank0
   479  075A  1303               	bcf	3,6	;RP1=0, select bank0
   480  075B  0093               	movwf	19	;volatile
   481  075C  0008               	return
   482  075D                     __end_of_spiWrite:	
   483                           
   484                           	psect	text2
   485  0771                     __ptext2:	
   486 ;; *************** function _setup *****************
   487 ;; Defined at:
   488 ;;		line 41 in file "mainTraductor.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;		None
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   502 ;;      Params:         0       0       0       0       0
   503 ;;      Locals:         0       0       0       0       0
   504 ;;      Temps:          0       0       0       0       0
   505 ;;      Totals:         0       0       0       0       0
   506 ;;Total ram usage:        0 bytes
   507 ;; Hardware stack levels used:    1
   508 ;; Hardware stack levels required when called:    1
   509 ;; This function calls:
   510 ;;		_initOscilador
   511 ;;		_spiInit
   512 ;; This function is called by:
   513 ;;		_main
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           
   518                           ;psect for function _setup
   519  0771                     _setup:	
   520                           
   521                           ;mainTraductor.c: 42:     initOscilador(7);
   522                           
   523                           ;incstack = 0
   524                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   525  0771  3007               	movlw	7
   526  0772  120A  118A  27A7  120A  118A  	fcall	_initOscilador
   527                           
   528                           ;mainTraductor.c: 43:     ANSEL = 0;
   529  0777  1683               	bsf	3,5	;RP0=1, select bank3
   530  0778  1703               	bsf	3,6	;RP1=1, select bank3
   531  0779  0188               	clrf	8	;volatile
   532                           
   533                           ;mainTraductor.c: 44:     TRISA = 0;
   534  077A  1683               	bsf	3,5	;RP0=1, select bank1
   535  077B  1303               	bcf	3,6	;RP1=0, select bank1
   536  077C  0185               	clrf	5	;volatile
   537                           
   538                           ;mainTraductor.c: 45:     PORTA = 0;
   539  077D  1283               	bcf	3,5	;RP0=0, select bank0
   540  077E  1303               	bcf	3,6	;RP1=0, select bank0
   541  077F  0185               	clrf	5	;volatile
   542                           
   543                           ;mainTraductor.c: 46:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK
      +                          _IDLE_LOW, SPI_IDLE_2_ACTIVE);
   544  0780  01F0               	clrf	spiInit@sDataSample
   545  0781  01F1               	clrf	spiInit@sClockIdle
   546  0782  01F2               	clrf	spiInit@sTransmitEdge
   547  0783  3020               	movlw	32
   548  0784  120A  118A  275D   	fcall	_spiInit
   549  0787  0008               	return
   550  0788                     __end_of_setup:	
   551                           
   552                           	psect	text3
   553  075D                     __ptext3:	
   554 ;; *************** function _spiInit *****************
   555 ;; Defined at:
   556 ;;		line 13 in file "SPI.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;  sType           1    wreg     enum E1264
   559 ;;  sDataSample     1    0[COMMON] enum E1272
   560 ;;  sClockIdle      1    1[COMMON] enum E1276
   561 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   562 ;; Auto vars:     Size  Location     Type
   563 ;;  sType           1    3[COMMON] enum E1264
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg, status,2, status,0
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   573 ;;      Params:         3       0       0       0       0
   574 ;;      Locals:         1       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0
   576 ;;      Totals:         4       0       0       0       0
   577 ;;Total ram usage:        4 bytes
   578 ;; Hardware stack levels used:    1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_setup
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           
   587                           ;psect for function _spiInit
   588  075D                     _spiInit:	
   589                           
   590                           ;incstack = 0
   591                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   592                           ;spiInit@sType stored from wreg
   593  075D  00F3               	movwf	spiInit@sType
   594                           
   595                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 = 0;
   596  075E  1683               	bsf	3,5	;RP0=1, select bank1
   597  075F  1303               	bcf	3,6	;RP1=0, select bank1
   598  0760  1287               	bcf	7,5	;volatile
   599                           
   600                           ;SPI.c: 16:     if(sType & 0b00000100)
   601  0761  1D73               	btfss	spiInit@sType,2
   602  0762  2F67               	goto	l765
   603                           
   604                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   605  0763  0872               	movf	spiInit@sTransmitEdge,w
   606  0764  0094               	movwf	20	;volatile
   607                           
   608                           ;SPI.c: 19:         TRISC3 = 1;
   609  0765  1587               	bsf	7,3	;volatile
   610                           
   611                           ;SPI.c: 20:     }
   612  0766  2F6B               	goto	l16
   613  0767                     l765:	
   614                           
   615                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   616  0767  0870               	movf	spiInit@sDataSample,w
   617  0768  0472               	iorwf	spiInit@sTransmitEdge,w
   618  0769  0094               	movwf	20	;volatile
   619                           
   620                           ;SPI.c: 24:         TRISC3 = 0;
   621  076A  1187               	bcf	7,3	;volatile
   622  076B                     l16:	
   623                           ;SPI.c: 25:     }
   624                           
   625                           
   626                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   627  076B  0873               	movf	spiInit@sType,w
   628  076C  0471               	iorwf	spiInit@sClockIdle,w
   629  076D  1283               	bcf	3,5	;RP0=0, select bank0
   630  076E  1303               	bcf	3,6	;RP1=0, select bank0
   631  076F  0094               	movwf	20	;volatile
   632  0770  0008               	return
   633  0771                     __end_of_spiInit:	
   634                           
   635                           	psect	text4
   636  07A7                     __ptext4:	
   637 ;; *************** function _initOscilador *****************
   638 ;; Defined at:
   639 ;;		line 11 in file "./Oscilador.h"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  option          1    wreg     unsigned char 
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  option          1    2[COMMON] unsigned char 
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         1       0       0       0       0
   655 ;;      Temps:          2       0       0       0       0
   656 ;;      Totals:         3       0       0       0       0
   657 ;;Total ram usage:        3 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; This function calls:
   660 ;;		Nothing
   661 ;; This function is called by:
   662 ;;		_setup
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           
   667                           ;psect for function _initOscilador
   668  07A7                     _initOscilador:	
   669                           
   670                           ;incstack = 0
   671                           ; Regs used in _initOscilador: [wreg-fsr0h+status,2+status,0]
   672                           ;initOscilador@option stored from wreg
   673  07A7  00F2               	movwf	initOscilador@option
   674                           
   675                           ;./Oscilador.h: 13: 
   676  07A8  2FD8               	goto	l699
   677  07A9                     l679:	
   678                           
   679                           ;./Oscilador.h: 16:         case 3:
   680  07A9  308F               	movlw	-113
   681  07AA  1683               	bsf	3,5	;RP0=1, select bank1
   682  07AB  1303               	bcf	3,6	;RP1=0, select bank1
   683  07AC  058F               	andwf	15,f	;volatile
   684                           
   685                           ;./Oscilador.h: 17: 
   686  07AD  2FFA               	goto	l55
   687  07AE                     l681:	
   688                           
   689                           ;./Oscilador.h: 20:         case 4:
   690  07AE  1683               	bsf	3,5	;RP0=1, select bank1
   691  07AF  1303               	bcf	3,6	;RP1=0, select bank1
   692  07B0  080F               	movf	15,w	;volatile
   693  07B1  398F               	andlw	-113
   694  07B2  3810               	iorlw	16
   695  07B3  2FD1               	goto	L5
   696  07B4                     l683:	
   697                           ;./Oscilador.h: 21: 
   698                           
   699                           
   700                           ;./Oscilador.h: 24:         case 5:
   701  07B4  1683               	bsf	3,5	;RP0=1, select bank1
   702  07B5  1303               	bcf	3,6	;RP1=0, select bank1
   703  07B6  080F               	movf	15,w	;volatile
   704  07B7  398F               	andlw	-113
   705  07B8  3820               	iorlw	32
   706  07B9  2FD1               	goto	L5
   707  07BA                     l685:	
   708                           ;./Oscilador.h: 25: 
   709                           
   710                           
   711                           ;./Oscilador.h: 28:         case 6:
   712  07BA  1683               	bsf	3,5	;RP0=1, select bank1
   713  07BB  1303               	bcf	3,6	;RP1=0, select bank1
   714  07BC  080F               	movf	15,w	;volatile
   715  07BD  398F               	andlw	-113
   716  07BE  3830               	iorlw	48
   717  07BF  2FD1               	goto	L5
   718  07C0                     l687:	
   719                           ;./Oscilador.h: 29: 
   720                           
   721                           
   722                           ;./Oscilador.h: 32:         case 7:
   723  07C0  1683               	bsf	3,5	;RP0=1, select bank1
   724  07C1  1303               	bcf	3,6	;RP1=0, select bank1
   725  07C2  080F               	movf	15,w	;volatile
   726  07C3  398F               	andlw	-113
   727  07C4  3840               	iorlw	64
   728  07C5  2FD1               	goto	L5
   729  07C6                     l689:	
   730                           ;./Oscilador.h: 33: 
   731                           
   732                           
   733                           ;./Oscilador.h: 36:         default:
   734  07C6  1683               	bsf	3,5	;RP0=1, select bank1
   735  07C7  1303               	bcf	3,6	;RP1=0, select bank1
   736  07C8  080F               	movf	15,w	;volatile
   737  07C9  398F               	andlw	-113
   738  07CA  3850               	iorlw	80
   739  07CB  2FD1               	goto	L5
   740  07CC                     l691:	
   741                           ;./Oscilador.h: 37: 
   742                           
   743                           
   744                           ;./Oscilador.h: 40:     }
   745  07CC  1683               	bsf	3,5	;RP0=1, select bank1
   746  07CD  1303               	bcf	3,6	;RP1=0, select bank1
   747  07CE  080F               	movf	15,w	;volatile
   748  07CF  398F               	andlw	-113
   749  07D0  3860               	iorlw	96
   750  07D1                     L5:	
   751  07D1  008F               	movwf	15	;volatile
   752                           
   753                           ;./Oscilador.h: 41:     OSCCONbits.SCS = 1;
   754  07D2  2FFA               	goto	l55
   755  07D3                     l693:	
   756  07D3                     l695:	
   757  07D3  3070               	movlw	112
   758  07D4  1683               	bsf	3,5	;RP0=1, select bank1
   759  07D5  1303               	bcf	3,6	;RP1=0, select bank1
   760  07D6  048F               	iorwf	15,f	;volatile
   761  07D7  2FFA               	goto	l55
   762  07D8                     l699:	
   763  07D8  0872               	movf	initOscilador@option,w
   764  07D9  00F0               	movwf	??_initOscilador
   765  07DA  01F1               	clrf	??_initOscilador+1
   766                           
   767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   768                           ; Switch size 1, requested type "simple"
   769                           ; Number of cases is 1, Range of values is 0 to 0
   770                           ; switch strategies available:
   771                           ; Name         Instructions Cycles
   772                           ; simple_byte            4     3 (average)
   773                           ; direct_byte           11     8 (fixed)
   774                           ; jumptable            260     6 (fixed)
   775                           ;	Chosen strategy is simple_byte
   776  07DB  0871               	movf	??_initOscilador+1,w
   777  07DC  3A00               	xorlw	0	; case 0
   778  07DD  1903               	skipnz
   779  07DE  2FE0               	goto	l807
   780  07DF  2FD3               	goto	l695
   781  07E0                     l807:	
   782                           
   783                           ; Switch size 1, requested type "simple"
   784                           ; Number of cases is 8, Range of values is 0 to 7
   785                           ; switch strategies available:
   786                           ; Name         Instructions Cycles
   787                           ; simple_byte           25    13 (average)
   788                           ; direct_byte           32     8 (fixed)
   789                           ; jumptable            260     6 (fixed)
   790                           ;	Chosen strategy is simple_byte
   791  07E0  0870               	movf	??_initOscilador,w
   792  07E1  3A00               	xorlw	0	; case 0
   793  07E2  1903               	skipnz
   794  07E3  2FA9               	goto	l679
   795  07E4  3A01               	xorlw	1	; case 1
   796  07E5  1903               	skipnz
   797  07E6  2FAE               	goto	l681
   798  07E7  3A03               	xorlw	3	; case 2
   799  07E8  1903               	skipnz
   800  07E9  2FB4               	goto	l683
   801  07EA  3A01               	xorlw	1	; case 3
   802  07EB  1903               	skipnz
   803  07EC  2FBA               	goto	l685
   804  07ED  3A07               	xorlw	7	; case 4
   805  07EE  1903               	skipnz
   806  07EF  2FC0               	goto	l687
   807  07F0  3A01               	xorlw	1	; case 5
   808  07F1  1903               	skipnz
   809  07F2  2FC6               	goto	l689
   810  07F3  3A03               	xorlw	3	; case 6
   811  07F4  1903               	skipnz
   812  07F5  2FCC               	goto	l691
   813  07F6  3A01               	xorlw	1	; case 7
   814  07F7  1903               	skipnz
   815  07F8  2FD3               	goto	l693
   816  07F9  2FD3               	goto	l695
   817  07FA                     l55:	
   818  07FA  140F               	bsf	15,0	;volatile
   819  07FB  0008               	return
   820  07FC                     __end_of_initOscilador:	
   821  007E                     btemp	set	126	;btemp
   822  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     390
                                              4 COMMON     3     3      0
                              _setup
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     375
                      _initOscilador
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _initOscilador                                        3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _initOscilador
     _spiInit
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Feb 28 15:55:38 2019

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l16 076B  
                      l55 07FA                        u47 079F                       l807 07E0  
                     l681 07AE                       l691 07CC                       l683 07B4  
                     l693 07D3                       l685 07BA                       l765 0767  
                     l781 078D                       l695 07D3                       l687 07C0  
                     l679 07A9                       l689 07C6                       l699 07D8  
            __CFG_CPD$OFF 0000              __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000  
                    _main 0788                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _PORTA 0005  
                   _TRISA 0085            __CFG_FCMEN$OFF 0000                     _setup 0771  
          __CFG_BOREN$OFF 0000           __end_of_spiInit 0771                     status 0003  
                   wtemp0 007E           __initialization 07FC              __end_of_main 07A7  
  __size_of_initOscilador 0055                    ??_main 0074                    ?_setup 0070  
                  _TRISC3 043B                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000          __end_of_spiWrite 075D  
               ??_spiInit 0073   __end_of__initialization 07FC             _initOscilador 07A7  
          __pcstackCOMMON 0070             __end_of_setup 0788                   ??_setup 0074  
          ?_initOscilador 0070                __pmaintext 0788                   _SSPSTAT 0094  
     initOscilador@option 0072                 ?_spiWrite 0070                   __ptext1 0757  
                 __ptext2 0771                   __ptext3 075D                   __ptext4 07A7  
                 _spiInit 075D           ??_initOscilador 0070      end_of_initialization 07FC  
              ??_spiWrite 0070               spiWrite@dat 0070       start_initialization 07FC  
__CFG_FOSC$INTRC_NOCLKOUT 0000                 ___latbits 0002         __size_of_spiWrite 0006  
                ?_spiInit 0070            __size_of_setup 0017      spiInit@sTransmitEdge 0072  
      spiInit@sDataSample 0070     __end_of_initOscilador 07FC          __size_of_spiInit 0014  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 001F                  _spiWrite 0757  
            spiInit@sType 0073         spiInit@sClockIdle 0071                _OSCCONbits 008F  
