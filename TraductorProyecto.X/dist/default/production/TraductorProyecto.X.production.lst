

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Mar 06 16:49:05 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.05
    19                           ; Generated 20/12/2018 GMT
    20                           ; 
    21                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  000C                     _PIR1bits	set	12
   287  000B                     _INTCONbits	set	11
   288  0008                     _PORTD	set	8
   289  0008                     _PORTDbits	set	8
   290  0006                     _PORTB	set	6
   291  0013                     _SSPBUF	set	19
   292  0014                     _SSPCON	set	20
   293  0063                     _SSPIF	set	99
   294  008C                     _PIE1bits	set	140
   295  0087                     _TRISCbits	set	135
   296  0085                     _TRISAbits	set	133
   297  0088                     _TRISD	set	136
   298  0086                     _TRISB	set	134
   299  008F                     _OSCCONbits	set	143
   300  0094                     _SSPSTATbits	set	148
   301  0094                     _SSPSTAT	set	148
   302  043B                     _TRISC3	set	1083
   303  043D                     _TRISC5	set	1085
   304  0188                     _ANSEL	set	392
   305  0189                     _ANSELH	set	393
   306                           
   307                           ; #config settings
   308  0000                     
   309                           	psect	cinit
   310  000F                     start_initialization:	
   311  000F                     __initialization:	
   312                           
   313                           ; Clear objects allocated to COMMON
   314  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   315  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   316  0011                     end_of_initialization:	
   317                           ;End of C runtime variable initialization code
   318                           
   319  0011                     __end_of__initialization:	
   320  0011  0183               	clrf	3
   321  0012  120A  118A  286C   	ljmp	_main	;jump to C main() function
   322                           
   323                           	psect	bssCOMMON
   324  0078                     __pbssCOMMON:	
   325  0078                     _received:	
   326  0078                     	ds	1
   327  0079                     _val:	
   328  0079                     	ds	1
   329                           
   330                           	psect	cstackCOMMON
   331  0070                     __pcstackCOMMON:	
   332  0070                     ?_setup:	
   333  0070                     ?_spiReceiveWait:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ??_spiReceiveWait:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_spiWrite:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ??_spiWrite:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_spiRead:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ??_spiRead:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?_isr:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_main:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     spiWrite@dat:	
   358                           ; 1 bytes @ 0x0
   359                           
   360                           
   361                           ; 1 bytes @ 0x0
   362  0070                     	ds	1
   363  0071                     ??_isr:	
   364                           
   365                           ; 1 bytes @ 0x1
   366  0071                     	ds	3
   367  0074                     ?_spiInit:	
   368  0074                     spiInit@sDataSample:	
   369                           ; 1 bytes @ 0x4
   370                           
   371                           
   372                           ; 1 bytes @ 0x4
   373  0074                     	ds	1
   374  0075                     spiInit@sClockIdle:	
   375                           
   376                           ; 1 bytes @ 0x5
   377  0075                     	ds	1
   378  0076                     spiInit@sTransmitEdge:	
   379                           
   380                           ; 1 bytes @ 0x6
   381  0076                     	ds	1
   382  0077                     ??_spiInit:	
   383  0077                     spiInit@sType:	
   384                           ; 1 bytes @ 0x7
   385                           
   386                           
   387                           ; 1 bytes @ 0x7
   388  0077                     	ds	1
   389  0078                     ??_setup:	
   390                           
   391                           	psect	cstackBANK0
   392  0020                     __pcstackBANK0:	
   393                           ; 1 bytes @ 0x8
   394                           
   395  0020                     ??_main:	
   396                           
   397                           ; 1 bytes @ 0x0
   398  0020                     	ds	3
   399                           
   400                           	psect	maintext
   401  006C                     __pmaintext:	
   402 ;;
   403 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   404 ;;
   405 ;; *************** function _main *****************
   406 ;; Defined at:
   407 ;;		line 43 in file "mainTraductor.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;		None
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, status,2, status,0, pclath, cstack
   416 ;; Tracked objects:
   417 ;;		On entry : B00/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   421 ;;      Params:         0       0       0       0       0
   422 ;;      Locals:         0       0       0       0       0
   423 ;;      Temps:          0       3       0       0       0
   424 ;;      Totals:         0       3       0       0       0
   425 ;;Total ram usage:        3 bytes
   426 ;; Hardware stack levels required when called:    5
   427 ;; This function calls:
   428 ;;		_setup
   429 ;; This function is called by:
   430 ;;		Startup code after reset
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           
   435                           ;psect for function _main
   436  006C                     _main:	
   437                           
   438                           ;mainTraductor.c: 44:     setup();
   439                           
   440                           ;incstack = 0
   441                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   442  006C  120A  118A  2015  120A  118A  	fcall	_setup
   443  0071                     l815:	
   444                           
   445                           ;mainTraductor.c: 46:         PORTB++;
   446  0071  3001               	movlw	1
   447  0072  1283               	bcf	3,5	;RP0=0, select bank0
   448  0073  1303               	bcf	3,6	;RP1=0, select bank0
   449  0074  00A0               	movwf	??_main
   450  0075  0820               	movf	??_main,w
   451  0076  0786               	addwf	6,f	;volatile
   452                           
   453                           ;mainTraductor.c: 47:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   454  0077  300B               	movlw	11
   455  0078  1283               	bcf	3,5	;RP0=0, select bank0
   456  0079  1303               	bcf	3,6	;RP1=0, select bank0
   457  007A  00A2               	movwf	??_main+2
   458  007B  3026               	movlw	38
   459  007C  00A1               	movwf	??_main+1
   460  007D  305D               	movlw	93
   461  007E  00A0               	movwf	??_main
   462  007F                     u77:	
   463  007F  0BA0               	decfsz	??_main,f
   464  0080  287F               	goto	u77
   465  0081  0BA1               	decfsz	??_main+1,f
   466  0082  287F               	goto	u77
   467  0083  0BA2               	decfsz	??_main+2,f
   468  0084  287F               	goto	u77
   469  0085  2871               	goto	l815
   470  0086                     __end_of_main:	
   471                           
   472                           	psect	text1
   473  0015                     __ptext1:	
   474 ;; *************** function _setup *****************
   475 ;; Defined at:
   476 ;;		line 51 in file "mainTraductor.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0, pclath, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   490 ;;      Params:         0       0       0       0       0
   491 ;;      Locals:         0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0
   493 ;;      Totals:         0       0       0       0       0
   494 ;;Total ram usage:        0 bytes
   495 ;; Hardware stack levels used:    1
   496 ;; Hardware stack levels required when called:    4
   497 ;; This function calls:
   498 ;;		_spiInit
   499 ;; This function is called by:
   500 ;;		_main
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           
   505                           ;psect for function _setup
   506  0015                     _setup:	
   507                           
   508                           ;mainTraductor.c: 52:     OSCCONbits.IRCF0 = 1;
   509                           
   510                           ;incstack = 0
   511                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   512  0015  1683               	bsf	3,5	;RP0=1, select bank1
   513  0016  1303               	bcf	3,6	;RP1=0, select bank1
   514  0017  160F               	bsf	15,4	;volatile
   515                           
   516                           ;mainTraductor.c: 53:     OSCCONbits.IRCF1 = 1;
   517  0018  168F               	bsf	15,5	;volatile
   518                           
   519                           ;mainTraductor.c: 54:     OSCCONbits.IRCF2 = 1;
   520  0019  170F               	bsf	15,6	;volatile
   521                           
   522                           ;mainTraductor.c: 55:     OSCCONbits.SCS = 1;
   523  001A  140F               	bsf	15,0	;volatile
   524                           
   525                           ;mainTraductor.c: 56:     val = 0;
   526  001B  01F9               	clrf	_val
   527                           
   528                           ;mainTraductor.c: 57:     ANSELH = 0;
   529  001C  1683               	bsf	3,5	;RP0=1, select bank3
   530  001D  1703               	bsf	3,6	;RP1=1, select bank3
   531  001E  0189               	clrf	9	;volatile
   532                           
   533                           ;mainTraductor.c: 58:     TRISB = 0;
   534  001F  1683               	bsf	3,5	;RP0=1, select bank1
   535  0020  1303               	bcf	3,6	;RP1=0, select bank1
   536  0021  0186               	clrf	6	;volatile
   537                           
   538                           ;mainTraductor.c: 59:     PORTB = 0;
   539  0022  1283               	bcf	3,5	;RP0=0, select bank0
   540  0023  1303               	bcf	3,6	;RP1=0, select bank0
   541  0024  0186               	clrf	6	;volatile
   542                           
   543                           ;mainTraductor.c: 60:     ANSEL = 0;
   544  0025  1683               	bsf	3,5	;RP0=1, select bank3
   545  0026  1703               	bsf	3,6	;RP1=1, select bank3
   546  0027  0188               	clrf	8	;volatile
   547                           
   548                           ;mainTraductor.c: 61:     TRISD = 0;
   549  0028  1683               	bsf	3,5	;RP0=1, select bank1
   550  0029  1303               	bcf	3,6	;RP1=0, select bank1
   551  002A  0188               	clrf	8	;volatile
   552                           
   553                           ;mainTraductor.c: 62:     PORTD = 0;
   554  002B  1283               	bcf	3,5	;RP0=0, select bank0
   555  002C  1303               	bcf	3,6	;RP1=0, select bank0
   556  002D  0188               	clrf	8	;volatile
   557                           
   558                           ;mainTraductor.c: 63:     TRISAbits.TRISA5 = 1;
   559  002E  1683               	bsf	3,5	;RP0=1, select bank1
   560  002F  1303               	bcf	3,6	;RP1=0, select bank1
   561  0030  1685               	bsf	5,5	;volatile
   562                           
   563                           ;mainTraductor.c: 64:     TRISCbits.TRISC3 = 1;
   564  0031  1587               	bsf	7,3	;volatile
   565                           
   566                           ;mainTraductor.c: 65:     INTCONbits.GIE = 1;
   567  0032  178B               	bsf	11,7	;volatile
   568                           
   569                           ;mainTraductor.c: 66:     INTCONbits.PEIE = 1;
   570  0033  170B               	bsf	11,6	;volatile
   571                           
   572                           ;mainTraductor.c: 67:     PIR1bits.SSPIF = 0;
   573  0034  1283               	bcf	3,5	;RP0=0, select bank0
   574  0035  1303               	bcf	3,6	;RP1=0, select bank0
   575  0036  118C               	bcf	12,3	;volatile
   576                           
   577                           ;mainTraductor.c: 68:     PIE1bits.SSPIE = 1;
   578  0037  1683               	bsf	3,5	;RP0=1, select bank1
   579  0038  1303               	bcf	3,6	;RP1=0, select bank1
   580  0039  158C               	bsf	12,3	;volatile
   581                           
   582                           ;mainTraductor.c: 69:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDL
      +                          E_LOW, SPI_IDLE_2_ACTIVE);
   583  003A  01F4               	clrf	spiInit@sDataSample
   584  003B  01F5               	clrf	spiInit@sClockIdle
   585  003C  01F6               	clrf	spiInit@sTransmitEdge
   586  003D  3024               	movlw	36
   587  003E  120A  118A  2086   	fcall	_spiInit
   588  0041  0008               	return
   589  0042                     __end_of_setup:	
   590                           
   591                           	psect	text2
   592  0086                     __ptext2:	
   593 ;; *************** function _spiInit *****************
   594 ;; Defined at:
   595 ;;		line 13 in file "SPI.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;  sType           1    wreg     enum E1264
   598 ;;  sDataSample     1    4[COMMON] enum E1272
   599 ;;  sClockIdle      1    5[COMMON] enum E1276
   600 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   601 ;; Auto vars:     Size  Location     Type
   602 ;;  sType           1    7[COMMON] enum E1264
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg, status,2, status,0
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   612 ;;      Params:         3       0       0       0       0
   613 ;;      Locals:         1       0       0       0       0
   614 ;;      Temps:          0       0       0       0       0
   615 ;;      Totals:         4       0       0       0       0
   616 ;;Total ram usage:        4 bytes
   617 ;; Hardware stack levels used:    1
   618 ;; Hardware stack levels required when called:    3
   619 ;; This function calls:
   620 ;;		Nothing
   621 ;; This function is called by:
   622 ;;		_setup
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           
   627                           ;psect for function _spiInit
   628  0086                     _spiInit:	
   629                           
   630                           ;incstack = 0
   631                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   632                           ;spiInit@sType stored from wreg
   633  0086  00F7               	movwf	spiInit@sType
   634                           
   635                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 = 0;
   636  0087  1683               	bsf	3,5	;RP0=1, select bank1
   637  0088  1303               	bcf	3,6	;RP1=0, select bank1
   638  0089  1287               	bcf	7,5	;volatile
   639                           
   640                           ;SPI.c: 16:     if(sType & 0b00000100)
   641  008A  1D77               	btfss	spiInit@sType,2
   642  008B  2890               	goto	l791
   643                           
   644                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   645  008C  0876               	movf	spiInit@sTransmitEdge,w
   646  008D  0094               	movwf	20	;volatile
   647                           
   648                           ;SPI.c: 19:         TRISC3 = 1;
   649  008E  1587               	bsf	7,3	;volatile
   650                           
   651                           ;SPI.c: 20:     }
   652  008F  2894               	goto	l16
   653  0090                     l791:	
   654                           
   655                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   656  0090  0874               	movf	spiInit@sDataSample,w
   657  0091  0476               	iorwf	spiInit@sTransmitEdge,w
   658  0092  0094               	movwf	20	;volatile
   659                           
   660                           ;SPI.c: 24:         TRISC3 = 0;
   661  0093  1187               	bcf	7,3	;volatile
   662  0094                     l16:	
   663                           ;SPI.c: 25:     }
   664                           
   665                           
   666                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   667  0094  0877               	movf	spiInit@sType,w
   668  0095  0475               	iorwf	spiInit@sClockIdle,w
   669  0096  1283               	bcf	3,5	;RP0=0, select bank0
   670  0097  1303               	bcf	3,6	;RP1=0, select bank0
   671  0098  0094               	movwf	20	;volatile
   672  0099  0008               	return
   673  009A                     __end_of_spiInit:	
   674                           
   675                           	psect	text3
   676  0042                     __ptext3:	
   677 ;; *************** function _isr *****************
   678 ;; Defined at:
   679 ;;		line 33 in file "mainTraductor.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;		None
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		wreg, status,2, status,0, pclath, cstack
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   693 ;;      Params:         0       0       0       0       0
   694 ;;      Locals:         0       0       0       0       0
   695 ;;      Temps:          3       0       0       0       0
   696 ;;      Totals:         3       0       0       0       0
   697 ;;Total ram usage:        3 bytes
   698 ;; Hardware stack levels used:    1
   699 ;; Hardware stack levels required when called:    2
   700 ;; This function calls:
   701 ;;		_spiRead
   702 ;;		_spiWrite
   703 ;; This function is called by:
   704 ;;		Interrupt level 1
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           
   709                           ;psect for function _isr
   710  0042                     _isr:	
   711                           
   712                           ;mainTraductor.c: 34:    if(SSPIF == 1){
   713  0042  1283               	bcf	3,5	;RP0=0, select bank0
   714  0043  1303               	bcf	3,6	;RP1=0, select bank0
   715  0044  1D8C               	btfss	12,3	;volatile
   716  0045  2865               	goto	i1l96
   717                           
   718                           ;mainTraductor.c: 35:         val = spiRead();
   719  0046  120A  118A  209A  120A  118A  	fcall	_spiRead
   720  004B  00F1               	movwf	??_isr
   721  004C  0871               	movf	??_isr,w
   722  004D  00F9               	movwf	_val
   723                           
   724                           ;mainTraductor.c: 37:         spiWrite(PORTB);
   725  004E  1283               	bcf	3,5	;RP0=0, select bank0
   726  004F  1303               	bcf	3,6	;RP1=0, select bank0
   727  0050  0806               	movf	6,w	;volatile
   728  0051  120A  118A  20A1  120A  118A  	fcall	_spiWrite
   729                           
   730                           ;mainTraductor.c: 38:         PORTDbits.RD0 = ~PORTDbits.RD0;
   731  0056  1003               	clrc
   732  0057  1283               	bcf	3,5	;RP0=0, select bank0
   733  0058  1303               	bcf	3,6	;RP1=0, select bank0
   734  0059  1C08               	btfss	8,0	;volatile
   735  005A  1403               	setc
   736  005B  1C03               	btfss	3,0
   737  005C  2861               	goto	u4_20
   738  005D  1283               	bcf	3,5	;RP0=0, select bank0
   739  005E  1303               	bcf	3,6	;RP1=0, select bank0
   740  005F  1408               	bsf	8,0	;volatile
   741  0060  2864               	goto	i1l777
   742  0061                     u4_20:	
   743  0061  1283               	bcf	3,5	;RP0=0, select bank0
   744  0062  1303               	bcf	3,6	;RP1=0, select bank0
   745  0063  1008               	bcf	8,0	;volatile
   746  0064                     i1l777:	
   747                           
   748                           ;mainTraductor.c: 39:         SSPIF = 0;
   749  0064  118C               	bcf	12,3	;volatile
   750  0065                     i1l96:	
   751  0065  0873               	movf	??_isr+2,w
   752  0066  008A               	movwf	10
   753  0067  0E72               	swapf	(??_isr+1)^(0+4294967168),w
   754  0068  0083               	movwf	3
   755  0069  0EFE               	swapf	126,f
   756  006A  0E7E               	swapf	126,w
   757  006B  0009               	retfie
   758  006C                     __end_of_isr:	
   759                           
   760                           	psect	intentry
   761  0004                     __pintentry:	
   762                           ;incstack = 0
   763                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   764                           
   765  0004                     interrupt_function:	
   766  007E                     saved_w	set	btemp
   767  0004  00FE               	movwf	btemp
   768  0005  0E03               	swapf	3,w
   769  0006  00F2               	movwf	??_isr+1
   770  0007  080A               	movf	10,w
   771  0008  00F3               	movwf	??_isr+2
   772  0009  120A  118A  2842   	ljmp	_isr
   773                           
   774                           	psect	text4
   775  00A1                     __ptext4:	
   776 ;; *************** function _spiWrite *****************
   777 ;; Defined at:
   778 ;;		line 35 in file "SPI.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  dat             1    wreg     unsigned char 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  dat             1    0[COMMON] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   792 ;;      Params:         0       0       0       0       0
   793 ;;      Locals:         1       0       0       0       0
   794 ;;      Temps:          0       0       0       0       0
   795 ;;      Totals:         1       0       0       0       0
   796 ;;Total ram usage:        1 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; This function calls:
   799 ;;		Nothing
   800 ;; This function is called by:
   801 ;;		_isr
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           
   806                           ;psect for function _spiWrite
   807  00A1                     _spiWrite:	
   808                           
   809                           ;incstack = 0
   810                           ; Regs used in _spiWrite: [wreg]
   811                           ;spiWrite@dat stored from wreg
   812  00A1  00F0               	movwf	spiWrite@dat
   813                           
   814                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
   815  00A2  0870               	movf	spiWrite@dat,w
   816  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   817  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   818  00A5  0093               	movwf	19	;volatile
   819  00A6  0008               	return
   820  00A7                     __end_of_spiWrite:	
   821                           
   822                           	psect	text5
   823  009A                     __ptext5:	
   824 ;; *************** function _spiRead *****************
   825 ;; Defined at:
   826 ;;		line 48 in file "SPI.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      unsigned char 
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0, pclath, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   840 ;;      Params:         0       0       0       0       0
   841 ;;      Locals:         0       0       0       0       0
   842 ;;      Temps:          0       0       0       0       0
   843 ;;      Totals:         0       0       0       0       0
   844 ;;Total ram usage:        0 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; Hardware stack levels required when called:    1
   847 ;; This function calls:
   848 ;;		_spiReceiveWait
   849 ;; This function is called by:
   850 ;;		_isr
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _spiRead
   856  009A                     _spiRead:	
   857                           
   858                           ;SPI.c: 50:     spiReceiveWait();
   859                           
   860                           ;incstack = 0
   861                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   862  009A  120A  118A  20A7   	fcall	_spiReceiveWait
   863                           
   864                           ;SPI.c: 51:     return(SSPBUF);
   865  009D  1283               	bcf	3,5	;RP0=0, select bank0
   866  009E  1303               	bcf	3,6	;RP1=0, select bank0
   867  009F  0813               	movf	19,w	;volatile
   868  00A0  0008               	return
   869  00A1                     __end_of_spiRead:	
   870                           
   871                           	psect	text6
   872  00A7                     __ptext6:	
   873 ;; *************** function _spiReceiveWait *****************
   874 ;; Defined at:
   875 ;;		line 30 in file "SPI.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;		None
   878 ;; Auto vars:     Size  Location     Type
   879 ;;		None
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		None
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   889 ;;      Params:         0       0       0       0       0
   890 ;;      Locals:         0       0       0       0       0
   891 ;;      Temps:          0       0       0       0       0
   892 ;;      Totals:         0       0       0       0       0
   893 ;;Total ram usage:        0 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_spiRead
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           
   903                           ;psect for function _spiReceiveWait
   904  00A7                     _spiReceiveWait:	
   905  00A7                     i1l20:	
   906                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
   907                           
   908                           ;incstack = 0
   909                           ; Regs used in _spiReceiveWait: []
   910                           
   911  00A7  1683               	bsf	3,5	;RP0=1, select bank1
   912  00A8  1303               	bcf	3,6	;RP1=0, select bank1
   913  00A9  1814               	btfsc	20,0	;volatile
   914  00AA  0008               	return
   915  00AB  28A7               	goto	i1l20
   916  00AC                     __end_of_spiReceiveWait:	
   917  007E                     btemp	set	126	;btemp
   918  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     360
                                              0 BANK0      3     3      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Mar 06 16:49:05 2019

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l16 0094  
                      u77 007F                       l815 0071                       l791 0090  
            __CFG_CPD$OFF 0000                       _isr 0042                       _val 0079  
            __CFG_LVP$OFF 0000                      ?_isr 0070                      i1l20 00A7  
                    i1l96 0065                      u4_20 0061              __CFG_WRT$OFF 0000  
                    _main 006C                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000                     ??_isr 0071  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l777 0064                     _PORTB 0006                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088                     _SSPIF 0063  
          __CFG_FCMEN$OFF 0000                     _setup 0015            __CFG_BOREN$OFF 0000  
                   pclath 000A           __end_of_spiInit 009A           __end_of_spiRead 00A1  
                   status 0003                     wtemp0 007E           __initialization 000F  
            __end_of_main 0086                    ??_main 0020                    ?_setup 0070  
                  _ANSELH 0189                    _TRISC3 043B                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
                  saved_w 007E          __end_of_spiWrite 00A7                 ??_spiInit 0077  
               ??_spiRead 0070   __end_of__initialization 0011            __pcstackCOMMON 0070  
           __end_of_setup 0042                   ??_setup 0078                __pmaintext 006C  
              __pintentry 0004   __size_of_spiReceiveWait 0005                   _SSPSTAT 0094  
               ?_spiWrite 0070                   __ptext1 0015                   __ptext2 0086  
                 __ptext3 0042                   __ptext4 00A1                   __ptext5 009A  
                 __ptext6 00A7              __size_of_isr 002A                   _spiInit 0086  
                 _spiRead 009A      end_of_initialization 0011                ??_spiWrite 0070  
               _PORTDbits 0008                 _TRISAbits 0085                 _TRISCbits 0087  
             spiWrite@dat 0070            _spiReceiveWait 00A7       start_initialization 000F  
             __end_of_isr 006C  __CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 00AC  
             __pbssCOMMON 0078                 ___latbits 0002             __pcstackBANK0 0020  
         ?_spiReceiveWait 0070         __size_of_spiWrite 0006                  ?_spiInit 0074  
                ?_spiRead 0070            __size_of_setup 002D      spiInit@sTransmitEdge 0076  
       interrupt_function 0004                  _PIE1bits 008C        spiInit@sDataSample 0074  
                _PIR1bits 000C          __size_of_spiInit 0014          __size_of_spiRead 0007  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 001A                  _received 0078  
                _spiWrite 00A1              spiInit@sType 0077         spiInit@sClockIdle 0075  
              _INTCONbits 000B                  intlevel1 0000          ??_spiReceiveWait 0070  
              _OSCCONbits 008F  
