

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 11 08:06:11 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.05
    20                           ; Generated 20/12/2018 GMT
    21                           ; 
    22                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	nvBANK0
   211  0025                     __pnvBANK0:	
   212  0025                     _j:	
   213  0025                     	ds	2
   214  0008                     _PORTDbits	set	8
   215  000B                     _INTCONbits	set	11
   216  0006                     _PORTB	set	6
   217  0005                     _PORTA	set	5
   218  0005                     _PORTAbits	set	5
   219  0014                     _SSPCONbits	set	20
   220  000C                     _PIR1bits	set	12
   221  0013                     _SSPBUF	set	19
   222  0014                     _SSPCON	set	20
   223  0063                     _SSPIF	set	99
   224  005E                     _PEIE	set	94
   225  005F                     _GIE	set	95
   226  0086                     _TRISB	set	134
   227  0088                     _TRISD	set	136
   228  0085                     _TRISA	set	133
   229  008F                     _OSCCONbits	set	143
   230  0094                     _SSPSTATbits	set	148
   231  0091                     _SSPCON2bits	set	145
   232  0094                     _SSPSTAT	set	148
   233  0093                     _SSPADD	set	147
   234  0091                     _SSPCON2	set	145
   235  04A0                     _BF	set	1184
   236  0463                     _SSPIE	set	1123
   237  048B                     _RCEN	set	1163
   238  043C                     _TRISC4	set	1084
   239  043B                     _TRISC3	set	1083
   240  0189                     _ANSELH	set	393
   241  0188                     _ANSEL	set	392
   242                           
   243                           ; #config settings
   244  0000                     
   245                           	psect	cinit
   246  0011                     start_initialization:	
   247  0011                     __initialization:	
   248                           
   249                           ; Clear objects allocated to COMMON
   250  0011  01F7               	clrf	__pbssCOMMON& (0+127)
   251  0012  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   252  0013  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   253                           
   254                           ; Clear objects allocated to BANK0
   255  0014  1283               	bcf	3,5	;RP0=0, select bank0
   256  0015  1303               	bcf	3,6	;RP1=0, select bank0
   257  0016  01A7               	clrf	__pbssBANK0& (0+127)
   258  0017  01A8               	clrf	(__pbssBANK0+1)& (0+127)
   259  0018                     end_of_initialization:	
   260                           ;End of C runtime variable initialization code
   261                           
   262  0018                     __end_of__initialization:	
   263  0018  0183               	clrf	3
   264  0019  120A  118A  28A4   	ljmp	_main	;jump to C main() function
   265                           
   266                           	psect	bssCOMMON
   267  0077                     __pbssCOMMON:	
   268  0077                     _i:	
   269  0077                     	ds	1
   270  0078                     _val:	
   271  0078                     	ds	1
   272  0079                     _z:	
   273  0079                     	ds	1
   274                           
   275                           	psect	bssBANK0
   276  0027                     __pbssBANK0:	
   277  0027                     _send:	
   278  0027                     	ds	2
   279                           
   280                           	psect	cstackCOMMON
   281  0070                     __pcstackCOMMON:	
   282  0070                     ?_system_init:	
   283  0070                     ?_full_drive:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_isr:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ??_isr:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?_main:	
   293                           ; 1 bytes @ 0x0
   294                           
   295                           
   296                           ; 1 bytes @ 0x0
   297  0070                     	ds	4
   298  0074                     ??_system_init:	
   299  0074                     ?_delay:	
   300                           ; 1 bytes @ 0x4
   301                           
   302  0074                     ?_I2C_Slave_Init:	
   303                           ; 1 bytes @ 0x4
   304                           
   305  0074                     I2C_Slave_Init@address:	
   306                           ; 1 bytes @ 0x4
   307                           
   308  0074                     delay@val:	
   309                           ; 2 bytes @ 0x4
   310                           
   311                           
   312                           ; 2 bytes @ 0x4
   313  0074                     	ds	2
   314  0076                     ??_full_drive:	
   315  0076                     ??_delay:	
   316                           ; 1 bytes @ 0x6
   317                           
   318  0076                     ??_I2C_Slave_Init:	
   319                           ; 1 bytes @ 0x6
   320                           
   321  0076                     full_drive@direction:	
   322                           ; 1 bytes @ 0x6
   323                           
   324                           
   325                           ; 1 bytes @ 0x6
   326  0076                     	ds	1
   327                           
   328                           	psect	cstackBANK0
   329  0020                     __pcstackBANK0:	
   330  0020                     delay@i:	
   331                           
   332                           ; 2 bytes @ 0x0
   333  0020                     	ds	2
   334  0022                     delay@j:	
   335                           
   336                           ; 2 bytes @ 0x2
   337  0022                     	ds	2
   338  0024                     ??_main:	
   339                           
   340                           ; 1 bytes @ 0x4
   341  0024                     	ds	1
   342                           
   343                           	psect	maintext
   344  00A4                     __pmaintext:	
   345 ;;
   346 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   347 ;;
   348 ;; *************** function _main *****************
   349 ;; Defined at:
   350 ;;		line 89 in file "mainTrip.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : B00/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0
   366 ;;      Temps:          0       1       0       0       0
   367 ;;      Totals:         0       1       0       0       0
   368 ;;Total ram usage:        1 bytes
   369 ;; Hardware stack levels required when called:    3
   370 ;; This function calls:
   371 ;;		_I2C_Slave_Init
   372 ;;		_full_drive
   373 ;;		_system_init
   374 ;; This function is called by:
   375 ;;		Startup code after reset
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           
   380                           ;psect for function _main
   381  00A4                     _main:	
   382                           
   383                           ;mainTrip.c: 91:     OSCCONbits.IRCF0 = 1;
   384                           
   385                           ;incstack = 0
   386                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   387  00A4  1683               	bsf	3,5	;RP0=1, select bank1
   388  00A5  1303               	bcf	3,6	;RP1=0, select bank1
   389  00A6  160F               	bsf	15,4	;volatile
   390                           
   391                           ;mainTrip.c: 92:     OSCCONbits.IRCF1 = 1;
   392  00A7  168F               	bsf	15,5	;volatile
   393                           
   394                           ;mainTrip.c: 93:     OSCCONbits.IRCF2 = 1;
   395  00A8  170F               	bsf	15,6	;volatile
   396                           
   397                           ;mainTrip.c: 94:     OSCCONbits.SCS = 1;
   398  00A9  140F               	bsf	15,0	;volatile
   399                           
   400                           ;mainTrip.c: 97:     i = 0;
   401  00AA  01F7               	clrf	_i
   402                           
   403                           ;mainTrip.c: 98:     j = 1000;
   404  00AB  30E8               	movlw	232
   405  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   406  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   407  00AE  00A5               	movwf	_j
   408  00AF  3003               	movlw	3
   409  00B0  00A6               	movwf	_j+1
   410                           
   411                           ;mainTrip.c: 99:     send[0] = 0;
   412  00B1  01A7               	clrf	_send
   413                           
   414                           ;mainTrip.c: 100:     send[1] = 3;
   415  00B2  3003               	movlw	3
   416  00B3  00A4               	movwf	??_main
   417  00B4  0824               	movf	??_main,w
   418  00B5  00A8               	movwf	_send+1
   419                           
   420                           ;mainTrip.c: 101:     val = 0;
   421  00B6  01F8               	clrf	_val
   422                           
   423                           ;mainTrip.c: 102:     PORTA = 0;
   424  00B7  0185               	clrf	5	;volatile
   425                           
   426                           ;mainTrip.c: 103:     PORTB = 0;
   427  00B8  0186               	clrf	6	;volatile
   428                           
   429                           ;mainTrip.c: 104:     TRISA = 0;
   430  00B9  1683               	bsf	3,5	;RP0=1, select bank1
   431  00BA  1303               	bcf	3,6	;RP1=0, select bank1
   432  00BB  0185               	clrf	5	;volatile
   433                           
   434                           ;mainTrip.c: 105:     TRISD = 0x02;
   435  00BC  3002               	movlw	2
   436  00BD  0088               	movwf	8	;volatile
   437                           
   438                           ;mainTrip.c: 106:     ANSEL = 0;
   439  00BE  1683               	bsf	3,5	;RP0=1, select bank3
   440  00BF  1703               	bsf	3,6	;RP1=1, select bank3
   441  00C0  0188               	clrf	8	;volatile
   442                           
   443                           ;mainTrip.c: 107:     ANSELH = 0;
   444  00C1  0189               	clrf	9	;volatile
   445                           
   446                           ;mainTrip.c: 108:     INTCONbits.GIE = 1;
   447  00C2  178B               	bsf	11,7	;volatile
   448                           
   449                           ;mainTrip.c: 109:     system_init();
   450  00C3  120A  118A  21BE  120A  118A  	fcall	_system_init
   451                           
   452                           ;mainTrip.c: 110:     I2C_Slave_Init(0x20);
   453  00C8  3020               	movlw	32
   454  00C9  00F4               	movwf	I2C_Slave_Init@address
   455  00CA  3000               	movlw	0
   456  00CB  00F5               	movwf	I2C_Slave_Init@address+1
   457  00CC  120A  118A  21A5  120A  118A  	fcall	_I2C_Slave_Init
   458  00D1                     l1188:	
   459                           
   460                           ;mainTrip.c: 113:         if (PORTDbits.RD1 == 1){
   461  00D1  1283               	bcf	3,5	;RP0=0, select bank0
   462  00D2  1303               	bcf	3,6	;RP1=0, select bank0
   463  00D3  1C88               	btfss	8,1	;volatile
   464  00D4  28D8               	goto	l1192
   465                           
   466                           ;mainTrip.c: 114:             send[0] = 1;
   467  00D5  01A7               	clrf	_send
   468  00D6  0AA7               	incf	_send,f
   469                           
   470                           ;mainTrip.c: 115:         } else {
   471  00D7  28D9               	goto	l1194
   472  00D8                     l1192:	
   473                           
   474                           ;mainTrip.c: 116:             send[0] = 0;
   475  00D8  01A7               	clrf	_send
   476  00D9                     l1194:	
   477                           
   478                           ;mainTrip.c: 120:         if (val == 0xFF){
   479  00D9  0A78               	incf	_val,w
   480  00DA  1D03               	btfss	3,2
   481  00DB  28FD               	goto	l1206
   482                           
   483                           ;mainTrip.c: 122:             if (j < 1000){
   484  00DC  0826               	movf	_j+1,w
   485  00DD  3A80               	xorlw	128
   486  00DE  00FF               	movwf	127
   487  00DF  3083               	movlw	131
   488  00E0  027F               	subwf	127,w
   489  00E1  1D03               	skipz
   490  00E2  28E5               	goto	u495
   491  00E3  30E8               	movlw	232
   492  00E4  0225               	subwf	_j,w
   493  00E5                     u495:	
   494  00E5  1803               	skipnc
   495  00E6  28F6               	goto	l1202
   496                           
   497                           ;mainTrip.c: 123:                 full_drive(0);
   498  00E7  3000               	movlw	0
   499  00E8  120A  118A  201C  120A  118A  	fcall	_full_drive
   500                           
   501                           ;mainTrip.c: 124:                 j++;
   502  00ED  3001               	movlw	1
   503  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   504  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   505  00F0  07A5               	addwf	_j,f
   506  00F1  1803               	skipnc
   507  00F2  0AA6               	incf	_j+1,f
   508  00F3  3000               	movlw	0
   509  00F4  07A6               	addwf	_j+1,f
   510                           
   511                           ;mainTrip.c: 125:             } else {
   512  00F5  28FD               	goto	l1206
   513  00F6                     l1202:	
   514                           
   515                           ;mainTrip.c: 126:                 send[1] = 3;
   516  00F6  3003               	movlw	3
   517  00F7  1283               	bcf	3,5	;RP0=0, select bank0
   518  00F8  1303               	bcf	3,6	;RP1=0, select bank0
   519  00F9  00A4               	movwf	??_main
   520  00FA  0824               	movf	??_main,w
   521  00FB  00A8               	movwf	_send+1
   522                           
   523                           ;mainTrip.c: 127:                 val = 0;
   524  00FC  01F8               	clrf	_val
   525  00FD                     l1206:	
   526                           
   527                           ;mainTrip.c: 132:         if (val == 0xF0){
   528  00FD  30F0               	movlw	240
   529  00FE  0678               	xorwf	_val,w
   530  00FF  1D03               	btfss	3,2
   531  0100  28D1               	goto	l1188
   532                           
   533                           ;mainTrip.c: 134:             if (j > 0){
   534  0101  0826               	movf	_j+1,w
   535  0102  3A80               	xorlw	128
   536  0103  00FF               	movwf	127
   537  0104  3080               	movlw	128
   538  0105  027F               	subwf	127,w
   539  0106  1D03               	skipz
   540  0107  290A               	goto	u515
   541  0108  3001               	movlw	1
   542  0109  0225               	subwf	_j,w
   543  010A                     u515:	
   544  010A  1C03               	skipc
   545  010B  291B               	goto	l1214
   546                           
   547                           ;mainTrip.c: 135:                 full_drive(1);
   548  010C  3001               	movlw	1
   549  010D  120A  118A  201C  120A  118A  	fcall	_full_drive
   550                           
   551                           ;mainTrip.c: 136:                 j--;
   552  0112  30FF               	movlw	255
   553  0113  1283               	bcf	3,5	;RP0=0, select bank0
   554  0114  1303               	bcf	3,6	;RP1=0, select bank0
   555  0115  07A5               	addwf	_j,f
   556  0116  1803               	skipnc
   557  0117  0AA6               	incf	_j+1,f
   558  0118  30FF               	movlw	255
   559  0119  07A6               	addwf	_j+1,f
   560                           
   561                           ;mainTrip.c: 137:             }
   562  011A  28D1               	goto	l1188
   563  011B                     l1214:	
   564                           
   565                           ;mainTrip.c: 139:                 send[1] = 2;
   566  011B  3002               	movlw	2
   567  011C  1283               	bcf	3,5	;RP0=0, select bank0
   568  011D  1303               	bcf	3,6	;RP1=0, select bank0
   569  011E  00A4               	movwf	??_main
   570  011F  0824               	movf	??_main,w
   571  0120  00A8               	movwf	_send+1
   572                           
   573                           ;mainTrip.c: 140:                 val = 0;
   574  0121  01F8               	clrf	_val
   575  0122  28D1               	goto	l1188
   576  0123                     __end_of_main:	
   577                           
   578                           	psect	text1
   579  01BE                     __ptext1:	
   580 ;; *************** function _system_init *****************
   581 ;; Defined at:
   582 ;;		line 147 in file "mainTrip.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   596 ;;      Params:         0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0
   599 ;;      Totals:         0       0       0       0       0
   600 ;;Total ram usage:        0 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; Hardware stack levels required when called:    1
   603 ;; This function calls:
   604 ;;		Nothing
   605 ;; This function is called by:
   606 ;;		_main
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           
   611                           ;psect for function _system_init
   612  01BE                     _system_init:	
   613                           
   614                           ;mainTrip.c: 148:     ANSELH = 0;
   615                           
   616                           ;incstack = 0
   617                           ; Regs used in _system_init: [wreg+status,2]
   618  01BE  1683               	bsf	3,5	;RP0=1, select bank3
   619  01BF  1703               	bsf	3,6	;RP1=1, select bank3
   620  01C0  0189               	clrf	9	;volatile
   621                           
   622                           ;mainTrip.c: 149:     TRISB = 0x00;
   623  01C1  1683               	bsf	3,5	;RP0=1, select bank1
   624  01C2  1303               	bcf	3,6	;RP1=0, select bank1
   625  01C3  0186               	clrf	6	;volatile
   626                           
   627                           ;mainTrip.c: 150:     PORTB = 0x0F;
   628  01C4  300F               	movlw	15
   629  01C5  1283               	bcf	3,5	;RP0=0, select bank0
   630  01C6  1303               	bcf	3,6	;RP1=0, select bank0
   631  01C7  0086               	movwf	6	;volatile
   632  01C8  0008               	return
   633  01C9                     __end_of_system_init:	
   634                           
   635                           	psect	text2
   636  001C                     __ptext2:	
   637 ;; *************** function _full_drive *****************
   638 ;; Defined at:
   639 ;;		line 153 in file "mainTrip.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  direction       1    wreg     unsigned char 
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  direction       1    6[COMMON] unsigned char 
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, status,2, status,0, pclath, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         1       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0
   656 ;;      Totals:         1       0       0       0       0
   657 ;;Total ram usage:        1 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    2
   660 ;; This function calls:
   661 ;;		_delay
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           
   668                           ;psect for function _full_drive
   669  001C                     _full_drive:	
   670                           
   671                           ;incstack = 0
   672                           ; Regs used in _full_drive: [wreg+status,2+status,0+pclath+cstack]
   673                           ;full_drive@direction stored from wreg
   674  001C  00F6               	movwf	full_drive@direction
   675                           
   676                           ;mainTrip.c: 155:     if (direction == 1){
   677  001D  0376               	decf	full_drive@direction,w
   678  001E  1D03               	btfss	3,2
   679  001F  2861               	goto	l1146
   680                           
   681                           ;mainTrip.c: 156:         PORTB = 0b00000011;
   682  0020  3003               	movlw	3
   683  0021  1283               	bcf	3,5	;RP0=0, select bank0
   684  0022  1303               	bcf	3,6	;RP1=0, select bank0
   685  0023  0086               	movwf	6	;volatile
   686                           
   687                           ;mainTrip.c: 157:         delay(1);
   688  0024  3001               	movlw	1
   689  0025  00F4               	movwf	delay@val
   690  0026  3000               	movlw	0
   691  0027  00F5               	movwf	delay@val+1
   692  0028  120A  118A  2183  120A  118A  	fcall	_delay
   693                           
   694                           ;mainTrip.c: 158:         PORTB = 0b00000110;
   695  002D  3006               	movlw	6
   696  002E  1283               	bcf	3,5	;RP0=0, select bank0
   697  002F  1303               	bcf	3,6	;RP1=0, select bank0
   698  0030  0086               	movwf	6	;volatile
   699                           
   700                           ;mainTrip.c: 159:         delay(1);
   701  0031  3001               	movlw	1
   702  0032  00F4               	movwf	delay@val
   703  0033  3000               	movlw	0
   704  0034  00F5               	movwf	delay@val+1
   705  0035  120A  118A  2183  120A  118A  	fcall	_delay
   706                           
   707                           ;mainTrip.c: 160:         PORTB = 0b00001100;
   708  003A  300C               	movlw	12
   709  003B  1283               	bcf	3,5	;RP0=0, select bank0
   710  003C  1303               	bcf	3,6	;RP1=0, select bank0
   711  003D  0086               	movwf	6	;volatile
   712                           
   713                           ;mainTrip.c: 161:         delay(1);
   714  003E  3001               	movlw	1
   715  003F  00F4               	movwf	delay@val
   716  0040  3000               	movlw	0
   717  0041  00F5               	movwf	delay@val+1
   718  0042  120A  118A  2183  120A  118A  	fcall	_delay
   719                           
   720                           ;mainTrip.c: 162:         PORTB = 0b00001001;
   721  0047  3009               	movlw	9
   722  0048  1283               	bcf	3,5	;RP0=0, select bank0
   723  0049  1303               	bcf	3,6	;RP1=0, select bank0
   724  004A  0086               	movwf	6	;volatile
   725                           
   726                           ;mainTrip.c: 163:         delay(1);
   727  004B  3001               	movlw	1
   728  004C  00F4               	movwf	delay@val
   729  004D  3000               	movlw	0
   730  004E  00F5               	movwf	delay@val+1
   731  004F  120A  118A  2183  120A  118A  	fcall	_delay
   732                           
   733                           ;mainTrip.c: 164:         PORTB = 0b00000011;
   734  0054  3003               	movlw	3
   735  0055  1283               	bcf	3,5	;RP0=0, select bank0
   736  0056  1303               	bcf	3,6	;RP1=0, select bank0
   737  0057  0086               	movwf	6	;volatile
   738                           
   739                           ;mainTrip.c: 165:         delay(1);
   740  0058  3001               	movlw	1
   741  0059  00F4               	movwf	delay@val
   742  005A  3000               	movlw	0
   743  005B  00F5               	movwf	delay@val+1
   744  005C  120A  118A  2183  120A  118A  	fcall	_delay
   745  0061                     l1146:	
   746                           
   747                           ;mainTrip.c: 167:     if (direction == 0){
   748  0061  0876               	movf	full_drive@direction,w
   749  0062  1D03               	btfss	3,2
   750  0063  0008               	return
   751                           
   752                           ;mainTrip.c: 168:         PORTB = 0b00001001;
   753  0064  3009               	movlw	9
   754  0065  1283               	bcf	3,5	;RP0=0, select bank0
   755  0066  1303               	bcf	3,6	;RP1=0, select bank0
   756  0067  0086               	movwf	6	;volatile
   757                           
   758                           ;mainTrip.c: 169:         delay(1);
   759  0068  3001               	movlw	1
   760  0069  00F4               	movwf	delay@val
   761  006A  3000               	movlw	0
   762  006B  00F5               	movwf	delay@val+1
   763  006C  120A  118A  2183  120A  118A  	fcall	_delay
   764                           
   765                           ;mainTrip.c: 170:         PORTB = 0b00001100;
   766  0071  300C               	movlw	12
   767  0072  1283               	bcf	3,5	;RP0=0, select bank0
   768  0073  1303               	bcf	3,6	;RP1=0, select bank0
   769  0074  0086               	movwf	6	;volatile
   770                           
   771                           ;mainTrip.c: 171:         delay(1);
   772  0075  3001               	movlw	1
   773  0076  00F4               	movwf	delay@val
   774  0077  3000               	movlw	0
   775  0078  00F5               	movwf	delay@val+1
   776  0079  120A  118A  2183  120A  118A  	fcall	_delay
   777                           
   778                           ;mainTrip.c: 172:         PORTB = 0b00000110;
   779  007E  3006               	movlw	6
   780  007F  1283               	bcf	3,5	;RP0=0, select bank0
   781  0080  1303               	bcf	3,6	;RP1=0, select bank0
   782  0081  0086               	movwf	6	;volatile
   783                           
   784                           ;mainTrip.c: 173:         delay(1);
   785  0082  3001               	movlw	1
   786  0083  00F4               	movwf	delay@val
   787  0084  3000               	movlw	0
   788  0085  00F5               	movwf	delay@val+1
   789  0086  120A  118A  2183  120A  118A  	fcall	_delay
   790                           
   791                           ;mainTrip.c: 174:         PORTB = 0b00000011;
   792  008B  3003               	movlw	3
   793  008C  1283               	bcf	3,5	;RP0=0, select bank0
   794  008D  1303               	bcf	3,6	;RP1=0, select bank0
   795  008E  0086               	movwf	6	;volatile
   796                           
   797                           ;mainTrip.c: 175:         delay(1);
   798  008F  3001               	movlw	1
   799  0090  00F4               	movwf	delay@val
   800  0091  3000               	movlw	0
   801  0092  00F5               	movwf	delay@val+1
   802  0093  120A  118A  2183  120A  118A  	fcall	_delay
   803                           
   804                           ;mainTrip.c: 176:         PORTB = 0b00001001;
   805  0098  3009               	movlw	9
   806  0099  1283               	bcf	3,5	;RP0=0, select bank0
   807  009A  1303               	bcf	3,6	;RP1=0, select bank0
   808  009B  0086               	movwf	6	;volatile
   809                           
   810                           ;mainTrip.c: 177:         delay(1);
   811  009C  3001               	movlw	1
   812  009D  00F4               	movwf	delay@val
   813  009E  3000               	movlw	0
   814  009F  00F5               	movwf	delay@val+1
   815  00A0  120A  118A  2183   	fcall	_delay
   816  00A3  0008               	return
   817  00A4                     __end_of_full_drive:	
   818                           
   819                           	psect	text3
   820  0183                     __ptext3:	
   821 ;; *************** function _delay *****************
   822 ;; Defined at:
   823 ;;		line 183 in file "mainTrip.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;  val             2    4[COMMON] unsigned int 
   826 ;; Auto vars:     Size  Location     Type
   827 ;;  j               2    2[BANK0 ] unsigned int 
   828 ;;  i               2    0[BANK0 ] unsigned int 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, status,2
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   838 ;;      Params:         2       0       0       0       0
   839 ;;      Locals:         0       4       0       0       0
   840 ;;      Temps:          0       0       0       0       0
   841 ;;      Totals:         2       4       0       0       0
   842 ;;Total ram usage:        6 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; Hardware stack levels required when called:    1
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_full_drive
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           
   853                           ;psect for function _delay
   854  0183                     _delay:	
   855                           
   856                           ;mainTrip.c: 184:      unsigned int i,j;;mainTrip.c: 185:         for(i=0;i<val;i++)
   857                           
   858                           ;incstack = 0
   859                           ; Regs used in _delay: [wreg+status,2]
   860  0183  1283               	bcf	3,5	;RP0=0, select bank0
   861  0184  1303               	bcf	3,6	;RP1=0, select bank0
   862  0185  01A0               	clrf	delay@i
   863  0186  01A1               	clrf	delay@i+1
   864  0187                     l149:	
   865  0187  0875               	movf	delay@val+1,w
   866  0188  0221               	subwf	delay@i+1,w
   867  0189  1D03               	skipz
   868  018A  298D               	goto	u445
   869  018B  0874               	movf	delay@val,w
   870  018C  0220               	subwf	delay@i,w
   871  018D                     u445:	
   872  018D  1803               	btfsc	3,0
   873  018E  0008               	return
   874                           
   875                           ;mainTrip.c: 186:             for(j=0;j<250;j++);
   876  018F  01A2               	clrf	delay@j
   877  0190  01A3               	clrf	delay@j+1
   878  0191                     l1126:	
   879  0191  3001               	movlw	1
   880  0192  07A2               	addwf	delay@j,f
   881  0193  1803               	skipnc
   882  0194  0AA3               	incf	delay@j+1,f
   883  0195  3000               	movlw	0
   884  0196  07A3               	addwf	delay@j+1,f
   885  0197  3000               	movlw	0
   886  0198  0223               	subwf	delay@j+1,w
   887  0199  30FA               	movlw	250
   888  019A  1903               	skipnz
   889  019B  0222               	subwf	delay@j,w
   890  019C  1C03               	skipc
   891  019D  2991               	goto	l1126
   892  019E  3001               	movlw	1
   893  019F  07A0               	addwf	delay@i,f
   894  01A0  1803               	skipnc
   895  01A1  0AA1               	incf	delay@i+1,f
   896  01A2  3000               	movlw	0
   897  01A3  07A1               	addwf	delay@i+1,f
   898  01A4  2987               	goto	l149
   899  01A5                     __end_of_delay:	
   900                           
   901                           	psect	text4
   902  01A5                     __ptext4:	
   903 ;; *************** function _I2C_Slave_Init *****************
   904 ;; Defined at:
   905 ;;		line 94 in file "./I2C.h"
   906 ;; Parameters:    Size  Location     Type
   907 ;;  address         2    4[COMMON] short 
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   919 ;;      Params:         2       0       0       0       0
   920 ;;      Locals:         0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0
   922 ;;      Totals:         2       0       0       0       0
   923 ;;Total ram usage:        2 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; Hardware stack levels required when called:    1
   926 ;; This function calls:
   927 ;;		Nothing
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           
   934                           ;psect for function _I2C_Slave_Init
   935  01A5                     _I2C_Slave_Init:	
   936                           
   937                           ;./I2C.h: 94: void I2C_Slave_Init(short address);./I2C.h: 95: {;./I2C.h: 96:     SSPADD 
      +                          = address;
   938                           
   939                           ;incstack = 0
   940                           ; Regs used in _I2C_Slave_Init: [wreg]
   941  01A5  0874               	movf	I2C_Slave_Init@address,w
   942  01A6  1683               	bsf	3,5	;RP0=1, select bank1
   943  01A7  1303               	bcf	3,6	;RP1=0, select bank1
   944  01A8  0093               	movwf	19	;volatile
   945                           
   946                           ;./I2C.h: 97:     SSPCON = 0x36;
   947  01A9  3036               	movlw	54
   948  01AA  1283               	bcf	3,5	;RP0=0, select bank0
   949  01AB  1303               	bcf	3,6	;RP1=0, select bank0
   950  01AC  0094               	movwf	20	;volatile
   951                           
   952                           ;./I2C.h: 98:     SSPSTAT = 0x80;
   953  01AD  3080               	movlw	128
   954  01AE  1683               	bsf	3,5	;RP0=1, select bank1
   955  01AF  1303               	bcf	3,6	;RP1=0, select bank1
   956  01B0  0094               	movwf	20	;volatile
   957                           
   958                           ;./I2C.h: 99:     SSPCON2 = 0x01;
   959  01B1  3001               	movlw	1
   960  01B2  0091               	movwf	17	;volatile
   961                           
   962                           ;./I2C.h: 100:     TRISC3 = 1;
   963  01B3  1587               	bsf	7,3	;volatile
   964                           
   965                           ;./I2C.h: 101:     TRISC4 = 1;
   966  01B4  1607               	bsf	7,4	;volatile
   967                           
   968                           ;./I2C.h: 102:     GIE = 1;
   969  01B5  178B               	bsf	11,7	;volatile
   970                           
   971                           ;./I2C.h: 103:     PEIE = 1;
   972  01B6  170B               	bsf	11,6	;volatile
   973                           
   974                           ;./I2C.h: 104:     SSPIF = 0;
   975  01B7  1283               	bcf	3,5	;RP0=0, select bank0
   976  01B8  1303               	bcf	3,6	;RP1=0, select bank0
   977  01B9  118C               	bcf	12,3	;volatile
   978                           
   979                           ;./I2C.h: 105:     SSPIE = 1;
   980  01BA  1683               	bsf	3,5	;RP0=1, select bank1
   981  01BB  1303               	bcf	3,6	;RP1=0, select bank1
   982  01BC  158C               	bsf	12,3	;volatile
   983  01BD  0008               	return
   984  01BE                     __end_of_I2C_Slave_Init:	
   985                           
   986                           	psect	text5
   987  0123                     __ptext5:	
   988 ;; *************** function _isr *****************
   989 ;; Defined at:
   990 ;;		line 48 in file "mainTrip.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;		None
   993 ;; Auto vars:     Size  Location     Type
   994 ;;		None
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1004 ;;      Params:         0       0       0       0       0
  1005 ;;      Locals:         0       0       0       0       0
  1006 ;;      Temps:          4       0       0       0       0
  1007 ;;      Totals:         4       0       0       0       0
  1008 ;;Total ram usage:        4 bytes
  1009 ;; Hardware stack levels used:    1
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		Interrupt level 1
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           
  1018                           ;psect for function _isr
  1019  0123                     _isr:	
  1020                           
  1021                           ;mainTrip.c: 49:     if(PIR1bits.SSPIF == 1){
  1022  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1023  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1024  0125  1D8C               	btfss	12,3	;volatile
  1025  0126  297A               	goto	i1l122
  1026                           
  1027                           ;mainTrip.c: 51:         SSPCONbits.CKP = 0;
  1028  0127  1214               	bcf	20,4	;volatile
  1029                           
  1030                           ;mainTrip.c: 53:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1031  0128  1B14               	btfsc	20,6	;volatile
  1032  0129  292C               	goto	i1l1022
  1033  012A  1F94               	btfss	20,7	;volatile
  1034  012B  2933               	goto	i1l1030
  1035  012C                     i1l1022:	
  1036                           
  1037                           ;mainTrip.c: 54:             z = SSPBUF;
  1038  012C  0813               	movf	19,w	;volatile
  1039  012D  00F0               	movwf	??_isr
  1040  012E  0870               	movf	??_isr,w
  1041  012F  00F9               	movwf	_z
  1042                           
  1043                           ;mainTrip.c: 55:             SSPCONbits.SSPOV = 0;
  1044  0130  1314               	bcf	20,6	;volatile
  1045                           
  1046                           ;mainTrip.c: 56:             SSPCONbits.WCOL = 0;
  1047  0131  1394               	bcf	20,7	;volatile
  1048                           
  1049                           ;mainTrip.c: 57:             SSPCONbits.CKP = 1;
  1050  0132  1614               	bsf	20,4	;volatile
  1051  0133                     i1l1030:	
  1052                           
  1053                           ;mainTrip.c: 60:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1054  0133  1683               	bsf	3,5	;RP0=1, select bank1
  1055  0134  1303               	bcf	3,6	;RP1=0, select bank1
  1056  0135  1E94               	btfss	20,5	;volatile
  1057  0136  1914               	btfsc	20,2	;volatile
  1058  0137  2950               	goto	i1l112
  1059                           
  1060                           ;mainTrip.c: 62:             z = SSPBUF;
  1061  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1063  013A  0813               	movf	19,w	;volatile
  1064  013B  00F0               	movwf	??_isr
  1065  013C  0870               	movf	??_isr,w
  1066  013D  00F9               	movwf	_z
  1067                           
  1068                           ;mainTrip.c: 64:             PIR1bits.SSPIF = 0;
  1069  013E  118C               	bcf	12,3	;volatile
  1070                           
  1071                           ;mainTrip.c: 65:             SSPCONbits.CKP = 1;
  1072  013F  1614               	bsf	20,4	;volatile
  1073  0140                     i1l113:	
  1074                           ;mainTrip.c: 66:             while(!SSPSTATbits.BF);
  1075                           
  1076  0140  1683               	bsf	3,5	;RP0=1, select bank1
  1077  0141  1303               	bcf	3,6	;RP1=0, select bank1
  1078  0142  1C14               	btfss	20,0	;volatile
  1079  0143  2940               	goto	i1l113
  1080                           
  1081                           ;mainTrip.c: 67:             val = SSPBUF;
  1082  0144  1283               	bcf	3,5	;RP0=0, select bank0
  1083  0145  1303               	bcf	3,6	;RP1=0, select bank0
  1084  0146  0813               	movf	19,w	;volatile
  1085  0147  00F0               	movwf	??_isr
  1086  0148  0870               	movf	??_isr,w
  1087  0149  00F8               	movwf	_val
  1088                           
  1089                           ;mainTrip.c: 68:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1090  014A  30A6               	movlw	166
  1091  014B  00F0               	movwf	??_isr
  1092  014C                     u52_27:	
  1093  014C  0BF0               	decfsz	??_isr,f
  1094  014D  294C               	goto	u52_27
  1095  014E  0000               	nop
  1096                           
  1097                           ;mainTrip.c: 70:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1098  014F  2977               	goto	i1l116
  1099  0150                     i1l112:	
  1100  0150  1E94               	btfss	20,5	;volatile
  1101  0151  1D14               	btfss	20,2	;volatile
  1102  0152  2977               	goto	i1l116
  1103                           
  1104                           ;mainTrip.c: 72:             z = SSPBUF;
  1105  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0155  0813               	movf	19,w	;volatile
  1108  0156  00F0               	movwf	??_isr
  1109  0157  0870               	movf	??_isr,w
  1110  0158  00F9               	movwf	_z
  1111                           
  1112                           ;mainTrip.c: 73:             BF = 0;
  1113  0159  1683               	bsf	3,5	;RP0=1, select bank1
  1114  015A  1303               	bcf	3,6	;RP1=0, select bank1
  1115  015B  1014               	bcf	20,0	;volatile
  1116                           
  1117                           ;mainTrip.c: 74:             SSPBUF = send[i];
  1118  015C  0877               	movf	_i,w
  1119  015D  3E27               	addlw	(low (_send| 0))& (0+255)
  1120  015E  0084               	movwf	4
  1121  015F  1383               	bcf	3,7	;select IRP bank0
  1122  0160  0800               	movf	0,w
  1123  0161  1283               	bcf	3,5	;RP0=0, select bank0
  1124  0162  1303               	bcf	3,6	;RP1=0, select bank0
  1125  0163  0093               	movwf	19	;volatile
  1126                           
  1127                           ;mainTrip.c: 75:             i++;
  1128  0164  3001               	movlw	1
  1129  0165  00F0               	movwf	??_isr
  1130  0166  0870               	movf	??_isr,w
  1131  0167  07F7               	addwf	_i,f
  1132                           
  1133                           ;mainTrip.c: 76:             if (i>1){
  1134  0168  3002               	movlw	2
  1135  0169  0277               	subwf	_i,w
  1136  016A  1803               	btfsc	3,0
  1137                           
  1138                           ;mainTrip.c: 77:                 i = 0;
  1139  016B  01F7               	clrf	_i
  1140                           
  1141                           ;mainTrip.c: 79:             PORTAbits.RA6 = 1;
  1142  016C  1705               	bsf	5,6	;volatile
  1143                           
  1144                           ;mainTrip.c: 80:             SSPCONbits.CKP = 1;
  1145  016D  1614               	bsf	20,4	;volatile
  1146                           
  1147                           ;mainTrip.c: 81:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1148  016E  30A6               	movlw	166
  1149  016F  00F0               	movwf	??_isr
  1150  0170                     u53_27:	
  1151  0170  0BF0               	decfsz	??_isr,f
  1152  0171  2970               	goto	u53_27
  1153  0172  0000               	nop
  1154  0173                     i1l119:	
  1155                           ;mainTrip.c: 82:             while(SSPSTATbits.BF);
  1156                           
  1157  0173  1683               	bsf	3,5	;RP0=1, select bank1
  1158  0174  1303               	bcf	3,6	;RP1=0, select bank1
  1159  0175  1814               	btfsc	20,0	;volatile
  1160  0176  2973               	goto	i1l119
  1161  0177                     i1l116:	
  1162                           
  1163                           ;mainTrip.c: 85:         PIR1bits.SSPIF = 0;
  1164  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1165  0178  1303               	bcf	3,6	;RP1=0, select bank0
  1166  0179  118C               	bcf	12,3	;volatile
  1167  017A                     i1l122:	
  1168  017A  0873               	movf	??_isr+3,w
  1169  017B  008A               	movwf	10
  1170  017C  0872               	movf	??_isr+2,w
  1171  017D  0084               	movwf	4
  1172  017E  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1173  017F  0083               	movwf	3
  1174  0180  0EFE               	swapf	126,f
  1175  0181  0E7E               	swapf	126,w
  1176  0182  0009               	retfie
  1177  0183                     __end_of_isr:	
  1178  007E                     btemp	set	126	;btemp
  1179  007E                     wtemp0	set	126
  1180                           
  1181                           	psect	intentry
  1182  0004                     __pintentry:	
  1183                           ;incstack = 0
  1184                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1185                           
  1186  0004                     interrupt_function:	
  1187  007E                     saved_w	set	btemp
  1188  0004  00FE               	movwf	btemp
  1189  0005  0E03               	swapf	3,w
  1190  0006  00F1               	movwf	??_isr+1
  1191  0007  0804               	movf	4,w
  1192  0008  00F2               	movwf	??_isr+2
  1193  0009  080A               	movf	10,w
  1194  000A  00F3               	movwf	??_isr+3
  1195  000B  120A  118A  2923   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      5       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_full_drive
    _full_drive->_delay

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _full_drive->_delay

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1196
                                              4 BANK0      1     1      0
                     _I2C_Slave_Init
                         _full_drive
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _full_drive                                           1     1      0    1098
                                              6 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                6     4      2    1036
                                              4 COMMON     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init
   _full_drive
     _delay
   _system_init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      13       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       9       5       11.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      13      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 11 08:06:11 2019

                       _i 0077                         _j 0025                         _z 0079  
             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        _BF 04A0  
     __end_of_system_init 01C9                       l149 0187                       _GIE 005F  
            __CFG_CPD$OFF 0000                       u515 010A                       u445 018D  
                     u495 00E5                       _isr 0123                       _val 0078  
                     fsr0 0004                       indf 0000              __CFG_LVP$OFF 0000  
                    l1202 00F6                      l1126 0191                      l1214 011B  
                    l1206 00FD                      l1146 0061                      l1192 00D8  
                    l1194 00D9                      l1188 00D1                      ?_isr 0070  
                    _PEIE 005E                      _RCEN 048B              __CFG_WRT$OFF 0000  
                    _main 00A4                      _send 0027                      btemp 007E  
                    start 000E             __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000  
                   ??_isr 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l112 0150                     i1l113 0140  
                   i1l122 017A                     i1l116 0177                     i1l119 0173  
                   _PORTA 0005                     _PORTB 0006                     u52_27 014C  
                   u53_27 0170                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088                     _SSPIE 0463                     _SSPIF 0063  
          __CFG_FCMEN$OFF 0000                     _delay 0183            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 0011               _system_init 01BE              __end_of_main 0123  
                  ??_main 0024                    ?_delay 0074                    _ANSELH 0189  
                  i1l1030 0133                    i1l1022 012C                    _SSPADD 0093  
                  _TRISC3 043B                    _TRISC4 043C                    _SSPCON 0014  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000                    delay@i 0020  
                  delay@j 0022                    saved_w 007E   __end_of__initialization 0018  
     full_drive@direction 0076            __pcstackCOMMON 0070   __size_of_I2C_Slave_Init 0019  
           __end_of_delay 01A5                   ??_delay 0076     I2C_Slave_Init@address 0074  
              __pbssBANK0 0027                __pmaintext 00A4                __pintentry 0004  
                 _SSPCON2 0091                   _SSPSTAT 0094              ?_system_init 0070  
              _full_drive 001C                   __ptext1 01BE                   __ptext2 001C  
                 __ptext3 0183                   __ptext4 01A5                   __ptext5 0123  
            __size_of_isr 0060      end_of_initialization 0018            _I2C_Slave_Init 01A5  
               _PORTAbits 0005                 _PORTDbits 0008    __end_of_I2C_Slave_Init 01BE  
             ?_full_drive 0070       start_initialization 0011               __end_of_isr 0183  
__CFG_FOSC$INTRC_NOCLKOUT 0000           ?_I2C_Slave_Init 0074      __size_of_system_init 000B  
             __pbssCOMMON 0077                 ___latbits 0002             __pcstackBANK0 0020  
     __size_of_full_drive 0088                 __pnvBANK0 0025            __size_of_delay 0022  
       interrupt_function 0004                  _PIR1bits 000C              ??_full_drive 0076  
       __CFG_BOR4V$BOR40V 0000          ??_I2C_Slave_Init 0076             __size_of_main 007F  
      __end_of_full_drive 00A4                  delay@val 0074                _INTCONbits 000B  
                intlevel1 0000                _OSCCONbits 008F             ??_system_init 0074  
             _SSPCON2bits 0091                _SSPCONbits 0014  
