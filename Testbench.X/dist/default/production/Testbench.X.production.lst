

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Feb 21 16:08:22 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.05
    46                           ; Generated 20/12/2018 GMT
    47                           ; 
    48                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F887 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  0105                     	;# 
   143  0107                     	;# 
   144  0108                     	;# 
   145  0109                     	;# 
   146  010C                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0185                     	;# 
   152  0187                     	;# 
   153  0188                     	;# 
   154  0189                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  0008                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  0087                     	;# 
   196  0088                     	;# 
   197  0089                     	;# 
   198  008C                     	;# 
   199  008D                     	;# 
   200  008E                     	;# 
   201  008F                     	;# 
   202  0090                     	;# 
   203  0091                     	;# 
   204  0092                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0094                     	;# 
   209  0095                     	;# 
   210  0096                     	;# 
   211  0097                     	;# 
   212  0098                     	;# 
   213  0099                     	;# 
   214  009A                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  0105                     	;# 
   221  0107                     	;# 
   222  0108                     	;# 
   223  0109                     	;# 
   224  010C                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  0185                     	;# 
   230  0187                     	;# 
   231  0188                     	;# 
   232  0189                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235                           
   236                           	psect	strings
   237  0003                     __pstrings:	
   238  0003                     stringtab:	
   239  0003                     __stringtab:	
   240                           
   241                           ;	String table - string pointers are 1 byte each
   242  0003  1BFF               	btfsc	btemp+1,7
   243  0004  280D               	ljmp	stringcode
   244  0005  1383               	bcf	3,7
   245  0006  187F               	btfsc	btemp+1,0
   246  0007  1783               	bsf	3,7
   247  0008  0800               	movf	0,w
   248  0009  0A84               	incf	4,f
   249  000A  1903               	skipnz
   250  000B  0AFF               	incf	btemp+1,f
   251  000C  0008               	return
   252  000D                     stringcode:	
   253  000D                     stringdir:	
   254  000D  3000               	movlw	high stringdir
   255  000E  008A               	movwf	10
   256  000F  0804               	movf	4,w
   257  0010  0A84               	incf	4,f
   258  0011  0782               	addwf	2,f
   259  0012                     __stringbase:	
   260  0012  3400               	retlw	0
   261  0013                     __end_of__stringtab:	
   262  0013                     __powers_:	
   263  0013  3400               	retlw	0
   264  0014  3400               	retlw	0
   265  0015  3480               	retlw	128
   266  0016  343F               	retlw	63
   267  0017  3400               	retlw	0
   268  0018  3400               	retlw	0
   269  0019  3420               	retlw	32
   270  001A  3441               	retlw	65
   271  001B  3400               	retlw	0
   272  001C  3400               	retlw	0
   273  001D  34C8               	retlw	200
   274  001E  3442               	retlw	66
   275  001F  3400               	retlw	0
   276  0020  3400               	retlw	0
   277  0021  347A               	retlw	122
   278  0022  3444               	retlw	68
   279  0023  3400               	retlw	0
   280  0024  3440               	retlw	64
   281  0025  341C               	retlw	28
   282  0026  3446               	retlw	70
   283  0027  3400               	retlw	0
   284  0028  3450               	retlw	80
   285  0029  34C3               	retlw	195
   286  002A  3447               	retlw	71
   287  002B  3400               	retlw	0
   288  002C  3424               	retlw	36
   289  002D  3474               	retlw	116
   290  002E  3449               	retlw	73
   291  002F  3480               	retlw	128
   292  0030  3496               	retlw	150
   293  0031  3418               	retlw	24
   294  0032  344B               	retlw	75
   295  0033  3420               	retlw	32
   296  0034  34BC               	retlw	188
   297  0035  34BE               	retlw	190
   298  0036  344C               	retlw	76
   299  0037  3428               	retlw	40
   300  0038  346B               	retlw	107
   301  0039  346E               	retlw	110
   302  003A  344E               	retlw	78
   303  003B  34F9               	retlw	249
   304  003C  3402               	retlw	2
   305  003D  3415               	retlw	21
   306  003E  3450               	retlw	80
   307  003F  34EC               	retlw	236
   308  0040  3478               	retlw	120
   309  0041  34AD               	retlw	173
   310  0042  3460               	retlw	96
   311  0043  34CA               	retlw	202
   312  0044  34F2               	retlw	242
   313  0045  3449               	retlw	73
   314  0046  3471               	retlw	113
   315  0047                     __end_of__powers_:	
   316  0047                     __npowers_:	
   317  0047  3400               	retlw	0
   318  0048  3400               	retlw	0
   319  0049  3480               	retlw	128
   320  004A  343F               	retlw	63
   321  004B  34CD               	retlw	205
   322  004C  34CC               	retlw	204
   323  004D  34CC               	retlw	204
   324  004E  343D               	retlw	61
   325  004F  340A               	retlw	10
   326  0050  34D7               	retlw	215
   327  0051  3423               	retlw	35
   328  0052  343C               	retlw	60
   329  0053  346F               	retlw	111
   330  0054  3412               	retlw	18
   331  0055  3483               	retlw	131
   332  0056  343A               	retlw	58
   333  0057  3417               	retlw	23
   334  0058  34B7               	retlw	183
   335  0059  34D1               	retlw	209
   336  005A  3438               	retlw	56
   337  005B  34AC               	retlw	172
   338  005C  34C5               	retlw	197
   339  005D  3427               	retlw	39
   340  005E  3437               	retlw	55
   341  005F  34BD               	retlw	189
   342  0060  3437               	retlw	55
   343  0061  3486               	retlw	134
   344  0062  3435               	retlw	53
   345  0063  3495               	retlw	149
   346  0064  34BF               	retlw	191
   347  0065  34D6               	retlw	214
   348  0066  3433               	retlw	51
   349  0067  3477               	retlw	119
   350  0068  34CC               	retlw	204
   351  0069  342B               	retlw	43
   352  006A  3432               	retlw	50
   353  006B  345F               	retlw	95
   354  006C  3470               	retlw	112
   355  006D  3489               	retlw	137
   356  006E  3430               	retlw	48
   357  006F  34FF               	retlw	255
   358  0070  34E6               	retlw	230
   359  0071  34DB               	retlw	219
   360  0072  342E               	retlw	46
   361  0073  3408               	retlw	8
   362  0074  34E5               	retlw	229
   363  0075  343C               	retlw	60
   364  0076  341E               	retlw	30
   365  0077  3460               	retlw	96
   366  0078  3442               	retlw	66
   367  0079  34A2               	retlw	162
   368  007A  340D               	retlw	13
   369  007B                     __end_of__npowers_:	
   370  007B                     _dpowers:	
   371  007B  3401               	retlw	1
   372  007C  3400               	retlw	0
   373  007D  3400               	retlw	0
   374  007E  3400               	retlw	0
   375  007F  340A               	retlw	10
   376  0080  3400               	retlw	0
   377  0081  3400               	retlw	0
   378  0082  3400               	retlw	0
   379  0083  3464               	retlw	100
   380  0084  3400               	retlw	0
   381  0085  3400               	retlw	0
   382  0086  3400               	retlw	0
   383  0087  34E8               	retlw	232
   384  0088  3403               	retlw	3
   385  0089  3400               	retlw	0
   386  008A  3400               	retlw	0
   387  008B  3410               	retlw	16
   388  008C  3427               	retlw	39
   389  008D  3400               	retlw	0
   390  008E  3400               	retlw	0
   391  008F  34A0               	retlw	160
   392  0090  3486               	retlw	134
   393  0091  3401               	retlw	1
   394  0092  3400               	retlw	0
   395  0093  3440               	retlw	64
   396  0094  3442               	retlw	66
   397  0095  340F               	retlw	15
   398  0096  3400               	retlw	0
   399  0097  3480               	retlw	128
   400  0098  3496               	retlw	150
   401  0099  3498               	retlw	152
   402  009A  3400               	retlw	0
   403  009B  3400               	retlw	0
   404  009C  34E1               	retlw	225
   405  009D  34F5               	retlw	245
   406  009E  3405               	retlw	5
   407  009F  3400               	retlw	0
   408  00A0  34CA               	retlw	202
   409  00A1  349A               	retlw	154
   410  00A2  343B               	retlw	59
   411  00A3                     __end_of_dpowers:	
   412  000C                     _PIR1bits	set	12
   413  001E                     _ADRESH	set	30
   414  001F                     _ADCON0bits	set	31
   415  001F                     _ADCON0	set	31
   416  0035                     _RB5	set	53
   417  0034                     _RB4	set	52
   418  0033                     _RB3	set	51
   419  0032                     _RB2	set	50
   420  0031                     _RB1	set	49
   421  0030                     _RB0	set	48
   422  0086                     _TRISB	set	134
   423  0088                     _TRISD	set	136
   424  0085                     _TRISA	set	133
   425  008F                     _OSCCONbits	set	143
   426  009F                     _ADCON1bits	set	159
   427  0188                     _ANSEL	set	392
   428  0189                     _ANSELH	set	393
   429  00A3                     STR_1:	
   430  00A3  344C               	retlw	76	;'L'
   431  00A4  3443               	retlw	67	;'C'
   432  00A5  3444               	retlw	68	;'D'
   433  00A6  3420               	retlw	32	;' '
   434  00A7  344C               	retlw	76	;'L'
   435  00A8  3469               	retlw	105	;'i'
   436  00A9  3462               	retlw	98	;'b'
   437  00AA  3472               	retlw	114	;'r'
   438  00AB  3461               	retlw	97	;'a'
   439  00AC  3472               	retlw	114	;'r'
   440  00AD  3479               	retlw	121	;'y'
   441  00AE  3420               	retlw	32	;' '
   442  00AF  3466               	retlw	102	;'f'
   443  00B0  346F               	retlw	111	;'o'
   444  00B1  3472               	retlw	114	;'r'
   445  00B2  3400               	retlw	0
   446  00B3                     STR_5:	
   447  00B3  3445               	retlw	69	;'E'
   448  00B4  346D               	retlw	109	;'m'
   449  00B5  3470               	retlw	112	;'p'
   450  00B6  3465               	retlw	101	;'e'
   451  00B7  347A               	retlw	122	;'z'
   452  00B8  3461               	retlw	97	;'a'
   453  00B9  346E               	retlw	110	;'n'
   454  00BA  3464               	retlw	100	;'d'
   455  00BB  346F               	retlw	111	;'o'
   456  00BC  3420               	retlw	32	;' '
   457  00BD  3441               	retlw	65	;'A'
   458  00BE  3444               	retlw	68	;'D'
   459  00BF  3443               	retlw	67	;'C'
   460  00C0  3400               	retlw	0
   461  00C1                     STR_3:	
   462  00C1  3444               	retlw	68	;'D'
   463  00C2  3465               	retlw	101	;'e'
   464  00C3  3476               	retlw	118	;'v'
   465  00C4  3465               	retlw	101	;'e'
   466  00C5  346C               	retlw	108	;'l'
   467  00C6  346F               	retlw	111	;'o'
   468  00C7  3470               	retlw	112	;'p'
   469  00C8  3465               	retlw	101	;'e'
   470  00C9  3464               	retlw	100	;'d'
   471  00CA  3420               	retlw	32	;' '
   472  00CB  3442               	retlw	66	;'B'
   473  00CC  3479               	retlw	121	;'y'
   474  00CD  3400               	retlw	0
   475  00CE                     STR_2:	
   476  00CE  344D               	retlw	77	;'M'
   477  00CF  3450               	retlw	80	;'P'
   478  00D0  344C               	retlw	76	;'L'
   479  00D1  3441               	retlw	65	;'A'
   480  00D2  3442               	retlw	66	;'B'
   481  00D3  3420               	retlw	32	;' '
   482  00D4  3458               	retlw	88	;'X'
   483  00D5  3443               	retlw	67	;'C'
   484  00D6  3438               	retlw	56	;'8'
   485  00D7  3400               	retlw	0
   486  00D8                     STR_4:	
   487  00D8  3452               	retlw	82	;'R'
   488  00D9  3445               	retlw	69	;'E'
   489  00DA  3443               	retlw	67	;'C'
   490  00DB  3441               	retlw	65	;'A'
   491  00DC  344E               	retlw	78	;'N'
   492  00DD  3400               	retlw	0
   493  00DE                     STR_6:	
   494  00DE  3425               	retlw	37	;'%'
   495  00DF  3433               	retlw	51	;'3'
   496  00E0  342E               	retlw	46	;'.'
   497  00E1  3432               	retlw	50	;'2'
   498  00E2  3466               	retlw	102	;'f'
   499  00E3  3400               	retlw	0
   500                           
   501                           ; #config settings
   502  0000                     
   503                           	psect	cinit
   504  07F3                     start_initialization:	
   505  07F3                     __initialization:	
   506                           
   507                           ; Clear objects allocated to BANK1
   508  07F3  1683               	bsf	3,5	;RP0=1, select bank1
   509  07F4  1303               	bcf	3,6	;RP1=0, select bank1
   510  07F5  01C8               	clrf	__pbssBANK1& (0+127)
   511  07F6  01C9               	clrf	(__pbssBANK1+1)& (0+127)
   512  07F7  01CA               	clrf	(__pbssBANK1+2)& (0+127)
   513  07F8  01CB               	clrf	(__pbssBANK1+3)& (0+127)
   514  07F9  01CC               	clrf	(__pbssBANK1+4)& (0+127)
   515  07FA  01CD               	clrf	(__pbssBANK1+5)& (0+127)
   516  07FB  01CE               	clrf	(__pbssBANK1+6)& (0+127)
   517  07FC                     end_of_initialization:	
   518                           ;End of C runtime variable initialization code
   519                           
   520  07FC                     __end_of__initialization:	
   521  07FC  0183               	clrf	3
   522  07FD  120A  158A  2893   	ljmp	_main	;jump to C main() function
   523                           
   524                           	psect	bssBANK1
   525  00C8                     __pbssBANK1:	
   526  00C8                     _ADC:	
   527  00C8                     	ds	4
   528  00CC                     _buffer:	
   529  00CC                     	ds	3
   530                           
   531                           	psect	cstackBANK1
   532  00A0                     __pcstackBANK1:	
   533  00A0                     ?_sprintf:	
   534  00A0                     sprintf@f:	
   535                           ; 2 bytes @ 0x0
   536                           
   537                           
   538                           ; 1 bytes @ 0x0
   539  00A0                     	ds	5
   540  00A5                     ??_sprintf:	
   541                           
   542                           ; 1 bytes @ 0x5
   543  00A5                     	ds	5
   544  00AA                     _sprintf$939:	
   545                           
   546                           ; 4 bytes @ 0xA
   547  00AA                     	ds	4
   548  00AE                     sprintf@ap:	
   549                           
   550                           ; 1 bytes @ 0xE
   551  00AE                     	ds	1
   552  00AF                     sprintf@val:	
   553                           
   554                           ; 4 bytes @ 0xF
   555  00AF                     	ds	4
   556  00B3                     sprintf@flag:	
   557                           
   558                           ; 2 bytes @ 0x13
   559  00B3                     	ds	2
   560  00B5                     sprintf@width:	
   561                           
   562                           ; 2 bytes @ 0x15
   563  00B5                     	ds	2
   564  00B7                     sprintf@tmpval:	
   565                           
   566                           ; 4 bytes @ 0x17
   567  00B7                     	ds	4
   568  00BB                     sprintf@eexp:	
   569                           
   570                           ; 2 bytes @ 0x1B
   571  00BB                     	ds	2
   572  00BD                     sprintf@fval:	
   573                           
   574                           ; 4 bytes @ 0x1D
   575  00BD                     	ds	4
   576  00C1                     sprintf@sp:	
   577                           
   578                           ; 1 bytes @ 0x21
   579  00C1                     	ds	1
   580  00C2                     sprintf@prec:	
   581                           
   582                           ; 2 bytes @ 0x22
   583  00C2                     	ds	2
   584  00C4                     sprintf@c:	
   585                           
   586                           ; 1 bytes @ 0x24
   587  00C4                     	ds	1
   588  00C5                     ??_main:	
   589                           
   590                           ; 1 bytes @ 0x25
   591  00C5                     	ds	3
   592                           
   593                           	psect	cstackCOMMON
   594  0070                     __pcstackCOMMON:	
   595  0070                     ?_isdigit:	
   596  0070                     ?___fleq:	
   597                           ; 1 bit 
   598                           
   599  0070                     ?___flge:	
   600                           ; 1 bit 
   601                           
   602  0070                     ?_readADC:	
   603                           ; 1 bit 
   604                           
   605  0070                     ??_isdigit:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_Lcd_Port:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ??_Lcd_Port:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_Lcd_Cmd:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_Lcd_Clear:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_Lcd_Init:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_Lcd_Write_Char:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_ADC_init:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_main:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?__Umul8_16:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?___wmul:	
   636                           ; 2 bytes @ 0x0
   637                           
   638  0070                     ?___awmod:	
   639                           ; 2 bytes @ 0x0
   640                           
   641  0070                     ?___lwmod:	
   642                           ; 2 bytes @ 0x0
   643                           
   644  0070                     ?__tdiv_to_l_:	
   645                           ; 2 bytes @ 0x0
   646                           
   647  0070                     ?__div_to_l_:	
   648                           ; 4 bytes @ 0x0
   649                           
   650  0070                     ?___lldiv:	
   651                           ; 4 bytes @ 0x0
   652                           
   653  0070                     ?___flneg:	
   654                           ; 4 bytes @ 0x0
   655                           
   656  0070                     ?___llmod:	
   657                           ; 4 bytes @ 0x0
   658                           
   659  0070                     ?___fldiv:	
   660                           ; 4 bytes @ 0x0
   661                           
   662  0070                     ?___xxtofl:	
   663                           ; 4 bytes @ 0x0
   664                           
   665  0070                     Lcd_Port@a:	
   666                           ; 4 bytes @ 0x0
   667                           
   668  0070                     ADC_init@CHS:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     _isdigit$743:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     __Umul8_16@multiplicand:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ___wmul@multiplier:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ___awmod@divisor:	
   681                           ; 2 bytes @ 0x0
   682                           
   683  0070                     ___lwmod@divisor:	
   684                           ; 2 bytes @ 0x0
   685                           
   686  0070                     ___lldiv@divisor:	
   687                           ; 2 bytes @ 0x0
   688                           
   689  0070                     __div_to_l_@f1:	
   690                           ; 4 bytes @ 0x0
   691                           
   692  0070                     ___fleq@ff1:	
   693                           ; 4 bytes @ 0x0
   694                           
   695  0070                     ___flge@ff1:	
   696                           ; 4 bytes @ 0x0
   697                           
   698  0070                     ___flneg@f1:	
   699                           ; 4 bytes @ 0x0
   700                           
   701  0070                     __tdiv_to_l_@f1:	
   702                           ; 4 bytes @ 0x0
   703                           
   704  0070                     ___llmod@divisor:	
   705                           ; 4 bytes @ 0x0
   706                           
   707  0070                     ___fldiv@a:	
   708                           ; 4 bytes @ 0x0
   709                           
   710  0070                     ___xxtofl@val:	
   711                           ; 4 bytes @ 0x0
   712                           
   713                           
   714                           ; 4 bytes @ 0x0
   715  0070                     	ds	1
   716  0071                     ??_Lcd_Cmd:	
   717  0071                     ??_Lcd_Write_Char:	
   718                           ; 1 bytes @ 0x1
   719                           
   720  0071                     ??_ADC_init:	
   721                           ; 1 bytes @ 0x1
   722                           
   723  0071                     isdigit@c:	
   724                           ; 1 bytes @ 0x1
   725                           
   726                           
   727                           ; 1 bytes @ 0x1
   728  0071                     	ds	1
   729  0072                     ??__Umul8_16:	
   730  0072                     Lcd_Write_Char@temp:	
   731                           ; 1 bytes @ 0x2
   732                           
   733  0072                     ___wmul@multiplicand:	
   734                           ; 1 bytes @ 0x2
   735                           
   736  0072                     ___awmod@dividend:	
   737                           ; 2 bytes @ 0x2
   738                           
   739  0072                     ___lwmod@dividend:	
   740                           ; 2 bytes @ 0x2
   741                           
   742                           
   743                           ; 2 bytes @ 0x2
   744  0072                     	ds	1
   745  0073                     Lcd_Cmd@a:	
   746  0073                     Lcd_Write_Char@y:	
   747                           ; 1 bytes @ 0x3
   748                           
   749  0073                     ADC_init@ADCS:	
   750                           ; 1 bytes @ 0x3
   751                           
   752                           
   753                           ; 1 bytes @ 0x3
   754  0073                     	ds	1
   755  0074                     ??_Lcd_Clear:	
   756  0074                     ?_Lcd_Set_Cursor:	
   757                           ; 1 bytes @ 0x4
   758                           
   759  0074                     ??_Lcd_Init:	
   760                           ; 1 bytes @ 0x4
   761                           
   762  0074                     ??___wmul:	
   763                           ; 1 bytes @ 0x4
   764                           
   765  0074                     ??___awmod:	
   766                           ; 1 bytes @ 0x4
   767                           
   768  0074                     ??___flneg:	
   769                           ; 1 bytes @ 0x4
   770                           
   771  0074                     ??___lwmod:	
   772                           ; 1 bytes @ 0x4
   773                           
   774  0074                     ??___xxtofl:	
   775                           ; 1 bytes @ 0x4
   776                           
   777  0074                     Lcd_Set_Cursor@b:	
   778                           ; 1 bytes @ 0x4
   779                           
   780  0074                     Lcd_Write_Char@a:	
   781                           ; 1 bytes @ 0x4
   782                           
   783  0074                     ___wmul@product:	
   784                           ; 1 bytes @ 0x4
   785                           
   786  0074                     __Umul8_16@product:	
   787                           ; 2 bytes @ 0x4
   788                           
   789  0074                     ___lldiv@dividend:	
   790                           ; 2 bytes @ 0x4
   791                           
   792  0074                     __div_to_l_@f2:	
   793                           ; 4 bytes @ 0x4
   794                           
   795  0074                     ___fleq@ff2:	
   796                           ; 4 bytes @ 0x4
   797                           
   798  0074                     ___flge@ff2:	
   799                           ; 4 bytes @ 0x4
   800                           
   801  0074                     __tdiv_to_l_@f2:	
   802                           ; 4 bytes @ 0x4
   803                           
   804  0074                     ___llmod@dividend:	
   805                           ; 4 bytes @ 0x4
   806                           
   807  0074                     ___fldiv@b:	
   808                           ; 4 bytes @ 0x4
   809                           
   810                           
   811                           ; 4 bytes @ 0x4
   812  0074                     	ds	1
   813  0075                     ??_Lcd_Set_Cursor:	
   814  0075                     ?_Lcd_Write_String:	
   815                           ; 1 bytes @ 0x5
   816                           
   817  0075                     ___awmod@counter:	
   818                           ; 1 bytes @ 0x5
   819                           
   820  0075                     ___lwmod@counter:	
   821                           ; 1 bytes @ 0x5
   822                           
   823  0075                     Lcd_Write_String@a:	
   824                           ; 1 bytes @ 0x5
   825                           
   826                           
   827                           ; 2 bytes @ 0x5
   828  0075                     	ds	1
   829  0076                     ?___lwdiv:	
   830  0076                     ADC_init@CHS_select:	
   831                           ; 2 bytes @ 0x6
   832                           
   833  0076                     ___awmod@sign:	
   834                           ; 1 bytes @ 0x6
   835                           
   836  0076                     ___lwdiv@divisor:	
   837                           ; 1 bytes @ 0x6
   838                           
   839  0076                     __Umul8_16@word_mpld:	
   840                           ; 2 bytes @ 0x6
   841                           
   842                           
   843                           ; 2 bytes @ 0x6
   844  0076                     	ds	1
   845  0077                     ??_Lcd_Write_String:	
   846  0077                     ?___awdiv:	
   847                           ; 1 bytes @ 0x7
   848                           
   849  0077                     Lcd_Set_Cursor@a:	
   850                           ; 2 bytes @ 0x7
   851                           
   852  0077                     ___awdiv@divisor:	
   853                           ; 1 bytes @ 0x7
   854                           
   855                           
   856                           ; 2 bytes @ 0x7
   857  0077                     	ds	1
   858  0078                     ??__tdiv_to_l_:	
   859  0078                     ??__div_to_l_:	
   860                           ; 1 bytes @ 0x8
   861                           
   862  0078                     ??___lldiv:	
   863                           ; 1 bytes @ 0x8
   864                           
   865  0078                     ??___fleq:	
   866                           ; 1 bytes @ 0x8
   867                           
   868  0078                     ??___flge:	
   869                           ; 1 bytes @ 0x8
   870                           
   871  0078                     ??___llmod:	
   872                           ; 1 bytes @ 0x8
   873                           
   874  0078                     ??___fldiv:	
   875                           ; 1 bytes @ 0x8
   876                           
   877  0078                     Lcd_Set_Cursor@z:	
   878                           ; 1 bytes @ 0x8
   879                           
   880  0078                     ___xxtofl@sign:	
   881                           ; 1 bytes @ 0x8
   882                           
   883  0078                     __Umul8_16@multiplier:	
   884                           ; 1 bytes @ 0x8
   885                           
   886  0078                     ___lwdiv@dividend:	
   887                           ; 1 bytes @ 0x8
   888                           
   889                           
   890                           ; 2 bytes @ 0x8
   891  0078                     	ds	1
   892  0079                     Lcd_Set_Cursor@y:	
   893  0079                     ___llmod@counter:	
   894                           ; 1 bytes @ 0x9
   895                           
   896  0079                     ___xxtofl@exp:	
   897                           ; 1 bytes @ 0x9
   898                           
   899  0079                     ___awdiv@dividend:	
   900                           ; 1 bytes @ 0x9
   901                           
   902  0079                     ___lldiv@quotient:	
   903                           ; 2 bytes @ 0x9
   904                           
   905                           
   906                           ; 4 bytes @ 0x9
   907  0079                     	ds	1
   908  007A                     ??___lwdiv:	
   909  007A                     Lcd_Set_Cursor@temp:	
   910                           ; 1 bytes @ 0xA
   911                           
   912  007A                     Lcd_Write_String@i:	
   913                           ; 1 bytes @ 0xA
   914                           
   915  007A                     ___xxtofl@arg:	
   916                           ; 2 bytes @ 0xA
   917                           
   918                           
   919                           ; 4 bytes @ 0xA
   920  007A                     	ds	1
   921  007B                     ??___awdiv:	
   922  007B                     ___lwdiv@quotient:	
   923                           ; 1 bytes @ 0xB
   924                           
   925                           
   926                           ; 2 bytes @ 0xB
   927  007B                     	ds	2
   928  007D                     ___lldiv@counter:	
   929  007D                     ___lwdiv@counter:	
   930                           ; 1 bytes @ 0xD
   931                           
   932                           
   933                           ; 1 bytes @ 0xD
   934  007D                     	ds	1
   935  007E                     ??___flsub:	
   936                           
   937                           	psect	cstackBANK0
   938  0020                     __pcstackBANK0:	
   939                           ; 1 bytes @ 0xE
   940                           
   941  0020                     ??_readADC:	
   942  0020                     ___awdiv@counter:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0020                     __div_to_l_@quot:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0020                     __tdiv_to_l_@quot:	
   949                           ; 4 bytes @ 0x0
   950                           
   951  0020                     ___fldiv@rem:	
   952                           ; 4 bytes @ 0x0
   953                           
   954                           
   955                           ; 4 bytes @ 0x0
   956  0020                     	ds	1
   957  0021                     ___awdiv@sign:	
   958                           
   959                           ; 1 bytes @ 0x1
   960  0021                     	ds	1
   961  0022                     ___awdiv@quotient:	
   962                           
   963                           ; 2 bytes @ 0x2
   964  0022                     	ds	2
   965  0024                     ?___flmul:	
   966  0024                     __div_to_l_@cntr:	
   967                           ; 4 bytes @ 0x4
   968                           
   969  0024                     __tdiv_to_l_@cntr:	
   970                           ; 1 bytes @ 0x4
   971                           
   972  0024                     ___fldiv@sign:	
   973                           ; 1 bytes @ 0x4
   974                           
   975  0024                     ___flmul@b:	
   976                           ; 1 bytes @ 0x4
   977                           
   978                           
   979                           ; 4 bytes @ 0x4
   980  0024                     	ds	1
   981  0025                     __div_to_l_@exp1:	
   982  0025                     __tdiv_to_l_@exp1:	
   983                           ; 1 bytes @ 0x5
   984                           
   985  0025                     ___fldiv@new_exp:	
   986                           ; 1 bytes @ 0x5
   987                           
   988                           
   989                           ; 2 bytes @ 0x5
   990  0025                     	ds	2
   991  0027                     ___fldiv@grs:	
   992                           
   993                           ; 4 bytes @ 0x7
   994  0027                     	ds	1
   995  0028                     ___flmul@a:	
   996                           
   997                           ; 4 bytes @ 0x8
   998  0028                     	ds	3
   999  002B                     ___fldiv@bexp:	
  1000                           
  1001                           ; 1 bytes @ 0xB
  1002  002B                     	ds	1
  1003  002C                     ??___flmul:	
  1004  002C                     ___fldiv@aexp:	
  1005                           ; 1 bytes @ 0xC
  1006                           
  1007                           
  1008                           ; 1 bytes @ 0xC
  1009  002C                     	ds	5
  1010  0031                     ___flmul@sign:	
  1011                           
  1012                           ; 1 bytes @ 0x11
  1013  0031                     	ds	1
  1014  0032                     ___flmul@grs:	
  1015                           
  1016                           ; 4 bytes @ 0x12
  1017  0032                     	ds	4
  1018  0036                     ___flmul@aexp:	
  1019                           
  1020                           ; 1 bytes @ 0x16
  1021  0036                     	ds	1
  1022  0037                     ___flmul@bexp:	
  1023                           
  1024                           ; 1 bytes @ 0x17
  1025  0037                     	ds	1
  1026  0038                     ___flmul@prod:	
  1027                           
  1028                           ; 4 bytes @ 0x18
  1029  0038                     	ds	4
  1030  003C                     ___flmul@temp:	
  1031                           
  1032                           ; 2 bytes @ 0x1C
  1033  003C                     	ds	2
  1034  003E                     ?_fround:	
  1035  003E                     ?_scale:	
  1036                           ; 4 bytes @ 0x1E
  1037                           
  1038                           
  1039                           ; 4 bytes @ 0x1E
  1040  003E                     	ds	4
  1041  0042                     ??_fround:	
  1042  0042                     ??_scale:	
  1043                           ; 1 bytes @ 0x22
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0x22
  1047  0042                     	ds	7
  1048  0049                     _fround$937:	
  1049                           
  1050                           ; 4 bytes @ 0x29
  1051  0049                     	ds	3
  1052  004C                     _scale$938:	
  1053                           
  1054                           ; 4 bytes @ 0x2C
  1055  004C                     	ds	1
  1056  004D                     _fround$936:	
  1057                           
  1058                           ; 4 bytes @ 0x2D
  1059  004D                     	ds	3
  1060  0050                     scale@scl:	
  1061                           
  1062                           ; 1 bytes @ 0x30
  1063  0050                     	ds	1
  1064  0051                     ?___fltol:	
  1065  0051                     fround@prec:	
  1066                           ; 4 bytes @ 0x31
  1067                           
  1068  0051                     ___fltol@f1:	
  1069                           ; 1 bytes @ 0x31
  1070                           
  1071                           
  1072                           ; 4 bytes @ 0x31
  1073  0051                     	ds	1
  1074  0052                     ?___fladd:	
  1075  0052                     ___fladd@b:	
  1076                           ; 4 bytes @ 0x32
  1077                           
  1078                           
  1079                           ; 4 bytes @ 0x32
  1080  0052                     	ds	3
  1081  0055                     ??___fltol:	
  1082                           
  1083                           ; 1 bytes @ 0x35
  1084  0055                     	ds	1
  1085  0056                     ___fladd@a:	
  1086                           
  1087                           ; 4 bytes @ 0x36
  1088  0056                     	ds	4
  1089  005A                     ??___fladd:	
  1090  005A                     ___fltol@sign1:	
  1091                           ; 1 bytes @ 0x3A
  1092                           
  1093                           
  1094                           ; 1 bytes @ 0x3A
  1095  005A                     	ds	1
  1096  005B                     ___fltol@exp1:	
  1097                           
  1098                           ; 1 bytes @ 0x3B
  1099  005B                     	ds	7
  1100  0062                     ___fladd@signs:	
  1101                           
  1102                           ; 1 bytes @ 0x42
  1103  0062                     	ds	1
  1104  0063                     ___fladd@aexp:	
  1105                           
  1106                           ; 1 bytes @ 0x43
  1107  0063                     	ds	1
  1108  0064                     ___fladd@bexp:	
  1109                           
  1110                           ; 1 bytes @ 0x44
  1111  0064                     	ds	1
  1112  0065                     ___fladd@grs:	
  1113                           
  1114                           ; 1 bytes @ 0x45
  1115  0065                     	ds	1
  1116  0066                     ?___flsub:	
  1117  0066                     ___flsub@a:	
  1118                           ; 4 bytes @ 0x46
  1119                           
  1120                           
  1121                           ; 4 bytes @ 0x46
  1122  0066                     	ds	4
  1123  006A                     ___flsub@b:	
  1124                           
  1125                           ; 4 bytes @ 0x4A
  1126  006A                     	ds	4
  1127                           
  1128                           	psect	maintext
  1129  0893                     __pmaintext:	
  1130 ;;
  1131 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1132 ;;
  1133 ;; *************** function _main *****************
  1134 ;; Defined at:
  1135 ;;		line 43 in file "main.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;  a               2    0        unsigned int 
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : B00/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1149 ;;      Params:         0       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0
  1151 ;;      Temps:          0       0       3       0       0
  1152 ;;      Totals:         0       0       3       0       0
  1153 ;;Total ram usage:        3 bytes
  1154 ;; Hardware stack levels required when called:    4
  1155 ;; This function calls:
  1156 ;;		_ADC_init
  1157 ;;		_Lcd_Clear
  1158 ;;		_Lcd_Init
  1159 ;;		_Lcd_Set_Cursor
  1160 ;;		_Lcd_Write_Char
  1161 ;;		_Lcd_Write_String
  1162 ;;		___fldiv
  1163 ;;		_readADC
  1164 ;;		_sprintf
  1165 ;; This function is called by:
  1166 ;;		Startup code after reset
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           
  1171                           ;psect for function _main
  1172  0893                     _main:	
  1173                           
  1174                           ;main.c: 45:   OSCCONbits.IRCF0 = 1;
  1175                           
  1176                           ;incstack = 0
  1177                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1178  0893  1683               	bsf	3,5	;RP0=1, select bank1
  1179  0894  1303               	bcf	3,6	;RP1=0, select bank1
  1180  0895  160F               	bsf	15,4	;volatile
  1181                           
  1182                           ;main.c: 46:   OSCCONbits.IRCF1 = 1;
  1183  0896  168F               	bsf	15,5	;volatile
  1184                           
  1185                           ;main.c: 47:   OSCCONbits.IRCF2 = 1;
  1186  0897  170F               	bsf	15,6	;volatile
  1187                           
  1188                           ;main.c: 48:   OSCCONbits.SCS = 1;
  1189  0898  140F               	bsf	15,0	;volatile
  1190                           
  1191                           ;main.c: 49:   unsigned int a;;main.c: 50:   ANSELH = 0;
  1192  0899  1683               	bsf	3,5	;RP0=1, select bank3
  1193  089A  1703               	bsf	3,6	;RP1=1, select bank3
  1194  089B  0189               	clrf	9	;volatile
  1195                           
  1196                           ;main.c: 51:   ANSEL = 0x01;
  1197  089C  3001               	movlw	1
  1198  089D  0088               	movwf	8	;volatile
  1199                           
  1200                           ;main.c: 52:   TRISA = 0x01;
  1201  089E  3001               	movlw	1
  1202  089F  1683               	bsf	3,5	;RP0=1, select bank1
  1203  08A0  1303               	bcf	3,6	;RP1=0, select bank1
  1204  08A1  0085               	movwf	5	;volatile
  1205                           
  1206                           ;main.c: 54:   TRISD = 0x00;
  1207  08A2  0188               	clrf	8	;volatile
  1208                           
  1209                           ;main.c: 55:   TRISB = 0x00;
  1210  08A3  0186               	clrf	6	;volatile
  1211                           
  1212                           ;main.c: 56:   ADC_init(0x00, 0x00);
  1213  08A4  01F0               	clrf	ADC_init@CHS
  1214  08A5  3000               	movlw	0
  1215  08A6  160A  158A  23C0  120A  158A  	fcall	_ADC_init
  1216                           
  1217                           ;main.c: 57:   Lcd_Init();
  1218  08AB  160A  158A  267F  120A  158A  	fcall	_Lcd_Init
  1219                           
  1220                           ;main.c: 59:     Lcd_Clear();
  1221  08B0  120A  118A  20E6  120A  158A  	fcall	_Lcd_Clear
  1222                           
  1223                           ;main.c: 60:     Lcd_Set_Cursor(1,1);
  1224  08B5  01F4               	clrf	Lcd_Set_Cursor@b
  1225  08B6  0AF4               	incf	Lcd_Set_Cursor@b,f
  1226  08B7  3001               	movlw	1
  1227  08B8  160A  158A  259E  120A  158A  	fcall	_Lcd_Set_Cursor
  1228                           
  1229                           ;main.c: 61:     Lcd_Write_String("LCD Library for");
  1230  08BD  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1231  08BE  00F5               	movwf	Lcd_Write_String@a
  1232  08BF  3080               	movlw	128
  1233  08C0  00F6               	movwf	Lcd_Write_String@a+1
  1234  08C1  160A  158A  2519  120A  158A  	fcall	_Lcd_Write_String
  1235                           
  1236                           ;main.c: 62:     Lcd_Set_Cursor(2,1);
  1237  08C6  01F4               	clrf	Lcd_Set_Cursor@b
  1238  08C7  0AF4               	incf	Lcd_Set_Cursor@b,f
  1239  08C8  3002               	movlw	2
  1240  08C9  160A  158A  259E  120A  158A  	fcall	_Lcd_Set_Cursor
  1241                           
  1242                           ;main.c: 63:     Lcd_Write_String("MPLAB XC8");
  1243  08CE  30BC               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1244  08CF  00F5               	movwf	Lcd_Write_String@a
  1245  08D0  3080               	movlw	128
  1246  08D1  00F6               	movwf	Lcd_Write_String@a+1
  1247  08D2  160A  158A  2519  120A  158A  	fcall	_Lcd_Write_String
  1248                           
  1249                           ;main.c: 64:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  1250  08D7  3015               	movlw	21
  1251  08D8  1683               	bsf	3,5	;RP0=1, select bank1
  1252  08D9  1303               	bcf	3,6	;RP1=0, select bank1
  1253  08DA  00C7               	movwf	(??_main^(0+128)+2)
  1254  08DB  304B               	movlw	75
  1255  08DC  00C6               	movwf	(??_main^(0+128)+1)
  1256  08DD  30BD               	movlw	189
  1257  08DE  00C5               	movwf	??_main^(0+128)
  1258  08DF                     u6297:	
  1259  08DF  0BC5               	decfsz	??_main^(0+128),f
  1260  08E0  28DF               	goto	u6297
  1261  08E1  0BC6               	decfsz	(??_main^(0+128)+1),f
  1262  08E2  28DF               	goto	u6297
  1263  08E3  0BC7               	decfsz	(??_main^(0+128)+2),f
  1264  08E4  28DF               	goto	u6297
  1265  08E5  28E6               	nop2
  1266                           
  1267                           ;main.c: 65:     Lcd_Clear();
  1268  08E6  120A  118A  20E6  120A  158A  	fcall	_Lcd_Clear
  1269                           
  1270                           ;main.c: 66:     Lcd_Set_Cursor(1,1);
  1271  08EB  01F4               	clrf	Lcd_Set_Cursor@b
  1272  08EC  0AF4               	incf	Lcd_Set_Cursor@b,f
  1273  08ED  3001               	movlw	1
  1274  08EE  160A  158A  259E  120A  158A  	fcall	_Lcd_Set_Cursor
  1275                           
  1276                           ;main.c: 67:     Lcd_Write_String("Developed By");
  1277  08F3  30AF               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1278  08F4  00F5               	movwf	Lcd_Write_String@a
  1279  08F5  3080               	movlw	128
  1280  08F6  00F6               	movwf	Lcd_Write_String@a+1
  1281  08F7  160A  158A  2519  120A  158A  	fcall	_Lcd_Write_String
  1282                           
  1283                           ;main.c: 68:     Lcd_Set_Cursor(2,1);
  1284  08FC  01F4               	clrf	Lcd_Set_Cursor@b
  1285  08FD  0AF4               	incf	Lcd_Set_Cursor@b,f
  1286  08FE  3002               	movlw	2
  1287  08FF  160A  158A  259E  120A  158A  	fcall	_Lcd_Set_Cursor
  1288                           
  1289                           ;main.c: 69:     Lcd_Write_String("RECAN");
  1290  0904  30C6               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1291  0905  00F5               	movwf	Lcd_Write_String@a
  1292  0906  3080               	movlw	128
  1293  0907  00F6               	movwf	Lcd_Write_String@a+1
  1294  0908  160A  158A  2519  120A  158A  	fcall	_Lcd_Write_String
  1295                           
  1296                           ;main.c: 70:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  1297  090D  3015               	movlw	21
  1298  090E  1683               	bsf	3,5	;RP0=1, select bank1
  1299  090F  1303               	bcf	3,6	;RP1=0, select bank1
  1300  0910  00C7               	movwf	(??_main^(0+128)+2)
  1301  0911  304B               	movlw	75
  1302  0912  00C6               	movwf	(??_main^(0+128)+1)
  1303  0913  30BD               	movlw	189
  1304  0914  00C5               	movwf	??_main^(0+128)
  1305  0915                     u6307:	
  1306  0915  0BC5               	decfsz	??_main^(0+128),f
  1307  0916  2915               	goto	u6307
  1308  0917  0BC6               	decfsz	(??_main^(0+128)+1),f
  1309  0918  2915               	goto	u6307
  1310  0919  0BC7               	decfsz	(??_main^(0+128)+2),f
  1311  091A  2915               	goto	u6307
  1312  091B  291C               	nop2
  1313                           
  1314                           ;main.c: 71:     Lcd_Clear();
  1315  091C  120A  118A  20E6  120A  158A  	fcall	_Lcd_Clear
  1316                           
  1317                           ;main.c: 73:     Lcd_Set_Cursor(1,1);
  1318  0921  01F4               	clrf	Lcd_Set_Cursor@b
  1319  0922  0AF4               	incf	Lcd_Set_Cursor@b,f
  1320  0923  3001               	movlw	1
  1321  0924  160A  158A  259E  120A  158A  	fcall	_Lcd_Set_Cursor
  1322                           
  1323                           ;main.c: 74:     Lcd_Write_String("Empezando ADC");
  1324  0929  30A1               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1325  092A  00F5               	movwf	Lcd_Write_String@a
  1326  092B  3080               	movlw	128
  1327  092C  00F6               	movwf	Lcd_Write_String@a+1
  1328  092D  160A  158A  2519  120A  158A  	fcall	_Lcd_Write_String
  1329                           
  1330                           ;main.c: 75:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  1331  0932  3015               	movlw	21
  1332  0933  1683               	bsf	3,5	;RP0=1, select bank1
  1333  0934  1303               	bcf	3,6	;RP1=0, select bank1
  1334  0935  00C7               	movwf	(??_main^(0+128)+2)
  1335  0936  304B               	movlw	75
  1336  0937  00C6               	movwf	(??_main^(0+128)+1)
  1337  0938  30BD               	movlw	189
  1338  0939  00C5               	movwf	??_main^(0+128)
  1339  093A                     u6317:	
  1340  093A  0BC5               	decfsz	??_main^(0+128),f
  1341  093B  293A               	goto	u6317
  1342  093C  0BC6               	decfsz	(??_main^(0+128)+1),f
  1343  093D  293A               	goto	u6317
  1344  093E  0BC7               	decfsz	(??_main^(0+128)+2),f
  1345  093F  293A               	goto	u6317
  1346  0940  2941               	nop2
  1347                           
  1348                           ;main.c: 77:     Lcd_Clear();
  1349  0941  120A  118A  20E6  120A  158A  	fcall	_Lcd_Clear
  1350  0946                     l3709:	
  1351                           
  1352                           ;main.c: 79:   {;main.c: 80:     readADC();
  1353  0946  160A  118A  2001  120A  158A  	fcall	_readADC
  1354                           
  1355                           ;main.c: 81:     ADC = ADC / 51;
  1356  094B  3042               	movlw	66
  1357  094C  00F3               	movwf	___fldiv@a+3
  1358  094D  304C               	movlw	76
  1359  094E  00F2               	movwf	___fldiv@a+2
  1360  094F  3000               	movlw	0
  1361  0950  00F1               	movwf	___fldiv@a+1
  1362  0951  3000               	movlw	0
  1363  0952  00F0               	movwf	___fldiv@a
  1364  0953  1683               	bsf	3,5	;RP0=1, select bank1
  1365  0954  1303               	bcf	3,6	;RP1=0, select bank1
  1366  0955  084B               	movf	(_ADC+3)^(0+128),w
  1367  0956  00F7               	movwf	___fldiv@b+3
  1368  0957  084A               	movf	(_ADC+2)^(0+128),w
  1369  0958  00F6               	movwf	___fldiv@b+2
  1370  0959  0849               	movf	(_ADC+1)^(0+128),w
  1371  095A  00F5               	movwf	___fldiv@b+1
  1372  095B  0848               	movf	_ADC^(0+128),w
  1373  095C  00F4               	movwf	___fldiv@b
  1374  095D  160A  118A  2227  120A  158A  	fcall	___fldiv
  1375  0962  0873               	movf	?___fldiv+3,w
  1376  0963  1683               	bsf	3,5	;RP0=1, select bank1
  1377  0964  1303               	bcf	3,6	;RP1=0, select bank1
  1378  0965  00CB               	movwf	(_ADC+3)^(0+128)
  1379  0966  0872               	movf	?___fldiv+2,w
  1380  0967  00CA               	movwf	(_ADC+2)^(0+128)
  1381  0968  0871               	movf	?___fldiv+1,w
  1382  0969  00C9               	movwf	(_ADC+1)^(0+128)
  1383  096A  0870               	movf	?___fldiv,w
  1384  096B  00C8               	movwf	_ADC^(0+128)
  1385                           
  1386                           ;main.c: 82:         sprintf(buffer, "%3.2f", ADC);
  1387  096C  30CC               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1388  096D  00C5               	movwf	??_main^(0+128)
  1389  096E  0845               	movf	??_main^(0+128),w
  1390  096F  00A0               	movwf	sprintf@f^(0+128)
  1391  0970  084B               	movf	(_ADC+3)^(0+128),w
  1392  0971  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1393  0972  084A               	movf	(_ADC+2)^(0+128),w
  1394  0973  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1395  0974  0849               	movf	(_ADC+1)^(0+128),w
  1396  0975  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1397  0976  0848               	movf	_ADC^(0+128),w
  1398  0977  00A1               	movwf	(?_sprintf^(0+128)+1)
  1399  0978  30CC               	movlw	(low (_buffer| 0))& (0+255)
  1400  0979  120A  118A  20F1  120A  158A  	fcall	_sprintf
  1401                           
  1402                           ;main.c: 83:         Lcd_Set_Cursor(1,1);
  1403  097E  01F4               	clrf	Lcd_Set_Cursor@b
  1404  097F  0AF4               	incf	Lcd_Set_Cursor@b,f
  1405  0980  3001               	movlw	1
  1406  0981  160A  158A  259E  120A  158A  	fcall	_Lcd_Set_Cursor
  1407                           
  1408                           ;main.c: 84:         Lcd_Write_String(buffer);
  1409  0986  30CC               	movlw	(low (_buffer| 0))& (0+255)
  1410  0987  00F5               	movwf	Lcd_Write_String@a
  1411  0988  3000               	movlw	0
  1412  0989  00F6               	movwf	Lcd_Write_String@a+1
  1413  098A  160A  158A  2519  120A  158A  	fcall	_Lcd_Write_String
  1414                           
  1415                           ;main.c: 85:         Lcd_Set_Cursor(1,5);
  1416  098F  3005               	movlw	5
  1417  0990  1683               	bsf	3,5	;RP0=1, select bank1
  1418  0991  1303               	bcf	3,6	;RP1=0, select bank1
  1419  0992  00C5               	movwf	??_main^(0+128)
  1420  0993  0845               	movf	??_main^(0+128),w
  1421  0994  00F4               	movwf	Lcd_Set_Cursor@b
  1422  0995  3001               	movlw	1
  1423  0996  160A  158A  259E  120A  158A  	fcall	_Lcd_Set_Cursor
  1424                           
  1425                           ;main.c: 86:         Lcd_Write_Char('V');
  1426  099B  3056               	movlw	86
  1427  099C  160A  158A  24A4  120A  158A  	fcall	_Lcd_Write_Char
  1428  09A1  2946               	goto	l3709
  1429  09A2                     __end_of_main:	
  1430                           
  1431                           	psect	text1
  1432  00F1                     __ptext1:	
  1433 ;; *************** function _sprintf *****************
  1434 ;; Defined at:
  1435 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  sp              1    wreg     PTR unsigned char 
  1438 ;;		 -> buffer(3), 
  1439 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1440 ;;		 -> STR_6(6), 
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;  sp              1   33[BANK1 ] PTR unsigned char 
  1443 ;;		 -> buffer(3), 
  1444 ;;  fval            4   29[BANK1 ] PTR unsigned char 
  1445 ;;  tmpval          4   23[BANK1 ] struct .
  1446 ;;  val             4   15[BANK1 ] unsigned long 
  1447 ;;  prec            2   34[BANK1 ] int 
  1448 ;;  eexp            2   27[BANK1 ] int 
  1449 ;;  width           2   21[BANK1 ] int 
  1450 ;;  flag            2   19[BANK1 ] unsigned short 
  1451 ;;  cp              2    0        PTR const unsigned char 
  1452 ;;  len             2    0        unsigned int 
  1453 ;;  c               1   36[BANK1 ] unsigned char 
  1454 ;;  ap              1   14[BANK1 ] PTR void [1]
  1455 ;;		 -> ?_sprintf(2), 
  1456 ;;  d               1    0        unsigned char 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  2    0[BANK1 ] int 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1466 ;;      Params:         0       0       5       0       0
  1467 ;;      Locals:         0       0      27       0       0
  1468 ;;      Temps:          0       0       5       0       0
  1469 ;;      Totals:         0       0      37       0       0
  1470 ;;Total ram usage:       37 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    3
  1473 ;; This function calls:
  1474 ;;		___awdiv
  1475 ;;		___fladd
  1476 ;;		___fleq
  1477 ;;		___flge
  1478 ;;		___flmul
  1479 ;;		___flneg
  1480 ;;		___flsub
  1481 ;;		___fltol
  1482 ;;		___lldiv
  1483 ;;		___llmod
  1484 ;;		___wmul
  1485 ;;		___xxtofl
  1486 ;;		__div_to_l_
  1487 ;;		__tdiv_to_l_
  1488 ;;		_fround
  1489 ;;		_isdigit
  1490 ;;		_scale
  1491 ;; This function is called by:
  1492 ;;		_main
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           
  1497                           ;psect for function _sprintf
  1498  00F1                     _sprintf:	
  1499                           
  1500                           ;incstack = 0
  1501                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1502                           ;sprintf@sp stored from wreg
  1503  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  1504  00F2  1303               	bcf	3,6	;RP1=0, select bank1
  1505  00F3  00C1               	movwf	sprintf@sp^(0+128)
  1506                           
  1507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 509:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c90\common\doprnt.c: 512:  int prec;
  1508  00F4  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1509  00F5  00A5               	movwf	??_sprintf^(0+128)
  1510  00F6  0825               	movf	??_sprintf^(0+128),w
  1511  00F7  00AE               	movwf	sprintf@ap^(0+128)
  1512  00F8                     l3505:	
  1513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1514                           
  1515                           
  1516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1517  00F8  3001               	movlw	1
  1518  00F9  07A0               	addwf	sprintf@f^(0+128),f
  1519  00FA  30FF               	movlw	-1
  1520  00FB  0720               	addwf	sprintf@f^(0+128),w
  1521  00FC  0084               	movwf	4
  1522  00FD  120A  118A  200D  120A  118A  	fcall	stringdir
  1523  0102  00A5               	movwf	??_sprintf^(0+128)
  1524  0103  0825               	movf	??_sprintf^(0+128),w
  1525  0104  00C4               	movwf	sprintf@c^(0+128)
  1526  0105  0844               	movf	sprintf@c^(0+128),w
  1527  0106  1903               	btfsc	3,2
  1528  0107  2FEE               	goto	l3507
  1529                           
  1530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1531  0108  3025               	movlw	37
  1532  0109  0644               	xorwf	sprintf@c^(0+128),w
  1533  010A  1903               	btfsc	3,2
  1534  010B  290E               	goto	l3265
  1535                           
  1536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1537  010C  0844               	movf	sprintf@c^(0+128),w
  1538  010D  2FE3               	goto	L6
  1539  010E                     l3265:	
  1540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1541                           
  1542                           
  1543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 558:   widt
      +                          h = 0;
  1544  010E  01B5               	clrf	sprintf@width^(0+128)
  1545  010F  01B6               	clrf	(sprintf@width+1)^(0+128)
  1546                           
  1547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1548  0110  01B3               	clrf	sprintf@flag^(0+128)
  1549  0111  01B4               	clrf	(sprintf@flag+1)^(0+128)
  1550                           
  1551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 609:   if(i
      +                          sdigit((unsigned)*f)) {
  1552  0112  0820               	movf	sprintf@f^(0+128),w
  1553  0113  0084               	movwf	4
  1554  0114  120A  118A  200D  120A  118A  	fcall	stringdir
  1555  0119  160A  158A  23B2  120A  118A  	fcall	_isdigit
  1556  011E  1C03               	btfss	3,0
  1557  011F  295E               	goto	l3279
  1558                           
  1559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 610:    wid
      +                          th = 0;
  1560  0120  1683               	bsf	3,5	;RP0=1, select bank1
  1561  0121  1303               	bcf	3,6	;RP1=0, select bank1
  1562  0122  01B5               	clrf	sprintf@width^(0+128)
  1563  0123  01B6               	clrf	(sprintf@width+1)^(0+128)
  1564  0124                     l3271:	
  1565                           
  1566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 612:     wi
      +                          dth *= 10;
  1567  0124  300A               	movlw	10
  1568  0125  00F0               	movwf	___wmul@multiplier
  1569  0126  3000               	movlw	0
  1570  0127  00F1               	movwf	___wmul@multiplier+1
  1571  0128  1683               	bsf	3,5	;RP0=1, select bank1
  1572  0129  1303               	bcf	3,6	;RP1=0, select bank1
  1573  012A  0836               	movf	(sprintf@width+1)^(0+128),w
  1574  012B  00F3               	movwf	___wmul@multiplicand+1
  1575  012C  0835               	movf	sprintf@width^(0+128),w
  1576  012D  00F2               	movwf	___wmul@multiplicand
  1577  012E  160A  158A  240C  120A  118A  	fcall	___wmul
  1578  0133  0871               	movf	?___wmul+1,w
  1579  0134  1683               	bsf	3,5	;RP0=1, select bank1
  1580  0135  1303               	bcf	3,6	;RP1=0, select bank1
  1581  0136  00B6               	movwf	(sprintf@width+1)^(0+128)
  1582  0137  0870               	movf	?___wmul,w
  1583  0138  00B5               	movwf	sprintf@width^(0+128)
  1584                           
  1585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 613:       
      +                           width += *f++ - '0';
  1586  0139  0820               	movf	sprintf@f^(0+128),w
  1587  013A  0084               	movwf	4
  1588  013B  120A  118A  200D  120A  118A  	fcall	stringdir
  1589  0140  3ED0               	addlw	208
  1590  0141  00A5               	movwf	??_sprintf^(0+128)
  1591  0142  30FF               	movlw	255
  1592  0143  1803               	skipnc
  1593  0144  3000               	movlw	0
  1594  0145  00A6               	movwf	(??_sprintf^(0+128)+1)
  1595  0146  0825               	movf	??_sprintf^(0+128),w
  1596  0147  07B5               	addwf	sprintf@width^(0+128),f
  1597  0148  1803               	skipnc
  1598  0149  0AB6               	incf	(sprintf@width+1)^(0+128),f
  1599  014A  0826               	movf	(??_sprintf+1)^(0+128),w
  1600  014B  07B6               	addwf	(sprintf@width+1)^(0+128),f
  1601  014C  3001               	movlw	1
  1602  014D  00A5               	movwf	??_sprintf^(0+128)
  1603  014E  0825               	movf	??_sprintf^(0+128),w
  1604  014F  07A0               	addwf	sprintf@f^(0+128),f
  1605                           
  1606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 614:    } w
      +                          hile(isdigit((unsigned)*f));
  1607  0150  0820               	movf	sprintf@f^(0+128),w
  1608  0151  0084               	movwf	4
  1609  0152  120A  118A  200D  120A  118A  	fcall	stringdir
  1610  0157  160A  158A  23B2  120A  118A  	fcall	_isdigit
  1611  015C  1803               	btfsc	3,0
  1612  015D  2924               	goto	l3271
  1613  015E                     l3279:	
  1614                           
  1615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 623:   if(*
      +                          f == '.') {
  1616  015E  1683               	bsf	3,5	;RP0=1, select bank1
  1617  015F  1303               	bcf	3,6	;RP1=0, select bank1
  1618  0160  0820               	movf	sprintf@f^(0+128),w
  1619  0161  0084               	movwf	4
  1620  0162  120A  118A  200D  120A  118A  	fcall	stringdir
  1621  0167  3A2E               	xorlw	46
  1622  0168  1D03               	skipz
  1623  0169  29AB               	goto	l3293
  1624                           
  1625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 624:    fla
      +                          g |= 0x4000;
  1626  016A  1734               	bsf	(sprintf@flag^(0+128)+1),6
  1627                           
  1628                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 625:    f++
      +                          ;
  1629  016B  3001               	movlw	1
  1630  016C  00A5               	movwf	??_sprintf^(0+128)
  1631  016D  0825               	movf	??_sprintf^(0+128),w
  1632  016E  07A0               	addwf	sprintf@f^(0+128),f
  1633                           
  1634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 639:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 640:     prec
      +                           = 0;
  1635  016F  01C2               	clrf	sprintf@prec^(0+128)
  1636  0170  01C3               	clrf	(sprintf@prec+1)^(0+128)
  1637  0171                     l3291:	
  1638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1639                           
  1640                           
  1641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1642  0171  0820               	movf	sprintf@f^(0+128),w
  1643  0172  0084               	movwf	4
  1644  0173  120A  118A  200D  120A  118A  	fcall	stringdir
  1645  0178  160A  158A  23B2  120A  118A  	fcall	_isdigit
  1646  017D  1C03               	btfss	3,0
  1647  017E  29B1               	goto	l3299
  1648                           
  1649                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 642:      p
      +                          rec = prec*10 + *f++ - '0';
  1650  017F  1683               	bsf	3,5	;RP0=1, select bank1
  1651  0180  1303               	bcf	3,6	;RP1=0, select bank1
  1652  0181  0843               	movf	(sprintf@prec+1)^(0+128),w
  1653  0182  00F1               	movwf	___wmul@multiplier+1
  1654  0183  0842               	movf	sprintf@prec^(0+128),w
  1655  0184  00F0               	movwf	___wmul@multiplier
  1656  0185  300A               	movlw	10
  1657  0186  00F2               	movwf	___wmul@multiplicand
  1658  0187  3000               	movlw	0
  1659  0188  00F3               	movwf	___wmul@multiplicand+1
  1660  0189  160A  158A  240C  120A  118A  	fcall	___wmul
  1661  018E  1683               	bsf	3,5	;RP0=1, select bank1
  1662  018F  1303               	bcf	3,6	;RP1=0, select bank1
  1663  0190  0820               	movf	sprintf@f^(0+128),w
  1664  0191  0084               	movwf	4
  1665  0192  120A  118A  200D  120A  118A  	fcall	stringdir
  1666  0197  0770               	addwf	?___wmul,w
  1667  0198  00A5               	movwf	??_sprintf^(0+128)
  1668  0199  3000               	movlw	0
  1669  019A  1803               	skipnc
  1670  019B  3001               	movlw	1
  1671  019C  0771               	addwf	?___wmul+1,w
  1672  019D  00A6               	movwf	(??_sprintf+1)^(0+128)
  1673  019E  0825               	movf	??_sprintf^(0+128),w
  1674  019F  3ED0               	addlw	208
  1675  01A0  00C2               	movwf	sprintf@prec^(0+128)
  1676  01A1  0826               	movf	(??_sprintf+1)^(0+128),w
  1677  01A2  1803               	skipnc
  1678  01A3  3E01               	addlw	1
  1679  01A4  3EFF               	addlw	255
  1680  01A5  00C3               	movwf	(sprintf@prec+1)^(0+128)
  1681  01A6  3001               	movlw	1
  1682  01A7  00A5               	movwf	??_sprintf^(0+128)
  1683  01A8  0825               	movf	??_sprintf^(0+128),w
  1684  01A9  07A0               	addwf	sprintf@f^(0+128),f
  1685  01AA  2971               	goto	l3291
  1686  01AB                     l3293:	
  1687                           
  1688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 645:    pre
      +                          c = 0;
  1689  01AB  01C2               	clrf	sprintf@prec^(0+128)
  1690  01AC  01C3               	clrf	(sprintf@prec+1)^(0+128)
  1691                           
  1692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 647:    fla
      +                          g |= 0x1000;
  1693  01AD  1634               	bsf	(sprintf@flag^(0+128)+1),4
  1694  01AE  29B1               	goto	l3299
  1695  01AF                     l235:	
  1696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 681:   case
      +                           'f':
  1697                           
  1698                           
  1699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 682:    fla
      +                          g |= 0x400;
  1700  01AF  1534               	bsf	(sprintf@flag^(0+128)+1),2
  1701                           
  1702                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 683:    bre
      +                          ak;
  1703  01B0  29CD               	goto	l3301
  1704  01B1                     l3299:	
  1705  01B1  3001               	movlw	1
  1706  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  1707  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  1708  01B4  07A0               	addwf	sprintf@f^(0+128),f
  1709  01B5  30FF               	movlw	-1
  1710  01B6  0720               	addwf	sprintf@f^(0+128),w
  1711  01B7  0084               	movwf	4
  1712  01B8  120A  118A  200D  120A  118A  	fcall	stringdir
  1713  01BD  00C4               	movwf	sprintf@c^(0+128)
  1714  01BE  00A5               	movwf	??_sprintf^(0+128)
  1715  01BF  01A6               	clrf	(??_sprintf^(0+128)+1)
  1716                           
  1717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1718                           ; Switch size 1, requested type "simple"
  1719                           ; Number of cases is 1, Range of values is 0 to 0
  1720                           ; switch strategies available:
  1721                           ; Name         Instructions Cycles
  1722                           ; simple_byte            4     3 (average)
  1723                           ; direct_byte           11     8 (fixed)
  1724                           ; jumptable            260     6 (fixed)
  1725                           ;	Chosen strategy is simple_byte
  1726  01C0  0826               	movf	(??_sprintf+1)^(0+128),w
  1727  01C1  3A00               	xorlw	0	; case 0
  1728  01C2  1903               	skipnz
  1729  01C3  29C5               	goto	l3753
  1730  01C4  28F8               	goto	l3505
  1731  01C5                     l3753:	
  1732                           
  1733                           ; Switch size 1, requested type "simple"
  1734                           ; Number of cases is 2, Range of values is 0 to 102
  1735                           ; switch strategies available:
  1736                           ; Name         Instructions Cycles
  1737                           ; simple_byte            7     4 (average)
  1738                           ; jumptable            260     6 (fixed)
  1739                           ;	Chosen strategy is simple_byte
  1740  01C5  0825               	movf	??_sprintf^(0+128),w
  1741  01C6  3A00               	xorlw	0	; case 0
  1742  01C7  1903               	skipnz
  1743  01C8  2FEE               	goto	l3507
  1744  01C9  3A66               	xorlw	102	; case 102
  1745  01CA  1903               	skipnz
  1746  01CB  29AF               	goto	l235
  1747  01CC  28F8               	goto	l3505
  1748  01CD                     l3301:	
  1749                           
  1750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 844:   if(f
      +                          lag & (0x700)) {
  1751  01CD  3000               	movlw	0
  1752  01CE  0533               	andwf	sprintf@flag^(0+128),w
  1753  01CF  00A5               	movwf	??_sprintf^(0+128)
  1754  01D0  3007               	movlw	7
  1755  01D1  0534               	andwf	(sprintf@flag+1)^(0+128),w
  1756  01D2  00A6               	movwf	(??_sprintf+1)^(0+128)
  1757  01D3  0825               	movf	??_sprintf^(0+128),w
  1758  01D4  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1759  01D5  1903               	btfsc	3,2
  1760  01D6  2F3F               	goto	l3459
  1761                           
  1762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 846:    if(
      +                          flag & 0x1000)
  1763  01D7  1E34               	btfss	(sprintf@flag+1)^(0+128),4
  1764  01D8  29DD               	goto	l3307
  1765                           
  1766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 848:     pr
      +                          ec = 6;
  1767  01D9  3006               	movlw	6
  1768  01DA  00C2               	movwf	sprintf@prec^(0+128)
  1769  01DB  3000               	movlw	0
  1770  01DC  00C3               	movwf	(sprintf@prec^(0+128)+1)
  1771  01DD                     l3307:	
  1772                           
  1773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 849:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  1774  01DD  082E               	movf	sprintf@ap^(0+128),w
  1775  01DE  0084               	movwf	4
  1776  01DF  1383               	bcf	3,7	;select IRP bank0
  1777  01E0  0800               	movf	0,w
  1778  01E1  00BD               	movwf	sprintf@fval^(0+128)
  1779  01E2  0A84               	incf	4,f
  1780  01E3  0800               	movf	0,w
  1781  01E4  00BE               	movwf	(sprintf@fval+1)^(0+128)
  1782  01E5  0A84               	incf	4,f
  1783  01E6  0800               	movf	0,w
  1784  01E7  00BF               	movwf	(sprintf@fval+2)^(0+128)
  1785  01E8  0A84               	incf	4,f
  1786  01E9  0800               	movf	0,w
  1787  01EA  00C0               	movwf	(sprintf@fval+3)^(0+128)
  1788  01EB  3004               	movlw	4
  1789  01EC  00A5               	movwf	??_sprintf^(0+128)
  1790  01ED  0825               	movf	??_sprintf^(0+128),w
  1791  01EE  07AE               	addwf	sprintf@ap^(0+128),f
  1792                           
  1793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 850:    if(
      +                          fval < 0.0) {
  1794  01EF  0840               	movf	(sprintf@fval+3)^(0+128),w
  1795  01F0  00F3               	movwf	___flge@ff1+3
  1796  01F1  083F               	movf	(sprintf@fval+2)^(0+128),w
  1797  01F2  00F2               	movwf	___flge@ff1+2
  1798  01F3  083E               	movf	(sprintf@fval+1)^(0+128),w
  1799  01F4  00F1               	movwf	___flge@ff1+1
  1800  01F5  083D               	movf	sprintf@fval^(0+128),w
  1801  01F6  00F0               	movwf	___flge@ff1
  1802  01F7  3000               	movlw	0
  1803  01F8  00F7               	movwf	___flge@ff2+3
  1804  01F9  3000               	movlw	0
  1805  01FA  00F6               	movwf	___flge@ff2+2
  1806  01FB  3000               	movlw	0
  1807  01FC  00F5               	movwf	___flge@ff2+1
  1808  01FD  3000               	movlw	0
  1809  01FE  00F4               	movwf	___flge@ff2
  1810  01FF  120A  158A  2000  120A  118A  	fcall	___flge
  1811  0204  1803               	btfsc	3,0
  1812  0205  2A23               	goto	l3317
  1813                           
  1814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 851:     fv
      +                          al = -fval;
  1815  0206  1683               	bsf	3,5	;RP0=1, select bank1
  1816  0207  1303               	bcf	3,6	;RP1=0, select bank1
  1817  0208  0840               	movf	(sprintf@fval+3)^(0+128),w
  1818  0209  00F3               	movwf	___flneg@f1+3
  1819  020A  083F               	movf	(sprintf@fval+2)^(0+128),w
  1820  020B  00F2               	movwf	___flneg@f1+2
  1821  020C  083E               	movf	(sprintf@fval+1)^(0+128),w
  1822  020D  00F1               	movwf	___flneg@f1+1
  1823  020E  083D               	movf	sprintf@fval^(0+128),w
  1824  020F  00F0               	movwf	___flneg@f1
  1825  0210  160A  158A  23A9  120A  118A  	fcall	___flneg
  1826  0215  0873               	movf	?___flneg+3,w
  1827  0216  1683               	bsf	3,5	;RP0=1, select bank1
  1828  0217  1303               	bcf	3,6	;RP1=0, select bank1
  1829  0218  00C0               	movwf	(sprintf@fval+3)^(0+128)
  1830  0219  0872               	movf	?___flneg+2,w
  1831  021A  00BF               	movwf	(sprintf@fval+2)^(0+128)
  1832  021B  0871               	movf	?___flneg+1,w
  1833  021C  00BE               	movwf	(sprintf@fval+1)^(0+128)
  1834  021D  0870               	movf	?___flneg,w
  1835  021E  00BD               	movwf	sprintf@fval^(0+128)
  1836                           
  1837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 852:     fl
      +                          ag |= 0x03;
  1838  021F  3003               	movlw	3
  1839  0220  04B3               	iorwf	sprintf@flag^(0+128),f
  1840  0221  3000               	movlw	0
  1841  0222  04B4               	iorwf	(sprintf@flag+1)^(0+128),f
  1842  0223                     l3317:	
  1843                           
  1844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 854:    eex
      +                          p = 0;
  1845  0223  1683               	bsf	3,5	;RP0=1, select bank1
  1846  0224  1303               	bcf	3,6	;RP1=0, select bank1
  1847  0225  01BB               	clrf	sprintf@eexp^(0+128)
  1848  0226  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  1849                           
  1850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 855:    if(
      +                           fval!=0) {
  1851  0227  0840               	movf	(sprintf@fval+3)^(0+128),w
  1852  0228  00F3               	movwf	___fleq@ff1+3
  1853  0229  083F               	movf	(sprintf@fval+2)^(0+128),w
  1854  022A  00F2               	movwf	___fleq@ff1+2
  1855  022B  083E               	movf	(sprintf@fval+1)^(0+128),w
  1856  022C  00F1               	movwf	___fleq@ff1+1
  1857  022D  083D               	movf	sprintf@fval^(0+128),w
  1858  022E  00F0               	movwf	___fleq@ff1
  1859  022F  3000               	movlw	0
  1860  0230  00F7               	movwf	___fleq@ff2+3
  1861  0231  3000               	movlw	0
  1862  0232  00F6               	movwf	___fleq@ff2+2
  1863  0233  3000               	movlw	0
  1864  0234  00F5               	movwf	___fleq@ff2+1
  1865  0235  3000               	movlw	0
  1866  0236  00F4               	movwf	___fleq@ff2
  1867  0237  160A  158A  2556  120A  118A  	fcall	___fleq
  1868  023C  1803               	btfsc	3,0
  1869  023D  2B27               	goto	l3345
  1870                           
  1871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 856:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1872  023E  1003               	clrc
  1873  023F  1683               	bsf	3,5	;RP0=1, select bank1
  1874  0240  1303               	bcf	3,6	;RP1=0, select bank1
  1875  0241  0D3F               	rlf	(sprintf@fval+2)^(0+128),w
  1876  0242  0D40               	rlf	(sprintf@fval+3)^(0+128),w
  1877  0243  3E82               	addlw	130
  1878  0244  00BB               	movwf	sprintf@eexp^(0+128)
  1879  0245  30FF               	movlw	255
  1880  0246  1803               	skipnc
  1881  0247  3000               	movlw	0
  1882  0248  00BC               	movwf	(sprintf@eexp^(0+128)+1)
  1883                           
  1884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 857:     ee
      +                          xp--;
  1885  0249  30FF               	movlw	255
  1886  024A  07BB               	addwf	sprintf@eexp^(0+128),f
  1887  024B  1803               	skipnc
  1888  024C  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  1889  024D  30FF               	movlw	255
  1890  024E  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  1891                           
  1892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 858:     ee
      +                          xp *= 3;
  1893  024F  3003               	movlw	3
  1894  0250  00F0               	movwf	___wmul@multiplier
  1895  0251  3000               	movlw	0
  1896  0252  00F1               	movwf	___wmul@multiplier+1
  1897  0253  083C               	movf	(sprintf@eexp+1)^(0+128),w
  1898  0254  00F3               	movwf	___wmul@multiplicand+1
  1899  0255  083B               	movf	sprintf@eexp^(0+128),w
  1900  0256  00F2               	movwf	___wmul@multiplicand
  1901  0257  160A  158A  240C  120A  118A  	fcall	___wmul
  1902  025C  0871               	movf	?___wmul+1,w
  1903  025D  1683               	bsf	3,5	;RP0=1, select bank1
  1904  025E  1303               	bcf	3,6	;RP1=0, select bank1
  1905  025F  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  1906  0260  0870               	movf	?___wmul,w
  1907  0261  00BB               	movwf	sprintf@eexp^(0+128)
  1908                           
  1909                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 859:     ee
      +                          xp /= 10;
  1910  0262  300A               	movlw	10
  1911  0263  00F7               	movwf	___awdiv@divisor
  1912  0264  3000               	movlw	0
  1913  0265  00F8               	movwf	___awdiv@divisor+1
  1914  0266  083C               	movf	(sprintf@eexp+1)^(0+128),w
  1915  0267  00FA               	movwf	___awdiv@dividend+1
  1916  0268  083B               	movf	sprintf@eexp^(0+128),w
  1917  0269  00F9               	movwf	___awdiv@dividend
  1918  026A  160A  158A  26DA  120A  118A  	fcall	___awdiv
  1919  026F  0878               	movf	?___awdiv+1,w
  1920  0270  1683               	bsf	3,5	;RP0=1, select bank1
  1921  0271  1303               	bcf	3,6	;RP1=0, select bank1
  1922  0272  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  1923  0273  0877               	movf	?___awdiv,w
  1924  0274  00BB               	movwf	sprintf@eexp^(0+128)
  1925                           
  1926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 860:     if
      +                          (eexp < 0)
  1927  0275  1FBC               	btfss	(sprintf@eexp+1)^(0+128),7
  1928  0276  2A7D               	goto	l3333
  1929                           
  1930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 861:      e
      +                          exp--;
  1931  0277  30FF               	movlw	255
  1932  0278  07BB               	addwf	sprintf@eexp^(0+128),f
  1933  0279  1803               	skipnc
  1934  027A  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  1935  027B  30FF               	movlw	255
  1936  027C  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  1937  027D                     l3333:	
  1938                           
  1939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 865:     tm
      +                          pval.integ = scale(-eexp);
  1940  027D  033B               	decf	sprintf@eexp^(0+128),w
  1941  027E  3AFF               	xorlw	255
  1942  027F  120A  158A  24B7  120A  118A  	fcall	_scale
  1943  0284  1283               	bcf	3,5	;RP0=0, select bank0
  1944  0285  1303               	bcf	3,6	;RP1=0, select bank0
  1945  0286  0841               	movf	?_scale+3,w
  1946  0287  1683               	bsf	3,5	;RP0=1, select bank1
  1947  0288  1303               	bcf	3,6	;RP1=0, select bank1
  1948  0289  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  1949  028A  1283               	bcf	3,5	;RP0=0, select bank0
  1950  028B  1303               	bcf	3,6	;RP1=0, select bank0
  1951  028C  0840               	movf	?_scale+2,w
  1952  028D  1683               	bsf	3,5	;RP0=1, select bank1
  1953  028E  1303               	bcf	3,6	;RP1=0, select bank1
  1954  028F  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  1955  0290  1283               	bcf	3,5	;RP0=0, select bank0
  1956  0291  1303               	bcf	3,6	;RP1=0, select bank0
  1957  0292  083F               	movf	?_scale+1,w
  1958  0293  1683               	bsf	3,5	;RP0=1, select bank1
  1959  0294  1303               	bcf	3,6	;RP1=0, select bank1
  1960  0295  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  1961  0296  1283               	bcf	3,5	;RP0=0, select bank0
  1962  0297  1303               	bcf	3,6	;RP1=0, select bank0
  1963  0298  083E               	movf	?_scale,w
  1964  0299  1683               	bsf	3,5	;RP0=1, select bank1
  1965  029A  1303               	bcf	3,6	;RP1=0, select bank1
  1966  029B  00B7               	movwf	sprintf@tmpval^(0+128)
  1967                           
  1968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 866:     tm
      +                          pval.integ *= fval;
  1969  029C  0840               	movf	(sprintf@fval+3)^(0+128),w
  1970  029D  1283               	bcf	3,5	;RP0=0, select bank0
  1971  029E  1303               	bcf	3,6	;RP1=0, select bank0
  1972  029F  00A7               	movwf	___flmul@b+3
  1973  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  1974  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  1975  02A2  083F               	movf	(sprintf@fval+2)^(0+128),w
  1976  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  1977  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  1978  02A5  00A6               	movwf	___flmul@b+2
  1979  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  1980  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  1981  02A8  083E               	movf	(sprintf@fval+1)^(0+128),w
  1982  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1983  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1984  02AB  00A5               	movwf	___flmul@b+1
  1985  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  1986  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  1987  02AE  083D               	movf	sprintf@fval^(0+128),w
  1988  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1989  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  1990  02B1  00A4               	movwf	___flmul@b
  1991  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  1992  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  1993  02B4  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1994  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1995  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1996  02B7  00AB               	movwf	___flmul@a+3
  1997  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  1998  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  1999  02BA  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2000  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  2001  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  2002  02BD  00AA               	movwf	___flmul@a+2
  2003  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  2004  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  2005  02C0  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2006  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2007  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2008  02C3  00A9               	movwf	___flmul@a+1
  2009  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2010  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2011  02C6  0837               	movf	sprintf@tmpval^(0+128),w
  2012  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  2013  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  2014  02C9  00A8               	movwf	___flmul@a
  2015  02CA  120A  158A  21A2  120A  118A  	fcall	___flmul
  2016  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2017  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2018  02D1  0827               	movf	?___flmul+3,w
  2019  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2020  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  2021  02D4  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2022  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2023  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2024  02D7  0826               	movf	?___flmul+2,w
  2025  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  2026  02D9  1303               	bcf	3,6	;RP1=0, select bank1
  2027  02DA  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2028  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2029  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2030  02DD  0825               	movf	?___flmul+1,w
  2031  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  2032  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  2033  02E0  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2034  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2035  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2036  02E3  0824               	movf	?___flmul,w
  2037  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  2038  02E5  1303               	bcf	3,6	;RP1=0, select bank1
  2039  02E6  00B7               	movwf	sprintf@tmpval^(0+128)
  2040                           
  2041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (tmpval.integ < 1.0)
  2042  02E7  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2043  02E8  00F3               	movwf	___flge@ff1+3
  2044  02E9  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2045  02EA  00F2               	movwf	___flge@ff1+2
  2046  02EB  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2047  02EC  00F1               	movwf	___flge@ff1+1
  2048  02ED  0837               	movf	sprintf@tmpval^(0+128),w
  2049  02EE  00F0               	movwf	___flge@ff1
  2050  02EF  303F               	movlw	63
  2051  02F0  00F7               	movwf	___flge@ff2+3
  2052  02F1  3080               	movlw	128
  2053  02F2  00F6               	movwf	___flge@ff2+2
  2054  02F3  3000               	movlw	0
  2055  02F4  00F5               	movwf	___flge@ff2+1
  2056  02F5  3000               	movlw	0
  2057  02F6  00F4               	movwf	___flge@ff2
  2058  02F7  120A  158A  2000  120A  118A  	fcall	___flge
  2059  02FC  1803               	btfsc	3,0
  2060  02FD  2B06               	goto	l3341
  2061                           
  2062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  2063  02FE  30FF               	movlw	255
  2064  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  2065  0300  1303               	bcf	3,6	;RP1=0, select bank1
  2066  0301  07BB               	addwf	sprintf@eexp^(0+128),f
  2067  0302  1803               	skipnc
  2068  0303  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2069  0304  30FF               	movlw	255
  2070  0305  2B26               	goto	L1
  2071  0306                     l3341:	
  2072  0306  1683               	bsf	3,5	;RP0=1, select bank1
  2073  0307  1303               	bcf	3,6	;RP1=0, select bank1
  2074  0308  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2075  0309  00F3               	movwf	___flge@ff1+3
  2076  030A  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2077  030B  00F2               	movwf	___flge@ff1+2
  2078  030C  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2079  030D  00F1               	movwf	___flge@ff1+1
  2080  030E  0837               	movf	sprintf@tmpval^(0+128),w
  2081  030F  00F0               	movwf	___flge@ff1
  2082  0310  3041               	movlw	65
  2083  0311  00F7               	movwf	___flge@ff2+3
  2084  0312  3020               	movlw	32
  2085  0313  00F6               	movwf	___flge@ff2+2
  2086  0314  3000               	movlw	0
  2087  0315  00F5               	movwf	___flge@ff2+1
  2088  0316  3000               	movlw	0
  2089  0317  00F4               	movwf	___flge@ff2
  2090  0318  120A  158A  2000  120A  118A  	fcall	___flge
  2091  031D  1C03               	btfss	3,0
  2092  031E  2B27               	goto	l3345
  2093                           
  2094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 870:      e
      +                          exp++;
  2095  031F  3001               	movlw	1
  2096  0320  1683               	bsf	3,5	;RP0=1, select bank1
  2097  0321  1303               	bcf	3,6	;RP1=0, select bank1
  2098  0322  07BB               	addwf	sprintf@eexp^(0+128),f
  2099  0323  1803               	skipnc
  2100  0324  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2101  0325  3000               	movlw	0
  2102  0326                     L1:	
  2103  0326  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2104  0327                     l3345:	
  2105                           
  2106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1131:      
      +                          if(prec <= 12)
  2107  0327  1683               	bsf	3,5	;RP0=1, select bank1
  2108  0328  1303               	bcf	3,6	;RP1=0, select bank1
  2109  0329  0843               	movf	(sprintf@prec+1)^(0+128),w
  2110  032A  3A80               	xorlw	128
  2111  032B  00FF               	movwf	127
  2112  032C  3080               	movlw	128
  2113  032D  027F               	subwf	127,w
  2114  032E  1D03               	skipz
  2115  032F  2B32               	goto	u5645
  2116  0330  300D               	movlw	13
  2117  0331  0242               	subwf	sprintf@prec^(0+128),w
  2118  0332                     u5645:	
  2119  0332  1803               	skipnc
  2120  0333  2B7B               	goto	l3349
  2121                           
  2122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1132:      
      +                           fval += fround((unsigned int)prec);
  2123  0334  1683               	bsf	3,5	;RP0=1, select bank1
  2124  0335  1303               	bcf	3,6	;RP1=0, select bank1
  2125  0336  0842               	movf	sprintf@prec^(0+128),w
  2126  0337  160A  118A  23D0  120A  118A  	fcall	_fround
  2127  033C  1283               	bcf	3,5	;RP0=0, select bank0
  2128  033D  1303               	bcf	3,6	;RP1=0, select bank0
  2129  033E  0841               	movf	?_fround+3,w
  2130  033F  00D5               	movwf	___fladd@b+3
  2131  0340  0840               	movf	?_fround+2,w
  2132  0341  00D4               	movwf	___fladd@b+2
  2133  0342  083F               	movf	?_fround+1,w
  2134  0343  00D3               	movwf	___fladd@b+1
  2135  0344  083E               	movf	?_fround,w
  2136  0345  00D2               	movwf	___fladd@b
  2137  0346  1683               	bsf	3,5	;RP0=1, select bank1
  2138  0347  1303               	bcf	3,6	;RP1=0, select bank1
  2139  0348  0840               	movf	(sprintf@fval+3)^(0+128),w
  2140  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2141  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2142  034B  00D9               	movwf	___fladd@a+3
  2143  034C  1683               	bsf	3,5	;RP0=1, select bank1
  2144  034D  1303               	bcf	3,6	;RP1=0, select bank1
  2145  034E  083F               	movf	(sprintf@fval+2)^(0+128),w
  2146  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2147  0350  1303               	bcf	3,6	;RP1=0, select bank0
  2148  0351  00D8               	movwf	___fladd@a+2
  2149  0352  1683               	bsf	3,5	;RP0=1, select bank1
  2150  0353  1303               	bcf	3,6	;RP1=0, select bank1
  2151  0354  083E               	movf	(sprintf@fval+1)^(0+128),w
  2152  0355  1283               	bcf	3,5	;RP0=0, select bank0
  2153  0356  1303               	bcf	3,6	;RP1=0, select bank0
  2154  0357  00D7               	movwf	___fladd@a+1
  2155  0358  1683               	bsf	3,5	;RP0=1, select bank1
  2156  0359  1303               	bcf	3,6	;RP1=0, select bank1
  2157  035A  083D               	movf	sprintf@fval^(0+128),w
  2158  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2159  035C  1303               	bcf	3,6	;RP1=0, select bank0
  2160  035D  00D6               	movwf	___fladd@a
  2161  035E  160A  118A  25D1  120A  118A  	fcall	___fladd
  2162  0363  1283               	bcf	3,5	;RP0=0, select bank0
  2163  0364  1303               	bcf	3,6	;RP1=0, select bank0
  2164  0365  0855               	movf	?___fladd+3,w
  2165  0366  1683               	bsf	3,5	;RP0=1, select bank1
  2166  0367  1303               	bcf	3,6	;RP1=0, select bank1
  2167  0368  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2168  0369  1283               	bcf	3,5	;RP0=0, select bank0
  2169  036A  1303               	bcf	3,6	;RP1=0, select bank0
  2170  036B  0854               	movf	?___fladd+2,w
  2171  036C  1683               	bsf	3,5	;RP0=1, select bank1
  2172  036D  1303               	bcf	3,6	;RP1=0, select bank1
  2173  036E  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2174  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2176  0371  0853               	movf	?___fladd+1,w
  2177  0372  1683               	bsf	3,5	;RP0=1, select bank1
  2178  0373  1303               	bcf	3,6	;RP1=0, select bank1
  2179  0374  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2180  0375  1283               	bcf	3,5	;RP0=0, select bank0
  2181  0376  1303               	bcf	3,6	;RP1=0, select bank0
  2182  0377  0852               	movf	?___fladd,w
  2183  0378  1683               	bsf	3,5	;RP0=1, select bank1
  2184  0379  1303               	bcf	3,6	;RP1=0, select bank1
  2185  037A  00BD               	movwf	sprintf@fval^(0+128)
  2186  037B                     l3349:	
  2187                           
  2188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1135:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2189  037B  1683               	bsf	3,5	;RP0=1, select bank1
  2190  037C  1303               	bcf	3,6	;RP1=0, select bank1
  2191  037D  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2192  037E  3A80               	xorlw	128
  2193  037F  00FF               	movwf	127
  2194  0380  3080               	movlw	128
  2195  0381  027F               	subwf	127,w
  2196  0382  1D03               	skipz
  2197  0383  2B86               	goto	u5655
  2198  0384  300A               	movlw	10
  2199  0385  023B               	subwf	sprintf@eexp^(0+128),w
  2200  0386                     u5655:	
  2201  0386  1803               	skipnc
  2202  0387  2BD3               	goto	l3357
  2203  0388  1683               	bsf	3,5	;RP0=1, select bank1
  2204  0389  1303               	bcf	3,6	;RP1=0, select bank1
  2205  038A  0840               	movf	(sprintf@fval+3)^(0+128),w
  2206  038B  00F3               	movwf	___fleq@ff1+3
  2207  038C  083F               	movf	(sprintf@fval+2)^(0+128),w
  2208  038D  00F2               	movwf	___fleq@ff1+2
  2209  038E  083E               	movf	(sprintf@fval+1)^(0+128),w
  2210  038F  00F1               	movwf	___fleq@ff1+1
  2211  0390  083D               	movf	sprintf@fval^(0+128),w
  2212  0391  00F0               	movwf	___fleq@ff1
  2213  0392  3000               	movlw	0
  2214  0393  00F7               	movwf	___fleq@ff2+3
  2215  0394  3000               	movlw	0
  2216  0395  00F6               	movwf	___fleq@ff2+2
  2217  0396  3000               	movlw	0
  2218  0397  00F5               	movwf	___fleq@ff2+1
  2219  0398  3000               	movlw	0
  2220  0399  00F4               	movwf	___fleq@ff2
  2221  039A  160A  158A  2556  120A  118A  	fcall	___fleq
  2222  039F  1803               	btfsc	3,0
  2223  03A0  2C3C               	goto	l3371
  2224  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  2225  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  2226  03A3  0840               	movf	(sprintf@fval+3)^(0+128),w
  2227  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2228  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2229  03A6  00D4               	movwf	___fltol@f1+3
  2230  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2231  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  2232  03A9  083F               	movf	(sprintf@fval+2)^(0+128),w
  2233  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  2234  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  2235  03AC  00D3               	movwf	___fltol@f1+2
  2236  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  2237  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  2238  03AF  083E               	movf	(sprintf@fval+1)^(0+128),w
  2239  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2240  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2241  03B2  00D2               	movwf	___fltol@f1+1
  2242  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  2243  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  2244  03B5  083D               	movf	sprintf@fval^(0+128),w
  2245  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2246  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2247  03B8  00D1               	movwf	___fltol@f1
  2248  03B9  160A  158A  2793  120A  118A  	fcall	___fltol
  2249  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2250  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2251  03C0  0854               	movf	?___fltol+3,w
  2252  03C1  0453               	iorwf	?___fltol+2,w
  2253  03C2  0452               	iorwf	?___fltol+1,w
  2254  03C3  0451               	iorwf	?___fltol,w
  2255  03C4  1D03               	skipz
  2256  03C5  2C3C               	goto	l3371
  2257  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  2258  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  2259  03C8  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2260  03C9  3A80               	xorlw	128
  2261  03CA  00FF               	movwf	127
  2262  03CB  3080               	movlw	128
  2263  03CC  027F               	subwf	127,w
  2264  03CD  1D03               	skipz
  2265  03CE  2BD1               	goto	u5685
  2266  03CF  3002               	movlw	2
  2267  03D0  023B               	subwf	sprintf@eexp^(0+128),w
  2268  03D1                     u5685:	
  2269  03D1  1C03               	skipc
  2270  03D2  2C3C               	goto	l3371
  2271  03D3                     l3357:	
  2272                           
  2273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1139:      
      +                          if(tmpval.integ < 4.294967296){
  2274  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  2275  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  2276  03D5  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2277  03D6  00F3               	movwf	___flge@ff1+3
  2278  03D7  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2279  03D8  00F2               	movwf	___flge@ff1+2
  2280  03D9  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2281  03DA  00F1               	movwf	___flge@ff1+1
  2282  03DB  0837               	movf	sprintf@tmpval^(0+128),w
  2283  03DC  00F0               	movwf	___flge@ff1
  2284  03DD  3040               	movlw	64
  2285  03DE  00F7               	movwf	___flge@ff2+3
  2286  03DF  3089               	movlw	137
  2287  03E0  00F6               	movwf	___flge@ff2+2
  2288  03E1  3070               	movlw	112
  2289  03E2  00F5               	movwf	___flge@ff2+1
  2290  03E3  305F               	movlw	95
  2291  03E4  00F4               	movwf	___flge@ff2
  2292  03E5  120A  158A  2000  120A  118A  	fcall	___flge
  2293  03EA  1803               	btfsc	3,0
  2294  03EB  2BEE               	goto	l3361
  2295                           
  2296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1140:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2297  03EC  30F7               	movlw	247
  2298  03ED  2BEF               	goto	L2
  2299  03EE                     l3361:	
  2300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1141:      
      +                          }else{
  2301                           
  2302                           
  2303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1142:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2304  03EE  30F8               	movlw	248
  2305  03EF                     L2:	
  2306  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  2307  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  2308  03F1  07BB               	addwf	sprintf@eexp^(0+128),f
  2309  03F2  1803               	skipnc
  2310  03F3  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2311  03F4  30FF               	movlw	255
  2312  03F5  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2313                           
  2314                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1145:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2315  03F6  083B               	movf	sprintf@eexp^(0+128),w
  2316  03F7  120A  158A  24B7  120A  118A  	fcall	_scale
  2317  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2318  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2319  03FE  0841               	movf	?_scale+3,w
  2320  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  2321  0400  1303               	bcf	3,6	;RP1=0, select bank1
  2322  0401  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2323  0402  1283               	bcf	3,5	;RP0=0, select bank0
  2324  0403  1303               	bcf	3,6	;RP1=0, select bank0
  2325  0404  0840               	movf	?_scale+2,w
  2326  0405  1683               	bsf	3,5	;RP0=1, select bank1
  2327  0406  1303               	bcf	3,6	;RP1=0, select bank1
  2328  0407  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2329  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2330  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2331  040A  083F               	movf	?_scale+1,w
  2332  040B  1683               	bsf	3,5	;RP0=1, select bank1
  2333  040C  1303               	bcf	3,6	;RP1=0, select bank1
  2334  040D  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2335  040E  1283               	bcf	3,5	;RP0=0, select bank0
  2336  040F  1303               	bcf	3,6	;RP1=0, select bank0
  2337  0410  083E               	movf	?_scale,w
  2338  0411  1683               	bsf	3,5	;RP0=1, select bank1
  2339  0412  1303               	bcf	3,6	;RP1=0, select bank1
  2340  0413  00B7               	movwf	sprintf@tmpval^(0+128)
  2341  0414  0840               	movf	(sprintf@fval+3)^(0+128),w
  2342  0415  00F3               	movwf	__div_to_l_@f1+3
  2343  0416  083F               	movf	(sprintf@fval+2)^(0+128),w
  2344  0417  00F2               	movwf	__div_to_l_@f1+2
  2345  0418  083E               	movf	(sprintf@fval+1)^(0+128),w
  2346  0419  00F1               	movwf	__div_to_l_@f1+1
  2347  041A  083D               	movf	sprintf@fval^(0+128),w
  2348  041B  00F0               	movwf	__div_to_l_@f1
  2349  041C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2350  041D  00F7               	movwf	__div_to_l_@f2+3
  2351  041E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2352  041F  00F6               	movwf	__div_to_l_@f2+2
  2353  0420  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2354  0421  00F5               	movwf	__div_to_l_@f2+1
  2355  0422  0837               	movf	sprintf@tmpval^(0+128),w
  2356  0423  00F4               	movwf	__div_to_l_@f2
  2357  0424  160A  118A  217D  120A  118A  	fcall	__div_to_l_
  2358  0429  0873               	movf	?__div_to_l_+3,w
  2359  042A  1683               	bsf	3,5	;RP0=1, select bank1
  2360  042B  1303               	bcf	3,6	;RP1=0, select bank1
  2361  042C  00B2               	movwf	(sprintf@val+3)^(0+128)
  2362  042D  0872               	movf	?__div_to_l_+2,w
  2363  042E  00B1               	movwf	(sprintf@val+2)^(0+128)
  2364  042F  0871               	movf	?__div_to_l_+1,w
  2365  0430  00B0               	movwf	(sprintf@val+1)^(0+128)
  2366  0431  0870               	movf	?__div_to_l_,w
  2367  0432  00AF               	movwf	sprintf@val^(0+128)
  2368                           
  2369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1148:      
      +                          fval = 0.0;
  2370  0433  3000               	movlw	0
  2371  0434  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2372  0435  3000               	movlw	0
  2373  0436  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2374  0437  3000               	movlw	0
  2375  0438  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2376  0439  3000               	movlw	0
  2377  043A  00BD               	movwf	sprintf@fval^(0+128)
  2378                           
  2379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1149:     }
      +                           else {
  2380  043B  2CC0               	goto	l3377
  2381  043C                     l3371:	
  2382                           
  2383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1150:      
      +                          val = (unsigned long)fval;
  2384  043C  1683               	bsf	3,5	;RP0=1, select bank1
  2385  043D  1303               	bcf	3,6	;RP1=0, select bank1
  2386  043E  0840               	movf	(sprintf@fval+3)^(0+128),w
  2387  043F  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0440  1303               	bcf	3,6	;RP1=0, select bank0
  2389  0441  00D4               	movwf	___fltol@f1+3
  2390  0442  1683               	bsf	3,5	;RP0=1, select bank1
  2391  0443  1303               	bcf	3,6	;RP1=0, select bank1
  2392  0444  083F               	movf	(sprintf@fval+2)^(0+128),w
  2393  0445  1283               	bcf	3,5	;RP0=0, select bank0
  2394  0446  1303               	bcf	3,6	;RP1=0, select bank0
  2395  0447  00D3               	movwf	___fltol@f1+2
  2396  0448  1683               	bsf	3,5	;RP0=1, select bank1
  2397  0449  1303               	bcf	3,6	;RP1=0, select bank1
  2398  044A  083E               	movf	(sprintf@fval+1)^(0+128),w
  2399  044B  1283               	bcf	3,5	;RP0=0, select bank0
  2400  044C  1303               	bcf	3,6	;RP1=0, select bank0
  2401  044D  00D2               	movwf	___fltol@f1+1
  2402  044E  1683               	bsf	3,5	;RP0=1, select bank1
  2403  044F  1303               	bcf	3,6	;RP1=0, select bank1
  2404  0450  083D               	movf	sprintf@fval^(0+128),w
  2405  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2406  0452  1303               	bcf	3,6	;RP1=0, select bank0
  2407  0453  00D1               	movwf	___fltol@f1
  2408  0454  160A  158A  2793  120A  118A  	fcall	___fltol
  2409  0459  1283               	bcf	3,5	;RP0=0, select bank0
  2410  045A  1303               	bcf	3,6	;RP1=0, select bank0
  2411  045B  0854               	movf	?___fltol+3,w
  2412  045C  1683               	bsf	3,5	;RP0=1, select bank1
  2413  045D  1303               	bcf	3,6	;RP1=0, select bank1
  2414  045E  00B2               	movwf	(sprintf@val+3)^(0+128)
  2415  045F  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0460  1303               	bcf	3,6	;RP1=0, select bank0
  2417  0461  0853               	movf	?___fltol+2,w
  2418  0462  1683               	bsf	3,5	;RP0=1, select bank1
  2419  0463  1303               	bcf	3,6	;RP1=0, select bank1
  2420  0464  00B1               	movwf	(sprintf@val+2)^(0+128)
  2421  0465  1283               	bcf	3,5	;RP0=0, select bank0
  2422  0466  1303               	bcf	3,6	;RP1=0, select bank0
  2423  0467  0852               	movf	?___fltol+1,w
  2424  0468  1683               	bsf	3,5	;RP0=1, select bank1
  2425  0469  1303               	bcf	3,6	;RP1=0, select bank1
  2426  046A  00B0               	movwf	(sprintf@val+1)^(0+128)
  2427  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2428  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2429  046D  0851               	movf	?___fltol,w
  2430  046E  1683               	bsf	3,5	;RP0=1, select bank1
  2431  046F  1303               	bcf	3,6	;RP1=0, select bank1
  2432  0470  00AF               	movwf	sprintf@val^(0+128)
  2433                           
  2434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1151:      
      +                          fval -= (double)val;
  2435  0471  0832               	movf	(sprintf@val+3)^(0+128),w
  2436  0472  00F3               	movwf	___xxtofl@val+3
  2437  0473  0831               	movf	(sprintf@val+2)^(0+128),w
  2438  0474  00F2               	movwf	___xxtofl@val+2
  2439  0475  0830               	movf	(sprintf@val+1)^(0+128),w
  2440  0476  00F1               	movwf	___xxtofl@val+1
  2441  0477  082F               	movf	sprintf@val^(0+128),w
  2442  0478  00F0               	movwf	___xxtofl@val
  2443  0479  3000               	movlw	0
  2444  047A  160A  118A  2031  120A  118A  	fcall	___xxtofl
  2445  047F  0873               	movf	?___xxtofl+3,w
  2446  0480  1283               	bcf	3,5	;RP0=0, select bank0
  2447  0481  1303               	bcf	3,6	;RP1=0, select bank0
  2448  0482  00E9               	movwf	___flsub@a+3
  2449  0483  0872               	movf	?___xxtofl+2,w
  2450  0484  00E8               	movwf	___flsub@a+2
  2451  0485  0871               	movf	?___xxtofl+1,w
  2452  0486  00E7               	movwf	___flsub@a+1
  2453  0487  0870               	movf	?___xxtofl,w
  2454  0488  00E6               	movwf	___flsub@a
  2455  0489  1683               	bsf	3,5	;RP0=1, select bank1
  2456  048A  1303               	bcf	3,6	;RP1=0, select bank1
  2457  048B  0840               	movf	(sprintf@fval+3)^(0+128),w
  2458  048C  1283               	bcf	3,5	;RP0=0, select bank0
  2459  048D  1303               	bcf	3,6	;RP1=0, select bank0
  2460  048E  00ED               	movwf	___flsub@b+3
  2461  048F  1683               	bsf	3,5	;RP0=1, select bank1
  2462  0490  1303               	bcf	3,6	;RP1=0, select bank1
  2463  0491  083F               	movf	(sprintf@fval+2)^(0+128),w
  2464  0492  1283               	bcf	3,5	;RP0=0, select bank0
  2465  0493  1303               	bcf	3,6	;RP1=0, select bank0
  2466  0494  00EC               	movwf	___flsub@b+2
  2467  0495  1683               	bsf	3,5	;RP0=1, select bank1
  2468  0496  1303               	bcf	3,6	;RP1=0, select bank1
  2469  0497  083E               	movf	(sprintf@fval+1)^(0+128),w
  2470  0498  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0499  1303               	bcf	3,6	;RP1=0, select bank0
  2472  049A  00EB               	movwf	___flsub@b+1
  2473  049B  1683               	bsf	3,5	;RP0=1, select bank1
  2474  049C  1303               	bcf	3,6	;RP1=0, select bank1
  2475  049D  083D               	movf	sprintf@fval^(0+128),w
  2476  049E  1283               	bcf	3,5	;RP0=0, select bank0
  2477  049F  1303               	bcf	3,6	;RP1=0, select bank0
  2478  04A0  00EA               	movwf	___flsub@b
  2479  04A1  160A  158A  242D  120A  118A  	fcall	___flsub
  2480  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2481  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2482  04A8  0869               	movf	?___flsub+3,w
  2483  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  2484  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  2485  04AB  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2486  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2487  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2488  04AE  0868               	movf	?___flsub+2,w
  2489  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  2490  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  2491  04B1  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2492  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  2493  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  2494  04B4  0867               	movf	?___flsub+1,w
  2495  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  2496  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  2497  04B7  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2498  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  2499  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  2500  04BA  0866               	movf	?___flsub,w
  2501  04BB  1683               	bsf	3,5	;RP0=1, select bank1
  2502  04BC  1303               	bcf	3,6	;RP1=0, select bank1
  2503  04BD  00BD               	movwf	sprintf@fval^(0+128)
  2504                           
  2505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1152:      
      +                          eexp = 0;
  2506  04BE  01BB               	clrf	sprintf@eexp^(0+128)
  2507  04BF  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  2508  04C0                     l3377:	
  2509                           
  2510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1155:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2511  04C0  01C4               	clrf	sprintf@c^(0+128)
  2512  04C1  0AC4               	incf	sprintf@c^(0+128),f
  2513  04C2                     l3383:	
  2514                           
  2515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1156:      
      +                          if(val < dpowers[c])
  2516  04C2  0844               	movf	sprintf@c^(0+128),w
  2517  04C3  00A5               	movwf	??_sprintf^(0+128)
  2518  04C4  3001               	movlw	1
  2519  04C5                     u5705:	
  2520  04C5  1003               	clrc
  2521  04C6  0DA5               	rlf	??_sprintf^(0+128),f
  2522  04C7  3EFF               	addlw	-1
  2523  04C8  1D03               	skipz
  2524  04C9  2CC5               	goto	u5705
  2525  04CA  1003               	clrc
  2526  04CB  0D25               	rlf	??_sprintf^(0+128),w
  2527  04CC  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2528  04CD  0084               	movwf	4
  2529  04CE  120A  118A  200D  120A  118A  	fcall	stringdir
  2530  04D3  00A6               	movwf	(??_sprintf+1)^(0+128)
  2531  04D4  120A  118A  200D  120A  118A  	fcall	stringdir
  2532  04D9  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2533  04DA  120A  118A  200D  120A  118A  	fcall	stringdir
  2534  04DF  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2535  04E0  120A  118A  200D  120A  118A  	fcall	stringdir
  2536  04E5  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2537  04E6  0829               	movf	(??_sprintf+4)^(0+128),w
  2538  04E7  0232               	subwf	(sprintf@val+3)^(0+128),w
  2539  04E8  1D03               	skipz
  2540  04E9  2CF4               	goto	u5715
  2541  04EA  0828               	movf	(??_sprintf+3)^(0+128),w
  2542  04EB  0231               	subwf	(sprintf@val+2)^(0+128),w
  2543  04EC  1D03               	skipz
  2544  04ED  2CF4               	goto	u5715
  2545  04EE  0827               	movf	(??_sprintf+2)^(0+128),w
  2546  04EF  0230               	subwf	(sprintf@val+1)^(0+128),w
  2547  04F0  1D03               	skipz
  2548  04F1  2CF4               	goto	u5715
  2549  04F2  0826               	movf	(??_sprintf+1)^(0+128),w
  2550  04F3  022F               	subwf	sprintf@val^(0+128),w
  2551  04F4                     u5715:	
  2552  04F4  1C03               	btfss	3,0
  2553  04F5  2CFE               	goto	l3389
  2554  04F6  3001               	movlw	1
  2555  04F7  00A5               	movwf	??_sprintf^(0+128)
  2556  04F8  0825               	movf	??_sprintf^(0+128),w
  2557  04F9  07C4               	addwf	sprintf@c^(0+128),f
  2558  04FA  300A               	movlw	10
  2559  04FB  0644               	xorwf	sprintf@c^(0+128),w
  2560  04FC  1D03               	btfss	3,2
  2561  04FD  2CC2               	goto	l3383
  2562  04FE                     l3389:	
  2563                           
  2564                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1161:     w
      +                          idth -= prec + c + eexp;
  2565  04FE  0844               	movf	sprintf@c^(0+128),w
  2566  04FF  0742               	addwf	sprintf@prec^(0+128),w
  2567  0500  00A5               	movwf	??_sprintf^(0+128)
  2568  0501  0843               	movf	(sprintf@prec+1)^(0+128),w
  2569  0502  1803               	skipnc
  2570  0503  0A43               	incf	(sprintf@prec+1)^(0+128),w
  2571  0504  00A6               	movwf	(??_sprintf^(0+128)+1)
  2572  0505  083B               	movf	sprintf@eexp^(0+128),w
  2573  0506  0725               	addwf	??_sprintf^(0+128),w
  2574  0507  00A7               	movwf	(??_sprintf+2)^(0+128)
  2575  0508  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2576  0509  1803               	skipnc
  2577  050A  0A3C               	incf	(sprintf@eexp+1)^(0+128),w
  2578  050B  0726               	addwf	(??_sprintf+1)^(0+128),w
  2579  050C  00A8               	movwf	(??_sprintf+3)^(0+128)
  2580  050D  0827               	movf	(??_sprintf+2)^(0+128),w
  2581  050E  02B5               	subwf	sprintf@width^(0+128),f
  2582  050F  0828               	movf	(??_sprintf+3)^(0+128),w
  2583  0510  1C03               	skipc
  2584  0511  03B6               	decf	(sprintf@width+1)^(0+128),f
  2585  0512  02B6               	subwf	(sprintf@width+1)^(0+128),f
  2586                           
  2587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1162:     i
      +                          f(
  2588  0513  0842               	movf	sprintf@prec^(0+128),w
  2589  0514  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  2590  0515  1903               	btfsc	3,2
  2591  0516  2D1D               	goto	l3393
  2592                           
  2593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1167:      
      +                          width--;
  2594  0517  30FF               	movlw	255
  2595  0518  07B5               	addwf	sprintf@width^(0+128),f
  2596  0519  1803               	skipnc
  2597  051A  0AB6               	incf	(sprintf@width+1)^(0+128),f
  2598  051B  30FF               	movlw	255
  2599  051C  07B6               	addwf	(sprintf@width+1)^(0+128),f
  2600  051D                     l3393:	
  2601                           
  2602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1168:     i
      +                          f(flag & 0x03)
  2603  051D  3003               	movlw	3
  2604  051E  0533               	andwf	sprintf@flag^(0+128),w
  2605  051F  00A5               	movwf	??_sprintf^(0+128)
  2606  0520  3000               	movlw	0
  2607  0521  0534               	andwf	(sprintf@flag+1)^(0+128),w
  2608  0522  00A6               	movwf	(??_sprintf+1)^(0+128)
  2609  0523  0825               	movf	??_sprintf^(0+128),w
  2610  0524  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2611  0525  1D03               	btfss	3,2
  2612  0526  2D3F               	goto	l3395
  2613  0527                     l3403:	
  2614                           
  2615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1199:      
      +                          while(width > 0) {
  2616  0527  0836               	movf	(sprintf@width+1)^(0+128),w
  2617  0528  3A80               	xorlw	128
  2618  0529  00FF               	movwf	127
  2619  052A  3080               	movlw	128
  2620  052B  027F               	subwf	127,w
  2621  052C  1D03               	skipz
  2622  052D  2D30               	goto	u5755
  2623  052E  3001               	movlw	1
  2624  052F  0235               	subwf	sprintf@width^(0+128),w
  2625  0530                     u5755:	
  2626  0530  1C03               	btfss	3,0
  2627  0531  2D46               	goto	l3405
  2628                           
  2629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1200:      
      +                           ((*sp++ = (' ')));
  2630  0532  3020               	movlw	32
  2631  0533  1683               	bsf	3,5	;RP0=1, select bank1
  2632  0534  1303               	bcf	3,6	;RP1=0, select bank1
  2633  0535  00A5               	movwf	??_sprintf^(0+128)
  2634  0536  0841               	movf	sprintf@sp^(0+128),w
  2635  0537  0084               	movwf	4
  2636  0538  0825               	movf	??_sprintf^(0+128),w
  2637  0539  1383               	bcf	3,7	;select IRP bank0
  2638  053A  0080               	movwf	0
  2639  053B  3001               	movlw	1
  2640  053C  00A5               	movwf	??_sprintf^(0+128)
  2641  053D  0825               	movf	??_sprintf^(0+128),w
  2642  053E  07C1               	addwf	sprintf@sp^(0+128),f
  2643  053F                     l3395:	
  2644                           
  2645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1169:      
      +                          width--;
  2646  053F  30FF               	movlw	255
  2647  0540  07B5               	addwf	sprintf@width^(0+128),f
  2648  0541  1803               	skipnc
  2649  0542  0AB6               	incf	(sprintf@width+1)^(0+128),f
  2650  0543  30FF               	movlw	255
  2651  0544  07B6               	addwf	(sprintf@width+1)^(0+128),f
  2652  0545  2D27               	goto	l3403
  2653  0546                     l3405:	
  2654                           
  2655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1207:     i
      +                          f(flag & 0x03)
  2656  0546  3003               	movlw	3
  2657  0547  1683               	bsf	3,5	;RP0=1, select bank1
  2658  0548  1303               	bcf	3,6	;RP1=0, select bank1
  2659  0549  0533               	andwf	sprintf@flag^(0+128),w
  2660  054A  00A5               	movwf	??_sprintf^(0+128)
  2661  054B  3000               	movlw	0
  2662  054C  0534               	andwf	(sprintf@flag+1)^(0+128),w
  2663  054D  00A6               	movwf	(??_sprintf+1)^(0+128)
  2664  054E  0825               	movf	??_sprintf^(0+128),w
  2665  054F  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2666  0550  1903               	btfsc	3,2
  2667  0551  2D5D               	goto	l266
  2668                           
  2669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1209:      
      +                          ((*sp++ = ('-')));
  2670  0552  302D               	movlw	45
  2671  0553                     L3:	
  2672  0553  00A5               	movwf	??_sprintf^(0+128)
  2673  0554  0841               	movf	sprintf@sp^(0+128),w
  2674  0555  0084               	movwf	4
  2675  0556  0825               	movf	??_sprintf^(0+128),w
  2676  0557  1383               	bcf	3,7	;select IRP bank0
  2677  0558  0080               	movwf	0
  2678  0559  3001               	movlw	1
  2679  055A  00A5               	movwf	??_sprintf^(0+128)
  2680  055B  0825               	movf	??_sprintf^(0+128),w
  2681  055C  07C1               	addwf	sprintf@sp^(0+128),f
  2682  055D                     l266:	
  2683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1223:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1225:    }
  2684                           
  2685                           
  2686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1215:    wh
      +                          ile(c--) {
  2687  055D  3001               	movlw	1
  2688  055E  02C4               	subwf	sprintf@c^(0+128),f
  2689  055F  0A44               	incf	sprintf@c^(0+128),w
  2690  0560  1903               	btfsc	3,2
  2691  0561  2DD2               	goto	l3423
  2692                           
  2693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1219:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1220:      
      +                          tmpval.vd = val/dpowers[c];
  2694  0562  0844               	movf	sprintf@c^(0+128),w
  2695  0563  00A5               	movwf	??_sprintf^(0+128)
  2696  0564  3001               	movlw	1
  2697  0565                     u5775:	
  2698  0565  1003               	clrc
  2699  0566  0DA5               	rlf	??_sprintf^(0+128),f
  2700  0567  3EFF               	addlw	-1
  2701  0568  1D03               	skipz
  2702  0569  2D65               	goto	u5775
  2703  056A  1003               	clrc
  2704  056B  0D25               	rlf	??_sprintf^(0+128),w
  2705  056C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2706  056D  0084               	movwf	4
  2707  056E  120A  118A  200D  120A  118A  	fcall	stringdir
  2708  0573  00F0               	movwf	___lldiv@divisor
  2709  0574  120A  118A  200D  120A  118A  	fcall	stringdir
  2710  0579  00F1               	movwf	___lldiv@divisor+1
  2711  057A  120A  118A  200D  120A  118A  	fcall	stringdir
  2712  057F  00F2               	movwf	___lldiv@divisor+2
  2713  0580  120A  118A  200D  120A  118A  	fcall	stringdir
  2714  0585  00F3               	movwf	___lldiv@divisor+3
  2715  0586  0832               	movf	(sprintf@val+3)^(0+128),w
  2716  0587  00F7               	movwf	___lldiv@dividend+3
  2717  0588  0831               	movf	(sprintf@val+2)^(0+128),w
  2718  0589  00F6               	movwf	___lldiv@dividend+2
  2719  058A  0830               	movf	(sprintf@val+1)^(0+128),w
  2720  058B  00F5               	movwf	___lldiv@dividend+1
  2721  058C  082F               	movf	sprintf@val^(0+128),w
  2722  058D  00F4               	movwf	___lldiv@dividend
  2723  058E  160A  158A  2735  120A  118A  	fcall	___lldiv
  2724  0593  0873               	movf	?___lldiv+3,w
  2725  0594  1683               	bsf	3,5	;RP0=1, select bank1
  2726  0595  1303               	bcf	3,6	;RP1=0, select bank1
  2727  0596  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2728  0597  0872               	movf	?___lldiv+2,w
  2729  0598  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2730  0599  0871               	movf	?___lldiv+1,w
  2731  059A  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2732  059B  0870               	movf	?___lldiv,w
  2733  059C  00B7               	movwf	sprintf@tmpval^(0+128)
  2734                           
  2735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1221:      
      +                          tmpval.vd %= 10;
  2736  059D  3000               	movlw	0
  2737  059E  00F3               	movwf	___llmod@divisor+3
  2738  059F  3000               	movlw	0
  2739  05A0  00F2               	movwf	___llmod@divisor+2
  2740  05A1  3000               	movlw	0
  2741  05A2  00F1               	movwf	___llmod@divisor+1
  2742  05A3  300A               	movlw	10
  2743  05A4  00F0               	movwf	___llmod@divisor
  2744  05A5  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2745  05A6  00F7               	movwf	___llmod@dividend+3
  2746  05A7  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2747  05A8  00F6               	movwf	___llmod@dividend+2
  2748  05A9  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2749  05AA  00F5               	movwf	___llmod@dividend+1
  2750  05AB  0837               	movf	sprintf@tmpval^(0+128),w
  2751  05AC  00F4               	movwf	___llmod@dividend
  2752  05AD  160A  158A  2633  120A  118A  	fcall	___llmod
  2753  05B2  0873               	movf	?___llmod+3,w
  2754  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  2755  05B4  1303               	bcf	3,6	;RP1=0, select bank1
  2756  05B5  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2757  05B6  0872               	movf	?___llmod+2,w
  2758  05B7  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2759  05B8  0871               	movf	?___llmod+1,w
  2760  05B9  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2761  05BA  0870               	movf	?___llmod,w
  2762  05BB  00B7               	movwf	sprintf@tmpval^(0+128)
  2763                           
  2764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1222:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  2765  05BC  0837               	movf	sprintf@tmpval^(0+128),w
  2766  05BD  3E30               	addlw	48
  2767  05BE  2D53               	goto	L3
  2768  05BF                     l3417:	
  2769                           
  2770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1227:     (
      +                          (*sp++ = ('0')));
  2771  05BF  3030               	movlw	48
  2772  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  2773  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  2774  05C2  00A5               	movwf	??_sprintf^(0+128)
  2775  05C3  0841               	movf	sprintf@sp^(0+128),w
  2776  05C4  0084               	movwf	4
  2777  05C5  0825               	movf	??_sprintf^(0+128),w
  2778  05C6  1383               	bcf	3,7	;select IRP bank0
  2779  05C7  0080               	movwf	0
  2780  05C8  3001               	movlw	1
  2781  05C9  00A5               	movwf	??_sprintf^(0+128)
  2782  05CA  0825               	movf	??_sprintf^(0+128),w
  2783  05CB  07C1               	addwf	sprintf@sp^(0+128),f
  2784                           
  2785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1228:     e
      +                          exp--;
  2786  05CC  30FF               	movlw	255
  2787  05CD  07BB               	addwf	sprintf@eexp^(0+128),f
  2788  05CE  1803               	skipnc
  2789  05CF  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2790  05D0  30FF               	movlw	255
  2791  05D1  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2792  05D2                     l3423:	
  2793                           
  2794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1226:    wh
      +                          ile(eexp > 0) {
  2795  05D2  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2796  05D3  3A80               	xorlw	128
  2797  05D4  00FF               	movwf	127
  2798  05D5  3080               	movlw	128
  2799  05D6  027F               	subwf	127,w
  2800  05D7  1D03               	skipz
  2801  05D8  2DDB               	goto	u5795
  2802  05D9  3001               	movlw	1
  2803  05DA  023B               	subwf	sprintf@eexp^(0+128),w
  2804  05DB                     u5795:	
  2805  05DB  1803               	skipnc
  2806  05DC  2DBF               	goto	l3417
  2807                           
  2808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1230:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2809  05DD  1683               	bsf	3,5	;RP0=1, select bank1
  2810  05DE  1303               	bcf	3,6	;RP1=0, select bank1
  2811  05DF  0843               	movf	(sprintf@prec+1)^(0+128),w
  2812  05E0  3A80               	xorlw	128
  2813  05E1  00FF               	movwf	127
  2814  05E2  3080               	movlw	128
  2815  05E3  027F               	subwf	127,w
  2816  05E4  1D03               	skipz
  2817  05E5  2DE8               	goto	u5805
  2818  05E6  3009               	movlw	9
  2819  05E7  0242               	subwf	sprintf@prec^(0+128),w
  2820  05E8                     u5805:	
  2821  05E8  1C03               	skipc
  2822  05E9  2DEE               	goto	l3429
  2823                           
  2824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1231:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  2825  05EA  3008               	movlw	8
  2826  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  2827  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  2828  05ED  2DF1               	goto	L4
  2829  05EE                     l3429:	
  2830                           
  2831                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1233:     c
      +                           = (char)prec;
  2832  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  2833  05EF  1303               	bcf	3,6	;RP1=0, select bank1
  2834  05F0  0842               	movf	sprintf@prec^(0+128),w
  2835  05F1                     L4:	
  2836  05F1  00A5               	movwf	??_sprintf^(0+128)
  2837  05F2  0825               	movf	??_sprintf^(0+128),w
  2838  05F3  00C4               	movwf	sprintf@c^(0+128)
  2839                           
  2840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1234:    pr
      +                          ec -= (int)c;
  2841  05F4  0844               	movf	sprintf@c^(0+128),w
  2842  05F5  00A5               	movwf	??_sprintf^(0+128)
  2843  05F6  01A6               	clrf	(??_sprintf^(0+128)+1)
  2844  05F7  0825               	movf	??_sprintf^(0+128),w
  2845  05F8  02C2               	subwf	sprintf@prec^(0+128),f
  2846  05F9  0826               	movf	(??_sprintf+1)^(0+128),w
  2847  05FA  1C03               	skipc
  2848  05FB  03C3               	decf	(sprintf@prec+1)^(0+128),f
  2849  05FC  02C3               	subwf	(sprintf@prec+1)^(0+128),f
  2850                           
  2851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1238:    if
      +                          (c)
  2852  05FD  0844               	movf	sprintf@c^(0+128),w
  2853  05FE  1903               	btfsc	3,2
  2854  05FF  2E0B               	goto	l3437
  2855                           
  2856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1240:     (
      +                          (*sp++ = ('.')));
  2857  0600  302E               	movlw	46
  2858  0601  00A5               	movwf	??_sprintf^(0+128)
  2859  0602  0841               	movf	sprintf@sp^(0+128),w
  2860  0603  0084               	movwf	4
  2861  0604  0825               	movf	??_sprintf^(0+128),w
  2862  0605  1383               	bcf	3,7	;select IRP bank0
  2863  0606  0080               	movwf	0
  2864  0607  3001               	movlw	1
  2865  0608  00A5               	movwf	??_sprintf^(0+128)
  2866  0609  0825               	movf	??_sprintf^(0+128),w
  2867  060A  07C1               	addwf	sprintf@sp^(0+128),f
  2868  060B                     l3437:	
  2869                           
  2870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2871  060B  0844               	movf	sprintf@c^(0+128),w
  2872  060C  120A  158A  24B7  120A  118A  	fcall	_scale
  2873  0611  1283               	bcf	3,5	;RP0=0, select bank0
  2874  0612  1303               	bcf	3,6	;RP1=0, select bank0
  2875  0613  0841               	movf	?_scale+3,w
  2876  0614  1683               	bsf	3,5	;RP0=1, select bank1
  2877  0615  1303               	bcf	3,6	;RP1=0, select bank1
  2878  0616  00AD               	movwf	(_sprintf$939+3)^(0+128)
  2879  0617  1283               	bcf	3,5	;RP0=0, select bank0
  2880  0618  1303               	bcf	3,6	;RP1=0, select bank0
  2881  0619  0840               	movf	?_scale+2,w
  2882  061A  1683               	bsf	3,5	;RP0=1, select bank1
  2883  061B  1303               	bcf	3,6	;RP1=0, select bank1
  2884  061C  00AC               	movwf	(_sprintf$939+2)^(0+128)
  2885  061D  1283               	bcf	3,5	;RP0=0, select bank0
  2886  061E  1303               	bcf	3,6	;RP1=0, select bank0
  2887  061F  083F               	movf	?_scale+1,w
  2888  0620  1683               	bsf	3,5	;RP0=1, select bank1
  2889  0621  1303               	bcf	3,6	;RP1=0, select bank1
  2890  0622  00AB               	movwf	(_sprintf$939+1)^(0+128)
  2891  0623  1283               	bcf	3,5	;RP0=0, select bank0
  2892  0624  1303               	bcf	3,6	;RP1=0, select bank0
  2893  0625  083E               	movf	?_scale,w
  2894  0626  1683               	bsf	3,5	;RP0=1, select bank1
  2895  0627  1303               	bcf	3,6	;RP1=0, select bank1
  2896  0628  00AA               	movwf	_sprintf$939^(0+128)
  2897                           
  2898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2899  0629  082D               	movf	(_sprintf$939+3)^(0+128),w
  2900  062A  1283               	bcf	3,5	;RP0=0, select bank0
  2901  062B  1303               	bcf	3,6	;RP1=0, select bank0
  2902  062C  00AB               	movwf	___flmul@a+3
  2903  062D  1683               	bsf	3,5	;RP0=1, select bank1
  2904  062E  1303               	bcf	3,6	;RP1=0, select bank1
  2905  062F  082C               	movf	(_sprintf$939+2)^(0+128),w
  2906  0630  1283               	bcf	3,5	;RP0=0, select bank0
  2907  0631  1303               	bcf	3,6	;RP1=0, select bank0
  2908  0632  00AA               	movwf	___flmul@a+2
  2909  0633  1683               	bsf	3,5	;RP0=1, select bank1
  2910  0634  1303               	bcf	3,6	;RP1=0, select bank1
  2911  0635  082B               	movf	(_sprintf$939+1)^(0+128),w
  2912  0636  1283               	bcf	3,5	;RP0=0, select bank0
  2913  0637  1303               	bcf	3,6	;RP1=0, select bank0
  2914  0638  00A9               	movwf	___flmul@a+1
  2915  0639  1683               	bsf	3,5	;RP0=1, select bank1
  2916  063A  1303               	bcf	3,6	;RP1=0, select bank1
  2917  063B  082A               	movf	_sprintf$939^(0+128),w
  2918  063C  1283               	bcf	3,5	;RP0=0, select bank0
  2919  063D  1303               	bcf	3,6	;RP1=0, select bank0
  2920  063E  00A8               	movwf	___flmul@a
  2921  063F  1683               	bsf	3,5	;RP0=1, select bank1
  2922  0640  1303               	bcf	3,6	;RP1=0, select bank1
  2923  0641  0840               	movf	(sprintf@fval+3)^(0+128),w
  2924  0642  1283               	bcf	3,5	;RP0=0, select bank0
  2925  0643  1303               	bcf	3,6	;RP1=0, select bank0
  2926  0644  00A7               	movwf	___flmul@b+3
  2927  0645  1683               	bsf	3,5	;RP0=1, select bank1
  2928  0646  1303               	bcf	3,6	;RP1=0, select bank1
  2929  0647  083F               	movf	(sprintf@fval+2)^(0+128),w
  2930  0648  1283               	bcf	3,5	;RP0=0, select bank0
  2931  0649  1303               	bcf	3,6	;RP1=0, select bank0
  2932  064A  00A6               	movwf	___flmul@b+2
  2933  064B  1683               	bsf	3,5	;RP0=1, select bank1
  2934  064C  1303               	bcf	3,6	;RP1=0, select bank1
  2935  064D  083E               	movf	(sprintf@fval+1)^(0+128),w
  2936  064E  1283               	bcf	3,5	;RP0=0, select bank0
  2937  064F  1303               	bcf	3,6	;RP1=0, select bank0
  2938  0650  00A5               	movwf	___flmul@b+1
  2939  0651  1683               	bsf	3,5	;RP0=1, select bank1
  2940  0652  1303               	bcf	3,6	;RP1=0, select bank1
  2941  0653  083D               	movf	sprintf@fval^(0+128),w
  2942  0654  1283               	bcf	3,5	;RP0=0, select bank0
  2943  0655  1303               	bcf	3,6	;RP1=0, select bank0
  2944  0656  00A4               	movwf	___flmul@b
  2945  0657  120A  158A  21A2  120A  118A  	fcall	___flmul
  2946  065C  1283               	bcf	3,5	;RP0=0, select bank0
  2947  065D  1303               	bcf	3,6	;RP1=0, select bank0
  2948  065E  0827               	movf	?___flmul+3,w
  2949  065F  00D4               	movwf	___fltol@f1+3
  2950  0660  0826               	movf	?___flmul+2,w
  2951  0661  00D3               	movwf	___fltol@f1+2
  2952  0662  0825               	movf	?___flmul+1,w
  2953  0663  00D2               	movwf	___fltol@f1+1
  2954  0664  0824               	movf	?___flmul,w
  2955  0665  00D1               	movwf	___fltol@f1
  2956  0666  160A  158A  2793  120A  118A  	fcall	___fltol
  2957  066B  1283               	bcf	3,5	;RP0=0, select bank0
  2958  066C  1303               	bcf	3,6	;RP1=0, select bank0
  2959  066D  0854               	movf	?___fltol+3,w
  2960  066E  1683               	bsf	3,5	;RP0=1, select bank1
  2961  066F  1303               	bcf	3,6	;RP1=0, select bank1
  2962  0670  00B2               	movwf	(sprintf@val+3)^(0+128)
  2963  0671  1283               	bcf	3,5	;RP0=0, select bank0
  2964  0672  1303               	bcf	3,6	;RP1=0, select bank0
  2965  0673  0853               	movf	?___fltol+2,w
  2966  0674  1683               	bsf	3,5	;RP0=1, select bank1
  2967  0675  1303               	bcf	3,6	;RP1=0, select bank1
  2968  0676  00B1               	movwf	(sprintf@val+2)^(0+128)
  2969  0677  1283               	bcf	3,5	;RP0=0, select bank0
  2970  0678  1303               	bcf	3,6	;RP1=0, select bank0
  2971  0679  0852               	movf	?___fltol+1,w
  2972  067A  1683               	bsf	3,5	;RP0=1, select bank1
  2973  067B  1303               	bcf	3,6	;RP1=0, select bank1
  2974  067C  00B0               	movwf	(sprintf@val+1)^(0+128)
  2975  067D  1283               	bcf	3,5	;RP0=0, select bank0
  2976  067E  1303               	bcf	3,6	;RP1=0, select bank0
  2977  067F  0851               	movf	?___fltol,w
  2978  0680  1683               	bsf	3,5	;RP0=1, select bank1
  2979  0681  1303               	bcf	3,6	;RP1=0, select bank1
  2980  0682                     L5:	
  2981  0682  00AF               	movwf	sprintf@val^(0+128)
  2982                           
  2983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2984  0683  3001               	movlw	1
  2985  0684  02C4               	subwf	sprintf@c^(0+128),f
  2986  0685  0A44               	incf	sprintf@c^(0+128),w
  2987  0686  1903               	btfsc	3,2
  2988  0687  2F3A               	goto	l3457
  2989                           
  2990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1248:     t
      +                          mpval.vd = val/dpowers[c];
  2991                           
  2992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2993  0688  0844               	movf	sprintf@c^(0+128),w
  2994  0689  00A5               	movwf	??_sprintf^(0+128)
  2995  068A  3001               	movlw	1
  2996  068B                     u5825:	
  2997  068B  1003               	clrc
  2998  068C  0DA5               	rlf	??_sprintf^(0+128),f
  2999  068D  3EFF               	addlw	-1
  3000  068E  1D03               	skipz
  3001  068F  2E8B               	goto	u5825
  3002  0690  1003               	clrc
  3003  0691  0D25               	rlf	??_sprintf^(0+128),w
  3004  0692  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3005  0693  0084               	movwf	4
  3006  0694  120A  118A  200D  120A  118A  	fcall	stringdir
  3007  0699  00F0               	movwf	___lldiv@divisor
  3008  069A  120A  118A  200D  120A  118A  	fcall	stringdir
  3009  069F  00F1               	movwf	___lldiv@divisor+1
  3010  06A0  120A  118A  200D  120A  118A  	fcall	stringdir
  3011  06A5  00F2               	movwf	___lldiv@divisor+2
  3012  06A6  120A  118A  200D  120A  118A  	fcall	stringdir
  3013  06AB  00F3               	movwf	___lldiv@divisor+3
  3014  06AC  0832               	movf	(sprintf@val+3)^(0+128),w
  3015  06AD  00F7               	movwf	___lldiv@dividend+3
  3016  06AE  0831               	movf	(sprintf@val+2)^(0+128),w
  3017  06AF  00F6               	movwf	___lldiv@dividend+2
  3018  06B0  0830               	movf	(sprintf@val+1)^(0+128),w
  3019  06B1  00F5               	movwf	___lldiv@dividend+1
  3020  06B2  082F               	movf	sprintf@val^(0+128),w
  3021  06B3  00F4               	movwf	___lldiv@dividend
  3022  06B4  160A  158A  2735  120A  118A  	fcall	___lldiv
  3023  06B9  0873               	movf	?___lldiv+3,w
  3024  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  3025  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  3026  06BC  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3027  06BD  0872               	movf	?___lldiv+2,w
  3028  06BE  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3029  06BF  0871               	movf	?___lldiv+1,w
  3030  06C0  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3031  06C1  0870               	movf	?___lldiv,w
  3032  06C2  00B7               	movwf	sprintf@tmpval^(0+128)
  3033                           
  3034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1249:     t
      +                          mpval.vd %= 10;
  3035  06C3  3000               	movlw	0
  3036  06C4  00F3               	movwf	___llmod@divisor+3
  3037  06C5  3000               	movlw	0
  3038  06C6  00F2               	movwf	___llmod@divisor+2
  3039  06C7  3000               	movlw	0
  3040  06C8  00F1               	movwf	___llmod@divisor+1
  3041  06C9  300A               	movlw	10
  3042  06CA  00F0               	movwf	___llmod@divisor
  3043  06CB  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3044  06CC  00F7               	movwf	___llmod@dividend+3
  3045  06CD  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3046  06CE  00F6               	movwf	___llmod@dividend+2
  3047  06CF  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3048  06D0  00F5               	movwf	___llmod@dividend+1
  3049  06D1  0837               	movf	sprintf@tmpval^(0+128),w
  3050  06D2  00F4               	movwf	___llmod@dividend
  3051  06D3  160A  158A  2633  120A  118A  	fcall	___llmod
  3052  06D8  0873               	movf	?___llmod+3,w
  3053  06D9  1683               	bsf	3,5	;RP0=1, select bank1
  3054  06DA  1303               	bcf	3,6	;RP1=0, select bank1
  3055  06DB  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3056  06DC  0872               	movf	?___llmod+2,w
  3057  06DD  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3058  06DE  0871               	movf	?___llmod+1,w
  3059  06DF  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3060  06E0  0870               	movf	?___llmod,w
  3061  06E1  00B7               	movwf	sprintf@tmpval^(0+128)
  3062                           
  3063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1250:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  3064  06E2  0837               	movf	sprintf@tmpval^(0+128),w
  3065  06E3  3E30               	addlw	48
  3066  06E4  00A5               	movwf	??_sprintf^(0+128)
  3067  06E5  0841               	movf	sprintf@sp^(0+128),w
  3068  06E6  0084               	movwf	4
  3069  06E7  0825               	movf	??_sprintf^(0+128),w
  3070  06E8  1383               	bcf	3,7	;select IRP bank0
  3071  06E9  0080               	movwf	0
  3072  06EA  3001               	movlw	1
  3073  06EB  00A5               	movwf	??_sprintf^(0+128)
  3074  06EC  0825               	movf	??_sprintf^(0+128),w
  3075  06ED  07C1               	addwf	sprintf@sp^(0+128),f
  3076                           
  3077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1251:     v
      +                          al %= dpowers[c];
  3078  06EE  0844               	movf	sprintf@c^(0+128),w
  3079  06EF  00A5               	movwf	??_sprintf^(0+128)
  3080  06F0  3001               	movlw	1
  3081  06F1                     u5835:	
  3082  06F1  1003               	clrc
  3083  06F2  0DA5               	rlf	??_sprintf^(0+128),f
  3084  06F3  3EFF               	addlw	-1
  3085  06F4  1D03               	skipz
  3086  06F5  2EF1               	goto	u5835
  3087  06F6  1003               	clrc
  3088  06F7  0D25               	rlf	??_sprintf^(0+128),w
  3089  06F8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3090  06F9  0084               	movwf	4
  3091  06FA  120A  118A  200D  120A  118A  	fcall	stringdir
  3092  06FF  00F0               	movwf	___llmod@divisor
  3093  0700  120A  118A  200D  120A  118A  	fcall	stringdir
  3094  0705  00F1               	movwf	___llmod@divisor+1
  3095  0706  120A  118A  200D  120A  118A  	fcall	stringdir
  3096  070B  00F2               	movwf	___llmod@divisor+2
  3097  070C  120A  118A  200D  120A  118A  	fcall	stringdir
  3098  0711  00F3               	movwf	___llmod@divisor+3
  3099  0712  0832               	movf	(sprintf@val+3)^(0+128),w
  3100  0713  00F7               	movwf	___llmod@dividend+3
  3101  0714  0831               	movf	(sprintf@val+2)^(0+128),w
  3102  0715  00F6               	movwf	___llmod@dividend+2
  3103  0716  0830               	movf	(sprintf@val+1)^(0+128),w
  3104  0717  00F5               	movwf	___llmod@dividend+1
  3105  0718  082F               	movf	sprintf@val^(0+128),w
  3106  0719  00F4               	movwf	___llmod@dividend
  3107  071A  160A  158A  2633  120A  118A  	fcall	___llmod
  3108  071F  0873               	movf	?___llmod+3,w
  3109  0720  1683               	bsf	3,5	;RP0=1, select bank1
  3110  0721  1303               	bcf	3,6	;RP1=0, select bank1
  3111  0722  00B2               	movwf	(sprintf@val+3)^(0+128)
  3112  0723  0872               	movf	?___llmod+2,w
  3113  0724  00B1               	movwf	(sprintf@val+2)^(0+128)
  3114  0725  0871               	movf	?___llmod+1,w
  3115  0726  00B0               	movwf	(sprintf@val+1)^(0+128)
  3116  0727  0870               	movf	?___llmod,w
  3117  0728  2E82               	goto	L5
  3118  0729                     l3451:	
  3119                           
  3120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1255:     (
      +                          (*sp++ = ('0')));
  3121  0729  3030               	movlw	48
  3122  072A  00A5               	movwf	??_sprintf^(0+128)
  3123  072B  0841               	movf	sprintf@sp^(0+128),w
  3124  072C  0084               	movwf	4
  3125  072D  0825               	movf	??_sprintf^(0+128),w
  3126  072E  1383               	bcf	3,7	;select IRP bank0
  3127  072F  0080               	movwf	0
  3128  0730  3001               	movlw	1
  3129  0731  00A5               	movwf	??_sprintf^(0+128)
  3130  0732  0825               	movf	??_sprintf^(0+128),w
  3131  0733  07C1               	addwf	sprintf@sp^(0+128),f
  3132                           
  3133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1256:     p
      +                          rec--;
  3134  0734  30FF               	movlw	255
  3135  0735  07C2               	addwf	sprintf@prec^(0+128),f
  3136  0736  1803               	skipnc
  3137  0737  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3138  0738  30FF               	movlw	255
  3139  0739  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3140  073A                     l3457:	
  3141                           
  3142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(prec) {
  3143  073A  0842               	movf	sprintf@prec^(0+128),w
  3144  073B  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3145  073C  1903               	btfsc	3,2
  3146  073D  28F8               	goto	l3505
  3147  073E  2F29               	goto	l3451
  3148  073F                     l3459:	
  3149                           
  3150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1309:   if(
      +                          prec == 0 && val == 0)
  3151  073F  0842               	movf	sprintf@prec^(0+128),w
  3152  0740  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3153  0741  1D03               	btfss	3,2
  3154  0742  2F4F               	goto	l281
  3155  0743  0832               	movf	(sprintf@val+3)^(0+128),w
  3156  0744  0431               	iorwf	(sprintf@val+2)^(0+128),w
  3157  0745  0430               	iorwf	(sprintf@val+1)^(0+128),w
  3158  0746  042F               	iorwf	sprintf@val^(0+128),w
  3159  0747  1D03               	skipz
  3160  0748  2F4F               	goto	l281
  3161                           
  3162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1310:    pr
      +                          ec++;
  3163  0749  3001               	movlw	1
  3164  074A  07C2               	addwf	sprintf@prec^(0+128),f
  3165  074B  1803               	skipnc
  3166  074C  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3167  074D  3000               	movlw	0
  3168  074E  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3169  074F                     l281:	
  3170                           
  3171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1358:   if(
      +                          c < prec)
  3172  074F  0843               	movf	(sprintf@prec+1)^(0+128),w
  3173  0750  3A80               	xorlw	128
  3174  0751  3C80               	sublw	128
  3175  0752  1D03               	skipz
  3176  0753  2F56               	goto	u5885
  3177  0754  0842               	movf	sprintf@prec^(0+128),w
  3178  0755  0244               	subwf	sprintf@c^(0+128),w
  3179  0756                     u5885:	
  3180  0756  1803               	skipnc
  3181  0757  2F5F               	goto	l3467
  3182                           
  3183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1359:    c 
      +                          = prec;
  3184  0758  1683               	bsf	3,5	;RP0=1, select bank1
  3185  0759  1303               	bcf	3,6	;RP1=0, select bank1
  3186  075A  0842               	movf	sprintf@prec^(0+128),w
  3187  075B  00A5               	movwf	??_sprintf^(0+128)
  3188  075C  0825               	movf	??_sprintf^(0+128),w
  3189  075D  00C4               	movwf	sprintf@c^(0+128)
  3190  075E  2F75               	goto	l3471
  3191  075F                     l3467:	
  3192  075F  1683               	bsf	3,5	;RP0=1, select bank1
  3193  0760  1303               	bcf	3,6	;RP1=0, select bank1
  3194  0761  0843               	movf	(sprintf@prec+1)^(0+128),w
  3195  0762  3A80               	xorlw	128
  3196  0763  00A5               	movwf	??_sprintf^(0+128)
  3197  0764  3080               	movlw	128
  3198  0765  0225               	subwf	??_sprintf^(0+128),w
  3199  0766  1D03               	skipz
  3200  0767  2F6A               	goto	u5895
  3201  0768  0844               	movf	sprintf@c^(0+128),w
  3202  0769  0242               	subwf	sprintf@prec^(0+128),w
  3203  076A                     u5895:	
  3204  076A  1803               	skipnc
  3205  076B  2F75               	goto	l3471
  3206                           
  3207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1361:    pr
      +                          ec = c;
  3208  076C  1683               	bsf	3,5	;RP0=1, select bank1
  3209  076D  1303               	bcf	3,6	;RP1=0, select bank1
  3210  076E  0844               	movf	sprintf@c^(0+128),w
  3211  076F  00A5               	movwf	??_sprintf^(0+128)
  3212  0770  01A6               	clrf	(??_sprintf^(0+128)+1)
  3213  0771  0825               	movf	??_sprintf^(0+128),w
  3214  0772  00C2               	movwf	sprintf@prec^(0+128)
  3215  0773  0826               	movf	(??_sprintf+1)^(0+128),w
  3216  0774  00C3               	movwf	(sprintf@prec+1)^(0+128)
  3217  0775                     l3471:	
  3218                           
  3219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1364:   if(
      +                          width && flag & 0x03)
  3220  0775  1683               	bsf	3,5	;RP0=1, select bank1
  3221  0776  1303               	bcf	3,6	;RP1=0, select bank1
  3222  0777  0835               	movf	sprintf@width^(0+128),w
  3223  0778  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3224  0779  1903               	btfsc	3,2
  3225  077A  2F8B               	goto	l3477
  3226  077B  3003               	movlw	3
  3227  077C  0533               	andwf	sprintf@flag^(0+128),w
  3228  077D  00A5               	movwf	??_sprintf^(0+128)
  3229  077E  3000               	movlw	0
  3230  077F  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3231  0780  00A6               	movwf	(??_sprintf+1)^(0+128)
  3232  0781  0825               	movf	??_sprintf^(0+128),w
  3233  0782  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3234  0783  1903               	btfsc	3,2
  3235  0784  2F8B               	goto	l3477
  3236                           
  3237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1365:    wi
      +                          dth--;
  3238  0785  30FF               	movlw	255
  3239  0786  07B5               	addwf	sprintf@width^(0+128),f
  3240  0787  1803               	skipnc
  3241  0788  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3242  0789  30FF               	movlw	255
  3243  078A  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3244  078B                     l3477:	
  3245                           
  3246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1367:   if(
      +                          flag & 0x4000) {
  3247  078B  1F34               	btfss	(sprintf@flag+1)^(0+128),6
  3248  078C  2FA6               	goto	l3485
  3249                           
  3250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1368:    if
      +                          (width > prec)
  3251  078D  0843               	movf	(sprintf@prec+1)^(0+128),w
  3252  078E  3A80               	xorlw	128
  3253  078F  00A5               	movwf	??_sprintf^(0+128)
  3254  0790  0836               	movf	(sprintf@width+1)^(0+128),w
  3255  0791  3A80               	xorlw	128
  3256  0792  0225               	subwf	??_sprintf^(0+128),w
  3257  0793  1D03               	skipz
  3258  0794  2F97               	goto	u5935
  3259  0795  0835               	movf	sprintf@width^(0+128),w
  3260  0796  0242               	subwf	sprintf@prec^(0+128),w
  3261  0797                     u5935:	
  3262  0797  1803               	skipnc
  3263  0798  2FA2               	goto	l3483
  3264                           
  3265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1369:     w
      +                          idth -= prec;
  3266  0799  1683               	bsf	3,5	;RP0=1, select bank1
  3267  079A  1303               	bcf	3,6	;RP1=0, select bank1
  3268  079B  0842               	movf	sprintf@prec^(0+128),w
  3269  079C  02B5               	subwf	sprintf@width^(0+128),f
  3270  079D  0843               	movf	(sprintf@prec+1)^(0+128),w
  3271  079E  1C03               	skipc
  3272  079F  03B6               	decf	(sprintf@width+1)^(0+128),f
  3273  07A0  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3274  07A1  2FA6               	goto	l3485
  3275  07A2                     l3483:	
  3276                           
  3277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1371:     w
      +                          idth = 0;
  3278  07A2  1683               	bsf	3,5	;RP0=1, select bank1
  3279  07A3  1303               	bcf	3,6	;RP1=0, select bank1
  3280  07A4  01B5               	clrf	sprintf@width^(0+128)
  3281  07A5  01B6               	clrf	(sprintf@width+1)^(0+128)
  3282  07A6                     l3485:	
  3283                           
  3284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1400:   if(
      +                          width > c)
  3285  07A6  0836               	movf	(sprintf@width+1)^(0+128),w
  3286  07A7  3A80               	xorlw	128
  3287  07A8  3C80               	sublw	128
  3288  07A9  1D03               	skipz
  3289  07AA  2FAD               	goto	u5945
  3290  07AB  0835               	movf	sprintf@width^(0+128),w
  3291  07AC  0244               	subwf	sprintf@c^(0+128),w
  3292  07AD                     u5945:	
  3293  07AD  1803               	skipnc
  3294  07AE  2FBB               	goto	l3489
  3295                           
  3296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1401:    wi
      +                          dth -= c;
  3297  07AF  1683               	bsf	3,5	;RP0=1, select bank1
  3298  07B0  1303               	bcf	3,6	;RP1=0, select bank1
  3299  07B1  0844               	movf	sprintf@c^(0+128),w
  3300  07B2  00A5               	movwf	??_sprintf^(0+128)
  3301  07B3  01A6               	clrf	(??_sprintf^(0+128)+1)
  3302  07B4  0825               	movf	??_sprintf^(0+128),w
  3303  07B5  02B5               	subwf	sprintf@width^(0+128),f
  3304  07B6  0826               	movf	(??_sprintf+1)^(0+128),w
  3305  07B7  1C03               	skipc
  3306  07B8  03B6               	decf	(sprintf@width+1)^(0+128),f
  3307  07B9  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3308  07BA  2FBF               	goto	l3491
  3309  07BB                     l3489:	
  3310                           
  3311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1403:    wi
      +                          dth = 0;
  3312  07BB  1683               	bsf	3,5	;RP0=1, select bank1
  3313  07BC  1303               	bcf	3,6	;RP1=0, select bank1
  3314  07BD  01B5               	clrf	sprintf@width^(0+128)
  3315  07BE  01B6               	clrf	(sprintf@width+1)^(0+128)
  3316  07BF                     l3491:	
  3317                           
  3318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1443:    if(w
      +                          idth
  3319  07BF  0835               	movf	sprintf@width^(0+128),w
  3320  07C0  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3321  07C1  1903               	btfsc	3,2
  3322  07C2  2FD8               	goto	l3499
  3323  07C3                     l3493:	
  3324                           
  3325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1449:      
      +                          ((*sp++ = (' ')));
  3326  07C3  3020               	movlw	32
  3327  07C4  00A5               	movwf	??_sprintf^(0+128)
  3328  07C5  0841               	movf	sprintf@sp^(0+128),w
  3329  07C6  0084               	movwf	4
  3330  07C7  0825               	movf	??_sprintf^(0+128),w
  3331  07C8  1383               	bcf	3,7	;select IRP bank0
  3332  07C9  0080               	movwf	0
  3333  07CA  3001               	movlw	1
  3334  07CB  00A5               	movwf	??_sprintf^(0+128)
  3335  07CC  0825               	movf	??_sprintf^(0+128),w
  3336  07CD  07C1               	addwf	sprintf@sp^(0+128),f
  3337  07CE  30FF               	movlw	255
  3338  07CF  07B5               	addwf	sprintf@width^(0+128),f
  3339  07D0  1803               	skipnc
  3340  07D1  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3341  07D2  30FF               	movlw	255
  3342  07D3  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3343  07D4  0835               	movf	sprintf@width^(0+128),w
  3344  07D5  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3345  07D6  1D03               	btfss	3,2
  3346  07D7  2FC3               	goto	l3493
  3347  07D8                     l3499:	
  3348                           
  3349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if
      +                          (flag & 0x03)
  3350  07D8  3003               	movlw	3
  3351  07D9  0533               	andwf	sprintf@flag^(0+128),w
  3352  07DA  00A5               	movwf	??_sprintf^(0+128)
  3353  07DB  3000               	movlw	0
  3354  07DC  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3355  07DD  00A6               	movwf	(??_sprintf+1)^(0+128)
  3356  07DE  0825               	movf	??_sprintf^(0+128),w
  3357  07DF  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3358  07E0  1903               	btfsc	3,2
  3359  07E1  28F8               	goto	l3505
  3360                           
  3361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  3362  07E2  302D               	movlw	45
  3363  07E3                     L6:	
  3364  07E3  00A5               	movwf	??_sprintf^(0+128)
  3365  07E4  0841               	movf	sprintf@sp^(0+128),w
  3366  07E5  0084               	movwf	4
  3367  07E6  0825               	movf	??_sprintf^(0+128),w
  3368  07E7  1383               	bcf	3,7	;select IRP bank0
  3369  07E8  0080               	movwf	0
  3370  07E9  3001               	movlw	1
  3371  07EA  00A5               	movwf	??_sprintf^(0+128)
  3372  07EB  0825               	movf	??_sprintf^(0+128),w
  3373  07EC  07C1               	addwf	sprintf@sp^(0+128),f
  3374  07ED  28F8               	goto	l3505
  3375  07EE                     l3507:	
  3376                           
  3377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  3378  07EE  0841               	movf	sprintf@sp^(0+128),w
  3379  07EF  0084               	movwf	4
  3380  07F0  1383               	bcf	3,7	;select IRP bank0
  3381  07F1  0180               	clrf	0
  3382  07F2  0008               	return
  3383  07F3                     __end_of_sprintf:	
  3384                           
  3385                           	psect	text2
  3386  0CB7                     __ptext2:	
  3387 ;; *************** function _scale *****************
  3388 ;; Defined at:
  3389 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  scl             1    wreg     char 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;  scl             1   48[BANK0 ] char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  4   30[BANK0 ] char 
  3396 ;; Registers used:
  3397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3403 ;;      Params:         0       4       0       0       0
  3404 ;;      Locals:         0       5       0       0       0
  3405 ;;      Temps:          0      10       0       0       0
  3406 ;;      Totals:         0      19       0       0       0
  3407 ;;Total ram usage:       19 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    2
  3410 ;; This function calls:
  3411 ;;		___awdiv
  3412 ;;		___awmod
  3413 ;;		___flmul
  3414 ;; This function is called by:
  3415 ;;		_sprintf
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           
  3420                           ;psect for function _scale
  3421  0CB7                     _scale:	
  3422                           
  3423                           ;incstack = 0
  3424                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3425                           ;scale@scl stored from wreg
  3426  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  3427  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  3428  0CB9  00D0               	movwf	scale@scl
  3429                           
  3430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  3431  0CBA  1FD0               	btfss	scale@scl,7
  3432  0CBB  2E5F               	goto	l2869
  3433                           
  3434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  3435  0CBC  09D0               	comf	scale@scl,f
  3436  0CBD  0AD0               	incf	scale@scl,f
  3437                           
  3438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  3439  0CBE  0850               	movf	scale@scl,w
  3440  0CBF  3A80               	xorlw	128
  3441  0CC0  3E12               	addlw	-238
  3442  0CC1  1C03               	skipc
  3443  0CC2  2DA9               	goto	l2859
  3444                           
  3445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3446  0CC3  300A               	movlw	10
  3447  0CC4  00F7               	movwf	___awdiv@divisor
  3448  0CC5  3000               	movlw	0
  3449  0CC6  00F8               	movwf	___awdiv@divisor+1
  3450  0CC7  0850               	movf	scale@scl,w
  3451  0CC8  00F2               	movwf	___awmod@dividend
  3452  0CC9  01F3               	clrf	___awmod@dividend+1
  3453  0CCA  1BF2               	btfsc	___awmod@dividend,7
  3454  0CCB  03F3               	decf	___awmod@dividend+1,f
  3455  0CCC  3064               	movlw	100
  3456  0CCD  00F0               	movwf	___awmod@divisor
  3457  0CCE  3000               	movlw	0
  3458  0CCF  00F1               	movwf	___awmod@divisor+1
  3459  0CD0  160A  158A  25E8  120A  158A  	fcall	___awmod
  3460  0CD5  0871               	movf	?___awmod+1,w
  3461  0CD6  00FA               	movwf	___awdiv@dividend+1
  3462  0CD7  0870               	movf	?___awmod,w
  3463  0CD8  00F9               	movwf	___awdiv@dividend
  3464  0CD9  160A  158A  26DA  120A  158A  	fcall	___awdiv
  3465  0CDE  0877               	movf	?___awdiv,w
  3466  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  3467  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  3468  0CE1  00C2               	movwf	??_scale
  3469  0CE2  3001               	movlw	1
  3470  0CE3                     u4485:	
  3471  0CE3  1003               	clrc
  3472  0CE4  0DC2               	rlf	??_scale,f
  3473  0CE5  3EFF               	addlw	-1
  3474  0CE6  1D03               	skipz
  3475  0CE7  2CE3               	goto	u4485
  3476  0CE8  1003               	clrc
  3477  0CE9  0D42               	rlf	??_scale,w
  3478  0CEA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3479  0CEB  0084               	movwf	4
  3480  0CEC  120A  118A  200D  120A  158A  	fcall	stringdir
  3481  0CF1  00C3               	movwf	??_scale+1
  3482  0CF2  120A  118A  200D  120A  158A  	fcall	stringdir
  3483  0CF7  00C4               	movwf	??_scale+2
  3484  0CF8  120A  118A  200D  120A  158A  	fcall	stringdir
  3485  0CFD  00C5               	movwf	??_scale+3
  3486  0CFE  120A  118A  200D  120A  158A  	fcall	stringdir
  3487  0D03  00C6               	movwf	??_scale+4
  3488  0D04  0846               	movf	??_scale+4,w
  3489  0D05  00A7               	movwf	___flmul@b+3
  3490  0D06  0845               	movf	??_scale+3,w
  3491  0D07  00A6               	movwf	___flmul@b+2
  3492  0D08  0844               	movf	??_scale+2,w
  3493  0D09  00A5               	movwf	___flmul@b+1
  3494  0D0A  0843               	movf	??_scale+1,w
  3495  0D0B  00A4               	movwf	___flmul@b
  3496  0D0C  3064               	movlw	100
  3497  0D0D  00F7               	movwf	___awdiv@divisor
  3498  0D0E  3000               	movlw	0
  3499  0D0F  00F8               	movwf	___awdiv@divisor+1
  3500  0D10  0850               	movf	scale@scl,w
  3501  0D11  00F9               	movwf	___awdiv@dividend
  3502  0D12  01FA               	clrf	___awdiv@dividend+1
  3503  0D13  1BF9               	btfsc	___awdiv@dividend,7
  3504  0D14  03FA               	decf	___awdiv@dividend+1,f
  3505  0D15  160A  158A  26DA  120A  158A  	fcall	___awdiv
  3506  0D1A  0877               	movf	?___awdiv,w
  3507  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  3508  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  3509  0D1D  00C7               	movwf	??_scale+5
  3510  0D1E  3001               	movlw	1
  3511  0D1F                     u4495:	
  3512  0D1F  1003               	clrc
  3513  0D20  0DC7               	rlf	??_scale+5,f
  3514  0D21  3EFF               	addlw	-1
  3515  0D22  1D03               	skipz
  3516  0D23  2D1F               	goto	u4495
  3517  0D24  1003               	clrc
  3518  0D25  0D47               	rlf	??_scale+5,w
  3519  0D26  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3520  0D27  0084               	movwf	4
  3521  0D28  120A  118A  200D  120A  158A  	fcall	stringdir
  3522  0D2D  00C8               	movwf	??_scale+6
  3523  0D2E  120A  118A  200D  120A  158A  	fcall	stringdir
  3524  0D33  00C9               	movwf	??_scale+7
  3525  0D34  120A  118A  200D  120A  158A  	fcall	stringdir
  3526  0D39  00CA               	movwf	??_scale+8
  3527  0D3A  120A  118A  200D  120A  158A  	fcall	stringdir
  3528  0D3F  00CB               	movwf	??_scale+9
  3529  0D40  084B               	movf	??_scale+9,w
  3530  0D41  00AB               	movwf	___flmul@a+3
  3531  0D42  084A               	movf	??_scale+8,w
  3532  0D43  00AA               	movwf	___flmul@a+2
  3533  0D44  0849               	movf	??_scale+7,w
  3534  0D45  00A9               	movwf	___flmul@a+1
  3535  0D46  0848               	movf	??_scale+6,w
  3536  0D47  00A8               	movwf	___flmul@a
  3537  0D48  120A  158A  21A2  120A  158A  	fcall	___flmul
  3538  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  3539  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  3540  0D4F  0827               	movf	?___flmul+3,w
  3541  0D50  00CF               	movwf	_scale$938+3
  3542  0D51  0826               	movf	?___flmul+2,w
  3543  0D52  00CE               	movwf	_scale$938+2
  3544  0D53  0825               	movf	?___flmul+1,w
  3545  0D54  00CD               	movwf	_scale$938+1
  3546  0D55  0824               	movf	?___flmul,w
  3547  0D56  00CC               	movwf	_scale$938
  3548                           
  3549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3550  0D57  300A               	movlw	10
  3551  0D58  00F0               	movwf	___awmod@divisor
  3552  0D59  3000               	movlw	0
  3553  0D5A  00F1               	movwf	___awmod@divisor+1
  3554  0D5B  0850               	movf	scale@scl,w
  3555  0D5C  00F2               	movwf	___awmod@dividend
  3556  0D5D  01F3               	clrf	___awmod@dividend+1
  3557  0D5E  1BF2               	btfsc	___awmod@dividend,7
  3558  0D5F  03F3               	decf	___awmod@dividend+1,f
  3559  0D60  160A  158A  25E8  120A  158A  	fcall	___awmod
  3560  0D65  0870               	movf	?___awmod,w
  3561  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  3562  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  3563  0D68  00C2               	movwf	??_scale
  3564  0D69  3001               	movlw	1
  3565  0D6A                     u4505:	
  3566  0D6A  1003               	clrc
  3567  0D6B  0DC2               	rlf	??_scale,f
  3568  0D6C  3EFF               	addlw	-1
  3569  0D6D  1D03               	skipz
  3570  0D6E  2D6A               	goto	u4505
  3571  0D6F  1003               	clrc
  3572  0D70  0D42               	rlf	??_scale,w
  3573  0D71  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3574  0D72  0084               	movwf	4
  3575  0D73  120A  118A  200D  120A  158A  	fcall	stringdir
  3576  0D78  00C3               	movwf	??_scale+1
  3577  0D79  120A  118A  200D  120A  158A  	fcall	stringdir
  3578  0D7E  00C4               	movwf	??_scale+2
  3579  0D7F  120A  118A  200D  120A  158A  	fcall	stringdir
  3580  0D84  00C5               	movwf	??_scale+3
  3581  0D85  120A  118A  200D  120A  158A  	fcall	stringdir
  3582  0D8A  00C6               	movwf	??_scale+4
  3583  0D8B  0846               	movf	??_scale+4,w
  3584  0D8C  00A7               	movwf	___flmul@b+3
  3585  0D8D  0845               	movf	??_scale+3,w
  3586  0D8E  00A6               	movwf	___flmul@b+2
  3587  0D8F  0844               	movf	??_scale+2,w
  3588  0D90  00A5               	movwf	___flmul@b+1
  3589  0D91  0843               	movf	??_scale+1,w
  3590  0D92  00A4               	movwf	___flmul@b
  3591  0D93  084F               	movf	_scale$938+3,w
  3592  0D94  00AB               	movwf	___flmul@a+3
  3593  0D95  084E               	movf	_scale$938+2,w
  3594  0D96  00AA               	movwf	___flmul@a+2
  3595  0D97  084D               	movf	_scale$938+1,w
  3596  0D98  00A9               	movwf	___flmul@a+1
  3597  0D99  084C               	movf	_scale$938,w
  3598  0D9A  00A8               	movwf	___flmul@a
  3599  0D9B  120A  158A  21A2   	fcall	___flmul
  3600  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  3601  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  3602  0DA0  0827               	movf	?___flmul+3,w
  3603  0DA1  00C1               	movwf	?_scale+3
  3604  0DA2  0826               	movf	?___flmul+2,w
  3605  0DA3  00C0               	movwf	?_scale+2
  3606  0DA4  0825               	movf	?___flmul+1,w
  3607  0DA5  00BF               	movwf	?_scale+1
  3608  0DA6  0824               	movf	?___flmul,w
  3609  0DA7  00BE               	movwf	?_scale
  3610  0DA8  0008               	return
  3611  0DA9                     l2859:	
  3612  0DA9  0850               	movf	scale@scl,w
  3613  0DAA  3A80               	xorlw	128
  3614  0DAB  3E75               	addlw	-139
  3615  0DAC  1C03               	skipc
  3616  0DAD  2E34               	goto	l2865
  3617                           
  3618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3619  0DAE  300A               	movlw	10
  3620  0DAF  00F0               	movwf	___awmod@divisor
  3621  0DB0  3000               	movlw	0
  3622  0DB1  00F1               	movwf	___awmod@divisor+1
  3623  0DB2  0850               	movf	scale@scl,w
  3624  0DB3  00F2               	movwf	___awmod@dividend
  3625  0DB4  01F3               	clrf	___awmod@dividend+1
  3626  0DB5  1BF2               	btfsc	___awmod@dividend,7
  3627  0DB6  03F3               	decf	___awmod@dividend+1,f
  3628  0DB7  160A  158A  25E8  120A  158A  	fcall	___awmod
  3629  0DBC  0870               	movf	?___awmod,w
  3630  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3631  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  3632  0DBF  00C2               	movwf	??_scale
  3633  0DC0  3001               	movlw	1
  3634  0DC1                     u4525:	
  3635  0DC1  1003               	clrc
  3636  0DC2  0DC2               	rlf	??_scale,f
  3637  0DC3  3EFF               	addlw	-1
  3638  0DC4  1D03               	skipz
  3639  0DC5  2DC1               	goto	u4525
  3640  0DC6  1003               	clrc
  3641  0DC7  0D42               	rlf	??_scale,w
  3642  0DC8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3643  0DC9  0084               	movwf	4
  3644  0DCA  120A  118A  200D  120A  158A  	fcall	stringdir
  3645  0DCF  00C3               	movwf	??_scale+1
  3646  0DD0  120A  118A  200D  120A  158A  	fcall	stringdir
  3647  0DD5  00C4               	movwf	??_scale+2
  3648  0DD6  120A  118A  200D  120A  158A  	fcall	stringdir
  3649  0DDB  00C5               	movwf	??_scale+3
  3650  0DDC  120A  118A  200D  120A  158A  	fcall	stringdir
  3651  0DE1  00C6               	movwf	??_scale+4
  3652  0DE2  0846               	movf	??_scale+4,w
  3653  0DE3  00A7               	movwf	___flmul@b+3
  3654  0DE4  0845               	movf	??_scale+3,w
  3655  0DE5  00A6               	movwf	___flmul@b+2
  3656  0DE6  0844               	movf	??_scale+2,w
  3657  0DE7  00A5               	movwf	___flmul@b+1
  3658  0DE8  0843               	movf	??_scale+1,w
  3659  0DE9  00A4               	movwf	___flmul@b
  3660  0DEA  300A               	movlw	10
  3661  0DEB  00F7               	movwf	___awdiv@divisor
  3662  0DEC  3000               	movlw	0
  3663  0DED  00F8               	movwf	___awdiv@divisor+1
  3664  0DEE  0850               	movf	scale@scl,w
  3665  0DEF  00F9               	movwf	___awdiv@dividend
  3666  0DF0  01FA               	clrf	___awdiv@dividend+1
  3667  0DF1  1BF9               	btfsc	___awdiv@dividend,7
  3668  0DF2  03FA               	decf	___awdiv@dividend+1,f
  3669  0DF3  160A  158A  26DA  120A  158A  	fcall	___awdiv
  3670  0DF8  0877               	movf	?___awdiv,w
  3671  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  3672  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  3673  0DFB  00C7               	movwf	??_scale+5
  3674  0DFC  3001               	movlw	1
  3675  0DFD                     u4535:	
  3676  0DFD  1003               	clrc
  3677  0DFE  0DC7               	rlf	??_scale+5,f
  3678  0DFF  3EFF               	addlw	-1
  3679  0E00  1D03               	skipz
  3680  0E01  2DFD               	goto	u4535
  3681  0E02  1003               	clrc
  3682  0E03  0D47               	rlf	??_scale+5,w
  3683  0E04  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3684  0E05  0084               	movwf	4
  3685  0E06  120A  118A  200D  120A  158A  	fcall	stringdir
  3686  0E0B  00C8               	movwf	??_scale+6
  3687  0E0C  120A  118A  200D  120A  158A  	fcall	stringdir
  3688  0E11  00C9               	movwf	??_scale+7
  3689  0E12  120A  118A  200D  120A  158A  	fcall	stringdir
  3690  0E17  00CA               	movwf	??_scale+8
  3691  0E18  120A  118A  200D  120A  158A  	fcall	stringdir
  3692  0E1D  00CB               	movwf	??_scale+9
  3693  0E1E  084B               	movf	??_scale+9,w
  3694  0E1F  00AB               	movwf	___flmul@a+3
  3695  0E20  084A               	movf	??_scale+8,w
  3696  0E21  00AA               	movwf	___flmul@a+2
  3697  0E22  0849               	movf	??_scale+7,w
  3698  0E23  00A9               	movwf	___flmul@a+1
  3699  0E24  0848               	movf	??_scale+6,w
  3700  0E25  00A8               	movwf	___flmul@a
  3701  0E26  120A  158A  21A2   	fcall	___flmul
  3702  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3703  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  3704  0E2B  0827               	movf	?___flmul+3,w
  3705  0E2C  00C1               	movwf	?_scale+3
  3706  0E2D  0826               	movf	?___flmul+2,w
  3707  0E2E  00C0               	movwf	?_scale+2
  3708  0E2F  0825               	movf	?___flmul+1,w
  3709  0E30  00BF               	movwf	?_scale+1
  3710  0E31  0824               	movf	?___flmul,w
  3711  0E32  00BE               	movwf	?_scale
  3712  0E33  0008               	return
  3713  0E34                     l2865:	
  3714                           
  3715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  3716  0E34  0850               	movf	scale@scl,w
  3717  0E35  00C2               	movwf	??_scale
  3718  0E36  3001               	movlw	1
  3719  0E37                     u4545:	
  3720  0E37  1003               	clrc
  3721  0E38  0DC2               	rlf	??_scale,f
  3722  0E39  3EFF               	addlw	-1
  3723  0E3A  1D03               	skipz
  3724  0E3B  2E37               	goto	u4545
  3725  0E3C  1003               	clrc
  3726  0E3D  0D42               	rlf	??_scale,w
  3727  0E3E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3728  0E3F  0084               	movwf	4
  3729  0E40  120A  118A  200D  120A  158A  	fcall	stringdir
  3730  0E45  00C3               	movwf	??_scale+1
  3731  0E46  120A  118A  200D  120A  158A  	fcall	stringdir
  3732  0E4B  00C4               	movwf	??_scale+2
  3733  0E4C  120A  118A  200D  120A  158A  	fcall	stringdir
  3734  0E51  00C5               	movwf	??_scale+3
  3735  0E52  120A  118A  200D   	fcall	stringdir
  3736  0E55  00C6               	movwf	??_scale+4
  3737  0E56  0846               	movf	??_scale+4,w
  3738  0E57  00C1               	movwf	?_scale+3
  3739  0E58  0845               	movf	??_scale+3,w
  3740  0E59  00C0               	movwf	?_scale+2
  3741  0E5A  0844               	movf	??_scale+2,w
  3742  0E5B  00BF               	movwf	?_scale+1
  3743  0E5C  0843               	movf	??_scale+1,w
  3744  0E5D  00BE               	movwf	?_scale
  3745  0E5E  0008               	return
  3746  0E5F                     l2869:	
  3747                           
  3748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  3749  0E5F  0850               	movf	scale@scl,w
  3750  0E60  3A80               	xorlw	128
  3751  0E61  3E12               	addlw	-238
  3752  0E62  1C03               	skipc
  3753  0E63  2F4A               	goto	l2877
  3754                           
  3755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3756  0E64  300A               	movlw	10
  3757  0E65  00F7               	movwf	___awdiv@divisor
  3758  0E66  3000               	movlw	0
  3759  0E67  00F8               	movwf	___awdiv@divisor+1
  3760  0E68  0850               	movf	scale@scl,w
  3761  0E69  00F2               	movwf	___awmod@dividend
  3762  0E6A  01F3               	clrf	___awmod@dividend+1
  3763  0E6B  1BF2               	btfsc	___awmod@dividend,7
  3764  0E6C  03F3               	decf	___awmod@dividend+1,f
  3765  0E6D  3064               	movlw	100
  3766  0E6E  00F0               	movwf	___awmod@divisor
  3767  0E6F  3000               	movlw	0
  3768  0E70  00F1               	movwf	___awmod@divisor+1
  3769  0E71  160A  158A  25E8  120A  158A  	fcall	___awmod
  3770  0E76  0871               	movf	?___awmod+1,w
  3771  0E77  00FA               	movwf	___awdiv@dividend+1
  3772  0E78  0870               	movf	?___awmod,w
  3773  0E79  00F9               	movwf	___awdiv@dividend
  3774  0E7A  160A  158A  26DA  120A  158A  	fcall	___awdiv
  3775  0E7F  0877               	movf	?___awdiv,w
  3776  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  3777  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  3778  0E82  00C2               	movwf	??_scale
  3779  0E83  3001               	movlw	1
  3780  0E84                     u4565:	
  3781  0E84  1003               	clrc
  3782  0E85  0DC2               	rlf	??_scale,f
  3783  0E86  3EFF               	addlw	-1
  3784  0E87  1D03               	skipz
  3785  0E88  2E84               	goto	u4565
  3786  0E89  1003               	clrc
  3787  0E8A  0D42               	rlf	??_scale,w
  3788  0E8B  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3789  0E8C  0084               	movwf	4
  3790  0E8D  120A  118A  200D  120A  158A  	fcall	stringdir
  3791  0E92  00C3               	movwf	??_scale+1
  3792  0E93  120A  118A  200D  120A  158A  	fcall	stringdir
  3793  0E98  00C4               	movwf	??_scale+2
  3794  0E99  120A  118A  200D  120A  158A  	fcall	stringdir
  3795  0E9E  00C5               	movwf	??_scale+3
  3796  0E9F  120A  118A  200D  120A  158A  	fcall	stringdir
  3797  0EA4  00C6               	movwf	??_scale+4
  3798  0EA5  0846               	movf	??_scale+4,w
  3799  0EA6  00A7               	movwf	___flmul@b+3
  3800  0EA7  0845               	movf	??_scale+3,w
  3801  0EA8  00A6               	movwf	___flmul@b+2
  3802  0EA9  0844               	movf	??_scale+2,w
  3803  0EAA  00A5               	movwf	___flmul@b+1
  3804  0EAB  0843               	movf	??_scale+1,w
  3805  0EAC  00A4               	movwf	___flmul@b
  3806  0EAD  3064               	movlw	100
  3807  0EAE  00F7               	movwf	___awdiv@divisor
  3808  0EAF  3000               	movlw	0
  3809  0EB0  00F8               	movwf	___awdiv@divisor+1
  3810  0EB1  0850               	movf	scale@scl,w
  3811  0EB2  00F9               	movwf	___awdiv@dividend
  3812  0EB3  01FA               	clrf	___awdiv@dividend+1
  3813  0EB4  1BF9               	btfsc	___awdiv@dividend,7
  3814  0EB5  03FA               	decf	___awdiv@dividend+1,f
  3815  0EB6  160A  158A  26DA  120A  158A  	fcall	___awdiv
  3816  0EBB  0877               	movf	?___awdiv,w
  3817  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  3818  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  3819  0EBE  00C7               	movwf	??_scale+5
  3820  0EBF  3001               	movlw	1
  3821  0EC0                     u4575:	
  3822  0EC0  1003               	clrc
  3823  0EC1  0DC7               	rlf	??_scale+5,f
  3824  0EC2  3EFF               	addlw	-1
  3825  0EC3  1D03               	skipz
  3826  0EC4  2EC0               	goto	u4575
  3827  0EC5  1003               	clrc
  3828  0EC6  0D47               	rlf	??_scale+5,w
  3829  0EC7  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3830  0EC8  0084               	movwf	4
  3831  0EC9  120A  118A  200D  120A  158A  	fcall	stringdir
  3832  0ECE  00C8               	movwf	??_scale+6
  3833  0ECF  120A  118A  200D  120A  158A  	fcall	stringdir
  3834  0ED4  00C9               	movwf	??_scale+7
  3835  0ED5  120A  118A  200D  120A  158A  	fcall	stringdir
  3836  0EDA  00CA               	movwf	??_scale+8
  3837  0EDB  120A  118A  200D  120A  158A  	fcall	stringdir
  3838  0EE0  00CB               	movwf	??_scale+9
  3839  0EE1  084B               	movf	??_scale+9,w
  3840  0EE2  00AB               	movwf	___flmul@a+3
  3841  0EE3  084A               	movf	??_scale+8,w
  3842  0EE4  00AA               	movwf	___flmul@a+2
  3843  0EE5  0849               	movf	??_scale+7,w
  3844  0EE6  00A9               	movwf	___flmul@a+1
  3845  0EE7  0848               	movf	??_scale+6,w
  3846  0EE8  00A8               	movwf	___flmul@a
  3847  0EE9  120A  158A  21A2  120A  158A  	fcall	___flmul
  3848  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3849  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3850  0EF0  0827               	movf	?___flmul+3,w
  3851  0EF1  00CF               	movwf	_scale$938+3
  3852  0EF2  0826               	movf	?___flmul+2,w
  3853  0EF3  00CE               	movwf	_scale$938+2
  3854  0EF4  0825               	movf	?___flmul+1,w
  3855  0EF5  00CD               	movwf	_scale$938+1
  3856  0EF6  0824               	movf	?___flmul,w
  3857  0EF7  00CC               	movwf	_scale$938
  3858                           
  3859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3860  0EF8  300A               	movlw	10
  3861  0EF9  00F0               	movwf	___awmod@divisor
  3862  0EFA  3000               	movlw	0
  3863  0EFB  00F1               	movwf	___awmod@divisor+1
  3864  0EFC  0850               	movf	scale@scl,w
  3865  0EFD  00F2               	movwf	___awmod@dividend
  3866  0EFE  01F3               	clrf	___awmod@dividend+1
  3867  0EFF  1BF2               	btfsc	___awmod@dividend,7
  3868  0F00  03F3               	decf	___awmod@dividend+1,f
  3869  0F01  160A  158A  25E8  120A  158A  	fcall	___awmod
  3870  0F06  0870               	movf	?___awmod,w
  3871  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  3872  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  3873  0F09  00C2               	movwf	??_scale
  3874  0F0A  3001               	movlw	1
  3875  0F0B                     u4585:	
  3876  0F0B  1003               	clrc
  3877  0F0C  0DC2               	rlf	??_scale,f
  3878  0F0D  3EFF               	addlw	-1
  3879  0F0E  1D03               	skipz
  3880  0F0F  2F0B               	goto	u4585
  3881  0F10  1003               	clrc
  3882  0F11  0D42               	rlf	??_scale,w
  3883  0F12  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3884  0F13  0084               	movwf	4
  3885  0F14  120A  118A  200D  120A  158A  	fcall	stringdir
  3886  0F19  00C3               	movwf	??_scale+1
  3887  0F1A  120A  118A  200D  120A  158A  	fcall	stringdir
  3888  0F1F  00C4               	movwf	??_scale+2
  3889  0F20  120A  118A  200D  120A  158A  	fcall	stringdir
  3890  0F25  00C5               	movwf	??_scale+3
  3891  0F26  120A  118A  200D  120A  158A  	fcall	stringdir
  3892  0F2B  00C6               	movwf	??_scale+4
  3893  0F2C  0846               	movf	??_scale+4,w
  3894  0F2D  00A7               	movwf	___flmul@b+3
  3895  0F2E  0845               	movf	??_scale+3,w
  3896  0F2F  00A6               	movwf	___flmul@b+2
  3897  0F30  0844               	movf	??_scale+2,w
  3898  0F31  00A5               	movwf	___flmul@b+1
  3899  0F32  0843               	movf	??_scale+1,w
  3900  0F33  00A4               	movwf	___flmul@b
  3901  0F34  084F               	movf	_scale$938+3,w
  3902  0F35  00AB               	movwf	___flmul@a+3
  3903  0F36  084E               	movf	_scale$938+2,w
  3904  0F37  00AA               	movwf	___flmul@a+2
  3905  0F38  084D               	movf	_scale$938+1,w
  3906  0F39  00A9               	movwf	___flmul@a+1
  3907  0F3A  084C               	movf	_scale$938,w
  3908  0F3B  00A8               	movwf	___flmul@a
  3909  0F3C  120A  158A  21A2   	fcall	___flmul
  3910  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3911  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3912  0F41  0827               	movf	?___flmul+3,w
  3913  0F42  00C1               	movwf	?_scale+3
  3914  0F43  0826               	movf	?___flmul+2,w
  3915  0F44  00C0               	movwf	?_scale+2
  3916  0F45  0825               	movf	?___flmul+1,w
  3917  0F46  00BF               	movwf	?_scale+1
  3918  0F47  0824               	movf	?___flmul,w
  3919  0F48  00BE               	movwf	?_scale
  3920  0F49  0008               	return
  3921  0F4A                     l2877:	
  3922  0F4A  0850               	movf	scale@scl,w
  3923  0F4B  3A80               	xorlw	128
  3924  0F4C  3E75               	addlw	-139
  3925  0F4D  1C03               	skipc
  3926  0F4E  2FD5               	goto	l2883
  3927                           
  3928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3929  0F4F  300A               	movlw	10
  3930  0F50  00F0               	movwf	___awmod@divisor
  3931  0F51  3000               	movlw	0
  3932  0F52  00F1               	movwf	___awmod@divisor+1
  3933  0F53  0850               	movf	scale@scl,w
  3934  0F54  00F2               	movwf	___awmod@dividend
  3935  0F55  01F3               	clrf	___awmod@dividend+1
  3936  0F56  1BF2               	btfsc	___awmod@dividend,7
  3937  0F57  03F3               	decf	___awmod@dividend+1,f
  3938  0F58  160A  158A  25E8  120A  158A  	fcall	___awmod
  3939  0F5D  0870               	movf	?___awmod,w
  3940  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3941  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3942  0F60  00C2               	movwf	??_scale
  3943  0F61  3001               	movlw	1
  3944  0F62                     u4605:	
  3945  0F62  1003               	clrc
  3946  0F63  0DC2               	rlf	??_scale,f
  3947  0F64  3EFF               	addlw	-1
  3948  0F65  1D03               	skipz
  3949  0F66  2F62               	goto	u4605
  3950  0F67  1003               	clrc
  3951  0F68  0D42               	rlf	??_scale,w
  3952  0F69  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3953  0F6A  0084               	movwf	4
  3954  0F6B  120A  118A  200D  120A  158A  	fcall	stringdir
  3955  0F70  00C3               	movwf	??_scale+1
  3956  0F71  120A  118A  200D  120A  158A  	fcall	stringdir
  3957  0F76  00C4               	movwf	??_scale+2
  3958  0F77  120A  118A  200D  120A  158A  	fcall	stringdir
  3959  0F7C  00C5               	movwf	??_scale+3
  3960  0F7D  120A  118A  200D  120A  158A  	fcall	stringdir
  3961  0F82  00C6               	movwf	??_scale+4
  3962  0F83  0846               	movf	??_scale+4,w
  3963  0F84  00A7               	movwf	___flmul@b+3
  3964  0F85  0845               	movf	??_scale+3,w
  3965  0F86  00A6               	movwf	___flmul@b+2
  3966  0F87  0844               	movf	??_scale+2,w
  3967  0F88  00A5               	movwf	___flmul@b+1
  3968  0F89  0843               	movf	??_scale+1,w
  3969  0F8A  00A4               	movwf	___flmul@b
  3970  0F8B  300A               	movlw	10
  3971  0F8C  00F7               	movwf	___awdiv@divisor
  3972  0F8D  3000               	movlw	0
  3973  0F8E  00F8               	movwf	___awdiv@divisor+1
  3974  0F8F  0850               	movf	scale@scl,w
  3975  0F90  00F9               	movwf	___awdiv@dividend
  3976  0F91  01FA               	clrf	___awdiv@dividend+1
  3977  0F92  1BF9               	btfsc	___awdiv@dividend,7
  3978  0F93  03FA               	decf	___awdiv@dividend+1,f
  3979  0F94  160A  158A  26DA  120A  158A  	fcall	___awdiv
  3980  0F99  0877               	movf	?___awdiv,w
  3981  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  3982  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  3983  0F9C  00C7               	movwf	??_scale+5
  3984  0F9D  3001               	movlw	1
  3985  0F9E                     u4615:	
  3986  0F9E  1003               	clrc
  3987  0F9F  0DC7               	rlf	??_scale+5,f
  3988  0FA0  3EFF               	addlw	-1
  3989  0FA1  1D03               	skipz
  3990  0FA2  2F9E               	goto	u4615
  3991  0FA3  1003               	clrc
  3992  0FA4  0D47               	rlf	??_scale+5,w
  3993  0FA5  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3994  0FA6  0084               	movwf	4
  3995  0FA7  120A  118A  200D  120A  158A  	fcall	stringdir
  3996  0FAC  00C8               	movwf	??_scale+6
  3997  0FAD  120A  118A  200D  120A  158A  	fcall	stringdir
  3998  0FB2  00C9               	movwf	??_scale+7
  3999  0FB3  120A  118A  200D  120A  158A  	fcall	stringdir
  4000  0FB8  00CA               	movwf	??_scale+8
  4001  0FB9  120A  118A  200D  120A  158A  	fcall	stringdir
  4002  0FBE  00CB               	movwf	??_scale+9
  4003  0FBF  084B               	movf	??_scale+9,w
  4004  0FC0  00AB               	movwf	___flmul@a+3
  4005  0FC1  084A               	movf	??_scale+8,w
  4006  0FC2  00AA               	movwf	___flmul@a+2
  4007  0FC3  0849               	movf	??_scale+7,w
  4008  0FC4  00A9               	movwf	___flmul@a+1
  4009  0FC5  0848               	movf	??_scale+6,w
  4010  0FC6  00A8               	movwf	___flmul@a
  4011  0FC7  120A  158A  21A2   	fcall	___flmul
  4012  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  4013  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  4014  0FCC  0827               	movf	?___flmul+3,w
  4015  0FCD  00C1               	movwf	?_scale+3
  4016  0FCE  0826               	movf	?___flmul+2,w
  4017  0FCF  00C0               	movwf	?_scale+2
  4018  0FD0  0825               	movf	?___flmul+1,w
  4019  0FD1  00BF               	movwf	?_scale+1
  4020  0FD2  0824               	movf	?___flmul,w
  4021  0FD3  00BE               	movwf	?_scale
  4022  0FD4  0008               	return
  4023  0FD5                     l2883:	
  4024                           
  4025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  4026  0FD5  0850               	movf	scale@scl,w
  4027  0FD6  00C2               	movwf	??_scale
  4028  0FD7  3001               	movlw	1
  4029  0FD8                     u4625:	
  4030  0FD8  1003               	clrc
  4031  0FD9  0DC2               	rlf	??_scale,f
  4032  0FDA  3EFF               	addlw	-1
  4033  0FDB  1D03               	skipz
  4034  0FDC  2FD8               	goto	u4625
  4035  0FDD  1003               	clrc
  4036  0FDE  0D42               	rlf	??_scale,w
  4037  0FDF  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4038  0FE0  0084               	movwf	4
  4039  0FE1  120A  118A  200D  120A  158A  	fcall	stringdir
  4040  0FE6  00C3               	movwf	??_scale+1
  4041  0FE7  120A  118A  200D  120A  158A  	fcall	stringdir
  4042  0FEC  00C4               	movwf	??_scale+2
  4043  0FED  120A  118A  200D  120A  158A  	fcall	stringdir
  4044  0FF2  00C5               	movwf	??_scale+3
  4045  0FF3  120A  118A  200D   	fcall	stringdir
  4046  0FF6  00C6               	movwf	??_scale+4
  4047  0FF7  0846               	movf	??_scale+4,w
  4048  0FF8  00C1               	movwf	?_scale+3
  4049  0FF9  0845               	movf	??_scale+3,w
  4050  0FFA  00C0               	movwf	?_scale+2
  4051  0FFB  0844               	movf	??_scale+2,w
  4052  0FFC  00BF               	movwf	?_scale+1
  4053  0FFD  0843               	movf	??_scale+1,w
  4054  0FFE  00BE               	movwf	?_scale
  4055  0FFF  0008               	return
  4056  1000                     __end_of_scale:	
  4057                           
  4058                           	psect	text3
  4059  1DE8                     __ptext3:	
  4060 ;; *************** function ___awmod *****************
  4061 ;; Defined at:
  4062 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  divisor         2    0[COMMON] int 
  4065 ;;  dividend        2    2[COMMON] int 
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;  sign            1    6[COMMON] unsigned char 
  4068 ;;  counter         1    5[COMMON] unsigned char 
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  2    0[COMMON] int 
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4078 ;;      Params:         4       0       0       0       0
  4079 ;;      Locals:         2       0       0       0       0
  4080 ;;      Temps:          1       0       0       0       0
  4081 ;;      Totals:         7       0       0       0       0
  4082 ;;Total ram usage:        7 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; This function calls:
  4085 ;;		Nothing
  4086 ;; This function is called by:
  4087 ;;		_scale
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           
  4092                           ;psect for function ___awmod
  4093  1DE8                     ___awmod:	
  4094                           
  4095                           ;incstack = 0
  4096                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4097  1DE8  01F6               	clrf	___awmod@sign
  4098  1DE9  1FF3               	btfss	___awmod@dividend+1,7
  4099  1DEA  2DF2               	goto	l2387
  4100  1DEB  09F2               	comf	___awmod@dividend,f
  4101  1DEC  09F3               	comf	___awmod@dividend+1,f
  4102  1DED  0AF2               	incf	___awmod@dividend,f
  4103  1DEE  1903               	skipnz
  4104  1DEF  0AF3               	incf	___awmod@dividend+1,f
  4105  1DF0  01F6               	clrf	___awmod@sign
  4106  1DF1  0AF6               	incf	___awmod@sign,f
  4107  1DF2                     l2387:	
  4108  1DF2  1FF1               	btfss	___awmod@divisor+1,7
  4109  1DF3  2DF9               	goto	l2391
  4110  1DF4  09F0               	comf	___awmod@divisor,f
  4111  1DF5  09F1               	comf	___awmod@divisor+1,f
  4112  1DF6  0AF0               	incf	___awmod@divisor,f
  4113  1DF7  1903               	skipnz
  4114  1DF8  0AF1               	incf	___awmod@divisor+1,f
  4115  1DF9                     l2391:	
  4116  1DF9  0870               	movf	___awmod@divisor,w
  4117  1DFA  0471               	iorwf	___awmod@divisor+1,w
  4118  1DFB  1903               	btfsc	3,2
  4119  1DFC  2E26               	goto	l2409
  4120  1DFD  01F5               	clrf	___awmod@counter
  4121  1DFE  0AF5               	incf	___awmod@counter,f
  4122  1DFF                     l2399:	
  4123  1DFF  1BF1               	btfsc	___awmod@divisor+1,7
  4124  1E00  2E0D               	goto	l2401
  4125  1E01  3001               	movlw	1
  4126  1E02                     u3355:	
  4127  1E02  1003               	clrc
  4128  1E03  0DF0               	rlf	___awmod@divisor,f
  4129  1E04  0DF1               	rlf	___awmod@divisor+1,f
  4130  1E05  3EFF               	addlw	-1
  4131  1E06  1D03               	skipz
  4132  1E07  2E02               	goto	u3355
  4133  1E08  3001               	movlw	1
  4134  1E09  00F4               	movwf	??___awmod
  4135  1E0A  0874               	movf	??___awmod,w
  4136  1E0B  07F5               	addwf	___awmod@counter,f
  4137  1E0C  2DFF               	goto	l2399
  4138  1E0D                     l2401:	
  4139  1E0D  0871               	movf	___awmod@divisor+1,w
  4140  1E0E  0273               	subwf	___awmod@dividend+1,w
  4141  1E0F  1D03               	skipz
  4142  1E10  2E13               	goto	u3375
  4143  1E11  0870               	movf	___awmod@divisor,w
  4144  1E12  0272               	subwf	___awmod@dividend,w
  4145  1E13                     u3375:	
  4146  1E13  1C03               	skipc
  4147  1E14  2E1B               	goto	l2405
  4148  1E15  0870               	movf	___awmod@divisor,w
  4149  1E16  02F2               	subwf	___awmod@dividend,f
  4150  1E17  0871               	movf	___awmod@divisor+1,w
  4151  1E18  1C03               	skipc
  4152  1E19  03F3               	decf	___awmod@dividend+1,f
  4153  1E1A  02F3               	subwf	___awmod@dividend+1,f
  4154  1E1B                     l2405:	
  4155  1E1B  3001               	movlw	1
  4156  1E1C                     u3385:	
  4157  1E1C  1003               	clrc
  4158  1E1D  0CF1               	rrf	___awmod@divisor+1,f
  4159  1E1E  0CF0               	rrf	___awmod@divisor,f
  4160  1E1F  3EFF               	addlw	-1
  4161  1E20  1D03               	skipz
  4162  1E21  2E1C               	goto	u3385
  4163  1E22  3001               	movlw	1
  4164  1E23  02F5               	subwf	___awmod@counter,f
  4165  1E24  1D03               	btfss	3,2
  4166  1E25  2E0D               	goto	l2401
  4167  1E26                     l2409:	
  4168  1E26  0876               	movf	___awmod@sign,w
  4169  1E27  1903               	btfsc	3,2
  4170  1E28  2E2E               	goto	l2413
  4171  1E29  09F2               	comf	___awmod@dividend,f
  4172  1E2A  09F3               	comf	___awmod@dividend+1,f
  4173  1E2B  0AF2               	incf	___awmod@dividend,f
  4174  1E2C  1903               	skipnz
  4175  1E2D  0AF3               	incf	___awmod@dividend+1,f
  4176  1E2E                     l2413:	
  4177  1E2E  0873               	movf	___awmod@dividend+1,w
  4178  1E2F  00F1               	movwf	?___awmod+1
  4179  1E30  0872               	movf	___awmod@dividend,w
  4180  1E31  00F0               	movwf	?___awmod
  4181  1E32  0008               	return
  4182  1E33                     __end_of___awmod:	
  4183                           
  4184                           	psect	text4
  4185  1EDA                     __ptext4:	
  4186 ;; *************** function ___awdiv *****************
  4187 ;; Defined at:
  4188 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  divisor         2    7[COMMON] int 
  4191 ;;  dividend        2    9[COMMON] int 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  quotient        2    2[BANK0 ] int 
  4194 ;;  sign            1    1[BANK0 ] unsigned char 
  4195 ;;  counter         1    0[BANK0 ] unsigned char 
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  2    7[COMMON] int 
  4198 ;; Registers used:
  4199 ;;		wreg, status,2, status,0
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4205 ;;      Params:         4       0       0       0       0
  4206 ;;      Locals:         0       4       0       0       0
  4207 ;;      Temps:          1       0       0       0       0
  4208 ;;      Totals:         5       4       0       0       0
  4209 ;;Total ram usage:        9 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; This function calls:
  4212 ;;		Nothing
  4213 ;; This function is called by:
  4214 ;;		_scale
  4215 ;;		_sprintf
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           
  4220                           ;psect for function ___awdiv
  4221  1EDA                     ___awdiv:	
  4222                           
  4223                           ;incstack = 0
  4224                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4225  1EDA  1283               	bcf	3,5	;RP0=0, select bank0
  4226  1EDB  1303               	bcf	3,6	;RP1=0, select bank0
  4227  1EDC  01A1               	clrf	___awdiv@sign
  4228  1EDD  1FF8               	btfss	___awdiv@divisor+1,7
  4229  1EDE  2EE6               	goto	l2343
  4230  1EDF  09F7               	comf	___awdiv@divisor,f
  4231  1EE0  09F8               	comf	___awdiv@divisor+1,f
  4232  1EE1  0AF7               	incf	___awdiv@divisor,f
  4233  1EE2  1903               	skipnz
  4234  1EE3  0AF8               	incf	___awdiv@divisor+1,f
  4235  1EE4  01A1               	clrf	___awdiv@sign
  4236  1EE5  0AA1               	incf	___awdiv@sign,f
  4237  1EE6                     l2343:	
  4238  1EE6  1FFA               	btfss	___awdiv@dividend+1,7
  4239  1EE7  2EF1               	goto	l2349
  4240  1EE8  09F9               	comf	___awdiv@dividend,f
  4241  1EE9  09FA               	comf	___awdiv@dividend+1,f
  4242  1EEA  0AF9               	incf	___awdiv@dividend,f
  4243  1EEB  1903               	skipnz
  4244  1EEC  0AFA               	incf	___awdiv@dividend+1,f
  4245  1EED  3001               	movlw	1
  4246  1EEE  00FB               	movwf	??___awdiv
  4247  1EEF  087B               	movf	??___awdiv,w
  4248  1EF0  06A1               	xorwf	___awdiv@sign,f
  4249  1EF1                     l2349:	
  4250  1EF1  01A2               	clrf	___awdiv@quotient
  4251  1EF2  01A3               	clrf	___awdiv@quotient+1
  4252  1EF3  0877               	movf	___awdiv@divisor,w
  4253  1EF4  0478               	iorwf	___awdiv@divisor+1,w
  4254  1EF5  1903               	btfsc	3,2
  4255  1EF6  2F28               	goto	l2371
  4256  1EF7  01A0               	clrf	___awdiv@counter
  4257  1EF8  0AA0               	incf	___awdiv@counter,f
  4258  1EF9                     l2359:	
  4259  1EF9  1BF8               	btfsc	___awdiv@divisor+1,7
  4260  1EFA  2F07               	goto	l2361
  4261  1EFB  3001               	movlw	1
  4262  1EFC                     u3255:	
  4263  1EFC  1003               	clrc
  4264  1EFD  0DF7               	rlf	___awdiv@divisor,f
  4265  1EFE  0DF8               	rlf	___awdiv@divisor+1,f
  4266  1EFF  3EFF               	addlw	-1
  4267  1F00  1D03               	skipz
  4268  1F01  2EFC               	goto	u3255
  4269  1F02  3001               	movlw	1
  4270  1F03  00FB               	movwf	??___awdiv
  4271  1F04  087B               	movf	??___awdiv,w
  4272  1F05  07A0               	addwf	___awdiv@counter,f
  4273  1F06  2EF9               	goto	l2359
  4274  1F07                     l2361:	
  4275  1F07  3001               	movlw	1
  4276  1F08                     u3275:	
  4277  1F08  1003               	clrc
  4278  1F09  0DA2               	rlf	___awdiv@quotient,f
  4279  1F0A  0DA3               	rlf	___awdiv@quotient+1,f
  4280  1F0B  3EFF               	addlw	-1
  4281  1F0C  1D03               	skipz
  4282  1F0D  2F08               	goto	u3275
  4283  1F0E  0878               	movf	___awdiv@divisor+1,w
  4284  1F0F  027A               	subwf	___awdiv@dividend+1,w
  4285  1F10  1D03               	skipz
  4286  1F11  2F14               	goto	u3285
  4287  1F12  0877               	movf	___awdiv@divisor,w
  4288  1F13  0279               	subwf	___awdiv@dividend,w
  4289  1F14                     u3285:	
  4290  1F14  1C03               	skipc
  4291  1F15  2F1D               	goto	l2367
  4292  1F16  0877               	movf	___awdiv@divisor,w
  4293  1F17  02F9               	subwf	___awdiv@dividend,f
  4294  1F18  0878               	movf	___awdiv@divisor+1,w
  4295  1F19  1C03               	skipc
  4296  1F1A  03FA               	decf	___awdiv@dividend+1,f
  4297  1F1B  02FA               	subwf	___awdiv@dividend+1,f
  4298  1F1C  1422               	bsf	___awdiv@quotient,0
  4299  1F1D                     l2367:	
  4300  1F1D  3001               	movlw	1
  4301  1F1E                     u3295:	
  4302  1F1E  1003               	clrc
  4303  1F1F  0CF8               	rrf	___awdiv@divisor+1,f
  4304  1F20  0CF7               	rrf	___awdiv@divisor,f
  4305  1F21  3EFF               	addlw	-1
  4306  1F22  1D03               	skipz
  4307  1F23  2F1E               	goto	u3295
  4308  1F24  3001               	movlw	1
  4309  1F25  02A0               	subwf	___awdiv@counter,f
  4310  1F26  1D03               	btfss	3,2
  4311  1F27  2F07               	goto	l2361
  4312  1F28                     l2371:	
  4313  1F28  0821               	movf	___awdiv@sign,w
  4314  1F29  1903               	btfsc	3,2
  4315  1F2A  2F30               	goto	l2375
  4316  1F2B  09A2               	comf	___awdiv@quotient,f
  4317  1F2C  09A3               	comf	___awdiv@quotient+1,f
  4318  1F2D  0AA2               	incf	___awdiv@quotient,f
  4319  1F2E  1903               	skipnz
  4320  1F2F  0AA3               	incf	___awdiv@quotient+1,f
  4321  1F30                     l2375:	
  4322  1F30  0823               	movf	___awdiv@quotient+1,w
  4323  1F31  00F8               	movwf	?___awdiv+1
  4324  1F32  0822               	movf	___awdiv@quotient,w
  4325  1F33  00F7               	movwf	?___awdiv
  4326  1F34  0008               	return
  4327  1F35                     __end_of___awdiv:	
  4328                           
  4329                           	psect	text5
  4330  1BB2                     __ptext5:	
  4331 ;; *************** function _isdigit *****************
  4332 ;; Defined at:
  4333 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  c               1    wreg     unsigned char 
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;  c               1    1[COMMON] unsigned char 
  4338 ;; Return value:  Size  Location     Type
  4339 ;;		None               void
  4340 ;; Registers used:
  4341 ;;		wreg, status,2, status,0
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4347 ;;      Params:         0       0       0       0       0
  4348 ;;      Locals:         2       0       0       0       0
  4349 ;;      Temps:          0       0       0       0       0
  4350 ;;      Totals:         2       0       0       0       0
  4351 ;;Total ram usage:        2 bytes
  4352 ;; Hardware stack levels used:    1
  4353 ;; This function calls:
  4354 ;;		Nothing
  4355 ;; This function is called by:
  4356 ;;		_sprintf
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           
  4361                           ;psect for function _isdigit
  4362  1BB2                     _isdigit:	
  4363                           
  4364                           ;incstack = 0
  4365                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4366                           ;isdigit@c stored from wreg
  4367  1BB2  00F1               	movwf	isdigit@c
  4368  1BB3  01F0               	clrf	_isdigit$743
  4369  1BB4  303A               	movlw	58
  4370  1BB5  0271               	subwf	isdigit@c,w
  4371  1BB6  1803               	skipnc
  4372  1BB7  2BBE               	goto	l2895
  4373  1BB8  3030               	movlw	48
  4374  1BB9  0271               	subwf	isdigit@c,w
  4375  1BBA  1C03               	skipc
  4376  1BBB  2BBE               	goto	l2895
  4377  1BBC  01F0               	clrf	_isdigit$743
  4378  1BBD  0AF0               	incf	_isdigit$743,f
  4379  1BBE                     l2895:	
  4380  1BBE  0C70               	rrf	_isdigit$743,w
  4381  1BBF  0008               	return
  4382  1BC0                     __end_of_isdigit:	
  4383                           
  4384                           	psect	text6
  4385  13D0                     __ptext6:	
  4386 ;; *************** function _fround *****************
  4387 ;; Defined at:
  4388 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  prec            1    wreg     unsigned char 
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;  prec            1   49[BANK0 ] unsigned char 
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  4   30[BANK0 ] unsigned char 
  4395 ;; Registers used:
  4396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4402 ;;      Params:         0       4       0       0       0
  4403 ;;      Locals:         0       9       0       0       0
  4404 ;;      Temps:          0       7       0       0       0
  4405 ;;      Totals:         0      20       0       0       0
  4406 ;;Total ram usage:       20 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; Hardware stack levels required when called:    2
  4409 ;; This function calls:
  4410 ;;		___flmul
  4411 ;;		___lwdiv
  4412 ;;		___lwmod
  4413 ;; This function is called by:
  4414 ;;		_sprintf
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           
  4419                           ;psect for function _fround
  4420  13D0                     _fround:	
  4421                           
  4422                           ;incstack = 0
  4423                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4424                           ;fround@prec stored from wreg
  4425  13D0  1283               	bcf	3,5	;RP0=0, select bank0
  4426  13D1  1303               	bcf	3,6	;RP1=0, select bank0
  4427  13D2  00D1               	movwf	fround@prec
  4428                           
  4429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  4430  13D3  306E               	movlw	110
  4431  13D4  0251               	subwf	fround@prec,w
  4432  13D5  1C03               	skipc
  4433  13D6  2CE2               	goto	l2837
  4434                           
  4435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4436  13D7  303F               	movlw	63
  4437  13D8  00A7               	movwf	___flmul@b+3
  4438  13D9  3000               	movlw	0
  4439  13DA  00A6               	movwf	___flmul@b+2
  4440  13DB  3000               	movlw	0
  4441  13DC  00A5               	movwf	___flmul@b+1
  4442  13DD  3000               	movlw	0
  4443  13DE  00A4               	movwf	___flmul@b
  4444  13DF  3064               	movlw	100
  4445  13E0  00F6               	movwf	___lwdiv@divisor
  4446  13E1  3000               	movlw	0
  4447  13E2  00F7               	movwf	___lwdiv@divisor+1
  4448  13E3  0851               	movf	fround@prec,w
  4449  13E4  00C2               	movwf	??_fround
  4450  13E5  01C3               	clrf	??_fround+1
  4451  13E6  0842               	movf	??_fround,w
  4452  13E7  00F8               	movwf	___lwdiv@dividend
  4453  13E8  0843               	movf	??_fround+1,w
  4454  13E9  00F9               	movwf	___lwdiv@dividend+1
  4455  13EA  160A  158A  24DD  160A  118A  	fcall	___lwdiv
  4456  13EF  0876               	movf	?___lwdiv,w
  4457  13F0  1283               	bcf	3,5	;RP0=0, select bank0
  4458  13F1  1303               	bcf	3,6	;RP1=0, select bank0
  4459  13F2  00C4               	movwf	??_fround+2
  4460  13F3  3001               	movlw	1
  4461  13F4                     u4395:	
  4462  13F4  1003               	clrc
  4463  13F5  0DC4               	rlf	??_fround+2,f
  4464  13F6  3EFF               	addlw	-1
  4465  13F7  1D03               	skipz
  4466  13F8  2BF4               	goto	u4395
  4467  13F9  1003               	clrc
  4468  13FA  0D44               	rlf	??_fround+2,w
  4469  13FB  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4470  13FC  0084               	movwf	4
  4471  13FD  120A  118A  200D  160A  118A  	fcall	stringdir
  4472  1402  00C5               	movwf	??_fround+3
  4473  1403  120A  118A  200D  160A  118A  	fcall	stringdir
  4474  1408  00C6               	movwf	??_fround+4
  4475  1409  120A  118A  200D  160A  118A  	fcall	stringdir
  4476  140E  00C7               	movwf	??_fround+5
  4477  140F  120A  118A  200D  160A  118A  	fcall	stringdir
  4478  1414  00C8               	movwf	??_fround+6
  4479  1415  0848               	movf	??_fround+6,w
  4480  1416  00AB               	movwf	___flmul@a+3
  4481  1417  0847               	movf	??_fround+5,w
  4482  1418  00AA               	movwf	___flmul@a+2
  4483  1419  0846               	movf	??_fround+4,w
  4484  141A  00A9               	movwf	___flmul@a+1
  4485  141B  0845               	movf	??_fround+3,w
  4486  141C  00A8               	movwf	___flmul@a
  4487  141D  120A  158A  21A2  160A  118A  	fcall	___flmul
  4488  1422  1283               	bcf	3,5	;RP0=0, select bank0
  4489  1423  1303               	bcf	3,6	;RP1=0, select bank0
  4490  1424  0827               	movf	?___flmul+3,w
  4491  1425  00D0               	movwf	_fround$936+3
  4492  1426  0826               	movf	?___flmul+2,w
  4493  1427  00CF               	movwf	_fround$936+2
  4494  1428  0825               	movf	?___flmul+1,w
  4495  1429  00CE               	movwf	_fround$936+1
  4496  142A  0824               	movf	?___flmul,w
  4497  142B  00CD               	movwf	_fround$936
  4498                           
  4499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4500  142C  300A               	movlw	10
  4501  142D  00F6               	movwf	___lwdiv@divisor
  4502  142E  3000               	movlw	0
  4503  142F  00F7               	movwf	___lwdiv@divisor+1
  4504  1430  0851               	movf	fround@prec,w
  4505  1431  00C2               	movwf	??_fround
  4506  1432  01C3               	clrf	??_fround+1
  4507  1433  0842               	movf	??_fround,w
  4508  1434  00F2               	movwf	___lwmod@dividend
  4509  1435  0843               	movf	??_fround+1,w
  4510  1436  00F3               	movwf	___lwmod@dividend+1
  4511  1437  3064               	movlw	100
  4512  1438  00F0               	movwf	___lwmod@divisor
  4513  1439  3000               	movlw	0
  4514  143A  00F1               	movwf	___lwmod@divisor+1
  4515  143B  160A  158A  2472  160A  118A  	fcall	___lwmod
  4516  1440  0871               	movf	?___lwmod+1,w
  4517  1441  00F9               	movwf	___lwdiv@dividend+1
  4518  1442  0870               	movf	?___lwmod,w
  4519  1443  00F8               	movwf	___lwdiv@dividend
  4520  1444  160A  158A  24DD  160A  118A  	fcall	___lwdiv
  4521  1449  0876               	movf	?___lwdiv,w
  4522  144A  1283               	bcf	3,5	;RP0=0, select bank0
  4523  144B  1303               	bcf	3,6	;RP1=0, select bank0
  4524  144C  00C4               	movwf	??_fround+2
  4525  144D  3001               	movlw	1
  4526  144E                     u4405:	
  4527  144E  1003               	clrc
  4528  144F  0DC4               	rlf	??_fround+2,f
  4529  1450  3EFF               	addlw	-1
  4530  1451  1D03               	skipz
  4531  1452  2C4E               	goto	u4405
  4532  1453  1003               	clrc
  4533  1454  0D44               	rlf	??_fround+2,w
  4534  1455  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4535  1456  0084               	movwf	4
  4536  1457  120A  118A  200D  160A  118A  	fcall	stringdir
  4537  145C  00C5               	movwf	??_fround+3
  4538  145D  120A  118A  200D  160A  118A  	fcall	stringdir
  4539  1462  00C6               	movwf	??_fround+4
  4540  1463  120A  118A  200D  160A  118A  	fcall	stringdir
  4541  1468  00C7               	movwf	??_fround+5
  4542  1469  120A  118A  200D  160A  118A  	fcall	stringdir
  4543  146E  00C8               	movwf	??_fround+6
  4544  146F  0848               	movf	??_fround+6,w
  4545  1470  00A7               	movwf	___flmul@b+3
  4546  1471  0847               	movf	??_fround+5,w
  4547  1472  00A6               	movwf	___flmul@b+2
  4548  1473  0846               	movf	??_fround+4,w
  4549  1474  00A5               	movwf	___flmul@b+1
  4550  1475  0845               	movf	??_fround+3,w
  4551  1476  00A4               	movwf	___flmul@b
  4552  1477  0850               	movf	_fround$936+3,w
  4553  1478  00AB               	movwf	___flmul@a+3
  4554  1479  084F               	movf	_fround$936+2,w
  4555  147A  00AA               	movwf	___flmul@a+2
  4556  147B  084E               	movf	_fround$936+1,w
  4557  147C  00A9               	movwf	___flmul@a+1
  4558  147D  084D               	movf	_fround$936,w
  4559  147E  00A8               	movwf	___flmul@a
  4560  147F  120A  158A  21A2  160A  118A  	fcall	___flmul
  4561  1484  1283               	bcf	3,5	;RP0=0, select bank0
  4562  1485  1303               	bcf	3,6	;RP1=0, select bank0
  4563  1486  0827               	movf	?___flmul+3,w
  4564  1487  00CC               	movwf	_fround$937+3
  4565  1488  0826               	movf	?___flmul+2,w
  4566  1489  00CB               	movwf	_fround$937+2
  4567  148A  0825               	movf	?___flmul+1,w
  4568  148B  00CA               	movwf	_fround$937+1
  4569  148C  0824               	movf	?___flmul,w
  4570  148D  00C9               	movwf	_fround$937
  4571                           
  4572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4573  148E  300A               	movlw	10
  4574  148F  00F0               	movwf	___lwmod@divisor
  4575  1490  3000               	movlw	0
  4576  1491  00F1               	movwf	___lwmod@divisor+1
  4577  1492  0851               	movf	fround@prec,w
  4578  1493  00C2               	movwf	??_fround
  4579  1494  01C3               	clrf	??_fround+1
  4580  1495  0842               	movf	??_fround,w
  4581  1496  00F2               	movwf	___lwmod@dividend
  4582  1497  0843               	movf	??_fround+1,w
  4583  1498  00F3               	movwf	___lwmod@dividend+1
  4584  1499  160A  158A  2472  160A  118A  	fcall	___lwmod
  4585  149E  0870               	movf	?___lwmod,w
  4586  149F  1283               	bcf	3,5	;RP0=0, select bank0
  4587  14A0  1303               	bcf	3,6	;RP1=0, select bank0
  4588  14A1  00C4               	movwf	??_fround+2
  4589  14A2  3001               	movlw	1
  4590  14A3                     u4415:	
  4591  14A3  1003               	clrc
  4592  14A4  0DC4               	rlf	??_fround+2,f
  4593  14A5  3EFF               	addlw	-1
  4594  14A6  1D03               	skipz
  4595  14A7  2CA3               	goto	u4415
  4596  14A8  1003               	clrc
  4597  14A9  0D44               	rlf	??_fround+2,w
  4598  14AA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4599  14AB  0084               	movwf	4
  4600  14AC  120A  118A  200D  160A  118A  	fcall	stringdir
  4601  14B1  00C5               	movwf	??_fround+3
  4602  14B2  120A  118A  200D  160A  118A  	fcall	stringdir
  4603  14B7  00C6               	movwf	??_fround+4
  4604  14B8  120A  118A  200D  160A  118A  	fcall	stringdir
  4605  14BD  00C7               	movwf	??_fround+5
  4606  14BE  120A  118A  200D  160A  118A  	fcall	stringdir
  4607  14C3  00C8               	movwf	??_fround+6
  4608  14C4  0848               	movf	??_fround+6,w
  4609  14C5  00A7               	movwf	___flmul@b+3
  4610  14C6  0847               	movf	??_fround+5,w
  4611  14C7  00A6               	movwf	___flmul@b+2
  4612  14C8  0846               	movf	??_fround+4,w
  4613  14C9  00A5               	movwf	___flmul@b+1
  4614  14CA  0845               	movf	??_fround+3,w
  4615  14CB  00A4               	movwf	___flmul@b
  4616  14CC  084C               	movf	_fround$937+3,w
  4617  14CD  00AB               	movwf	___flmul@a+3
  4618  14CE  084B               	movf	_fround$937+2,w
  4619  14CF  00AA               	movwf	___flmul@a+2
  4620  14D0  084A               	movf	_fround$937+1,w
  4621  14D1  00A9               	movwf	___flmul@a+1
  4622  14D2  0849               	movf	_fround$937,w
  4623  14D3  00A8               	movwf	___flmul@a
  4624  14D4  120A  158A  21A2   	fcall	___flmul
  4625  14D7  1283               	bcf	3,5	;RP0=0, select bank0
  4626  14D8  1303               	bcf	3,6	;RP1=0, select bank0
  4627  14D9  0827               	movf	?___flmul+3,w
  4628  14DA  00C1               	movwf	?_fround+3
  4629  14DB  0826               	movf	?___flmul+2,w
  4630  14DC  00C0               	movwf	?_fround+2
  4631  14DD  0825               	movf	?___flmul+1,w
  4632  14DE  00BF               	movwf	?_fround+1
  4633  14DF  0824               	movf	?___flmul,w
  4634  14E0  00BE               	movwf	?_fround
  4635  14E1  0008               	return
  4636  14E2                     l2837:	
  4637  14E2  300B               	movlw	11
  4638  14E3  0251               	subwf	fround@prec,w
  4639  14E4  1C03               	skipc
  4640  14E5  2D8F               	goto	l2843
  4641                           
  4642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4643  14E6  303F               	movlw	63
  4644  14E7  00A7               	movwf	___flmul@b+3
  4645  14E8  3000               	movlw	0
  4646  14E9  00A6               	movwf	___flmul@b+2
  4647  14EA  3000               	movlw	0
  4648  14EB  00A5               	movwf	___flmul@b+1
  4649  14EC  3000               	movlw	0
  4650  14ED  00A4               	movwf	___flmul@b
  4651  14EE  300A               	movlw	10
  4652  14EF  00F6               	movwf	___lwdiv@divisor
  4653  14F0  3000               	movlw	0
  4654  14F1  00F7               	movwf	___lwdiv@divisor+1
  4655  14F2  0851               	movf	fround@prec,w
  4656  14F3  00C2               	movwf	??_fround
  4657  14F4  01C3               	clrf	??_fround+1
  4658  14F5  0842               	movf	??_fround,w
  4659  14F6  00F8               	movwf	___lwdiv@dividend
  4660  14F7  0843               	movf	??_fround+1,w
  4661  14F8  00F9               	movwf	___lwdiv@dividend+1
  4662  14F9  160A  158A  24DD  160A  118A  	fcall	___lwdiv
  4663  14FE  0876               	movf	?___lwdiv,w
  4664  14FF  1283               	bcf	3,5	;RP0=0, select bank0
  4665  1500  1303               	bcf	3,6	;RP1=0, select bank0
  4666  1501  00C4               	movwf	??_fround+2
  4667  1502  3001               	movlw	1
  4668  1503                     u4435:	
  4669  1503  1003               	clrc
  4670  1504  0DC4               	rlf	??_fround+2,f
  4671  1505  3EFF               	addlw	-1
  4672  1506  1D03               	skipz
  4673  1507  2D03               	goto	u4435
  4674  1508  1003               	clrc
  4675  1509  0D44               	rlf	??_fround+2,w
  4676  150A  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4677  150B  0084               	movwf	4
  4678  150C  120A  118A  200D  160A  118A  	fcall	stringdir
  4679  1511  00C5               	movwf	??_fround+3
  4680  1512  120A  118A  200D  160A  118A  	fcall	stringdir
  4681  1517  00C6               	movwf	??_fround+4
  4682  1518  120A  118A  200D  160A  118A  	fcall	stringdir
  4683  151D  00C7               	movwf	??_fround+5
  4684  151E  120A  118A  200D  160A  118A  	fcall	stringdir
  4685  1523  00C8               	movwf	??_fround+6
  4686  1524  0848               	movf	??_fround+6,w
  4687  1525  00AB               	movwf	___flmul@a+3
  4688  1526  0847               	movf	??_fround+5,w
  4689  1527  00AA               	movwf	___flmul@a+2
  4690  1528  0846               	movf	??_fround+4,w
  4691  1529  00A9               	movwf	___flmul@a+1
  4692  152A  0845               	movf	??_fround+3,w
  4693  152B  00A8               	movwf	___flmul@a
  4694  152C  120A  158A  21A2  160A  118A  	fcall	___flmul
  4695  1531  1283               	bcf	3,5	;RP0=0, select bank0
  4696  1532  1303               	bcf	3,6	;RP1=0, select bank0
  4697  1533  0827               	movf	?___flmul+3,w
  4698  1534  00D0               	movwf	_fround$936+3
  4699  1535  0826               	movf	?___flmul+2,w
  4700  1536  00CF               	movwf	_fround$936+2
  4701  1537  0825               	movf	?___flmul+1,w
  4702  1538  00CE               	movwf	_fround$936+1
  4703  1539  0824               	movf	?___flmul,w
  4704  153A  00CD               	movwf	_fround$936
  4705                           
  4706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4707  153B  300A               	movlw	10
  4708  153C  00F0               	movwf	___lwmod@divisor
  4709  153D  3000               	movlw	0
  4710  153E  00F1               	movwf	___lwmod@divisor+1
  4711  153F  0851               	movf	fround@prec,w
  4712  1540  00C2               	movwf	??_fround
  4713  1541  01C3               	clrf	??_fround+1
  4714  1542  0842               	movf	??_fround,w
  4715  1543  00F2               	movwf	___lwmod@dividend
  4716  1544  0843               	movf	??_fround+1,w
  4717  1545  00F3               	movwf	___lwmod@dividend+1
  4718  1546  160A  158A  2472  160A  118A  	fcall	___lwmod
  4719  154B  0870               	movf	?___lwmod,w
  4720  154C  1283               	bcf	3,5	;RP0=0, select bank0
  4721  154D  1303               	bcf	3,6	;RP1=0, select bank0
  4722  154E  00C4               	movwf	??_fround+2
  4723  154F  3001               	movlw	1
  4724  1550                     u4445:	
  4725  1550  1003               	clrc
  4726  1551  0DC4               	rlf	??_fround+2,f
  4727  1552  3EFF               	addlw	-1
  4728  1553  1D03               	skipz
  4729  1554  2D50               	goto	u4445
  4730  1555  1003               	clrc
  4731  1556  0D44               	rlf	??_fround+2,w
  4732  1557  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4733  1558  0084               	movwf	4
  4734  1559  120A  118A  200D  160A  118A  	fcall	stringdir
  4735  155E  00C5               	movwf	??_fround+3
  4736  155F  120A  118A  200D  160A  118A  	fcall	stringdir
  4737  1564  00C6               	movwf	??_fround+4
  4738  1565  120A  118A  200D  160A  118A  	fcall	stringdir
  4739  156A  00C7               	movwf	??_fround+5
  4740  156B  120A  118A  200D  160A  118A  	fcall	stringdir
  4741  1570  00C8               	movwf	??_fround+6
  4742  1571  0848               	movf	??_fround+6,w
  4743  1572  00A7               	movwf	___flmul@b+3
  4744  1573  0847               	movf	??_fround+5,w
  4745  1574  00A6               	movwf	___flmul@b+2
  4746  1575  0846               	movf	??_fround+4,w
  4747  1576  00A5               	movwf	___flmul@b+1
  4748  1577  0845               	movf	??_fround+3,w
  4749  1578  00A4               	movwf	___flmul@b
  4750  1579  0850               	movf	_fround$936+3,w
  4751  157A  00AB               	movwf	___flmul@a+3
  4752  157B  084F               	movf	_fround$936+2,w
  4753  157C  00AA               	movwf	___flmul@a+2
  4754  157D  084E               	movf	_fround$936+1,w
  4755  157E  00A9               	movwf	___flmul@a+1
  4756  157F  084D               	movf	_fround$936,w
  4757  1580  00A8               	movwf	___flmul@a
  4758  1581  120A  158A  21A2   	fcall	___flmul
  4759  1584  1283               	bcf	3,5	;RP0=0, select bank0
  4760  1585  1303               	bcf	3,6	;RP1=0, select bank0
  4761  1586  0827               	movf	?___flmul+3,w
  4762  1587  00C1               	movwf	?_fround+3
  4763  1588  0826               	movf	?___flmul+2,w
  4764  1589  00C0               	movwf	?_fround+2
  4765  158A  0825               	movf	?___flmul+1,w
  4766  158B  00BF               	movwf	?_fround+1
  4767  158C  0824               	movf	?___flmul,w
  4768  158D  00BE               	movwf	?_fround
  4769  158E  0008               	return
  4770  158F                     l2843:	
  4771                           
  4772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  4773  158F  303F               	movlw	63
  4774  1590  00A7               	movwf	___flmul@b+3
  4775  1591  3000               	movlw	0
  4776  1592  00A6               	movwf	___flmul@b+2
  4777  1593  3000               	movlw	0
  4778  1594  00A5               	movwf	___flmul@b+1
  4779  1595  3000               	movlw	0
  4780  1596  00A4               	movwf	___flmul@b
  4781  1597  0851               	movf	fround@prec,w
  4782  1598  00C2               	movwf	??_fround
  4783  1599  3001               	movlw	1
  4784  159A                     u4455:	
  4785  159A  1003               	clrc
  4786  159B  0DC2               	rlf	??_fround,f
  4787  159C  3EFF               	addlw	-1
  4788  159D  1D03               	skipz
  4789  159E  2D9A               	goto	u4455
  4790  159F  1003               	clrc
  4791  15A0  0D42               	rlf	??_fround,w
  4792  15A1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4793  15A2  0084               	movwf	4
  4794  15A3  120A  118A  200D  160A  118A  	fcall	stringdir
  4795  15A8  00C3               	movwf	??_fround+1
  4796  15A9  120A  118A  200D  160A  118A  	fcall	stringdir
  4797  15AE  00C4               	movwf	??_fround+2
  4798  15AF  120A  118A  200D  160A  118A  	fcall	stringdir
  4799  15B4  00C5               	movwf	??_fround+3
  4800  15B5  120A  118A  200D  160A  118A  	fcall	stringdir
  4801  15BA  00C6               	movwf	??_fround+4
  4802  15BB  0846               	movf	??_fround+4,w
  4803  15BC  00AB               	movwf	___flmul@a+3
  4804  15BD  0845               	movf	??_fround+3,w
  4805  15BE  00AA               	movwf	___flmul@a+2
  4806  15BF  0844               	movf	??_fround+2,w
  4807  15C0  00A9               	movwf	___flmul@a+1
  4808  15C1  0843               	movf	??_fround+1,w
  4809  15C2  00A8               	movwf	___flmul@a
  4810  15C3  120A  158A  21A2   	fcall	___flmul
  4811  15C6  1283               	bcf	3,5	;RP0=0, select bank0
  4812  15C7  1303               	bcf	3,6	;RP1=0, select bank0
  4813  15C8  0827               	movf	?___flmul+3,w
  4814  15C9  00C1               	movwf	?_fround+3
  4815  15CA  0826               	movf	?___flmul+2,w
  4816  15CB  00C0               	movwf	?_fround+2
  4817  15CC  0825               	movf	?___flmul+1,w
  4818  15CD  00BF               	movwf	?_fround+1
  4819  15CE  0824               	movf	?___flmul,w
  4820  15CF  00BE               	movwf	?_fround
  4821  15D0  0008               	return
  4822  15D1                     __end_of_fround:	
  4823                           
  4824                           	psect	text7
  4825  1C72                     __ptext7:	
  4826 ;; *************** function ___lwmod *****************
  4827 ;; Defined at:
  4828 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;  divisor         2    0[COMMON] unsigned int 
  4831 ;;  dividend        2    2[COMMON] unsigned int 
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;  counter         1    5[COMMON] unsigned char 
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  2    0[COMMON] unsigned int 
  4836 ;; Registers used:
  4837 ;;		wreg, status,2, status,0
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/0
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4843 ;;      Params:         4       0       0       0       0
  4844 ;;      Locals:         1       0       0       0       0
  4845 ;;      Temps:          1       0       0       0       0
  4846 ;;      Totals:         6       0       0       0       0
  4847 ;;Total ram usage:        6 bytes
  4848 ;; Hardware stack levels used:    1
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_fround
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           
  4857                           ;psect for function ___lwmod
  4858  1C72                     ___lwmod:	
  4859                           
  4860                           ;incstack = 0
  4861                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4862  1C72  0870               	movf	___lwmod@divisor,w
  4863  1C73  0471               	iorwf	___lwmod@divisor+1,w
  4864  1C74  1903               	btfsc	3,2
  4865  1C75  2C9F               	goto	l2461
  4866  1C76  01F5               	clrf	___lwmod@counter
  4867  1C77  0AF5               	incf	___lwmod@counter,f
  4868  1C78                     l2451:	
  4869  1C78  1BF1               	btfsc	___lwmod@divisor+1,7
  4870  1C79  2C86               	goto	l2453
  4871  1C7A  3001               	movlw	1
  4872  1C7B                     u3495:	
  4873  1C7B  1003               	clrc
  4874  1C7C  0DF0               	rlf	___lwmod@divisor,f
  4875  1C7D  0DF1               	rlf	___lwmod@divisor+1,f
  4876  1C7E  3EFF               	addlw	-1
  4877  1C7F  1D03               	skipz
  4878  1C80  2C7B               	goto	u3495
  4879  1C81  3001               	movlw	1
  4880  1C82  00F4               	movwf	??___lwmod
  4881  1C83  0874               	movf	??___lwmod,w
  4882  1C84  07F5               	addwf	___lwmod@counter,f
  4883  1C85  2C78               	goto	l2451
  4884  1C86                     l2453:	
  4885  1C86  0871               	movf	___lwmod@divisor+1,w
  4886  1C87  0273               	subwf	___lwmod@dividend+1,w
  4887  1C88  1D03               	skipz
  4888  1C89  2C8C               	goto	u3515
  4889  1C8A  0870               	movf	___lwmod@divisor,w
  4890  1C8B  0272               	subwf	___lwmod@dividend,w
  4891  1C8C                     u3515:	
  4892  1C8C  1C03               	skipc
  4893  1C8D  2C94               	goto	l2457
  4894  1C8E  0870               	movf	___lwmod@divisor,w
  4895  1C8F  02F2               	subwf	___lwmod@dividend,f
  4896  1C90  0871               	movf	___lwmod@divisor+1,w
  4897  1C91  1C03               	skipc
  4898  1C92  03F3               	decf	___lwmod@dividend+1,f
  4899  1C93  02F3               	subwf	___lwmod@dividend+1,f
  4900  1C94                     l2457:	
  4901  1C94  3001               	movlw	1
  4902  1C95                     u3525:	
  4903  1C95  1003               	clrc
  4904  1C96  0CF1               	rrf	___lwmod@divisor+1,f
  4905  1C97  0CF0               	rrf	___lwmod@divisor,f
  4906  1C98  3EFF               	addlw	-1
  4907  1C99  1D03               	skipz
  4908  1C9A  2C95               	goto	u3525
  4909  1C9B  3001               	movlw	1
  4910  1C9C  02F5               	subwf	___lwmod@counter,f
  4911  1C9D  1D03               	btfss	3,2
  4912  1C9E  2C86               	goto	l2453
  4913  1C9F                     l2461:	
  4914  1C9F  0873               	movf	___lwmod@dividend+1,w
  4915  1CA0  00F1               	movwf	?___lwmod+1
  4916  1CA1  0872               	movf	___lwmod@dividend,w
  4917  1CA2  00F0               	movwf	?___lwmod
  4918  1CA3  0008               	return
  4919  1CA4                     __end_of___lwmod:	
  4920                           
  4921                           	psect	text8
  4922  1CDD                     __ptext8:	
  4923 ;; *************** function ___lwdiv *****************
  4924 ;; Defined at:
  4925 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;  divisor         2    6[COMMON] unsigned int 
  4928 ;;  dividend        2    8[COMMON] unsigned int 
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;  quotient        2   11[COMMON] unsigned int 
  4931 ;;  counter         1   13[COMMON] unsigned char 
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  2    6[COMMON] unsigned int 
  4934 ;; Registers used:
  4935 ;;		wreg, status,2, status,0
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4941 ;;      Params:         4       0       0       0       0
  4942 ;;      Locals:         3       0       0       0       0
  4943 ;;      Temps:          1       0       0       0       0
  4944 ;;      Totals:         8       0       0       0       0
  4945 ;;Total ram usage:        8 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; This function calls:
  4948 ;;		Nothing
  4949 ;; This function is called by:
  4950 ;;		_fround
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           
  4955                           ;psect for function ___lwdiv
  4956  1CDD                     ___lwdiv:	
  4957                           
  4958                           ;incstack = 0
  4959                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4960  1CDD  01FB               	clrf	___lwdiv@quotient
  4961  1CDE  01FC               	clrf	___lwdiv@quotient+1
  4962  1CDF  0876               	movf	___lwdiv@divisor,w
  4963  1CE0  0477               	iorwf	___lwdiv@divisor+1,w
  4964  1CE1  1903               	btfsc	3,2
  4965  1CE2  2D14               	goto	l2439
  4966  1CE3  01FD               	clrf	___lwdiv@counter
  4967  1CE4  0AFD               	incf	___lwdiv@counter,f
  4968  1CE5                     l2427:	
  4969  1CE5  1BF7               	btfsc	___lwdiv@divisor+1,7
  4970  1CE6  2CF3               	goto	l2429
  4971  1CE7  3001               	movlw	1
  4972  1CE8                     u3425:	
  4973  1CE8  1003               	clrc
  4974  1CE9  0DF6               	rlf	___lwdiv@divisor,f
  4975  1CEA  0DF7               	rlf	___lwdiv@divisor+1,f
  4976  1CEB  3EFF               	addlw	-1
  4977  1CEC  1D03               	skipz
  4978  1CED  2CE8               	goto	u3425
  4979  1CEE  3001               	movlw	1
  4980  1CEF  00FA               	movwf	??___lwdiv
  4981  1CF0  087A               	movf	??___lwdiv,w
  4982  1CF1  07FD               	addwf	___lwdiv@counter,f
  4983  1CF2  2CE5               	goto	l2427
  4984  1CF3                     l2429:	
  4985  1CF3  3001               	movlw	1
  4986  1CF4                     u3445:	
  4987  1CF4  1003               	clrc
  4988  1CF5  0DFB               	rlf	___lwdiv@quotient,f
  4989  1CF6  0DFC               	rlf	___lwdiv@quotient+1,f
  4990  1CF7  3EFF               	addlw	-1
  4991  1CF8  1D03               	skipz
  4992  1CF9  2CF4               	goto	u3445
  4993  1CFA  0877               	movf	___lwdiv@divisor+1,w
  4994  1CFB  0279               	subwf	___lwdiv@dividend+1,w
  4995  1CFC  1D03               	skipz
  4996  1CFD  2D00               	goto	u3455
  4997  1CFE  0876               	movf	___lwdiv@divisor,w
  4998  1CFF  0278               	subwf	___lwdiv@dividend,w
  4999  1D00                     u3455:	
  5000  1D00  1C03               	skipc
  5001  1D01  2D09               	goto	l2435
  5002  1D02  0876               	movf	___lwdiv@divisor,w
  5003  1D03  02F8               	subwf	___lwdiv@dividend,f
  5004  1D04  0877               	movf	___lwdiv@divisor+1,w
  5005  1D05  1C03               	skipc
  5006  1D06  03F9               	decf	___lwdiv@dividend+1,f
  5007  1D07  02F9               	subwf	___lwdiv@dividend+1,f
  5008  1D08  147B               	bsf	___lwdiv@quotient,0
  5009  1D09                     l2435:	
  5010  1D09  3001               	movlw	1
  5011  1D0A                     u3465:	
  5012  1D0A  1003               	clrc
  5013  1D0B  0CF7               	rrf	___lwdiv@divisor+1,f
  5014  1D0C  0CF6               	rrf	___lwdiv@divisor,f
  5015  1D0D  3EFF               	addlw	-1
  5016  1D0E  1D03               	skipz
  5017  1D0F  2D0A               	goto	u3465
  5018  1D10  3001               	movlw	1
  5019  1D11  02FD               	subwf	___lwdiv@counter,f
  5020  1D12  1D03               	btfss	3,2
  5021  1D13  2CF3               	goto	l2429
  5022  1D14                     l2439:	
  5023  1D14  087C               	movf	___lwdiv@quotient+1,w
  5024  1D15  00F7               	movwf	?___lwdiv+1
  5025  1D16  087B               	movf	___lwdiv@quotient,w
  5026  1D17  00F6               	movwf	?___lwdiv
  5027  1D18  0008               	return
  5028  1D19                     __end_of___lwdiv:	
  5029                           
  5030                           	psect	text9
  5031  09A2                     __ptext9:	
  5032 ;; *************** function ___flmul *****************
  5033 ;; Defined at:
  5034 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;  b               4    4[BANK0 ] unsigned int 
  5037 ;;  a               4    8[BANK0 ] unsigned int 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  prod            4   24[BANK0 ] struct .
  5040 ;;  grs             4   18[BANK0 ] unsigned long 
  5041 ;;  temp            2   28[BANK0 ] struct .
  5042 ;;  bexp            1   23[BANK0 ] unsigned char 
  5043 ;;  aexp            1   22[BANK0 ] unsigned char 
  5044 ;;  sign            1   17[BANK0 ] unsigned char 
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  4    4[BANK0 ] unsigned char 
  5047 ;; Registers used:
  5048 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5054 ;;      Params:         0       8       0       0       0
  5055 ;;      Locals:         0      13       0       0       0
  5056 ;;      Temps:          0       5       0       0       0
  5057 ;;      Totals:         0      26       0       0       0
  5058 ;;Total ram usage:       26 bytes
  5059 ;; Hardware stack levels used:    1
  5060 ;; Hardware stack levels required when called:    1
  5061 ;; This function calls:
  5062 ;;		__Umul8_16
  5063 ;; This function is called by:
  5064 ;;		_fround
  5065 ;;		_scale
  5066 ;;		_sprintf
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           
  5071                           ;psect for function ___flmul
  5072  09A2                     ___flmul:	
  5073                           
  5074                           ;incstack = 0
  5075                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5076  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  5077  09A3  1303               	bcf	3,6	;RP1=0, select bank0
  5078  09A4  0827               	movf	___flmul@b+3,w
  5079  09A5  3980               	andlw	128
  5080  09A6  00AC               	movwf	??___flmul
  5081  09A7  082C               	movf	??___flmul,w
  5082  09A8  00B1               	movwf	___flmul@sign
  5083  09A9  0827               	movf	___flmul@b+3,w
  5084  09AA  00AC               	movwf	??___flmul
  5085  09AB  072C               	addwf	??___flmul,w
  5086  09AC  00AD               	movwf	??___flmul+1
  5087  09AD  082D               	movf	??___flmul+1,w
  5088  09AE  00B7               	movwf	___flmul@bexp
  5089  09AF  1BA6               	btfsc	___flmul@b+2,7
  5090  09B0  1437               	bsf	___flmul@bexp,0
  5091  09B1  0837               	movf	___flmul@bexp,w
  5092  09B2  1903               	btfsc	3,2
  5093  09B3  29C1               	goto	l2675
  5094  09B4  0A37               	incf	___flmul@bexp,w
  5095  09B5  1D03               	btfss	3,2
  5096  09B6  29BF               	goto	l2673
  5097  09B7  3000               	movlw	0
  5098  09B8  00A7               	movwf	___flmul@b+3
  5099  09B9  3000               	movlw	0
  5100  09BA  00A6               	movwf	___flmul@b+2
  5101  09BB  3000               	movlw	0
  5102  09BC  00A5               	movwf	___flmul@b+1
  5103  09BD  3000               	movlw	0
  5104  09BE  00A4               	movwf	___flmul@b
  5105  09BF                     l2673:	
  5106  09BF  17A6               	bsf	___flmul@b+2,7
  5107  09C0  29C9               	goto	l2677
  5108  09C1                     l2675:	
  5109  09C1  3000               	movlw	0
  5110  09C2  00A7               	movwf	___flmul@b+3
  5111  09C3  3000               	movlw	0
  5112  09C4  00A6               	movwf	___flmul@b+2
  5113  09C5  3000               	movlw	0
  5114  09C6  00A5               	movwf	___flmul@b+1
  5115  09C7  3000               	movlw	0
  5116  09C8  00A4               	movwf	___flmul@b
  5117  09C9                     l2677:	
  5118  09C9  082B               	movf	___flmul@a+3,w
  5119  09CA  3980               	andlw	128
  5120  09CB  00AC               	movwf	??___flmul
  5121  09CC  082C               	movf	??___flmul,w
  5122  09CD  06B1               	xorwf	___flmul@sign,f
  5123  09CE  082B               	movf	___flmul@a+3,w
  5124  09CF  00AC               	movwf	??___flmul
  5125  09D0  072C               	addwf	??___flmul,w
  5126  09D1  00AD               	movwf	??___flmul+1
  5127  09D2  082D               	movf	??___flmul+1,w
  5128  09D3  00B6               	movwf	___flmul@aexp
  5129  09D4  1BAA               	btfsc	___flmul@a+2,7
  5130  09D5  1436               	bsf	___flmul@aexp,0
  5131  09D6  0836               	movf	___flmul@aexp,w
  5132  09D7  1903               	btfsc	3,2
  5133  09D8  29E6               	goto	l2693
  5134  09D9  0A36               	incf	___flmul@aexp,w
  5135  09DA  1D03               	btfss	3,2
  5136  09DB  29E4               	goto	l2691
  5137  09DC  3000               	movlw	0
  5138  09DD  00AB               	movwf	___flmul@a+3
  5139  09DE  3000               	movlw	0
  5140  09DF  00AA               	movwf	___flmul@a+2
  5141  09E0  3000               	movlw	0
  5142  09E1  00A9               	movwf	___flmul@a+1
  5143  09E2  3000               	movlw	0
  5144  09E3  00A8               	movwf	___flmul@a
  5145  09E4                     l2691:	
  5146  09E4  17AA               	bsf	___flmul@a+2,7
  5147  09E5  29EE               	goto	l2695
  5148  09E6                     l2693:	
  5149  09E6  3000               	movlw	0
  5150  09E7  00AB               	movwf	___flmul@a+3
  5151  09E8  3000               	movlw	0
  5152  09E9  00AA               	movwf	___flmul@a+2
  5153  09EA  3000               	movlw	0
  5154  09EB  00A9               	movwf	___flmul@a+1
  5155  09EC  3000               	movlw	0
  5156  09ED  00A8               	movwf	___flmul@a
  5157  09EE                     l2695:	
  5158  09EE  0836               	movf	___flmul@aexp,w
  5159  09EF  1D03               	btfss	3,2
  5160  09F0  0837               	movf	___flmul@bexp,w
  5161  09F1  1D03               	btfss	3,2
  5162  09F2  29FC               	goto	l2703
  5163  09F3  3000               	movlw	0
  5164  09F4  00A7               	movwf	?___flmul+3
  5165  09F5  3000               	movlw	0
  5166  09F6  00A6               	movwf	?___flmul+2
  5167  09F7  3000               	movlw	0
  5168  09F8  00A5               	movwf	?___flmul+1
  5169  09F9  3000               	movlw	0
  5170  09FA  00A4               	movwf	?___flmul
  5171  09FB  0008               	return
  5172  09FC                     l2703:	
  5173  09FC  0824               	movf	___flmul@b,w
  5174  09FD  00AC               	movwf	??___flmul
  5175  09FE  082C               	movf	??___flmul,w
  5176  09FF  00F0               	movwf	__Umul8_16@multiplicand
  5177  0A00  082A               	movf	___flmul@a+2,w
  5178  0A01  160A  158A  244F  120A  158A  	fcall	__Umul8_16
  5179  0A06  0871               	movf	?__Umul8_16+1,w
  5180  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  5181  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  5182  0A09  00BD               	movwf	___flmul@temp+1
  5183  0A0A  0870               	movf	?__Umul8_16,w
  5184  0A0B  00BC               	movwf	___flmul@temp
  5185  0A0C  083C               	movf	___flmul@temp,w
  5186  0A0D  00AC               	movwf	??___flmul
  5187  0A0E  01AD               	clrf	??___flmul+1
  5188  0A0F  01AE               	clrf	??___flmul+2
  5189  0A10  01AF               	clrf	??___flmul+3
  5190  0A11  082F               	movf	??___flmul+3,w
  5191  0A12  00B5               	movwf	___flmul@grs+3
  5192  0A13  082E               	movf	??___flmul+2,w
  5193  0A14  00B4               	movwf	___flmul@grs+2
  5194  0A15  082D               	movf	??___flmul+1,w
  5195  0A16  00B3               	movwf	___flmul@grs+1
  5196  0A17  082C               	movf	??___flmul,w
  5197  0A18  00B2               	movwf	___flmul@grs
  5198  0A19  083D               	movf	___flmul@temp+1,w
  5199  0A1A  00AC               	movwf	??___flmul
  5200  0A1B  01AD               	clrf	??___flmul+1
  5201  0A1C  01AE               	clrf	??___flmul+2
  5202  0A1D  01AF               	clrf	??___flmul+3
  5203  0A1E  082F               	movf	??___flmul+3,w
  5204  0A1F  00BB               	movwf	___flmul@prod+3
  5205  0A20  082E               	movf	??___flmul+2,w
  5206  0A21  00BA               	movwf	___flmul@prod+2
  5207  0A22  082D               	movf	??___flmul+1,w
  5208  0A23  00B9               	movwf	___flmul@prod+1
  5209  0A24  082C               	movf	??___flmul,w
  5210  0A25  00B8               	movwf	___flmul@prod
  5211  0A26  0825               	movf	___flmul@b+1,w
  5212  0A27  00AC               	movwf	??___flmul
  5213  0A28  082C               	movf	??___flmul,w
  5214  0A29  00F0               	movwf	__Umul8_16@multiplicand
  5215  0A2A  0829               	movf	___flmul@a+1,w
  5216  0A2B  160A  158A  244F  120A  158A  	fcall	__Umul8_16
  5217  0A30  0871               	movf	?__Umul8_16+1,w
  5218  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  5219  0A32  1303               	bcf	3,6	;RP1=0, select bank0
  5220  0A33  00BD               	movwf	___flmul@temp+1
  5221  0A34  0870               	movf	?__Umul8_16,w
  5222  0A35  00BC               	movwf	___flmul@temp
  5223  0A36  083C               	movf	___flmul@temp,w
  5224  0A37  00AC               	movwf	??___flmul
  5225  0A38  01AD               	clrf	??___flmul+1
  5226  0A39  01AE               	clrf	??___flmul+2
  5227  0A3A  01AF               	clrf	??___flmul+3
  5228  0A3B  082C               	movf	??___flmul,w
  5229  0A3C  07B2               	addwf	___flmul@grs,f
  5230  0A3D  082D               	movf	??___flmul+1,w
  5231  0A3E  1103               	clrz
  5232  0A3F  1803               	skipnc
  5233  0A40  3E01               	addlw	1
  5234  0A41  1D03               	btfss	3,2
  5235  0A42  07B3               	addwf	___flmul@grs+1,f
  5236  0A43  082E               	movf	??___flmul+2,w
  5237  0A44  1103               	clrz
  5238  0A45  1803               	skipnc
  5239  0A46  3E01               	addlw	1
  5240  0A47  1D03               	btfss	3,2
  5241  0A48  07B4               	addwf	___flmul@grs+2,f
  5242  0A49  082F               	movf	??___flmul+3,w
  5243  0A4A  1103               	clrz
  5244  0A4B  1803               	skipnc
  5245  0A4C  3E01               	addlw	1
  5246  0A4D  1D03               	btfss	3,2
  5247  0A4E  07B5               	addwf	___flmul@grs+3,f
  5248  0A4F  083D               	movf	___flmul@temp+1,w
  5249  0A50  00AC               	movwf	??___flmul
  5250  0A51  01AD               	clrf	??___flmul+1
  5251  0A52  01AE               	clrf	??___flmul+2
  5252  0A53  01AF               	clrf	??___flmul+3
  5253  0A54  082C               	movf	??___flmul,w
  5254  0A55  07B8               	addwf	___flmul@prod,f
  5255  0A56  082D               	movf	??___flmul+1,w
  5256  0A57  1103               	clrz
  5257  0A58  1803               	skipnc
  5258  0A59  3E01               	addlw	1
  5259  0A5A  1D03               	btfss	3,2
  5260  0A5B  07B9               	addwf	___flmul@prod+1,f
  5261  0A5C  082E               	movf	??___flmul+2,w
  5262  0A5D  1103               	clrz
  5263  0A5E  1803               	skipnc
  5264  0A5F  3E01               	addlw	1
  5265  0A60  1D03               	btfss	3,2
  5266  0A61  07BA               	addwf	___flmul@prod+2,f
  5267  0A62  082F               	movf	??___flmul+3,w
  5268  0A63  1103               	clrz
  5269  0A64  1803               	skipnc
  5270  0A65  3E01               	addlw	1
  5271  0A66  1D03               	btfss	3,2
  5272  0A67  07BB               	addwf	___flmul@prod+3,f
  5273  0A68  0826               	movf	___flmul@b+2,w
  5274  0A69  00AC               	movwf	??___flmul
  5275  0A6A  082C               	movf	??___flmul,w
  5276  0A6B  00F0               	movwf	__Umul8_16@multiplicand
  5277  0A6C  0828               	movf	___flmul@a,w
  5278  0A6D  160A  158A  244F  120A  158A  	fcall	__Umul8_16
  5279  0A72  0871               	movf	?__Umul8_16+1,w
  5280  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  5281  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  5282  0A75  00BD               	movwf	___flmul@temp+1
  5283  0A76  0870               	movf	?__Umul8_16,w
  5284  0A77  00BC               	movwf	___flmul@temp
  5285  0A78  083C               	movf	___flmul@temp,w
  5286  0A79  00AC               	movwf	??___flmul
  5287  0A7A  01AD               	clrf	??___flmul+1
  5288  0A7B  01AE               	clrf	??___flmul+2
  5289  0A7C  01AF               	clrf	??___flmul+3
  5290  0A7D  082C               	movf	??___flmul,w
  5291  0A7E  07B2               	addwf	___flmul@grs,f
  5292  0A7F  082D               	movf	??___flmul+1,w
  5293  0A80  1103               	clrz
  5294  0A81  1803               	skipnc
  5295  0A82  3E01               	addlw	1
  5296  0A83  1D03               	btfss	3,2
  5297  0A84  07B3               	addwf	___flmul@grs+1,f
  5298  0A85  082E               	movf	??___flmul+2,w
  5299  0A86  1103               	clrz
  5300  0A87  1803               	skipnc
  5301  0A88  3E01               	addlw	1
  5302  0A89  1D03               	btfss	3,2
  5303  0A8A  07B4               	addwf	___flmul@grs+2,f
  5304  0A8B  082F               	movf	??___flmul+3,w
  5305  0A8C  1103               	clrz
  5306  0A8D  1803               	skipnc
  5307  0A8E  3E01               	addlw	1
  5308  0A8F  1D03               	btfss	3,2
  5309  0A90  07B5               	addwf	___flmul@grs+3,f
  5310  0A91  083D               	movf	___flmul@temp+1,w
  5311  0A92  00AC               	movwf	??___flmul
  5312  0A93  01AD               	clrf	??___flmul+1
  5313  0A94  01AE               	clrf	??___flmul+2
  5314  0A95  01AF               	clrf	??___flmul+3
  5315  0A96  082C               	movf	??___flmul,w
  5316  0A97  07B8               	addwf	___flmul@prod,f
  5317  0A98  082D               	movf	??___flmul+1,w
  5318  0A99  1103               	clrz
  5319  0A9A  1803               	skipnc
  5320  0A9B  3E01               	addlw	1
  5321  0A9C  1D03               	btfss	3,2
  5322  0A9D  07B9               	addwf	___flmul@prod+1,f
  5323  0A9E  082E               	movf	??___flmul+2,w
  5324  0A9F  1103               	clrz
  5325  0AA0  1803               	skipnc
  5326  0AA1  3E01               	addlw	1
  5327  0AA2  1D03               	btfss	3,2
  5328  0AA3  07BA               	addwf	___flmul@prod+2,f
  5329  0AA4  082F               	movf	??___flmul+3,w
  5330  0AA5  1103               	clrz
  5331  0AA6  1803               	skipnc
  5332  0AA7  3E01               	addlw	1
  5333  0AA8  1D03               	btfss	3,2
  5334  0AA9  07BB               	addwf	___flmul@prod+3,f
  5335  0AAA  3008               	movlw	8
  5336  0AAB  00AC               	movwf	??___flmul
  5337  0AAC                     u4125:	
  5338  0AAC  1003               	clrc
  5339  0AAD  0DB2               	rlf	___flmul@grs,f
  5340  0AAE  0DB3               	rlf	___flmul@grs+1,f
  5341  0AAF  0DB4               	rlf	___flmul@grs+2,f
  5342  0AB0  0DB5               	rlf	___flmul@grs+3,f
  5343  0AB1  0BAC               	decfsz	??___flmul,f
  5344  0AB2  2AAC               	goto	u4125
  5345  0AB3  0825               	movf	___flmul@b+1,w
  5346  0AB4  00AC               	movwf	??___flmul
  5347  0AB5  082C               	movf	??___flmul,w
  5348  0AB6  00F0               	movwf	__Umul8_16@multiplicand
  5349  0AB7  0828               	movf	___flmul@a,w
  5350  0AB8  160A  158A  244F  120A  158A  	fcall	__Umul8_16
  5351  0ABD  0871               	movf	?__Umul8_16+1,w
  5352  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  5353  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  5354  0AC0  00BD               	movwf	___flmul@temp+1
  5355  0AC1  0870               	movf	?__Umul8_16,w
  5356  0AC2  00BC               	movwf	___flmul@temp
  5357  0AC3  083C               	movf	___flmul@temp,w
  5358  0AC4  00AC               	movwf	??___flmul
  5359  0AC5  083D               	movf	___flmul@temp+1,w
  5360  0AC6  00AD               	movwf	??___flmul+1
  5361  0AC7  01AE               	clrf	??___flmul+2
  5362  0AC8  01AF               	clrf	??___flmul+3
  5363  0AC9  082C               	movf	??___flmul,w
  5364  0ACA  07B2               	addwf	___flmul@grs,f
  5365  0ACB  082D               	movf	??___flmul+1,w
  5366  0ACC  1103               	clrz
  5367  0ACD  1803               	skipnc
  5368  0ACE  3E01               	addlw	1
  5369  0ACF  1D03               	btfss	3,2
  5370  0AD0  07B3               	addwf	___flmul@grs+1,f
  5371  0AD1  082E               	movf	??___flmul+2,w
  5372  0AD2  1103               	clrz
  5373  0AD3  1803               	skipnc
  5374  0AD4  3E01               	addlw	1
  5375  0AD5  1D03               	btfss	3,2
  5376  0AD6  07B4               	addwf	___flmul@grs+2,f
  5377  0AD7  082F               	movf	??___flmul+3,w
  5378  0AD8  1103               	clrz
  5379  0AD9  1803               	skipnc
  5380  0ADA  3E01               	addlw	1
  5381  0ADB  1D03               	btfss	3,2
  5382  0ADC  07B5               	addwf	___flmul@grs+3,f
  5383  0ADD  0824               	movf	___flmul@b,w
  5384  0ADE  00AC               	movwf	??___flmul
  5385  0ADF  082C               	movf	??___flmul,w
  5386  0AE0  00F0               	movwf	__Umul8_16@multiplicand
  5387  0AE1  0829               	movf	___flmul@a+1,w
  5388  0AE2  160A  158A  244F  120A  158A  	fcall	__Umul8_16
  5389  0AE7  0871               	movf	?__Umul8_16+1,w
  5390  0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  5391  0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  5392  0AEA  00BD               	movwf	___flmul@temp+1
  5393  0AEB  0870               	movf	?__Umul8_16,w
  5394  0AEC  00BC               	movwf	___flmul@temp
  5395  0AED  083C               	movf	___flmul@temp,w
  5396  0AEE  00AC               	movwf	??___flmul
  5397  0AEF  083D               	movf	___flmul@temp+1,w
  5398  0AF0  00AD               	movwf	??___flmul+1
  5399  0AF1  01AE               	clrf	??___flmul+2
  5400  0AF2  01AF               	clrf	??___flmul+3
  5401  0AF3  082C               	movf	??___flmul,w
  5402  0AF4  07B2               	addwf	___flmul@grs,f
  5403  0AF5  082D               	movf	??___flmul+1,w
  5404  0AF6  1103               	clrz
  5405  0AF7  1803               	skipnc
  5406  0AF8  3E01               	addlw	1
  5407  0AF9  1D03               	btfss	3,2
  5408  0AFA  07B3               	addwf	___flmul@grs+1,f
  5409  0AFB  082E               	movf	??___flmul+2,w
  5410  0AFC  1103               	clrz
  5411  0AFD  1803               	skipnc
  5412  0AFE  3E01               	addlw	1
  5413  0AFF  1D03               	btfss	3,2
  5414  0B00  07B4               	addwf	___flmul@grs+2,f
  5415  0B01  082F               	movf	??___flmul+3,w
  5416  0B02  1103               	clrz
  5417  0B03  1803               	skipnc
  5418  0B04  3E01               	addlw	1
  5419  0B05  1D03               	btfss	3,2
  5420  0B06  07B5               	addwf	___flmul@grs+3,f
  5421  0B07  3008               	movlw	8
  5422  0B08  00AC               	movwf	??___flmul
  5423  0B09                     u4155:	
  5424  0B09  1003               	clrc
  5425  0B0A  0DB2               	rlf	___flmul@grs,f
  5426  0B0B  0DB3               	rlf	___flmul@grs+1,f
  5427  0B0C  0DB4               	rlf	___flmul@grs+2,f
  5428  0B0D  0DB5               	rlf	___flmul@grs+3,f
  5429  0B0E  0BAC               	decfsz	??___flmul,f
  5430  0B0F  2B09               	goto	u4155
  5431  0B10  0824               	movf	___flmul@b,w
  5432  0B11  00AC               	movwf	??___flmul
  5433  0B12  082C               	movf	??___flmul,w
  5434  0B13  00F0               	movwf	__Umul8_16@multiplicand
  5435  0B14  0828               	movf	___flmul@a,w
  5436  0B15  160A  158A  244F  120A  158A  	fcall	__Umul8_16
  5437  0B1A  0871               	movf	?__Umul8_16+1,w
  5438  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  5439  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  5440  0B1D  00BD               	movwf	___flmul@temp+1
  5441  0B1E  0870               	movf	?__Umul8_16,w
  5442  0B1F  00BC               	movwf	___flmul@temp
  5443  0B20  083C               	movf	___flmul@temp,w
  5444  0B21  00AC               	movwf	??___flmul
  5445  0B22  083D               	movf	___flmul@temp+1,w
  5446  0B23  00AD               	movwf	??___flmul+1
  5447  0B24  01AE               	clrf	??___flmul+2
  5448  0B25  01AF               	clrf	??___flmul+3
  5449  0B26  082C               	movf	??___flmul,w
  5450  0B27  07B2               	addwf	___flmul@grs,f
  5451  0B28  082D               	movf	??___flmul+1,w
  5452  0B29  1103               	clrz
  5453  0B2A  1803               	skipnc
  5454  0B2B  3E01               	addlw	1
  5455  0B2C  1D03               	btfss	3,2
  5456  0B2D  07B3               	addwf	___flmul@grs+1,f
  5457  0B2E  082E               	movf	??___flmul+2,w
  5458  0B2F  1103               	clrz
  5459  0B30  1803               	skipnc
  5460  0B31  3E01               	addlw	1
  5461  0B32  1D03               	btfss	3,2
  5462  0B33  07B4               	addwf	___flmul@grs+2,f
  5463  0B34  082F               	movf	??___flmul+3,w
  5464  0B35  1103               	clrz
  5465  0B36  1803               	skipnc
  5466  0B37  3E01               	addlw	1
  5467  0B38  1D03               	btfss	3,2
  5468  0B39  07B5               	addwf	___flmul@grs+3,f
  5469  0B3A  0825               	movf	___flmul@b+1,w
  5470  0B3B  00AC               	movwf	??___flmul
  5471  0B3C  082C               	movf	??___flmul,w
  5472  0B3D  00F0               	movwf	__Umul8_16@multiplicand
  5473  0B3E  082A               	movf	___flmul@a+2,w
  5474  0B3F  160A  158A  244F  120A  158A  	fcall	__Umul8_16
  5475  0B44  0871               	movf	?__Umul8_16+1,w
  5476  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  5477  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  5478  0B47  00BD               	movwf	___flmul@temp+1
  5479  0B48  0870               	movf	?__Umul8_16,w
  5480  0B49  00BC               	movwf	___flmul@temp
  5481  0B4A  083C               	movf	___flmul@temp,w
  5482  0B4B  00AC               	movwf	??___flmul
  5483  0B4C  083D               	movf	___flmul@temp+1,w
  5484  0B4D  00AD               	movwf	??___flmul+1
  5485  0B4E  01AE               	clrf	??___flmul+2
  5486  0B4F  01AF               	clrf	??___flmul+3
  5487  0B50  082C               	movf	??___flmul,w
  5488  0B51  07B8               	addwf	___flmul@prod,f
  5489  0B52  082D               	movf	??___flmul+1,w
  5490  0B53  1103               	clrz
  5491  0B54  1803               	skipnc
  5492  0B55  3E01               	addlw	1
  5493  0B56  1D03               	btfss	3,2
  5494  0B57  07B9               	addwf	___flmul@prod+1,f
  5495  0B58  082E               	movf	??___flmul+2,w
  5496  0B59  1103               	clrz
  5497  0B5A  1803               	skipnc
  5498  0B5B  3E01               	addlw	1
  5499  0B5C  1D03               	btfss	3,2
  5500  0B5D  07BA               	addwf	___flmul@prod+2,f
  5501  0B5E  082F               	movf	??___flmul+3,w
  5502  0B5F  1103               	clrz
  5503  0B60  1803               	skipnc
  5504  0B61  3E01               	addlw	1
  5505  0B62  1D03               	btfss	3,2
  5506  0B63  07BB               	addwf	___flmul@prod+3,f
  5507  0B64  0826               	movf	___flmul@b+2,w
  5508  0B65  00AC               	movwf	??___flmul
  5509  0B66  082C               	movf	??___flmul,w
  5510  0B67  00F0               	movwf	__Umul8_16@multiplicand
  5511  0B68  0829               	movf	___flmul@a+1,w
  5512  0B69  160A  158A  244F  120A  158A  	fcall	__Umul8_16
  5513  0B6E  0871               	movf	?__Umul8_16+1,w
  5514  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  5515  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  5516  0B71  00BD               	movwf	___flmul@temp+1
  5517  0B72  0870               	movf	?__Umul8_16,w
  5518  0B73  00BC               	movwf	___flmul@temp
  5519  0B74  083C               	movf	___flmul@temp,w
  5520  0B75  00AC               	movwf	??___flmul
  5521  0B76  083D               	movf	___flmul@temp+1,w
  5522  0B77  00AD               	movwf	??___flmul+1
  5523  0B78  01AE               	clrf	??___flmul+2
  5524  0B79  01AF               	clrf	??___flmul+3
  5525  0B7A  082C               	movf	??___flmul,w
  5526  0B7B  07B8               	addwf	___flmul@prod,f
  5527  0B7C  082D               	movf	??___flmul+1,w
  5528  0B7D  1103               	clrz
  5529  0B7E  1803               	skipnc
  5530  0B7F  3E01               	addlw	1
  5531  0B80  1D03               	btfss	3,2
  5532  0B81  07B9               	addwf	___flmul@prod+1,f
  5533  0B82  082E               	movf	??___flmul+2,w
  5534  0B83  1103               	clrz
  5535  0B84  1803               	skipnc
  5536  0B85  3E01               	addlw	1
  5537  0B86  1D03               	btfss	3,2
  5538  0B87  07BA               	addwf	___flmul@prod+2,f
  5539  0B88  082F               	movf	??___flmul+3,w
  5540  0B89  1103               	clrz
  5541  0B8A  1803               	skipnc
  5542  0B8B  3E01               	addlw	1
  5543  0B8C  1D03               	btfss	3,2
  5544  0B8D  07BB               	addwf	___flmul@prod+3,f
  5545  0B8E  0826               	movf	___flmul@b+2,w
  5546  0B8F  00AC               	movwf	??___flmul
  5547  0B90  082C               	movf	??___flmul,w
  5548  0B91  00F0               	movwf	__Umul8_16@multiplicand
  5549  0B92  082A               	movf	___flmul@a+2,w
  5550  0B93  160A  158A  244F  120A  158A  	fcall	__Umul8_16
  5551  0B98  0871               	movf	?__Umul8_16+1,w
  5552  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  5553  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  5554  0B9B  00BD               	movwf	___flmul@temp+1
  5555  0B9C  0870               	movf	?__Umul8_16,w
  5556  0B9D  00BC               	movwf	___flmul@temp
  5557  0B9E  083C               	movf	___flmul@temp,w
  5558  0B9F  00AC               	movwf	??___flmul
  5559  0BA0  083D               	movf	___flmul@temp+1,w
  5560  0BA1  00AD               	movwf	??___flmul+1
  5561  0BA2  01AE               	clrf	??___flmul+2
  5562  0BA3  01AF               	clrf	??___flmul+3
  5563  0BA4  3008               	movlw	8
  5564  0BA5                     u4195:	
  5565  0BA5  1003               	clrc
  5566  0BA6  0DAC               	rlf	??___flmul,f
  5567  0BA7  0DAD               	rlf	??___flmul+1,f
  5568  0BA8  0DAE               	rlf	??___flmul+2,f
  5569  0BA9  0DAF               	rlf	??___flmul+3,f
  5570  0BAA  3EFF               	addlw	-1
  5571  0BAB  1D03               	skipz
  5572  0BAC  2BA5               	goto	u4195
  5573  0BAD  082C               	movf	??___flmul,w
  5574  0BAE  07B8               	addwf	___flmul@prod,f
  5575  0BAF  082D               	movf	??___flmul+1,w
  5576  0BB0  1103               	clrz
  5577  0BB1  1803               	skipnc
  5578  0BB2  3E01               	addlw	1
  5579  0BB3  1D03               	btfss	3,2
  5580  0BB4  07B9               	addwf	___flmul@prod+1,f
  5581  0BB5  082E               	movf	??___flmul+2,w
  5582  0BB6  1103               	clrz
  5583  0BB7  1803               	skipnc
  5584  0BB8  3E01               	addlw	1
  5585  0BB9  1D03               	btfss	3,2
  5586  0BBA  07BA               	addwf	___flmul@prod+2,f
  5587  0BBB  082F               	movf	??___flmul+3,w
  5588  0BBC  1103               	clrz
  5589  0BBD  1803               	skipnc
  5590  0BBE  3E01               	addlw	1
  5591  0BBF  1D03               	btfss	3,2
  5592  0BC0  07BB               	addwf	___flmul@prod+3,f
  5593  0BC1  0832               	movf	___flmul@grs,w
  5594  0BC2  00AC               	movwf	??___flmul
  5595  0BC3  0833               	movf	___flmul@grs+1,w
  5596  0BC4  00AD               	movwf	??___flmul+1
  5597  0BC5  0834               	movf	___flmul@grs+2,w
  5598  0BC6  00AE               	movwf	??___flmul+2
  5599  0BC7  0835               	movf	___flmul@grs+3,w
  5600  0BC8  00AF               	movwf	??___flmul+3
  5601  0BC9  3018               	movlw	24
  5602  0BCA                     u4215:	
  5603  0BCA  1003               	clrc
  5604  0BCB  0CAF               	rrf	??___flmul+3,f
  5605  0BCC  0CAE               	rrf	??___flmul+2,f
  5606  0BCD  0CAD               	rrf	??___flmul+1,f
  5607  0BCE  0CAC               	rrf	??___flmul,f
  5608  0BCF  3EFF               	addlw	-1
  5609  0BD0  1D03               	skipz
  5610  0BD1  2BCA               	goto	u4215
  5611  0BD2  082C               	movf	??___flmul,w
  5612  0BD3  07B8               	addwf	___flmul@prod,f
  5613  0BD4  082D               	movf	??___flmul+1,w
  5614  0BD5  1103               	clrz
  5615  0BD6  1803               	skipnc
  5616  0BD7  3E01               	addlw	1
  5617  0BD8  1D03               	btfss	3,2
  5618  0BD9  07B9               	addwf	___flmul@prod+1,f
  5619  0BDA  082E               	movf	??___flmul+2,w
  5620  0BDB  1103               	clrz
  5621  0BDC  1803               	skipnc
  5622  0BDD  3E01               	addlw	1
  5623  0BDE  1D03               	btfss	3,2
  5624  0BDF  07BA               	addwf	___flmul@prod+2,f
  5625  0BE0  082F               	movf	??___flmul+3,w
  5626  0BE1  1103               	clrz
  5627  0BE2  1803               	skipnc
  5628  0BE3  3E01               	addlw	1
  5629  0BE4  1D03               	btfss	3,2
  5630  0BE5  07BB               	addwf	___flmul@prod+3,f
  5631  0BE6  3008               	movlw	8
  5632  0BE7  00AC               	movwf	??___flmul
  5633  0BE8                     u4235:	
  5634  0BE8  1003               	clrc
  5635  0BE9  0DB2               	rlf	___flmul@grs,f
  5636  0BEA  0DB3               	rlf	___flmul@grs+1,f
  5637  0BEB  0DB4               	rlf	___flmul@grs+2,f
  5638  0BEC  0DB5               	rlf	___flmul@grs+3,f
  5639  0BED  0BAC               	decfsz	??___flmul,f
  5640  0BEE  2BE8               	goto	u4235
  5641  0BEF  0837               	movf	___flmul@bexp,w
  5642  0BF0  0736               	addwf	___flmul@aexp,w
  5643  0BF1  00AC               	movwf	??___flmul
  5644  0BF2  01AD               	clrf	??___flmul+1
  5645  0BF3  0DAD               	rlf	??___flmul+1,f
  5646  0BF4  082C               	movf	??___flmul,w
  5647  0BF5  3E82               	addlw	130
  5648  0BF6  00BC               	movwf	___flmul@temp
  5649  0BF7  082D               	movf	??___flmul+1,w
  5650  0BF8  1803               	skipnc
  5651  0BF9  3E01               	addlw	1
  5652  0BFA  3EFF               	addlw	255
  5653  0BFB  00BD               	movwf	___flmul@temp+1
  5654  0BFC                     l2755:	
  5655  0BFC  1BBA               	btfsc	___flmul@prod+2,7
  5656  0BFD  2C19               	goto	l2757
  5657  0BFE  3001               	movlw	1
  5658  0BFF  00AC               	movwf	??___flmul
  5659  0C00                     u4245:	
  5660  0C00  1003               	clrc
  5661  0C01  0DB8               	rlf	___flmul@prod,f
  5662  0C02  0DB9               	rlf	___flmul@prod+1,f
  5663  0C03  0DBA               	rlf	___flmul@prod+2,f
  5664  0C04  0DBB               	rlf	___flmul@prod+3,f
  5665  0C05  0BAC               	decfsz	??___flmul,f
  5666  0C06  2C00               	goto	u4245
  5667  0C07  1BB5               	btfsc	___flmul@grs+3,7
  5668  0C08  1438               	bsf	___flmul@prod,0
  5669  0C09  3001               	movlw	1
  5670  0C0A  00AC               	movwf	??___flmul
  5671  0C0B                     u4265:	
  5672  0C0B  1003               	clrc
  5673  0C0C  0DB2               	rlf	___flmul@grs,f
  5674  0C0D  0DB3               	rlf	___flmul@grs+1,f
  5675  0C0E  0DB4               	rlf	___flmul@grs+2,f
  5676  0C0F  0DB5               	rlf	___flmul@grs+3,f
  5677  0C10  0BAC               	decfsz	??___flmul,f
  5678  0C11  2C0B               	goto	u4265
  5679  0C12  30FF               	movlw	255
  5680  0C13  07BC               	addwf	___flmul@temp,f
  5681  0C14  1803               	skipnc
  5682  0C15  0ABD               	incf	___flmul@temp+1,f
  5683  0C16  30FF               	movlw	255
  5684  0C17  07BD               	addwf	___flmul@temp+1,f
  5685  0C18  2BFC               	goto	l2755
  5686  0C19                     l2757:	
  5687  0C19  01B6               	clrf	___flmul@aexp
  5688  0C1A  1FB5               	btfss	___flmul@grs+3,7
  5689  0C1B  2C32               	goto	l2767
  5690  0C1C  30FF               	movlw	255
  5691  0C1D  0532               	andwf	___flmul@grs,w
  5692  0C1E  00AC               	movwf	??___flmul
  5693  0C1F  30FF               	movlw	255
  5694  0C20  0533               	andwf	___flmul@grs+1,w
  5695  0C21  00AD               	movwf	??___flmul+1
  5696  0C22  30FF               	movlw	255
  5697  0C23  0534               	andwf	___flmul@grs+2,w
  5698  0C24  00AE               	movwf	??___flmul+2
  5699  0C25  307F               	movlw	127
  5700  0C26  0535               	andwf	___flmul@grs+3,w
  5701  0C27  00AF               	movwf	??___flmul+3
  5702  0C28  082F               	movf	??___flmul+3,w
  5703  0C29  042E               	iorwf	??___flmul+2,w
  5704  0C2A  042D               	iorwf	??___flmul+1,w
  5705  0C2B  042C               	iorwf	??___flmul,w
  5706  0C2C  1903               	skipnz
  5707  0C2D  1838               	btfsc	___flmul@prod,0
  5708  0C2E  2C30               	goto	l2763
  5709  0C2F  2C32               	goto	l2767
  5710  0C30                     l2763:	
  5711  0C30  01B6               	clrf	___flmul@aexp
  5712  0C31  0AB6               	incf	___flmul@aexp,f
  5713  0C32                     l2767:	
  5714  0C32  0836               	movf	___flmul@aexp,w
  5715  0C33  1903               	btfsc	3,2
  5716  0C34  2C64               	goto	l2777
  5717  0C35  3001               	movlw	1
  5718  0C36  07B8               	addwf	___flmul@prod,f
  5719  0C37  3000               	movlw	0
  5720  0C38  1803               	skipnc
  5721  0C39  3001               	movlw	1
  5722  0C3A  07B9               	addwf	___flmul@prod+1,f
  5723  0C3B  3000               	movlw	0
  5724  0C3C  1803               	skipnc
  5725  0C3D  3001               	movlw	1
  5726  0C3E  07BA               	addwf	___flmul@prod+2,f
  5727  0C3F  3000               	movlw	0
  5728  0C40  1803               	skipnc
  5729  0C41  3001               	movlw	1
  5730  0C42  07BB               	addwf	___flmul@prod+3,f
  5731  0C43  1C3B               	btfss	___flmul@prod+3,0
  5732  0C44  2C64               	goto	l2777
  5733  0C45  0838               	movf	___flmul@prod,w
  5734  0C46  00AC               	movwf	??___flmul
  5735  0C47  0839               	movf	___flmul@prod+1,w
  5736  0C48  00AD               	movwf	??___flmul+1
  5737  0C49  083A               	movf	___flmul@prod+2,w
  5738  0C4A  00AE               	movwf	??___flmul+2
  5739  0C4B  083B               	movf	___flmul@prod+3,w
  5740  0C4C  00AF               	movwf	??___flmul+3
  5741  0C4D  3001               	movlw	1
  5742  0C4E  00B0               	movwf	??___flmul+4
  5743  0C4F                     u4335:	
  5744  0C4F  0D2F               	rlf	??___flmul+3,w
  5745  0C50  0CAF               	rrf	??___flmul+3,f
  5746  0C51  0CAE               	rrf	??___flmul+2,f
  5747  0C52  0CAD               	rrf	??___flmul+1,f
  5748  0C53  0CAC               	rrf	??___flmul,f
  5749  0C54  0BB0               	decfsz	??___flmul+4,f
  5750  0C55  2C4F               	goto	u4335
  5751  0C56  082F               	movf	??___flmul+3,w
  5752  0C57  00BB               	movwf	___flmul@prod+3
  5753  0C58  082E               	movf	??___flmul+2,w
  5754  0C59  00BA               	movwf	___flmul@prod+2
  5755  0C5A  082D               	movf	??___flmul+1,w
  5756  0C5B  00B9               	movwf	___flmul@prod+1
  5757  0C5C  082C               	movf	??___flmul,w
  5758  0C5D  00B8               	movwf	___flmul@prod
  5759  0C5E  3001               	movlw	1
  5760  0C5F  07BC               	addwf	___flmul@temp,f
  5761  0C60  1803               	skipnc
  5762  0C61  0ABD               	incf	___flmul@temp+1,f
  5763  0C62  3000               	movlw	0
  5764  0C63  07BD               	addwf	___flmul@temp+1,f
  5765  0C64                     l2777:	
  5766  0C64  083D               	movf	___flmul@temp+1,w
  5767  0C65  3A80               	xorlw	128
  5768  0C66  00FF               	movwf	127
  5769  0C67  3080               	movlw	128
  5770  0C68  027F               	subwf	127,w
  5771  0C69  1D03               	skipz
  5772  0C6A  2C6D               	goto	u4345
  5773  0C6B  30FF               	movlw	255
  5774  0C6C  023C               	subwf	___flmul@temp,w
  5775  0C6D                     u4345:	
  5776  0C6D  1C03               	skipc
  5777  0C6E  2C7A               	goto	l2781
  5778  0C6F  307F               	movlw	127
  5779  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  5780  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  5781  0C72  00BB               	movwf	___flmul@prod+3
  5782  0C73  3080               	movlw	128
  5783  0C74  00BA               	movwf	___flmul@prod+2
  5784  0C75  3000               	movlw	0
  5785  0C76  00B9               	movwf	___flmul@prod+1
  5786  0C77  3000               	movlw	0
  5787  0C78  00B8               	movwf	___flmul@prod
  5788  0C79  2CAA               	goto	l735
  5789  0C7A                     l2781:	
  5790  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  5791  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  5792  0C7C  083D               	movf	___flmul@temp+1,w
  5793  0C7D  3A80               	xorlw	128
  5794  0C7E  00FF               	movwf	127
  5795  0C7F  3080               	movlw	128
  5796  0C80  027F               	subwf	127,w
  5797  0C81  1D03               	skipz
  5798  0C82  2C85               	goto	u4355
  5799  0C83  3001               	movlw	1
  5800  0C84  023C               	subwf	___flmul@temp,w
  5801  0C85                     u4355:	
  5802  0C85  1803               	skipnc
  5803  0C86  2C93               	goto	l2787
  5804  0C87  3000               	movlw	0
  5805  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  5806  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  5807  0C8A  00BB               	movwf	___flmul@prod+3
  5808  0C8B  3000               	movlw	0
  5809  0C8C  00BA               	movwf	___flmul@prod+2
  5810  0C8D  3000               	movlw	0
  5811  0C8E  00B9               	movwf	___flmul@prod+1
  5812  0C8F  3000               	movlw	0
  5813  0C90  00B8               	movwf	___flmul@prod
  5814  0C91  01B1               	clrf	___flmul@sign
  5815  0C92  2CAA               	goto	l735
  5816  0C93                     l2787:	
  5817  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  5818  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  5819  0C95  083C               	movf	___flmul@temp,w
  5820  0C96  00AC               	movwf	??___flmul
  5821  0C97  082C               	movf	??___flmul,w
  5822  0C98  00B7               	movwf	___flmul@bexp
  5823  0C99  30FF               	movlw	255
  5824  0C9A  05B8               	andwf	___flmul@prod,f
  5825  0C9B  30FF               	movlw	255
  5826  0C9C  05B9               	andwf	___flmul@prod+1,f
  5827  0C9D  307F               	movlw	127
  5828  0C9E  05BA               	andwf	___flmul@prod+2,f
  5829  0C9F  3000               	movlw	0
  5830  0CA0  05BB               	andwf	___flmul@prod+3,f
  5831  0CA1  1837               	btfsc	___flmul@bexp,0
  5832  0CA2  17BA               	bsf	___flmul@prod+2,7
  5833  0CA3  0837               	movf	___flmul@bexp,w
  5834  0CA4  00AC               	movwf	??___flmul
  5835  0CA5  1003               	clrc
  5836  0CA6  0C2C               	rrf	??___flmul,w
  5837  0CA7  00AD               	movwf	??___flmul+1
  5838  0CA8  082D               	movf	??___flmul+1,w
  5839  0CA9  00BB               	movwf	___flmul@prod+3
  5840  0CAA                     l735:	
  5841  0CAA  0831               	movf	___flmul@sign,w
  5842  0CAB  00AC               	movwf	??___flmul
  5843  0CAC  082C               	movf	??___flmul,w
  5844  0CAD  04BB               	iorwf	___flmul@prod+3,f
  5845  0CAE  083B               	movf	___flmul@prod+3,w
  5846  0CAF  00A7               	movwf	?___flmul+3
  5847  0CB0  083A               	movf	___flmul@prod+2,w
  5848  0CB1  00A6               	movwf	?___flmul+2
  5849  0CB2  0839               	movf	___flmul@prod+1,w
  5850  0CB3  00A5               	movwf	?___flmul+1
  5851  0CB4  0838               	movf	___flmul@prod,w
  5852  0CB5  00A4               	movwf	?___flmul
  5853  0CB6  0008               	return
  5854  0CB7                     __end_of___flmul:	
  5855                           
  5856                           	psect	text10
  5857  1C4F                     __ptext10:	
  5858 ;; *************** function __Umul8_16 *****************
  5859 ;; Defined at:
  5860 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  multiplier      1    wreg     unsigned char 
  5863 ;;  multiplicand    1    0[COMMON] unsigned char 
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;  multiplier      1    8[COMMON] unsigned char 
  5866 ;;  word_mpld       2    6[COMMON] unsigned int 
  5867 ;;  product         2    4[COMMON] unsigned int 
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  2    0[COMMON] unsigned int 
  5870 ;; Registers used:
  5871 ;;		wreg, status,2, status,0
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5877 ;;      Params:         2       0       0       0       0
  5878 ;;      Locals:         5       0       0       0       0
  5879 ;;      Temps:          2       0       0       0       0
  5880 ;;      Totals:         9       0       0       0       0
  5881 ;;Total ram usage:        9 bytes
  5882 ;; Hardware stack levels used:    1
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		___flmul
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           
  5891                           ;psect for function __Umul8_16
  5892  1C4F                     __Umul8_16:	
  5893                           
  5894                           ;incstack = 0
  5895                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5896                           ;__Umul8_16@multiplier stored from wreg
  5897  1C4F  00F8               	movwf	__Umul8_16@multiplier
  5898  1C50  01F4               	clrf	__Umul8_16@product
  5899  1C51  01F5               	clrf	__Umul8_16@product+1
  5900  1C52  0870               	movf	__Umul8_16@multiplicand,w
  5901  1C53  00F2               	movwf	??__Umul8_16
  5902  1C54  01F3               	clrf	??__Umul8_16+1
  5903  1C55  0872               	movf	??__Umul8_16,w
  5904  1C56  00F6               	movwf	__Umul8_16@word_mpld
  5905  1C57  0873               	movf	??__Umul8_16+1,w
  5906  1C58  00F7               	movwf	__Umul8_16@word_mpld+1
  5907  1C59                     l2315:	
  5908  1C59  1C78               	btfss	__Umul8_16@multiplier,0
  5909  1C5A  2C61               	goto	l789
  5910  1C5B  0876               	movf	__Umul8_16@word_mpld,w
  5911  1C5C  07F4               	addwf	__Umul8_16@product,f
  5912  1C5D  1803               	skipnc
  5913  1C5E  0AF5               	incf	__Umul8_16@product+1,f
  5914  1C5F  0877               	movf	__Umul8_16@word_mpld+1,w
  5915  1C60  07F5               	addwf	__Umul8_16@product+1,f
  5916  1C61                     l789:	
  5917  1C61  3001               	movlw	1
  5918  1C62                     u3165:	
  5919  1C62  1003               	clrc
  5920  1C63  0DF6               	rlf	__Umul8_16@word_mpld,f
  5921  1C64  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5922  1C65  3EFF               	addlw	-1
  5923  1C66  1D03               	skipz
  5924  1C67  2C62               	goto	u3165
  5925  1C68  1003               	clrc
  5926  1C69  0CF8               	rrf	__Umul8_16@multiplier,f
  5927  1C6A  0878               	movf	__Umul8_16@multiplier,w
  5928  1C6B  1D03               	btfss	3,2
  5929  1C6C  2C59               	goto	l2315
  5930  1C6D  0875               	movf	__Umul8_16@product+1,w
  5931  1C6E  00F1               	movwf	?__Umul8_16+1
  5932  1C6F  0874               	movf	__Umul8_16@product,w
  5933  1C70  00F0               	movwf	?__Umul8_16
  5934  1C71  0008               	return
  5935  1C72                     __end_of__Umul8_16:	
  5936                           
  5937                           	psect	text11
  5938  10D4                     __ptext11:	
  5939 ;; *************** function __tdiv_to_l_ *****************
  5940 ;; Defined at:
  5941 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  f1              4    0[COMMON] float 
  5944 ;;  f2              4    4[COMMON] float 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;  quot            4    0[BANK0 ] unsigned long 
  5947 ;;  exp1            1    5[BANK0 ] unsigned char 
  5948 ;;  cntr            1    4[BANK0 ] unsigned char 
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  4    0[COMMON] unsigned long 
  5951 ;; Registers used:
  5952 ;;		wreg, status,2, status,0
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5958 ;;      Params:         8       0       0       0       0
  5959 ;;      Locals:         0       6       0       0       0
  5960 ;;      Temps:          4       0       0       0       0
  5961 ;;      Totals:        12       6       0       0       0
  5962 ;;Total ram usage:       18 bytes
  5963 ;; Hardware stack levels used:    1
  5964 ;; This function calls:
  5965 ;;		Nothing
  5966 ;; This function is called by:
  5967 ;;		_sprintf
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           
  5972                           ;psect for function __tdiv_to_l_
  5973  10D4                     __tdiv_to_l_:	
  5974                           
  5975                           ;incstack = 0
  5976                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5977  10D4  0870               	movf	__tdiv_to_l_@f1,w
  5978  10D5  00F8               	movwf	??__tdiv_to_l_
  5979  10D6  0871               	movf	__tdiv_to_l_@f1+1,w
  5980  10D7  00F9               	movwf	??__tdiv_to_l_+1
  5981  10D8  0872               	movf	__tdiv_to_l_@f1+2,w
  5982  10D9  00FA               	movwf	??__tdiv_to_l_+2
  5983  10DA  1003               	clrc
  5984  10DB  0D79               	rlf	??__tdiv_to_l_+1,w
  5985  10DC  0D7A               	rlf	??__tdiv_to_l_+2,w
  5986  10DD  00FB               	movwf	??__tdiv_to_l_+3
  5987  10DE  087B               	movf	??__tdiv_to_l_+3,w
  5988  10DF  1283               	bcf	3,5	;RP0=0, select bank0
  5989  10E0  1303               	bcf	3,6	;RP1=0, select bank0
  5990  10E1  00A5               	movwf	__tdiv_to_l_@exp1
  5991  10E2  0825               	movf	__tdiv_to_l_@exp1,w
  5992  10E3  1D03               	btfss	3,2
  5993  10E4  28EE               	goto	l2905
  5994  10E5                     l2901:	
  5995  10E5  3000               	movlw	0
  5996  10E6  00F3               	movwf	?__tdiv_to_l_+3
  5997  10E7  3000               	movlw	0
  5998  10E8  00F2               	movwf	?__tdiv_to_l_+2
  5999  10E9  3000               	movlw	0
  6000  10EA  00F1               	movwf	?__tdiv_to_l_+1
  6001  10EB  3000               	movlw	0
  6002  10EC  00F0               	movwf	?__tdiv_to_l_
  6003  10ED  0008               	return
  6004  10EE                     l2905:	
  6005  10EE  0874               	movf	__tdiv_to_l_@f2,w
  6006  10EF  00F8               	movwf	??__tdiv_to_l_
  6007  10F0  0875               	movf	__tdiv_to_l_@f2+1,w
  6008  10F1  00F9               	movwf	??__tdiv_to_l_+1
  6009  10F2  0876               	movf	__tdiv_to_l_@f2+2,w
  6010  10F3  00FA               	movwf	??__tdiv_to_l_+2
  6011  10F4  1003               	clrc
  6012  10F5  0D79               	rlf	??__tdiv_to_l_+1,w
  6013  10F6  0D7A               	rlf	??__tdiv_to_l_+2,w
  6014  10F7  00FB               	movwf	??__tdiv_to_l_+3
  6015  10F8  087B               	movf	??__tdiv_to_l_+3,w
  6016  10F9  00A4               	movwf	__tdiv_to_l_@cntr
  6017  10FA  0824               	movf	__tdiv_to_l_@cntr,w
  6018  10FB  1903               	btfsc	3,2
  6019  10FC  28E5               	goto	l2901
  6020  10FD  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6021  10FE  30FF               	movlw	255
  6022  10FF  05F0               	andwf	__tdiv_to_l_@f1,f
  6023  1100  30FF               	movlw	255
  6024  1101  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6025  1102  3000               	movlw	0
  6026  1103  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6027  1104  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6028  1105  30FF               	movlw	255
  6029  1106  05F4               	andwf	__tdiv_to_l_@f2,f
  6030  1107  30FF               	movlw	255
  6031  1108  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6032  1109  3000               	movlw	0
  6033  110A  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6034  110B  3000               	movlw	0
  6035  110C  00A3               	movwf	__tdiv_to_l_@quot+3
  6036  110D  3000               	movlw	0
  6037  110E  00A2               	movwf	__tdiv_to_l_@quot+2
  6038  110F  3000               	movlw	0
  6039  1110  00A1               	movwf	__tdiv_to_l_@quot+1
  6040  1111  3000               	movlw	0
  6041  1112  00A0               	movwf	__tdiv_to_l_@quot
  6042  1113  307F               	movlw	127
  6043  1114  02A5               	subwf	__tdiv_to_l_@exp1,f
  6044  1115  3098               	movlw	152
  6045  1116  0724               	addwf	__tdiv_to_l_@cntr,w
  6046  1117  00F8               	movwf	??__tdiv_to_l_
  6047  1118  0878               	movf	??__tdiv_to_l_,w
  6048  1119  02A5               	subwf	__tdiv_to_l_@exp1,f
  6049  111A  3018               	movlw	24
  6050  111B  00F8               	movwf	??__tdiv_to_l_
  6051  111C  0878               	movf	??__tdiv_to_l_,w
  6052  111D  00A4               	movwf	__tdiv_to_l_@cntr
  6053  111E                     l2919:	
  6054  111E  3001               	movlw	1
  6055  111F  00F8               	movwf	??__tdiv_to_l_
  6056  1120                     u4675:	
  6057  1120  1003               	clrc
  6058  1121  0DA0               	rlf	__tdiv_to_l_@quot,f
  6059  1122  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6060  1123  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6061  1124  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6062  1125  0BF8               	decfsz	??__tdiv_to_l_,f
  6063  1126  2920               	goto	u4675
  6064  1127  0876               	movf	__tdiv_to_l_@f2+2,w
  6065  1128  0272               	subwf	__tdiv_to_l_@f1+2,w
  6066  1129  1D03               	skipz
  6067  112A  2931               	goto	u4685
  6068  112B  0875               	movf	__tdiv_to_l_@f2+1,w
  6069  112C  0271               	subwf	__tdiv_to_l_@f1+1,w
  6070  112D  1D03               	skipz
  6071  112E  2931               	goto	u4685
  6072  112F  0874               	movf	__tdiv_to_l_@f2,w
  6073  1130  0270               	subwf	__tdiv_to_l_@f1,w
  6074  1131                     u4685:	
  6075  1131  1C03               	skipc
  6076  1132  293E               	goto	l2927
  6077  1133  0874               	movf	__tdiv_to_l_@f2,w
  6078  1134  02F0               	subwf	__tdiv_to_l_@f1,f
  6079  1135  0875               	movf	__tdiv_to_l_@f2+1,w
  6080  1136  1C03               	skipc
  6081  1137  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6082  1138  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6083  1139  0876               	movf	__tdiv_to_l_@f2+2,w
  6084  113A  1C03               	skipc
  6085  113B  0A76               	incf	__tdiv_to_l_@f2+2,w
  6086  113C  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6087  113D  1420               	bsf	__tdiv_to_l_@quot,0
  6088  113E                     l2927:	
  6089  113E  3001               	movlw	1
  6090  113F                     u4695:	
  6091  113F  1003               	clrc
  6092  1140  0DF0               	rlf	__tdiv_to_l_@f1,f
  6093  1141  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6094  1142  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6095  1143  3EFF               	addlw	-1
  6096  1144  1D03               	skipz
  6097  1145  293F               	goto	u4695
  6098  1146  3001               	movlw	1
  6099  1147  02A4               	subwf	__tdiv_to_l_@cntr,f
  6100  1148  1D03               	btfss	3,2
  6101  1149  291E               	goto	l2919
  6102  114A  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6103  114B  2961               	goto	l2939
  6104  114C  0825               	movf	__tdiv_to_l_@exp1,w
  6105  114D  3A80               	xorlw	128
  6106  114E  3E97               	addlw	151
  6107  114F  1C03               	btfss	3,0
  6108  1150  28E5               	goto	l2901
  6109  1151                     l2937:	
  6110  1151  3001               	movlw	1
  6111  1152                     u4735:	
  6112  1152  1003               	clrc
  6113  1153  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6114  1154  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6115  1155  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6116  1156  0CA0               	rrf	__tdiv_to_l_@quot,f
  6117  1157  3EFF               	addlw	-1
  6118  1158  1D03               	skipz
  6119  1159  2952               	goto	u4735
  6120  115A  3001               	movlw	1
  6121  115B  00F8               	movwf	??__tdiv_to_l_
  6122  115C  0878               	movf	??__tdiv_to_l_,w
  6123  115D  07A5               	addwf	__tdiv_to_l_@exp1,f
  6124  115E  1903               	btfsc	3,2
  6125  115F  2974               	goto	l2947
  6126  1160  2951               	goto	l2937
  6127  1161                     l2939:	
  6128  1161  3018               	movlw	24
  6129  1162  0225               	subwf	__tdiv_to_l_@exp1,w
  6130  1163  1803               	btfsc	3,0
  6131  1164  28E5               	goto	l2901
  6132  1165                     l528:	
  6133  1165  0825               	movf	__tdiv_to_l_@exp1,w
  6134  1166  1903               	btfsc	3,2
  6135  1167  2974               	goto	l2947
  6136  1168  3001               	movlw	1
  6137  1169  00F8               	movwf	??__tdiv_to_l_
  6138  116A                     u4765:	
  6139  116A  1003               	clrc
  6140  116B  0DA0               	rlf	__tdiv_to_l_@quot,f
  6141  116C  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6142  116D  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6143  116E  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6144  116F  0BF8               	decfsz	??__tdiv_to_l_,f
  6145  1170  296A               	goto	u4765
  6146  1171  3001               	movlw	1
  6147  1172  02A5               	subwf	__tdiv_to_l_@exp1,f
  6148  1173  2965               	goto	l528
  6149  1174                     l2947:	
  6150  1174  0823               	movf	__tdiv_to_l_@quot+3,w
  6151  1175  00F3               	movwf	?__tdiv_to_l_+3
  6152  1176  0822               	movf	__tdiv_to_l_@quot+2,w
  6153  1177  00F2               	movwf	?__tdiv_to_l_+2
  6154  1178  0821               	movf	__tdiv_to_l_@quot+1,w
  6155  1179  00F1               	movwf	?__tdiv_to_l_+1
  6156  117A  0820               	movf	__tdiv_to_l_@quot,w
  6157  117B  00F0               	movwf	?__tdiv_to_l_
  6158  117C  0008               	return
  6159  117D                     __end_of__tdiv_to_l_:	
  6160                           
  6161                           	psect	text12
  6162  117D                     __ptext12:	
  6163 ;; *************** function __div_to_l_ *****************
  6164 ;; Defined at:
  6165 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  f1              4    0[COMMON] unsigned long 
  6168 ;;  f2              4    4[COMMON] unsigned long 
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;  quot            4    0[BANK0 ] unsigned long 
  6171 ;;  exp1            1    5[BANK0 ] unsigned char 
  6172 ;;  cntr            1    4[BANK0 ] unsigned char 
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  4    0[COMMON] unsigned long 
  6175 ;; Registers used:
  6176 ;;		wreg, status,2, status,0
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6182 ;;      Params:         8       0       0       0       0
  6183 ;;      Locals:         0       6       0       0       0
  6184 ;;      Temps:          1       0       0       0       0
  6185 ;;      Totals:         9       6       0       0       0
  6186 ;;Total ram usage:       15 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; This function calls:
  6189 ;;		Nothing
  6190 ;; This function is called by:
  6191 ;;		_sprintf
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           
  6196                           ;psect for function __div_to_l_
  6197  117D                     __div_to_l_:	
  6198                           
  6199                           ;incstack = 0
  6200                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6201  117D  1003               	clrc
  6202  117E  0D72               	rlf	__div_to_l_@f1+2,w
  6203  117F  0D73               	rlf	__div_to_l_@f1+3,w
  6204  1180  00F8               	movwf	??__div_to_l_
  6205  1181  0878               	movf	??__div_to_l_,w
  6206  1182  1283               	bcf	3,5	;RP0=0, select bank0
  6207  1183  1303               	bcf	3,6	;RP1=0, select bank0
  6208  1184  00A5               	movwf	__div_to_l_@exp1
  6209  1185  0825               	movf	__div_to_l_@exp1,w
  6210  1186  1D03               	btfss	3,2
  6211  1187  2991               	goto	l2957
  6212  1188                     l2953:	
  6213  1188  3000               	movlw	0
  6214  1189  00F3               	movwf	?__div_to_l_+3
  6215  118A  3000               	movlw	0
  6216  118B  00F2               	movwf	?__div_to_l_+2
  6217  118C  3000               	movlw	0
  6218  118D  00F1               	movwf	?__div_to_l_+1
  6219  118E  3000               	movlw	0
  6220  118F  00F0               	movwf	?__div_to_l_
  6221  1190  0008               	return
  6222  1191                     l2957:	
  6223  1191  1003               	clrc
  6224  1192  0D76               	rlf	__div_to_l_@f2+2,w
  6225  1193  0D77               	rlf	__div_to_l_@f2+3,w
  6226  1194  00F8               	movwf	??__div_to_l_
  6227  1195  0878               	movf	??__div_to_l_,w
  6228  1196  00A4               	movwf	__div_to_l_@cntr
  6229  1197  0824               	movf	__div_to_l_@cntr,w
  6230  1198  1903               	btfsc	3,2
  6231  1199  2988               	goto	l2953
  6232  119A  17F2               	bsf	__div_to_l_@f1+2,7
  6233  119B  30FF               	movlw	255
  6234  119C  05F0               	andwf	__div_to_l_@f1,f
  6235  119D  30FF               	movlw	255
  6236  119E  05F1               	andwf	__div_to_l_@f1+1,f
  6237  119F  30FF               	movlw	255
  6238  11A0  05F2               	andwf	__div_to_l_@f1+2,f
  6239  11A1  3000               	movlw	0
  6240  11A2  05F3               	andwf	__div_to_l_@f1+3,f
  6241  11A3  17F6               	bsf	__div_to_l_@f2+2,7
  6242  11A4  30FF               	movlw	255
  6243  11A5  05F4               	andwf	__div_to_l_@f2,f
  6244  11A6  30FF               	movlw	255
  6245  11A7  05F5               	andwf	__div_to_l_@f2+1,f
  6246  11A8  30FF               	movlw	255
  6247  11A9  05F6               	andwf	__div_to_l_@f2+2,f
  6248  11AA  3000               	movlw	0
  6249  11AB  05F7               	andwf	__div_to_l_@f2+3,f
  6250  11AC  3000               	movlw	0
  6251  11AD  00A3               	movwf	__div_to_l_@quot+3
  6252  11AE  3000               	movlw	0
  6253  11AF  00A2               	movwf	__div_to_l_@quot+2
  6254  11B0  3000               	movlw	0
  6255  11B1  00A1               	movwf	__div_to_l_@quot+1
  6256  11B2  3000               	movlw	0
  6257  11B3  00A0               	movwf	__div_to_l_@quot
  6258  11B4  307F               	movlw	127
  6259  11B5  02A5               	subwf	__div_to_l_@exp1,f
  6260  11B6  30A0               	movlw	160
  6261  11B7  0724               	addwf	__div_to_l_@cntr,w
  6262  11B8  00F8               	movwf	??__div_to_l_
  6263  11B9  0878               	movf	??__div_to_l_,w
  6264  11BA  02A5               	subwf	__div_to_l_@exp1,f
  6265  11BB  3020               	movlw	32
  6266  11BC  00F8               	movwf	??__div_to_l_
  6267  11BD  0878               	movf	??__div_to_l_,w
  6268  11BE  00A4               	movwf	__div_to_l_@cntr
  6269  11BF                     l2971:	
  6270  11BF  3001               	movlw	1
  6271  11C0  00F8               	movwf	??__div_to_l_
  6272  11C1                     u4805:	
  6273  11C1  1003               	clrc
  6274  11C2  0DA0               	rlf	__div_to_l_@quot,f
  6275  11C3  0DA1               	rlf	__div_to_l_@quot+1,f
  6276  11C4  0DA2               	rlf	__div_to_l_@quot+2,f
  6277  11C5  0DA3               	rlf	__div_to_l_@quot+3,f
  6278  11C6  0BF8               	decfsz	??__div_to_l_,f
  6279  11C7  29C1               	goto	u4805
  6280  11C8  0877               	movf	__div_to_l_@f2+3,w
  6281  11C9  0273               	subwf	__div_to_l_@f1+3,w
  6282  11CA  1D03               	skipz
  6283  11CB  29D6               	goto	u4815
  6284  11CC  0876               	movf	__div_to_l_@f2+2,w
  6285  11CD  0272               	subwf	__div_to_l_@f1+2,w
  6286  11CE  1D03               	skipz
  6287  11CF  29D6               	goto	u4815
  6288  11D0  0875               	movf	__div_to_l_@f2+1,w
  6289  11D1  0271               	subwf	__div_to_l_@f1+1,w
  6290  11D2  1D03               	skipz
  6291  11D3  29D6               	goto	u4815
  6292  11D4  0874               	movf	__div_to_l_@f2,w
  6293  11D5  0270               	subwf	__div_to_l_@f1,w
  6294  11D6                     u4815:	
  6295  11D6  1C03               	skipc
  6296  11D7  29E7               	goto	l2979
  6297  11D8  0874               	movf	__div_to_l_@f2,w
  6298  11D9  02F0               	subwf	__div_to_l_@f1,f
  6299  11DA  0875               	movf	__div_to_l_@f2+1,w
  6300  11DB  1C03               	skipc
  6301  11DC  0F75               	incfsz	__div_to_l_@f2+1,w
  6302  11DD  02F1               	subwf	__div_to_l_@f1+1,f
  6303  11DE  0876               	movf	__div_to_l_@f2+2,w
  6304  11DF  1C03               	skipc
  6305  11E0  0F76               	incfsz	__div_to_l_@f2+2,w
  6306  11E1  02F2               	subwf	__div_to_l_@f1+2,f
  6307  11E2  0877               	movf	__div_to_l_@f2+3,w
  6308  11E3  1C03               	skipc
  6309  11E4  0F77               	incfsz	__div_to_l_@f2+3,w
  6310  11E5  02F3               	subwf	__div_to_l_@f1+3,f
  6311  11E6  1420               	bsf	__div_to_l_@quot,0
  6312  11E7                     l2979:	
  6313  11E7  3001               	movlw	1
  6314  11E8  00F8               	movwf	??__div_to_l_
  6315  11E9                     u4825:	
  6316  11E9  1003               	clrc
  6317  11EA  0DF0               	rlf	__div_to_l_@f1,f
  6318  11EB  0DF1               	rlf	__div_to_l_@f1+1,f
  6319  11EC  0DF2               	rlf	__div_to_l_@f1+2,f
  6320  11ED  0DF3               	rlf	__div_to_l_@f1+3,f
  6321  11EE  0BF8               	decfsz	??__div_to_l_,f
  6322  11EF  29E9               	goto	u4825
  6323  11F0  3001               	movlw	1
  6324  11F1  02A4               	subwf	__div_to_l_@cntr,f
  6325  11F2  1D03               	btfss	3,2
  6326  11F3  29BF               	goto	l2971
  6327  11F4  1FA5               	btfss	__div_to_l_@exp1,7
  6328  11F5  2A0B               	goto	l2991
  6329  11F6  0825               	movf	__div_to_l_@exp1,w
  6330  11F7  3A80               	xorlw	128
  6331  11F8  3E9F               	addlw	159
  6332  11F9  1C03               	btfss	3,0
  6333  11FA  2988               	goto	l2953
  6334  11FB                     l2989:	
  6335  11FB  3001               	movlw	1
  6336  11FC                     u4865:	
  6337  11FC  1003               	clrc
  6338  11FD  0CA3               	rrf	__div_to_l_@quot+3,f
  6339  11FE  0CA2               	rrf	__div_to_l_@quot+2,f
  6340  11FF  0CA1               	rrf	__div_to_l_@quot+1,f
  6341  1200  0CA0               	rrf	__div_to_l_@quot,f
  6342  1201  3EFF               	addlw	-1
  6343  1202  1D03               	skipz
  6344  1203  29FC               	goto	u4865
  6345  1204  3001               	movlw	1
  6346  1205  00F8               	movwf	??__div_to_l_
  6347  1206  0878               	movf	??__div_to_l_,w
  6348  1207  07A5               	addwf	__div_to_l_@exp1,f
  6349  1208  1903               	btfsc	3,2
  6350  1209  2A1E               	goto	l2999
  6351  120A  29FB               	goto	l2989
  6352  120B                     l2991:	
  6353  120B  3020               	movlw	32
  6354  120C  0225               	subwf	__div_to_l_@exp1,w
  6355  120D  1803               	btfsc	3,0
  6356  120E  2988               	goto	l2953
  6357  120F                     l481:	
  6358  120F  0825               	movf	__div_to_l_@exp1,w
  6359  1210  1903               	btfsc	3,2
  6360  1211  2A1E               	goto	l2999
  6361  1212  3001               	movlw	1
  6362  1213  00F8               	movwf	??__div_to_l_
  6363  1214                     u4895:	
  6364  1214  1003               	clrc
  6365  1215  0DA0               	rlf	__div_to_l_@quot,f
  6366  1216  0DA1               	rlf	__div_to_l_@quot+1,f
  6367  1217  0DA2               	rlf	__div_to_l_@quot+2,f
  6368  1218  0DA3               	rlf	__div_to_l_@quot+3,f
  6369  1219  0BF8               	decfsz	??__div_to_l_,f
  6370  121A  2A14               	goto	u4895
  6371  121B  3001               	movlw	1
  6372  121C  02A5               	subwf	__div_to_l_@exp1,f
  6373  121D  2A0F               	goto	l481
  6374  121E                     l2999:	
  6375  121E  0823               	movf	__div_to_l_@quot+3,w
  6376  121F  00F3               	movwf	?__div_to_l_+3
  6377  1220  0822               	movf	__div_to_l_@quot+2,w
  6378  1221  00F2               	movwf	?__div_to_l_+2
  6379  1222  0821               	movf	__div_to_l_@quot+1,w
  6380  1223  00F1               	movwf	?__div_to_l_+1
  6381  1224  0820               	movf	__div_to_l_@quot,w
  6382  1225  00F0               	movwf	?__div_to_l_
  6383  1226  0008               	return
  6384  1227                     __end_of__div_to_l_:	
  6385                           
  6386                           	psect	text13
  6387  1C0C                     __ptext13:	
  6388 ;; *************** function ___wmul *****************
  6389 ;; Defined at:
  6390 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;  multiplier      2    0[COMMON] unsigned int 
  6393 ;;  multiplicand    2    2[COMMON] unsigned int 
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;  product         2    4[COMMON] unsigned int 
  6396 ;; Return value:  Size  Location     Type
  6397 ;;                  2    0[COMMON] unsigned int 
  6398 ;; Registers used:
  6399 ;;		wreg, status,2, status,0
  6400 ;; Tracked objects:
  6401 ;;		On entry : 0/0
  6402 ;;		On exit  : 0/0
  6403 ;;		Unchanged: 0/0
  6404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6405 ;;      Params:         4       0       0       0       0
  6406 ;;      Locals:         2       0       0       0       0
  6407 ;;      Temps:          0       0       0       0       0
  6408 ;;      Totals:         6       0       0       0       0
  6409 ;;Total ram usage:        6 bytes
  6410 ;; Hardware stack levels used:    1
  6411 ;; This function calls:
  6412 ;;		Nothing
  6413 ;; This function is called by:
  6414 ;;		_sprintf
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           
  6419                           ;psect for function ___wmul
  6420  1C0C                     ___wmul:	
  6421                           
  6422                           ;incstack = 0
  6423                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6424  1C0C  01F4               	clrf	___wmul@product
  6425  1C0D  01F5               	clrf	___wmul@product+1
  6426  1C0E                     l3005:	
  6427  1C0E  1C70               	btfss	___wmul@multiplier,0
  6428  1C0F  2C16               	goto	l300
  6429  1C10  0872               	movf	___wmul@multiplicand,w
  6430  1C11  07F4               	addwf	___wmul@product,f
  6431  1C12  1803               	skipnc
  6432  1C13  0AF5               	incf	___wmul@product+1,f
  6433  1C14  0873               	movf	___wmul@multiplicand+1,w
  6434  1C15  07F5               	addwf	___wmul@product+1,f
  6435  1C16                     l300:	
  6436  1C16  3001               	movlw	1
  6437  1C17                     u4925:	
  6438  1C17  1003               	clrc
  6439  1C18  0DF2               	rlf	___wmul@multiplicand,f
  6440  1C19  0DF3               	rlf	___wmul@multiplicand+1,f
  6441  1C1A  3EFF               	addlw	-1
  6442  1C1B  1D03               	skipz
  6443  1C1C  2C17               	goto	u4925
  6444  1C1D  3001               	movlw	1
  6445  1C1E                     u4935:	
  6446  1C1E  1003               	clrc
  6447  1C1F  0CF1               	rrf	___wmul@multiplier+1,f
  6448  1C20  0CF0               	rrf	___wmul@multiplier,f
  6449  1C21  3EFF               	addlw	-1
  6450  1C22  1D03               	skipz
  6451  1C23  2C1E               	goto	u4935
  6452  1C24  0870               	movf	___wmul@multiplier,w
  6453  1C25  0471               	iorwf	___wmul@multiplier+1,w
  6454  1C26  1D03               	btfss	3,2
  6455  1C27  2C0E               	goto	l3005
  6456  1C28  0875               	movf	___wmul@product+1,w
  6457  1C29  00F1               	movwf	?___wmul+1
  6458  1C2A  0874               	movf	___wmul@product,w
  6459  1C2B  00F0               	movwf	?___wmul
  6460  1C2C  0008               	return
  6461  1C2D                     __end_of___wmul:	
  6462                           
  6463                           	psect	text14
  6464  1E33                     __ptext14:	
  6465 ;; *************** function ___llmod *****************
  6466 ;; Defined at:
  6467 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;  divisor         4    0[COMMON] unsigned long 
  6470 ;;  dividend        4    4[COMMON] unsigned long 
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;  counter         1    9[COMMON] unsigned char 
  6473 ;; Return value:  Size  Location     Type
  6474 ;;                  4    0[COMMON] unsigned long 
  6475 ;; Registers used:
  6476 ;;		wreg, status,2, status,0
  6477 ;; Tracked objects:
  6478 ;;		On entry : 0/0
  6479 ;;		On exit  : 0/0
  6480 ;;		Unchanged: 0/0
  6481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6482 ;;      Params:         8       0       0       0       0
  6483 ;;      Locals:         1       0       0       0       0
  6484 ;;      Temps:          1       0       0       0       0
  6485 ;;      Totals:        10       0       0       0       0
  6486 ;;Total ram usage:       10 bytes
  6487 ;; Hardware stack levels used:    1
  6488 ;; This function calls:
  6489 ;;		Nothing
  6490 ;; This function is called by:
  6491 ;;		_sprintf
  6492 ;; This function uses a non-reentrant model
  6493 ;;
  6494                           
  6495                           
  6496                           ;psect for function ___llmod
  6497  1E33                     ___llmod:	
  6498                           
  6499                           ;incstack = 0
  6500                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6501  1E33  0873               	movf	___llmod@divisor+3,w
  6502  1E34  0472               	iorwf	___llmod@divisor+2,w
  6503  1E35  0471               	iorwf	___llmod@divisor+1,w
  6504  1E36  0470               	iorwf	___llmod@divisor,w
  6505  1E37  1903               	skipnz
  6506  1E38  2E76               	goto	l3133
  6507  1E39  01F9               	clrf	___llmod@counter
  6508  1E3A  0AF9               	incf	___llmod@counter,f
  6509  1E3B                     l3123:	
  6510  1E3B  1BF3               	btfsc	___llmod@divisor+3,7
  6511  1E3C  2E4B               	goto	l3125
  6512  1E3D  3001               	movlw	1
  6513  1E3E  00F8               	movwf	??___llmod
  6514  1E3F                     u5245:	
  6515  1E3F  1003               	clrc
  6516  1E40  0DF0               	rlf	___llmod@divisor,f
  6517  1E41  0DF1               	rlf	___llmod@divisor+1,f
  6518  1E42  0DF2               	rlf	___llmod@divisor+2,f
  6519  1E43  0DF3               	rlf	___llmod@divisor+3,f
  6520  1E44  0BF8               	decfsz	??___llmod,f
  6521  1E45  2E3F               	goto	u5245
  6522  1E46  3001               	movlw	1
  6523  1E47  00F8               	movwf	??___llmod
  6524  1E48  0878               	movf	??___llmod,w
  6525  1E49  07F9               	addwf	___llmod@counter,f
  6526  1E4A  2E3B               	goto	l3123
  6527  1E4B                     l3125:	
  6528  1E4B  0873               	movf	___llmod@divisor+3,w
  6529  1E4C  0277               	subwf	___llmod@dividend+3,w
  6530  1E4D  1D03               	skipz
  6531  1E4E  2E59               	goto	u5265
  6532  1E4F  0872               	movf	___llmod@divisor+2,w
  6533  1E50  0276               	subwf	___llmod@dividend+2,w
  6534  1E51  1D03               	skipz
  6535  1E52  2E59               	goto	u5265
  6536  1E53  0871               	movf	___llmod@divisor+1,w
  6537  1E54  0275               	subwf	___llmod@dividend+1,w
  6538  1E55  1D03               	skipz
  6539  1E56  2E59               	goto	u5265
  6540  1E57  0870               	movf	___llmod@divisor,w
  6541  1E58  0274               	subwf	___llmod@dividend,w
  6542  1E59                     u5265:	
  6543  1E59  1C03               	skipc
  6544  1E5A  2E69               	goto	l3129
  6545  1E5B  0870               	movf	___llmod@divisor,w
  6546  1E5C  02F4               	subwf	___llmod@dividend,f
  6547  1E5D  0871               	movf	___llmod@divisor+1,w
  6548  1E5E  1C03               	skipc
  6549  1E5F  0F71               	incfsz	___llmod@divisor+1,w
  6550  1E60  02F5               	subwf	___llmod@dividend+1,f
  6551  1E61  0872               	movf	___llmod@divisor+2,w
  6552  1E62  1C03               	skipc
  6553  1E63  0F72               	incfsz	___llmod@divisor+2,w
  6554  1E64  02F6               	subwf	___llmod@dividend+2,f
  6555  1E65  0873               	movf	___llmod@divisor+3,w
  6556  1E66  1C03               	skipc
  6557  1E67  0F73               	incfsz	___llmod@divisor+3,w
  6558  1E68  02F7               	subwf	___llmod@dividend+3,f
  6559  1E69                     l3129:	
  6560  1E69  3001               	movlw	1
  6561  1E6A                     u5275:	
  6562  1E6A  1003               	clrc
  6563  1E6B  0CF3               	rrf	___llmod@divisor+3,f
  6564  1E6C  0CF2               	rrf	___llmod@divisor+2,f
  6565  1E6D  0CF1               	rrf	___llmod@divisor+1,f
  6566  1E6E  0CF0               	rrf	___llmod@divisor,f
  6567  1E6F  3EFF               	addlw	-1
  6568  1E70  1D03               	skipz
  6569  1E71  2E6A               	goto	u5275
  6570  1E72  3001               	movlw	1
  6571  1E73  02F9               	subwf	___llmod@counter,f
  6572  1E74  1D03               	btfss	3,2
  6573  1E75  2E4B               	goto	l3125
  6574  1E76                     l3133:	
  6575  1E76  0877               	movf	___llmod@dividend+3,w
  6576  1E77  00F3               	movwf	?___llmod+3
  6577  1E78  0876               	movf	___llmod@dividend+2,w
  6578  1E79  00F2               	movwf	?___llmod+2
  6579  1E7A  0875               	movf	___llmod@dividend+1,w
  6580  1E7B  00F1               	movwf	?___llmod+1
  6581  1E7C  0874               	movf	___llmod@dividend,w
  6582  1E7D  00F0               	movwf	?___llmod
  6583  1E7E  0008               	return
  6584  1E7F                     __end_of___llmod:	
  6585                           
  6586                           	psect	text15
  6587  1F35                     __ptext15:	
  6588 ;; *************** function ___lldiv *****************
  6589 ;; Defined at:
  6590 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  6591 ;; Parameters:    Size  Location     Type
  6592 ;;  divisor         4    0[COMMON] unsigned long 
  6593 ;;  dividend        4    4[COMMON] unsigned long 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  quotient        4    9[COMMON] unsigned long 
  6596 ;;  counter         1   13[COMMON] unsigned char 
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  4    0[COMMON] unsigned long 
  6599 ;; Registers used:
  6600 ;;		wreg, status,2, status,0
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6606 ;;      Params:         8       0       0       0       0
  6607 ;;      Locals:         5       0       0       0       0
  6608 ;;      Temps:          1       0       0       0       0
  6609 ;;      Totals:        14       0       0       0       0
  6610 ;;Total ram usage:       14 bytes
  6611 ;; Hardware stack levels used:    1
  6612 ;; This function calls:
  6613 ;;		Nothing
  6614 ;; This function is called by:
  6615 ;;		_sprintf
  6616 ;; This function uses a non-reentrant model
  6617 ;;
  6618                           
  6619                           
  6620                           ;psect for function ___lldiv
  6621  1F35                     ___lldiv:	
  6622                           
  6623                           ;incstack = 0
  6624                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6625  1F35  3000               	movlw	0
  6626  1F36  00FC               	movwf	___lldiv@quotient+3
  6627  1F37  3000               	movlw	0
  6628  1F38  00FB               	movwf	___lldiv@quotient+2
  6629  1F39  3000               	movlw	0
  6630  1F3A  00FA               	movwf	___lldiv@quotient+1
  6631  1F3B  3000               	movlw	0
  6632  1F3C  00F9               	movwf	___lldiv@quotient
  6633  1F3D  0873               	movf	___lldiv@divisor+3,w
  6634  1F3E  0472               	iorwf	___lldiv@divisor+2,w
  6635  1F3F  0471               	iorwf	___lldiv@divisor+1,w
  6636  1F40  0470               	iorwf	___lldiv@divisor,w
  6637  1F41  1903               	skipnz
  6638  1F42  2F8A               	goto	l3037
  6639  1F43  01FD               	clrf	___lldiv@counter
  6640  1F44  0AFD               	incf	___lldiv@counter,f
  6641  1F45                     l3023:	
  6642  1F45  1BF3               	btfsc	___lldiv@divisor+3,7
  6643  1F46  2F55               	goto	l3025
  6644  1F47  3001               	movlw	1
  6645  1F48  00F8               	movwf	??___lldiv
  6646  1F49                     u4965:	
  6647  1F49  1003               	clrc
  6648  1F4A  0DF0               	rlf	___lldiv@divisor,f
  6649  1F4B  0DF1               	rlf	___lldiv@divisor+1,f
  6650  1F4C  0DF2               	rlf	___lldiv@divisor+2,f
  6651  1F4D  0DF3               	rlf	___lldiv@divisor+3,f
  6652  1F4E  0BF8               	decfsz	??___lldiv,f
  6653  1F4F  2F49               	goto	u4965
  6654  1F50  3001               	movlw	1
  6655  1F51  00F8               	movwf	??___lldiv
  6656  1F52  0878               	movf	??___lldiv,w
  6657  1F53  07FD               	addwf	___lldiv@counter,f
  6658  1F54  2F45               	goto	l3023
  6659  1F55                     l3025:	
  6660  1F55  3001               	movlw	1
  6661  1F56  00F8               	movwf	??___lldiv
  6662  1F57                     u4985:	
  6663  1F57  1003               	clrc
  6664  1F58  0DF9               	rlf	___lldiv@quotient,f
  6665  1F59  0DFA               	rlf	___lldiv@quotient+1,f
  6666  1F5A  0DFB               	rlf	___lldiv@quotient+2,f
  6667  1F5B  0DFC               	rlf	___lldiv@quotient+3,f
  6668  1F5C  0BF8               	decfsz	??___lldiv,f
  6669  1F5D  2F57               	goto	u4985
  6670  1F5E  0873               	movf	___lldiv@divisor+3,w
  6671  1F5F  0277               	subwf	___lldiv@dividend+3,w
  6672  1F60  1D03               	skipz
  6673  1F61  2F6C               	goto	u4995
  6674  1F62  0872               	movf	___lldiv@divisor+2,w
  6675  1F63  0276               	subwf	___lldiv@dividend+2,w
  6676  1F64  1D03               	skipz
  6677  1F65  2F6C               	goto	u4995
  6678  1F66  0871               	movf	___lldiv@divisor+1,w
  6679  1F67  0275               	subwf	___lldiv@dividend+1,w
  6680  1F68  1D03               	skipz
  6681  1F69  2F6C               	goto	u4995
  6682  1F6A  0870               	movf	___lldiv@divisor,w
  6683  1F6B  0274               	subwf	___lldiv@dividend,w
  6684  1F6C                     u4995:	
  6685  1F6C  1C03               	skipc
  6686  1F6D  2F7D               	goto	l3033
  6687  1F6E  0870               	movf	___lldiv@divisor,w
  6688  1F6F  02F4               	subwf	___lldiv@dividend,f
  6689  1F70  0871               	movf	___lldiv@divisor+1,w
  6690  1F71  1C03               	skipc
  6691  1F72  0F71               	incfsz	___lldiv@divisor+1,w
  6692  1F73  02F5               	subwf	___lldiv@dividend+1,f
  6693  1F74  0872               	movf	___lldiv@divisor+2,w
  6694  1F75  1C03               	skipc
  6695  1F76  0F72               	incfsz	___lldiv@divisor+2,w
  6696  1F77  02F6               	subwf	___lldiv@dividend+2,f
  6697  1F78  0873               	movf	___lldiv@divisor+3,w
  6698  1F79  1C03               	skipc
  6699  1F7A  0F73               	incfsz	___lldiv@divisor+3,w
  6700  1F7B  02F7               	subwf	___lldiv@dividend+3,f
  6701  1F7C  1479               	bsf	___lldiv@quotient,0
  6702  1F7D                     l3033:	
  6703  1F7D  3001               	movlw	1
  6704  1F7E                     u5005:	
  6705  1F7E  1003               	clrc
  6706  1F7F  0CF3               	rrf	___lldiv@divisor+3,f
  6707  1F80  0CF2               	rrf	___lldiv@divisor+2,f
  6708  1F81  0CF1               	rrf	___lldiv@divisor+1,f
  6709  1F82  0CF0               	rrf	___lldiv@divisor,f
  6710  1F83  3EFF               	addlw	-1
  6711  1F84  1D03               	skipz
  6712  1F85  2F7E               	goto	u5005
  6713  1F86  3001               	movlw	1
  6714  1F87  02FD               	subwf	___lldiv@counter,f
  6715  1F88  1D03               	btfss	3,2
  6716  1F89  2F55               	goto	l3025
  6717  1F8A                     l3037:	
  6718  1F8A  087C               	movf	___lldiv@quotient+3,w
  6719  1F8B  00F3               	movwf	?___lldiv+3
  6720  1F8C  087B               	movf	___lldiv@quotient+2,w
  6721  1F8D  00F2               	movwf	?___lldiv+2
  6722  1F8E  087A               	movf	___lldiv@quotient+1,w
  6723  1F8F  00F1               	movwf	?___lldiv+1
  6724  1F90  0879               	movf	___lldiv@quotient,w
  6725  1F91  00F0               	movwf	?___lldiv
  6726  1F92  0008               	return
  6727  1F93                     __end_of___lldiv:	
  6728                           
  6729                           	psect	text16
  6730  1F93                     __ptext16:	
  6731 ;; *************** function ___fltol *****************
  6732 ;; Defined at:
  6733 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;  f1              4   49[BANK0 ] unsigned long 
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;  exp1            1   59[BANK0 ] unsigned char 
  6738 ;;  sign1           1   58[BANK0 ] unsigned char 
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  4   49[BANK0 ] long 
  6741 ;; Registers used:
  6742 ;;		wreg, status,2, status,0
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6748 ;;      Params:         0       4       0       0       0
  6749 ;;      Locals:         0       2       0       0       0
  6750 ;;      Temps:          0       5       0       0       0
  6751 ;;      Totals:         0      11       0       0       0
  6752 ;;Total ram usage:       11 bytes
  6753 ;; Hardware stack levels used:    1
  6754 ;; This function calls:
  6755 ;;		Nothing
  6756 ;; This function is called by:
  6757 ;;		_sprintf
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           
  6762                           ;psect for function ___fltol
  6763  1F93                     ___fltol:	
  6764                           
  6765                           ;incstack = 0
  6766                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6767  1F93  1003               	clrc
  6768  1F94  1283               	bcf	3,5	;RP0=0, select bank0
  6769  1F95  1303               	bcf	3,6	;RP1=0, select bank0
  6770  1F96  0D53               	rlf	___fltol@f1+2,w
  6771  1F97  0D54               	rlf	___fltol@f1+3,w
  6772  1F98  00D5               	movwf	??___fltol
  6773  1F99  0855               	movf	??___fltol,w
  6774  1F9A  00DB               	movwf	___fltol@exp1
  6775  1F9B  085B               	movf	___fltol@exp1,w
  6776  1F9C  1D03               	btfss	3,2
  6777  1F9D  2FA7               	goto	l3087
  6778  1F9E                     l3083:	
  6779  1F9E  3000               	movlw	0
  6780  1F9F  00D4               	movwf	?___fltol+3
  6781  1FA0  3000               	movlw	0
  6782  1FA1  00D3               	movwf	?___fltol+2
  6783  1FA2  3000               	movlw	0
  6784  1FA3  00D2               	movwf	?___fltol+1
  6785  1FA4  3000               	movlw	0
  6786  1FA5  00D1               	movwf	?___fltol
  6787  1FA6  0008               	return
  6788  1FA7                     l3087:	
  6789  1FA7  0851               	movf	___fltol@f1,w
  6790  1FA8  00D5               	movwf	??___fltol
  6791  1FA9  0852               	movf	___fltol@f1+1,w
  6792  1FAA  00D6               	movwf	??___fltol+1
  6793  1FAB  0853               	movf	___fltol@f1+2,w
  6794  1FAC  00D7               	movwf	??___fltol+2
  6795  1FAD  0854               	movf	___fltol@f1+3,w
  6796  1FAE  00D8               	movwf	??___fltol+3
  6797  1FAF  301F               	movlw	31
  6798  1FB0                     u5145:	
  6799  1FB0  1003               	clrc
  6800  1FB1  0CD8               	rrf	??___fltol+3,f
  6801  1FB2  0CD7               	rrf	??___fltol+2,f
  6802  1FB3  0CD6               	rrf	??___fltol+1,f
  6803  1FB4  0CD5               	rrf	??___fltol,f
  6804  1FB5  3EFF               	addlw	-1
  6805  1FB6  1D03               	skipz
  6806  1FB7  2FB0               	goto	u5145
  6807  1FB8  0855               	movf	??___fltol,w
  6808  1FB9  00D9               	movwf	??___fltol+4
  6809  1FBA  0859               	movf	??___fltol+4,w
  6810  1FBB  00DA               	movwf	___fltol@sign1
  6811  1FBC  17D3               	bsf	___fltol@f1+2,7
  6812  1FBD  30FF               	movlw	255
  6813  1FBE  05D1               	andwf	___fltol@f1,f
  6814  1FBF  30FF               	movlw	255
  6815  1FC0  05D2               	andwf	___fltol@f1+1,f
  6816  1FC1  30FF               	movlw	255
  6817  1FC2  05D3               	andwf	___fltol@f1+2,f
  6818  1FC3  3000               	movlw	0
  6819  1FC4  05D4               	andwf	___fltol@f1+3,f
  6820  1FC5  3096               	movlw	150
  6821  1FC6  02DB               	subwf	___fltol@exp1,f
  6822  1FC7  1FDB               	btfss	___fltol@exp1,7
  6823  1FC8  2FDE               	goto	l3105
  6824  1FC9  085B               	movf	___fltol@exp1,w
  6825  1FCA  3A80               	xorlw	128
  6826  1FCB  3E97               	addlw	151
  6827  1FCC  1C03               	btfss	3,0
  6828  1FCD  2F9E               	goto	l3083
  6829  1FCE                     l3103:	
  6830  1FCE  3001               	movlw	1
  6831  1FCF                     u5175:	
  6832  1FCF  1003               	clrc
  6833  1FD0  0CD4               	rrf	___fltol@f1+3,f
  6834  1FD1  0CD3               	rrf	___fltol@f1+2,f
  6835  1FD2  0CD2               	rrf	___fltol@f1+1,f
  6836  1FD3  0CD1               	rrf	___fltol@f1,f
  6837  1FD4  3EFF               	addlw	-1
  6838  1FD5  1D03               	skipz
  6839  1FD6  2FCF               	goto	u5175
  6840  1FD7  3001               	movlw	1
  6841  1FD8  00D5               	movwf	??___fltol
  6842  1FD9  0855               	movf	??___fltol,w
  6843  1FDA  07DB               	addwf	___fltol@exp1,f
  6844  1FDB  1903               	btfsc	3,2
  6845  1FDC  2FF1               	goto	l3113
  6846  1FDD  2FCE               	goto	l3103
  6847  1FDE                     l3105:	
  6848  1FDE  3020               	movlw	32
  6849  1FDF  025B               	subwf	___fltol@exp1,w
  6850  1FE0  1803               	btfsc	3,0
  6851  1FE1  2F9E               	goto	l3083
  6852  1FE2                     l510:	
  6853  1FE2  085B               	movf	___fltol@exp1,w
  6854  1FE3  1903               	btfsc	3,2
  6855  1FE4  2FF1               	goto	l3113
  6856  1FE5  3001               	movlw	1
  6857  1FE6  00D5               	movwf	??___fltol
  6858  1FE7                     u5205:	
  6859  1FE7  1003               	clrc
  6860  1FE8  0DD1               	rlf	___fltol@f1,f
  6861  1FE9  0DD2               	rlf	___fltol@f1+1,f
  6862  1FEA  0DD3               	rlf	___fltol@f1+2,f
  6863  1FEB  0DD4               	rlf	___fltol@f1+3,f
  6864  1FEC  0BD5               	decfsz	??___fltol,f
  6865  1FED  2FE7               	goto	u5205
  6866  1FEE  3001               	movlw	1
  6867  1FEF  02DB               	subwf	___fltol@exp1,f
  6868  1FF0  2FE2               	goto	l510
  6869  1FF1                     l3113:	
  6870  1FF1  085A               	movf	___fltol@sign1,w
  6871  1FF2  1903               	btfsc	3,2
  6872  1FF3  0008               	return
  6873  1FF4  09D1               	comf	___fltol@f1,f
  6874  1FF5  09D2               	comf	___fltol@f1+1,f
  6875  1FF6  09D3               	comf	___fltol@f1+2,f
  6876  1FF7  09D4               	comf	___fltol@f1+3,f
  6877  1FF8  0AD1               	incf	___fltol@f1,f
  6878  1FF9  1903               	skipnz
  6879  1FFA  0AD2               	incf	___fltol@f1+1,f
  6880  1FFB  1903               	skipnz
  6881  1FFC  0AD3               	incf	___fltol@f1+2,f
  6882  1FFD  1903               	skipnz
  6883  1FFE  0AD4               	incf	___fltol@f1+3,f
  6884  1FFF  0008               	return
  6885  2000                     __end_of___fltol:	
  6886                           
  6887                           	psect	text17
  6888  1C2D                     __ptext17:	
  6889 ;; *************** function ___flsub *****************
  6890 ;; Defined at:
  6891 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;  a               4   70[BANK0 ] long 
  6894 ;;  b               4   74[BANK0 ] long 
  6895 ;; Auto vars:     Size  Location     Type
  6896 ;;		None
  6897 ;; Return value:  Size  Location     Type
  6898 ;;                  4   70[BANK0 ] long 
  6899 ;; Registers used:
  6900 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6901 ;; Tracked objects:
  6902 ;;		On entry : 0/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6906 ;;      Params:         0       8       0       0       0
  6907 ;;      Locals:         0       0       0       0       0
  6908 ;;      Temps:          0       0       0       0       0
  6909 ;;      Totals:         0       8       0       0       0
  6910 ;;Total ram usage:        8 bytes
  6911 ;; Hardware stack levels used:    1
  6912 ;; Hardware stack levels required when called:    1
  6913 ;; This function calls:
  6914 ;;		___fladd
  6915 ;; This function is called by:
  6916 ;;		_sprintf
  6917 ;; This function uses a non-reentrant model
  6918 ;;
  6919                           
  6920                           
  6921                           ;psect for function ___flsub
  6922  1C2D                     ___flsub:	
  6923                           
  6924                           ;incstack = 0
  6925                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6926  1C2D  3080               	movlw	128
  6927  1C2E  1283               	bcf	3,5	;RP0=0, select bank0
  6928  1C2F  1303               	bcf	3,6	;RP1=0, select bank0
  6929  1C30  06E9               	xorwf	___flsub@a+3,f
  6930  1C31  086D               	movf	___flsub@b+3,w
  6931  1C32  00D5               	movwf	___fladd@b+3
  6932  1C33  086C               	movf	___flsub@b+2,w
  6933  1C34  00D4               	movwf	___fladd@b+2
  6934  1C35  086B               	movf	___flsub@b+1,w
  6935  1C36  00D3               	movwf	___fladd@b+1
  6936  1C37  086A               	movf	___flsub@b,w
  6937  1C38  00D2               	movwf	___fladd@b
  6938  1C39  0869               	movf	___flsub@a+3,w
  6939  1C3A  00D9               	movwf	___fladd@a+3
  6940  1C3B  0868               	movf	___flsub@a+2,w
  6941  1C3C  00D8               	movwf	___fladd@a+2
  6942  1C3D  0867               	movf	___flsub@a+1,w
  6943  1C3E  00D7               	movwf	___fladd@a+1
  6944  1C3F  0866               	movf	___flsub@a,w
  6945  1C40  00D6               	movwf	___fladd@a
  6946  1C41  160A  118A  25D1   	fcall	___fladd
  6947  1C44  1283               	bcf	3,5	;RP0=0, select bank0
  6948  1C45  1303               	bcf	3,6	;RP1=0, select bank0
  6949  1C46  0855               	movf	?___fladd+3,w
  6950  1C47  00E9               	movwf	?___flsub+3
  6951  1C48  0854               	movf	?___fladd+2,w
  6952  1C49  00E8               	movwf	?___flsub+2
  6953  1C4A  0853               	movf	?___fladd+1,w
  6954  1C4B  00E7               	movwf	?___flsub+1
  6955  1C4C  0852               	movf	?___fladd,w
  6956  1C4D  00E6               	movwf	?___flsub
  6957  1C4E  0008               	return
  6958  1C4F                     __end_of___flsub:	
  6959                           
  6960                           	psect	text18
  6961  15D1                     __ptext18:	
  6962 ;; *************** function ___fladd *****************
  6963 ;; Defined at:
  6964 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;  b               4   50[BANK0 ] long 
  6967 ;;  a               4   54[BANK0 ] long 
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;  grs             1   69[BANK0 ] unsigned char 
  6970 ;;  bexp            1   68[BANK0 ] unsigned char 
  6971 ;;  aexp            1   67[BANK0 ] unsigned char 
  6972 ;;  signs           1   66[BANK0 ] unsigned char 
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  4   50[BANK0 ] unsigned char 
  6975 ;; Registers used:
  6976 ;;		wreg, status,2, status,0, btemp+1
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6982 ;;      Params:         0       8       0       0       0
  6983 ;;      Locals:         0       4       0       0       0
  6984 ;;      Temps:          0       8       0       0       0
  6985 ;;      Totals:         0      20       0       0       0
  6986 ;;Total ram usage:       20 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; This function calls:
  6989 ;;		Nothing
  6990 ;; This function is called by:
  6991 ;;		_sprintf
  6992 ;;		___flsub
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           
  6997                           ;psect for function ___fladd
  6998  15D1                     ___fladd:	
  6999                           
  7000                           ;incstack = 0
  7001                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7002  15D1  1283               	bcf	3,5	;RP0=0, select bank0
  7003  15D2  1303               	bcf	3,6	;RP1=0, select bank0
  7004  15D3  0855               	movf	___fladd@b+3,w
  7005  15D4  3980               	andlw	128
  7006  15D5  00DA               	movwf	??___fladd
  7007  15D6  085A               	movf	??___fladd,w
  7008  15D7  00E2               	movwf	___fladd@signs
  7009  15D8  0855               	movf	___fladd@b+3,w
  7010  15D9  00DA               	movwf	??___fladd
  7011  15DA  075A               	addwf	??___fladd,w
  7012  15DB  00DB               	movwf	??___fladd+1
  7013  15DC  085B               	movf	??___fladd+1,w
  7014  15DD  00E4               	movwf	___fladd@bexp
  7015  15DE  1BD4               	btfsc	___fladd@b+2,7
  7016  15DF  1464               	bsf	___fladd@bexp,0
  7017  15E0  0864               	movf	___fladd@bexp,w
  7018  15E1  1903               	btfsc	3,2
  7019  15E2  2DF1               	goto	l2483
  7020  15E3  0A64               	incf	___fladd@bexp,w
  7021  15E4  1D03               	btfss	3,2
  7022  15E5  2DEE               	goto	l2479
  7023  15E6  3000               	movlw	0
  7024  15E7  00D5               	movwf	___fladd@b+3
  7025  15E8  3000               	movlw	0
  7026  15E9  00D4               	movwf	___fladd@b+2
  7027  15EA  3000               	movlw	0
  7028  15EB  00D3               	movwf	___fladd@b+1
  7029  15EC  3000               	movlw	0
  7030  15ED  00D2               	movwf	___fladd@b
  7031  15EE                     l2479:	
  7032  15EE  17D4               	bsf	___fladd@b+2,7
  7033  15EF  01D5               	clrf	___fladd@b+3
  7034  15F0  2DF9               	goto	l2485
  7035  15F1                     l2483:	
  7036  15F1  3000               	movlw	0
  7037  15F2  00D5               	movwf	___fladd@b+3
  7038  15F3  3000               	movlw	0
  7039  15F4  00D4               	movwf	___fladd@b+2
  7040  15F5  3000               	movlw	0
  7041  15F6  00D3               	movwf	___fladd@b+1
  7042  15F7  3000               	movlw	0
  7043  15F8  00D2               	movwf	___fladd@b
  7044  15F9                     l2485:	
  7045  15F9  0859               	movf	___fladd@a+3,w
  7046  15FA  3980               	andlw	128
  7047  15FB  00DA               	movwf	??___fladd
  7048  15FC  085A               	movf	??___fladd,w
  7049  15FD  00E3               	movwf	___fladd@aexp
  7050  15FE  0863               	movf	___fladd@aexp,w
  7051  15FF  0662               	xorwf	___fladd@signs,w
  7052  1600  1D03               	btfss	3,2
  7053  1601  1762               	bsf	___fladd@signs,6
  7054  1602  0859               	movf	___fladd@a+3,w
  7055  1603  00DA               	movwf	??___fladd
  7056  1604  075A               	addwf	??___fladd,w
  7057  1605  00DB               	movwf	??___fladd+1
  7058  1606  085B               	movf	??___fladd+1,w
  7059  1607  00E3               	movwf	___fladd@aexp
  7060  1608  1BD8               	btfsc	___fladd@a+2,7
  7061  1609  1463               	bsf	___fladd@aexp,0
  7062  160A  0863               	movf	___fladd@aexp,w
  7063  160B  1903               	btfsc	3,2
  7064  160C  2E1B               	goto	l2507
  7065  160D  0A63               	incf	___fladd@aexp,w
  7066  160E  1D03               	btfss	3,2
  7067  160F  2E18               	goto	l2503
  7068  1610  3000               	movlw	0
  7069  1611  00D9               	movwf	___fladd@a+3
  7070  1612  3000               	movlw	0
  7071  1613  00D8               	movwf	___fladd@a+2
  7072  1614  3000               	movlw	0
  7073  1615  00D7               	movwf	___fladd@a+1
  7074  1616  3000               	movlw	0
  7075  1617  00D6               	movwf	___fladd@a
  7076  1618                     l2503:	
  7077  1618  17D8               	bsf	___fladd@a+2,7
  7078  1619  01D9               	clrf	___fladd@a+3
  7079  161A  2E23               	goto	l627
  7080  161B                     l2507:	
  7081  161B  3000               	movlw	0
  7082  161C  00D9               	movwf	___fladd@a+3
  7083  161D  3000               	movlw	0
  7084  161E  00D8               	movwf	___fladd@a+2
  7085  161F  3000               	movlw	0
  7086  1620  00D7               	movwf	___fladd@a+1
  7087  1621  3000               	movlw	0
  7088  1622  00D6               	movwf	___fladd@a
  7089  1623                     l627:	
  7090  1623  0864               	movf	___fladd@bexp,w
  7091  1624  0263               	subwf	___fladd@aexp,w
  7092  1625  1803               	skipnc
  7093  1626  2E69               	goto	l2543
  7094  1627  1F62               	btfss	___fladd@signs,6
  7095  1628  2E2D               	goto	l2513
  7096  1629  3080               	movlw	128
  7097  162A  00DA               	movwf	??___fladd
  7098  162B  085A               	movf	??___fladd,w
  7099  162C  06E2               	xorwf	___fladd@signs,f
  7100  162D                     l2513:	
  7101  162D  0864               	movf	___fladd@bexp,w
  7102  162E  00DA               	movwf	??___fladd
  7103  162F  085A               	movf	??___fladd,w
  7104  1630  00E5               	movwf	___fladd@grs
  7105  1631  0863               	movf	___fladd@aexp,w
  7106  1632  00DA               	movwf	??___fladd
  7107  1633  085A               	movf	??___fladd,w
  7108  1634  00E4               	movwf	___fladd@bexp
  7109  1635  0865               	movf	___fladd@grs,w
  7110  1636  00DA               	movwf	??___fladd
  7111  1637  085A               	movf	??___fladd,w
  7112  1638  00E3               	movwf	___fladd@aexp
  7113  1639  0852               	movf	___fladd@b,w
  7114  163A  00DA               	movwf	??___fladd
  7115  163B  085A               	movf	??___fladd,w
  7116  163C  00E5               	movwf	___fladd@grs
  7117  163D  0856               	movf	___fladd@a,w
  7118  163E  00DA               	movwf	??___fladd
  7119  163F  085A               	movf	??___fladd,w
  7120  1640  00D2               	movwf	___fladd@b
  7121  1641  0865               	movf	___fladd@grs,w
  7122  1642  00DA               	movwf	??___fladd
  7123  1643  085A               	movf	??___fladd,w
  7124  1644  00D6               	movwf	___fladd@a
  7125  1645  0853               	movf	___fladd@b+1,w
  7126  1646  00DA               	movwf	??___fladd
  7127  1647  085A               	movf	??___fladd,w
  7128  1648  00E5               	movwf	___fladd@grs
  7129  1649  0857               	movf	___fladd@a+1,w
  7130  164A  00DA               	movwf	??___fladd
  7131  164B  085A               	movf	??___fladd,w
  7132  164C  00D3               	movwf	___fladd@b+1
  7133  164D  0865               	movf	___fladd@grs,w
  7134  164E  00DA               	movwf	??___fladd
  7135  164F  085A               	movf	??___fladd,w
  7136  1650  00D7               	movwf	___fladd@a+1
  7137  1651  0854               	movf	___fladd@b+2,w
  7138  1652  00DA               	movwf	??___fladd
  7139  1653  085A               	movf	??___fladd,w
  7140  1654  00E5               	movwf	___fladd@grs
  7141  1655  0858               	movf	___fladd@a+2,w
  7142  1656  00DA               	movwf	??___fladd
  7143  1657  085A               	movf	??___fladd,w
  7144  1658  00D4               	movwf	___fladd@b+2
  7145  1659  0865               	movf	___fladd@grs,w
  7146  165A  00DA               	movwf	??___fladd
  7147  165B  085A               	movf	??___fladd,w
  7148  165C  00D8               	movwf	___fladd@a+2
  7149  165D  0855               	movf	___fladd@b+3,w
  7150  165E  00DA               	movwf	??___fladd
  7151  165F  085A               	movf	??___fladd,w
  7152  1660  00E5               	movwf	___fladd@grs
  7153  1661  0859               	movf	___fladd@a+3,w
  7154  1662  00DA               	movwf	??___fladd
  7155  1663  085A               	movf	??___fladd,w
  7156  1664  00D5               	movwf	___fladd@b+3
  7157  1665  0865               	movf	___fladd@grs,w
  7158  1666  00DA               	movwf	??___fladd
  7159  1667  085A               	movf	??___fladd,w
  7160  1668  00D9               	movwf	___fladd@a+3
  7161  1669                     l2543:	
  7162  1669  01E5               	clrf	___fladd@grs
  7163  166A  0863               	movf	___fladd@aexp,w
  7164  166B  00DA               	movwf	??___fladd
  7165  166C  01DB               	clrf	??___fladd+1
  7166  166D  085B               	movf	??___fladd+1,w
  7167  166E  00DD               	movwf	??___fladd+3
  7168  166F  0864               	movf	___fladd@bexp,w
  7169  1670  025A               	subwf	??___fladd,w
  7170  1671  00DC               	movwf	??___fladd+2
  7171  1672  1C03               	skipc
  7172  1673  03DD               	decf	??___fladd+3,f
  7173  1674  085D               	movf	??___fladd+3,w
  7174  1675  3A80               	xorlw	128
  7175  1676  00FF               	movwf	127
  7176  1677  3080               	movlw	128
  7177  1678  027F               	subwf	127,w
  7178  1679  1D03               	skipz
  7179  167A  2E7D               	goto	u3635
  7180  167B  301A               	movlw	26
  7181  167C  025C               	subwf	??___fladd+2,w
  7182  167D                     u3635:	
  7183  167D  1C03               	skipc
  7184  167E  2EB6               	goto	l2561
  7185  167F  1283               	bcf	3,5	;RP0=0, select bank0
  7186  1680  1303               	bcf	3,6	;RP1=0, select bank0
  7187  1681  0855               	movf	___fladd@b+3,w
  7188  1682  0454               	iorwf	___fladd@b+2,w
  7189  1683  0453               	iorwf	___fladd@b+1,w
  7190  1684  0452               	iorwf	___fladd@b,w
  7191  1685  1903               	btfsc	3,2
  7192  1686  2E89               	goto	u3640
  7193  1687  3001               	movlw	1
  7194  1688  2E8A               	goto	u3650
  7195  1689                     u3640:	
  7196  1689  3000               	movlw	0
  7197  168A                     u3650:	
  7198  168A  00DA               	movwf	??___fladd
  7199  168B  085A               	movf	??___fladd,w
  7200  168C  00E5               	movwf	___fladd@grs
  7201  168D  3000               	movlw	0
  7202  168E  00D5               	movwf	___fladd@b+3
  7203  168F  3000               	movlw	0
  7204  1690  00D4               	movwf	___fladd@b+2
  7205  1691  3000               	movlw	0
  7206  1692  00D3               	movwf	___fladd@b+1
  7207  1693  3000               	movlw	0
  7208  1694  00D2               	movwf	___fladd@b
  7209  1695  0863               	movf	___fladd@aexp,w
  7210  1696  00DA               	movwf	??___fladd
  7211  1697  085A               	movf	??___fladd,w
  7212  1698  00E4               	movwf	___fladd@bexp
  7213  1699  2EBC               	goto	l631
  7214  169A                     l633:	
  7215  169A  1C65               	btfss	___fladd@grs,0
  7216  169B  2EA5               	goto	l2551
  7217  169C  0865               	movf	___fladd@grs,w
  7218  169D  00DA               	movwf	??___fladd
  7219  169E  1003               	clrc
  7220  169F  0C5A               	rrf	??___fladd,w
  7221  16A0  3801               	iorlw	1
  7222  16A1  00DB               	movwf	??___fladd+1
  7223  16A2  085B               	movf	??___fladd+1,w
  7224  16A3  00E5               	movwf	___fladd@grs
  7225  16A4  2EA7               	goto	l2553
  7226  16A5                     l2551:	
  7227  16A5  1003               	clrc
  7228  16A6  0CE5               	rrf	___fladd@grs,f
  7229  16A7                     l2553:	
  7230  16A7  1852               	btfsc	___fladd@b,0
  7231  16A8  17E5               	bsf	___fladd@grs,7
  7232  16A9  3001               	movlw	1
  7233  16AA  00DA               	movwf	??___fladd
  7234  16AB                     u3685:	
  7235  16AB  0D55               	rlf	___fladd@b+3,w
  7236  16AC  0CD5               	rrf	___fladd@b+3,f
  7237  16AD  0CD4               	rrf	___fladd@b+2,f
  7238  16AE  0CD3               	rrf	___fladd@b+1,f
  7239  16AF  0CD2               	rrf	___fladd@b,f
  7240  16B0  0BDA               	decfsz	??___fladd& (0+127),f
  7241  16B1  2EAB               	goto	u3685
  7242  16B2  3001               	movlw	1
  7243  16B3  00DA               	movwf	??___fladd
  7244  16B4  085A               	movf	??___fladd,w
  7245  16B5  07E4               	addwf	___fladd@bexp,f
  7246  16B6                     l2561:	
  7247  16B6  1283               	bcf	3,5	;RP0=0, select bank0
  7248  16B7  1303               	bcf	3,6	;RP1=0, select bank0
  7249  16B8  0863               	movf	___fladd@aexp,w
  7250  16B9  0264               	subwf	___fladd@bexp,w
  7251  16BA  1C03               	skipc
  7252  16BB  2E9A               	goto	l633
  7253  16BC                     l631:	
  7254  16BC  1B62               	btfsc	___fladd@signs,6
  7255  16BD  2EFD               	goto	l2587
  7256  16BE  0864               	movf	___fladd@bexp,w
  7257  16BF  1D03               	btfss	3,2
  7258  16C0  2ECA               	goto	l2569
  7259  16C1  3000               	movlw	0
  7260  16C2  00D5               	movwf	?___fladd+3
  7261  16C3  3000               	movlw	0
  7262  16C4  00D4               	movwf	?___fladd+2
  7263  16C5  3000               	movlw	0
  7264  16C6  00D3               	movwf	?___fladd+1
  7265  16C7  3000               	movlw	0
  7266  16C8  00D2               	movwf	?___fladd
  7267  16C9  0008               	return
  7268  16CA                     l2569:	
  7269  16CA  0856               	movf	___fladd@a,w
  7270  16CB  07D2               	addwf	___fladd@b,f
  7271  16CC  0857               	movf	___fladd@a+1,w
  7272  16CD  1103               	clrz
  7273  16CE  1803               	skipnc
  7274  16CF  3E01               	addlw	1
  7275  16D0  1D03               	btfss	3,2
  7276  16D1  07D3               	addwf	___fladd@b+1,f
  7277  16D2  0858               	movf	___fladd@a+2,w
  7278  16D3  1103               	clrz
  7279  16D4  1803               	skipnc
  7280  16D5  3E01               	addlw	1
  7281  16D6  1D03               	btfss	3,2
  7282  16D7  07D4               	addwf	___fladd@b+2,f
  7283  16D8  0859               	movf	___fladd@a+3,w
  7284  16D9  1103               	clrz
  7285  16DA  1803               	skipnc
  7286  16DB  3E01               	addlw	1
  7287  16DC  1D03               	btfss	3,2
  7288  16DD  07D5               	addwf	___fladd@b+3,f
  7289  16DE  1C55               	btfss	___fladd@b+3,0
  7290  16DF  2F9F               	goto	l2621
  7291  16E0  1C65               	btfss	___fladd@grs,0
  7292  16E1  2EEB               	goto	l2577
  7293  16E2  0865               	movf	___fladd@grs,w
  7294  16E3  00DA               	movwf	??___fladd
  7295  16E4  1003               	clrc
  7296  16E5  0C5A               	rrf	??___fladd,w
  7297  16E6  3801               	iorlw	1
  7298  16E7  00DB               	movwf	??___fladd+1
  7299  16E8  085B               	movf	??___fladd+1,w
  7300  16E9  00E5               	movwf	___fladd@grs
  7301  16EA  2EED               	goto	l2579
  7302  16EB                     l2577:	
  7303  16EB  1003               	clrc
  7304  16EC  0CE5               	rrf	___fladd@grs,f
  7305  16ED                     l2579:	
  7306  16ED  1852               	btfsc	___fladd@b,0
  7307  16EE  17E5               	bsf	___fladd@grs,7
  7308  16EF  3001               	movlw	1
  7309  16F0  00DA               	movwf	??___fladd
  7310  16F1                     u3765:	
  7311  16F1  0D55               	rlf	___fladd@b+3,w
  7312  16F2  0CD5               	rrf	___fladd@b+3,f
  7313  16F3  0CD4               	rrf	___fladd@b+2,f
  7314  16F4  0CD3               	rrf	___fladd@b+1,f
  7315  16F5  0CD2               	rrf	___fladd@b,f
  7316  16F6  0BDA               	decfsz	??___fladd& (0+127),f
  7317  16F7  2EF1               	goto	u3765
  7318  16F8  3001               	movlw	1
  7319  16F9  00DA               	movwf	??___fladd
  7320  16FA  085A               	movf	??___fladd,w
  7321  16FB  07E4               	addwf	___fladd@bexp,f
  7322  16FC  2F9F               	goto	l2621
  7323  16FD                     l2587:	
  7324  16FD  0855               	movf	___fladd@b+3,w
  7325  16FE  3A80               	xorlw	128
  7326  16FF  00FF               	movwf	127
  7327  1700  0859               	movf	___fladd@a+3,w
  7328  1701  3A80               	xorlw	128
  7329  1702  027F               	subwf	127,w
  7330  1703  1D03               	skipz
  7331  1704  2F0F               	goto	u3773
  7332  1705  0858               	movf	___fladd@a+2,w
  7333  1706  0254               	subwf	___fladd@b+2,w
  7334  1707  1D03               	skipz
  7335  1708  2F0F               	goto	u3773
  7336  1709  0857               	movf	___fladd@a+1,w
  7337  170A  0253               	subwf	___fladd@b+1,w
  7338  170B  1D03               	skipz
  7339  170C  2F0F               	goto	u3773
  7340  170D  0856               	movf	___fladd@a,w
  7341  170E  0252               	subwf	___fladd@b,w
  7342  170F                     u3773:	
  7343  170F  1803               	skipnc
  7344  1710  2F67               	goto	l2597
  7345  1711  30FF               	movlw	255
  7346  1712  00DA               	movwf	??___fladd
  7347  1713  30FF               	movlw	255
  7348  1714  00DB               	movwf	??___fladd+1
  7349  1715  30FF               	movlw	255
  7350  1716  00DC               	movwf	??___fladd+2
  7351  1717  30FF               	movlw	255
  7352  1718  00DD               	movwf	??___fladd+3
  7353  1719  0856               	movf	___fladd@a,w
  7354  171A  00DE               	movwf	??___fladd+4
  7355  171B  0857               	movf	___fladd@a+1,w
  7356  171C  00DF               	movwf	??___fladd+5
  7357  171D  0858               	movf	___fladd@a+2,w
  7358  171E  00E0               	movwf	??___fladd+6
  7359  171F  0859               	movf	___fladd@a+3,w
  7360  1720  00E1               	movwf	??___fladd+7
  7361  1721  0852               	movf	___fladd@b,w
  7362  1722  02DE               	subwf	??___fladd+4,f
  7363  1723  0853               	movf	___fladd@b+1,w
  7364  1724  1C03               	skipc
  7365  1725  0F53               	incfsz	___fladd@b+1,w
  7366  1726  2F28               	goto	u3781
  7367  1727  2F29               	goto	u3782
  7368  1728                     u3781:	
  7369  1728  02DF               	subwf	??___fladd+5,f
  7370  1729                     u3782:	
  7371  1729  0854               	movf	___fladd@b+2,w
  7372  172A  1C03               	skipc
  7373  172B  0F54               	incfsz	___fladd@b+2,w
  7374  172C  2F2E               	goto	u3783
  7375  172D  2F2F               	goto	u3784
  7376  172E                     u3783:	
  7377  172E  02E0               	subwf	??___fladd+6,f
  7378  172F                     u3784:	
  7379  172F  0855               	movf	___fladd@b+3,w
  7380  1730  1C03               	skipc
  7381  1731  0F55               	incfsz	___fladd@b+3,w
  7382  1732  2F34               	goto	u3785
  7383  1733  2F35               	goto	u3786
  7384  1734                     u3785:	
  7385  1734  02E1               	subwf	??___fladd+7,f
  7386  1735                     u3786:	
  7387  1735  085E               	movf	??___fladd+4,w
  7388  1736  07DA               	addwf	??___fladd,f
  7389  1737  085F               	movf	??___fladd+5,w
  7390  1738  1803               	skipnc
  7391  1739  0F5F               	incfsz	??___fladd+5,w
  7392  173A  2F3C               	goto	u3790
  7393  173B  2F3D               	goto	u3791
  7394  173C                     u3790:	
  7395  173C  07DB               	addwf	??___fladd+1,f
  7396  173D                     u3791:	
  7397  173D  0860               	movf	??___fladd+6,w
  7398  173E  1803               	skipnc
  7399  173F  0F60               	incfsz	??___fladd+6,w
  7400  1740  2F42               	goto	u3792
  7401  1741  2F43               	goto	u3793
  7402  1742                     u3792:	
  7403  1742  07DC               	addwf	??___fladd+2,f
  7404  1743                     u3793:	
  7405  1743  0861               	movf	??___fladd+7,w
  7406  1744  1803               	skipnc
  7407  1745  0A61               	incf	??___fladd+7,w
  7408  1746  07DD               	addwf	??___fladd+3,f
  7409  1747  085D               	movf	??___fladd+3,w
  7410  1748  00D5               	movwf	___fladd@b+3
  7411  1749  085C               	movf	??___fladd+2,w
  7412  174A  00D4               	movwf	___fladd@b+2
  7413  174B  085B               	movf	??___fladd+1,w
  7414  174C  00D3               	movwf	___fladd@b+1
  7415  174D  085A               	movf	??___fladd,w
  7416  174E  00D2               	movwf	___fladd@b
  7417  174F  3080               	movlw	128
  7418  1750  00DA               	movwf	??___fladd
  7419  1751  085A               	movf	??___fladd,w
  7420  1752  06E2               	xorwf	___fladd@signs,f
  7421  1753  09E5               	comf	___fladd@grs,f
  7422  1754  0AE5               	incf	___fladd@grs,f
  7423  1755  0865               	movf	___fladd@grs,w
  7424  1756  1D03               	btfss	3,2
  7425  1757  2F75               	goto	l648
  7426  1758  3001               	movlw	1
  7427  1759  07D2               	addwf	___fladd@b,f
  7428  175A  3000               	movlw	0
  7429  175B  1803               	skipnc
  7430  175C  3001               	movlw	1
  7431  175D  07D3               	addwf	___fladd@b+1,f
  7432  175E  3000               	movlw	0
  7433  175F  1803               	skipnc
  7434  1760  3001               	movlw	1
  7435  1761  07D4               	addwf	___fladd@b+2,f
  7436  1762  3000               	movlw	0
  7437  1763  1803               	skipnc
  7438  1764  3001               	movlw	1
  7439  1765  07D5               	addwf	___fladd@b+3,f
  7440  1766  2F75               	goto	l648
  7441  1767                     l2597:	
  7442  1767  0856               	movf	___fladd@a,w
  7443  1768  02D2               	subwf	___fladd@b,f
  7444  1769  0857               	movf	___fladd@a+1,w
  7445  176A  1C03               	skipc
  7446  176B  0F57               	incfsz	___fladd@a+1,w
  7447  176C  02D3               	subwf	___fladd@b+1,f
  7448  176D  0858               	movf	___fladd@a+2,w
  7449  176E  1C03               	skipc
  7450  176F  0F58               	incfsz	___fladd@a+2,w
  7451  1770  02D4               	subwf	___fladd@b+2,f
  7452  1771  0859               	movf	___fladd@a+3,w
  7453  1772  1C03               	skipc
  7454  1773  0F59               	incfsz	___fladd@a+3,w
  7455  1774  02D5               	subwf	___fladd@b+3,f
  7456  1775                     l648:	
  7457  1775  0855               	movf	___fladd@b+3,w
  7458  1776  0454               	iorwf	___fladd@b+2,w
  7459  1777  0453               	iorwf	___fladd@b+1,w
  7460  1778  0452               	iorwf	___fladd@b,w
  7461  1779  1D03               	skipz
  7462  177A  2F9D               	goto	l2619
  7463  177B  0865               	movf	___fladd@grs,w
  7464  177C  1D03               	btfss	3,2
  7465  177D  2F9D               	goto	l2619
  7466  177E  3000               	movlw	0
  7467  177F  00D5               	movwf	?___fladd+3
  7468  1780  3000               	movlw	0
  7469  1781  00D4               	movwf	?___fladd+2
  7470  1782  3000               	movlw	0
  7471  1783  00D3               	movwf	?___fladd+1
  7472  1784  3000               	movlw	0
  7473  1785  00D2               	movwf	?___fladd
  7474  1786  0008               	return
  7475  1787                     l2605:	
  7476  1787  3001               	movlw	1
  7477  1788  00DA               	movwf	??___fladd
  7478  1789                     u3835:	
  7479  1789  1003               	clrc
  7480  178A  0DD2               	rlf	___fladd@b,f
  7481  178B  0DD3               	rlf	___fladd@b+1,f
  7482  178C  0DD4               	rlf	___fladd@b+2,f
  7483  178D  0DD5               	rlf	___fladd@b+3,f
  7484  178E  0BDA               	decfsz	??___fladd,f
  7485  178F  2F89               	goto	u3835
  7486  1790  1BE5               	btfsc	___fladd@grs,7
  7487  1791  1452               	bsf	___fladd@b,0
  7488  1792  1C65               	btfss	___fladd@grs,0
  7489  1793  2F96               	goto	l2613
  7490  1794  1403               	setc
  7491  1795  2F97               	goto	L7
  7492  1796                     l2613:	
  7493  1796  1003               	clrc
  7494  1797                     L7:	
  7495  1797  0DE5               	rlf	___fladd@grs,f
  7496  1798  0864               	movf	___fladd@bexp,w
  7497  1799  1903               	btfsc	3,2
  7498  179A  2F9D               	goto	l2619
  7499  179B  3001               	movlw	1
  7500  179C  02E4               	subwf	___fladd@bexp,f
  7501  179D                     l2619:	
  7502  179D  1FD4               	btfss	___fladd@b+2,7
  7503  179E  2F87               	goto	l2605
  7504  179F                     l2621:	
  7505  179F  01E3               	clrf	___fladd@aexp
  7506  17A0  1FE5               	btfss	___fladd@grs,7
  7507  17A1  2FAA               	goto	l2631
  7508  17A2  0865               	movf	___fladd@grs,w
  7509  17A3  397F               	andlw	127
  7510  17A4  1903               	btfsc	3,2
  7511  17A5  1852               	btfsc	___fladd@b,0
  7512  17A6  2FA8               	goto	l2627
  7513  17A7  2FAA               	goto	l2631
  7514  17A8                     l2627:	
  7515  17A8  01E3               	clrf	___fladd@aexp
  7516  17A9  0AE3               	incf	___fladd@aexp,f
  7517  17AA                     l2631:	
  7518  17AA  0863               	movf	___fladd@aexp,w
  7519  17AB  1903               	btfsc	3,2
  7520  17AC  2FDD               	goto	l661
  7521  17AD  3001               	movlw	1
  7522  17AE  07D2               	addwf	___fladd@b,f
  7523  17AF  3000               	movlw	0
  7524  17B0  1803               	skipnc
  7525  17B1  3001               	movlw	1
  7526  17B2  07D3               	addwf	___fladd@b+1,f
  7527  17B3  3000               	movlw	0
  7528  17B4  1803               	skipnc
  7529  17B5  3001               	movlw	1
  7530  17B6  07D4               	addwf	___fladd@b+2,f
  7531  17B7  3000               	movlw	0
  7532  17B8  1803               	skipnc
  7533  17B9  3001               	movlw	1
  7534  17BA  07D5               	addwf	___fladd@b+3,f
  7535  17BB  1C55               	btfss	___fladd@b+3,0
  7536  17BC  2FDD               	goto	l661
  7537  17BD  0852               	movf	___fladd@b,w
  7538  17BE  00DA               	movwf	??___fladd
  7539  17BF  0853               	movf	___fladd@b+1,w
  7540  17C0  00DB               	movwf	??___fladd+1
  7541  17C1  0854               	movf	___fladd@b+2,w
  7542  17C2  00DC               	movwf	??___fladd+2
  7543  17C3  0855               	movf	___fladd@b+3,w
  7544  17C4  00DD               	movwf	??___fladd+3
  7545  17C5  3001               	movlw	1
  7546  17C6  00DE               	movwf	??___fladd+4
  7547  17C7                     u3935:	
  7548  17C7  0D5D               	rlf	??___fladd+3,w
  7549  17C8  0CDD               	rrf	??___fladd+3,f
  7550  17C9  0CDC               	rrf	??___fladd+2,f
  7551  17CA  0CDB               	rrf	??___fladd+1,f
  7552  17CB  0CDA               	rrf	??___fladd,f
  7553  17CC  0BDE               	decfsz	??___fladd+4,f
  7554  17CD  2FC7               	goto	u3935
  7555  17CE  085D               	movf	??___fladd+3,w
  7556  17CF  00D5               	movwf	___fladd@b+3
  7557  17D0  085C               	movf	??___fladd+2,w
  7558  17D1  00D4               	movwf	___fladd@b+2
  7559  17D2  085B               	movf	??___fladd+1,w
  7560  17D3  00D3               	movwf	___fladd@b+1
  7561  17D4  085A               	movf	??___fladd,w
  7562  17D5  00D2               	movwf	___fladd@b
  7563  17D6  0A64               	incf	___fladd@bexp,w
  7564  17D7  1903               	btfsc	3,2
  7565  17D8  2FDD               	goto	l661
  7566  17D9  3001               	movlw	1
  7567  17DA  00DA               	movwf	??___fladd
  7568  17DB  085A               	movf	??___fladd,w
  7569  17DC  07E4               	addwf	___fladd@bexp,f
  7570  17DD                     l661:	
  7571  17DD  0A64               	incf	___fladd@bexp,w
  7572  17DE  1D03               	btfss	3,2
  7573  17DF  0864               	movf	___fladd@bexp,w
  7574  17E0  1D03               	btfss	3,2
  7575  17E1  2FED               	goto	l2649
  7576  17E2  3000               	movlw	0
  7577  17E3  00D5               	movwf	___fladd@b+3
  7578  17E4  3000               	movlw	0
  7579  17E5  00D4               	movwf	___fladd@b+2
  7580  17E6  3000               	movlw	0
  7581  17E7  00D3               	movwf	___fladd@b+1
  7582  17E8  3000               	movlw	0
  7583  17E9  00D2               	movwf	___fladd@b
  7584  17EA  0864               	movf	___fladd@bexp,w
  7585  17EB  1903               	btfsc	3,2
  7586  17EC  01E2               	clrf	___fladd@signs
  7587  17ED                     l2649:	
  7588  17ED  1C64               	btfss	___fladd@bexp,0
  7589  17EE  2FF1               	goto	l2653
  7590  17EF  17D4               	bsf	___fladd@b+2,7
  7591  17F0  2FF5               	goto	l669
  7592  17F1                     l2653:	
  7593  17F1  307F               	movlw	127
  7594  17F2  00DA               	movwf	??___fladd
  7595  17F3  085A               	movf	??___fladd,w
  7596  17F4  05D4               	andwf	___fladd@b+2,f
  7597  17F5                     l669:	
  7598  17F5  0864               	movf	___fladd@bexp,w
  7599  17F6  00DA               	movwf	??___fladd
  7600  17F7  1003               	clrc
  7601  17F8  0C5A               	rrf	??___fladd,w
  7602  17F9  00DB               	movwf	??___fladd+1
  7603  17FA  085B               	movf	??___fladd+1,w
  7604  17FB  00D5               	movwf	___fladd@b+3
  7605  17FC  1FE2               	btfss	___fladd@signs,7
  7606  17FD  0008               	return
  7607  17FE  17D5               	bsf	___fladd@b+3,7
  7608  17FF  0008               	return
  7609  1800                     __end_of___fladd:	
  7610                           
  7611                           	psect	text19
  7612  1BA9                     __ptext19:	
  7613 ;; *************** function ___flneg *****************
  7614 ;; Defined at:
  7615 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;  f1              4    0[COMMON] unsigned char 
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;		None
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  4    0[COMMON] unsigned char 
  7622 ;; Registers used:
  7623 ;;		wreg
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7629 ;;      Params:         4       0       0       0       0
  7630 ;;      Locals:         0       0       0       0       0
  7631 ;;      Temps:          0       0       0       0       0
  7632 ;;      Totals:         4       0       0       0       0
  7633 ;;Total ram usage:        4 bytes
  7634 ;; Hardware stack levels used:    1
  7635 ;; This function calls:
  7636 ;;		Nothing
  7637 ;; This function is called by:
  7638 ;;		_sprintf
  7639 ;; This function uses a non-reentrant model
  7640 ;;
  7641                           
  7642                           
  7643                           ;psect for function ___flneg
  7644  1BA9                     ___flneg:	
  7645                           
  7646                           ;incstack = 0
  7647                           ; Regs used in ___flneg: [wreg]
  7648  1BA9  0873               	movf	___flneg@f1+3,w
  7649  1BAA  0472               	iorwf	___flneg@f1+2,w
  7650  1BAB  0471               	iorwf	___flneg@f1+1,w
  7651  1BAC  0470               	iorwf	___flneg@f1,w
  7652  1BAD  1903               	skipnz
  7653  1BAE  0008               	return
  7654  1BAF  3080               	movlw	128
  7655  1BB0  06F3               	xorwf	___flneg@f1+3,f
  7656  1BB1  0008               	return
  7657  1BB2                     __end_of___flneg:	
  7658                           
  7659                           	psect	text20
  7660  0800                     __ptext20:	
  7661 ;; *************** function ___flge *****************
  7662 ;; Defined at:
  7663 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  7664 ;; Parameters:    Size  Location     Type
  7665 ;;  ff1             4    0[COMMON] unsigned char 
  7666 ;;  ff2             4    4[COMMON] unsigned char 
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;		None
  7669 ;; Return value:  Size  Location     Type
  7670 ;;		None               void
  7671 ;; Registers used:
  7672 ;;		wreg, status,2, status,0
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7678 ;;      Params:         8       0       0       0       0
  7679 ;;      Locals:         0       0       0       0       0
  7680 ;;      Temps:          4       0       0       0       0
  7681 ;;      Totals:        12       0       0       0       0
  7682 ;;Total ram usage:       12 bytes
  7683 ;; Hardware stack levels used:    1
  7684 ;; This function calls:
  7685 ;;		Nothing
  7686 ;; This function is called by:
  7687 ;;		_sprintf
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           
  7692                           ;psect for function ___flge
  7693  0800                     ___flge:	
  7694                           
  7695                           ;incstack = 0
  7696                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7697  0800  3000               	movlw	0
  7698  0801  0570               	andwf	___flge@ff1,w
  7699  0802  00F8               	movwf	??___flge
  7700  0803  3000               	movlw	0
  7701  0804  0571               	andwf	___flge@ff1+1,w
  7702  0805  00F9               	movwf	??___flge+1
  7703  0806  3080               	movlw	128
  7704  0807  0572               	andwf	___flge@ff1+2,w
  7705  0808  00FA               	movwf	??___flge+2
  7706  0809  307F               	movlw	127
  7707  080A  0573               	andwf	___flge@ff1+3,w
  7708  080B  00FB               	movwf	??___flge+3
  7709  080C  087B               	movf	??___flge+3,w
  7710  080D  047A               	iorwf	??___flge+2,w
  7711  080E  0479               	iorwf	??___flge+1,w
  7712  080F  0478               	iorwf	??___flge,w
  7713  0810  1D03               	skipz
  7714  0811  281A               	goto	l491
  7715  0812  3000               	movlw	0
  7716  0813  00F3               	movwf	___flge@ff1+3
  7717  0814  3000               	movlw	0
  7718  0815  00F2               	movwf	___flge@ff1+2
  7719  0816  3000               	movlw	0
  7720  0817  00F1               	movwf	___flge@ff1+1
  7721  0818  3000               	movlw	0
  7722  0819  00F0               	movwf	___flge@ff1
  7723  081A                     l491:	
  7724  081A  3000               	movlw	0
  7725  081B  0574               	andwf	___flge@ff2,w
  7726  081C  00F8               	movwf	??___flge
  7727  081D  3000               	movlw	0
  7728  081E  0575               	andwf	___flge@ff2+1,w
  7729  081F  00F9               	movwf	??___flge+1
  7730  0820  3080               	movlw	128
  7731  0821  0576               	andwf	___flge@ff2+2,w
  7732  0822  00FA               	movwf	??___flge+2
  7733  0823  307F               	movlw	127
  7734  0824  0577               	andwf	___flge@ff2+3,w
  7735  0825  00FB               	movwf	??___flge+3
  7736  0826  087B               	movf	??___flge+3,w
  7737  0827  047A               	iorwf	??___flge+2,w
  7738  0828  0479               	iorwf	??___flge+1,w
  7739  0829  0478               	iorwf	??___flge,w
  7740  082A  1D03               	skipz
  7741  082B  2834               	goto	l3059
  7742  082C  3000               	movlw	0
  7743  082D  00F7               	movwf	___flge@ff2+3
  7744  082E  3000               	movlw	0
  7745  082F  00F6               	movwf	___flge@ff2+2
  7746  0830  3000               	movlw	0
  7747  0831  00F5               	movwf	___flge@ff2+1
  7748  0832  3000               	movlw	0
  7749  0833  00F4               	movwf	___flge@ff2
  7750  0834                     l3059:	
  7751  0834  1FF3               	btfss	___flge@ff1+3,7
  7752  0835  285A               	goto	l3063
  7753  0836  3000               	movlw	0
  7754  0837  00F8               	movwf	??___flge
  7755  0838  3000               	movlw	0
  7756  0839  00F9               	movwf	??___flge+1
  7757  083A  3000               	movlw	0
  7758  083B  00FA               	movwf	??___flge+2
  7759  083C  3080               	movlw	128
  7760  083D  00FB               	movwf	??___flge+3
  7761  083E  0870               	movf	___flge@ff1,w
  7762  083F  02F8               	subwf	??___flge,f
  7763  0840  0871               	movf	___flge@ff1+1,w
  7764  0841  1C03               	skipc
  7765  0842  0F71               	incfsz	___flge@ff1+1,w
  7766  0843  2845               	goto	u5081
  7767  0844  2846               	goto	u5082
  7768  0845                     u5081:	
  7769  0845  02F9               	subwf	??___flge+1,f
  7770  0846                     u5082:	
  7771  0846  0872               	movf	___flge@ff1+2,w
  7772  0847  1C03               	skipc
  7773  0848  0F72               	incfsz	___flge@ff1+2,w
  7774  0849  284B               	goto	u5083
  7775  084A  284C               	goto	u5084
  7776  084B                     u5083:	
  7777  084B  02FA               	subwf	??___flge+2,f
  7778  084C                     u5084:	
  7779  084C  0873               	movf	___flge@ff1+3,w
  7780  084D  1C03               	skipc
  7781  084E  0F73               	incfsz	___flge@ff1+3,w
  7782  084F  2851               	goto	u5085
  7783  0850  2852               	goto	u5086
  7784  0851                     u5085:	
  7785  0851  02FB               	subwf	??___flge+3,f
  7786  0852                     u5086:	
  7787  0852  087B               	movf	??___flge+3,w
  7788  0853  00F3               	movwf	___flge@ff1+3
  7789  0854  087A               	movf	??___flge+2,w
  7790  0855  00F2               	movwf	___flge@ff1+2
  7791  0856  0879               	movf	??___flge+1,w
  7792  0857  00F1               	movwf	___flge@ff1+1
  7793  0858  0878               	movf	??___flge,w
  7794  0859  00F0               	movwf	___flge@ff1
  7795  085A                     l3063:	
  7796  085A  1FF7               	btfss	___flge@ff2+3,7
  7797  085B  2880               	goto	l494
  7798  085C  3000               	movlw	0
  7799  085D  00F8               	movwf	??___flge
  7800  085E  3000               	movlw	0
  7801  085F  00F9               	movwf	??___flge+1
  7802  0860  3000               	movlw	0
  7803  0861  00FA               	movwf	??___flge+2
  7804  0862  3080               	movlw	128
  7805  0863  00FB               	movwf	??___flge+3
  7806  0864  0874               	movf	___flge@ff2,w
  7807  0865  02F8               	subwf	??___flge,f
  7808  0866  0875               	movf	___flge@ff2+1,w
  7809  0867  1C03               	skipc
  7810  0868  0F75               	incfsz	___flge@ff2+1,w
  7811  0869  286B               	goto	u5101
  7812  086A  286C               	goto	u5102
  7813  086B                     u5101:	
  7814  086B  02F9               	subwf	??___flge+1,f
  7815  086C                     u5102:	
  7816  086C  0876               	movf	___flge@ff2+2,w
  7817  086D  1C03               	skipc
  7818  086E  0F76               	incfsz	___flge@ff2+2,w
  7819  086F  2871               	goto	u5103
  7820  0870  2872               	goto	u5104
  7821  0871                     u5103:	
  7822  0871  02FA               	subwf	??___flge+2,f
  7823  0872                     u5104:	
  7824  0872  0877               	movf	___flge@ff2+3,w
  7825  0873  1C03               	skipc
  7826  0874  0F77               	incfsz	___flge@ff2+3,w
  7827  0875  2877               	goto	u5105
  7828  0876  2878               	goto	u5106
  7829  0877                     u5105:	
  7830  0877  02FB               	subwf	??___flge+3,f
  7831  0878                     u5106:	
  7832  0878  087B               	movf	??___flge+3,w
  7833  0879  00F7               	movwf	___flge@ff2+3
  7834  087A  087A               	movf	??___flge+2,w
  7835  087B  00F6               	movwf	___flge@ff2+2
  7836  087C  0879               	movf	??___flge+1,w
  7837  087D  00F5               	movwf	___flge@ff2+1
  7838  087E  0878               	movf	??___flge,w
  7839  087F  00F4               	movwf	___flge@ff2
  7840  0880                     l494:	
  7841  0880  3080               	movlw	128
  7842  0881  06F3               	xorwf	___flge@ff1+3,f
  7843  0882  3080               	movlw	128
  7844  0883  06F7               	xorwf	___flge@ff2+3,f
  7845  0884  0877               	movf	___flge@ff2+3,w
  7846  0885  0273               	subwf	___flge@ff1+3,w
  7847  0886  1D03               	skipz
  7848  0887  0008               	return
  7849  0888  0876               	movf	___flge@ff2+2,w
  7850  0889  0272               	subwf	___flge@ff1+2,w
  7851  088A  1D03               	skipz
  7852  088B  0008               	return
  7853  088C  0875               	movf	___flge@ff2+1,w
  7854  088D  0271               	subwf	___flge@ff1+1,w
  7855  088E  1D03               	skipz
  7856  088F  0008               	return
  7857  0890  0874               	movf	___flge@ff2,w
  7858  0891  0270               	subwf	___flge@ff1,w
  7859  0892  0008               	return
  7860  0893                     __end_of___flge:	
  7861                           
  7862                           	psect	text21
  7863  1D56                     __ptext21:	
  7864 ;; *************** function ___fleq *****************
  7865 ;; Defined at:
  7866 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;  ff1             4    0[COMMON] unsigned char 
  7869 ;;  ff2             4    4[COMMON] unsigned char 
  7870 ;; Auto vars:     Size  Location     Type
  7871 ;;		None
  7872 ;; Return value:  Size  Location     Type
  7873 ;;		None               void
  7874 ;; Registers used:
  7875 ;;		wreg, status,2, status,0
  7876 ;; Tracked objects:
  7877 ;;		On entry : 0/0
  7878 ;;		On exit  : 0/0
  7879 ;;		Unchanged: 0/0
  7880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7881 ;;      Params:         8       0       0       0       0
  7882 ;;      Locals:         0       0       0       0       0
  7883 ;;      Temps:          4       0       0       0       0
  7884 ;;      Totals:        12       0       0       0       0
  7885 ;;Total ram usage:       12 bytes
  7886 ;; Hardware stack levels used:    1
  7887 ;; This function calls:
  7888 ;;		Nothing
  7889 ;; This function is called by:
  7890 ;;		_sprintf
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           
  7895                           ;psect for function ___fleq
  7896  1D56                     ___fleq:	
  7897                           
  7898                           ;incstack = 0
  7899                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7900  1D56  3000               	movlw	0
  7901  1D57  0570               	andwf	___fleq@ff1,w
  7902  1D58  00F8               	movwf	??___fleq
  7903  1D59  3000               	movlw	0
  7904  1D5A  0571               	andwf	___fleq@ff1+1,w
  7905  1D5B  00F9               	movwf	??___fleq+1
  7906  1D5C  3080               	movlw	128
  7907  1D5D  0572               	andwf	___fleq@ff1+2,w
  7908  1D5E  00FA               	movwf	??___fleq+2
  7909  1D5F  307F               	movlw	127
  7910  1D60  0573               	andwf	___fleq@ff1+3,w
  7911  1D61  00FB               	movwf	??___fleq+3
  7912  1D62  087B               	movf	??___fleq+3,w
  7913  1D63  047A               	iorwf	??___fleq+2,w
  7914  1D64  0479               	iorwf	??___fleq+1,w
  7915  1D65  0478               	iorwf	??___fleq,w
  7916  1D66  1D03               	skipz
  7917  1D67  2D70               	goto	l486
  7918  1D68  3000               	movlw	0
  7919  1D69  00F3               	movwf	___fleq@ff1+3
  7920  1D6A  3000               	movlw	0
  7921  1D6B  00F2               	movwf	___fleq@ff1+2
  7922  1D6C  3000               	movlw	0
  7923  1D6D  00F1               	movwf	___fleq@ff1+1
  7924  1D6E  3000               	movlw	0
  7925  1D6F  00F0               	movwf	___fleq@ff1
  7926  1D70                     l486:	
  7927  1D70  3000               	movlw	0
  7928  1D71  0574               	andwf	___fleq@ff2,w
  7929  1D72  00F8               	movwf	??___fleq
  7930  1D73  3000               	movlw	0
  7931  1D74  0575               	andwf	___fleq@ff2+1,w
  7932  1D75  00F9               	movwf	??___fleq+1
  7933  1D76  3080               	movlw	128
  7934  1D77  0576               	andwf	___fleq@ff2+2,w
  7935  1D78  00FA               	movwf	??___fleq+2
  7936  1D79  307F               	movlw	127
  7937  1D7A  0577               	andwf	___fleq@ff2+3,w
  7938  1D7B  00FB               	movwf	??___fleq+3
  7939  1D7C  087B               	movf	??___fleq+3,w
  7940  1D7D  047A               	iorwf	??___fleq+2,w
  7941  1D7E  0479               	iorwf	??___fleq+1,w
  7942  1D7F  0478               	iorwf	??___fleq,w
  7943  1D80  1D03               	skipz
  7944  1D81  2D8A               	goto	l487
  7945  1D82  3000               	movlw	0
  7946  1D83  00F7               	movwf	___fleq@ff2+3
  7947  1D84  3000               	movlw	0
  7948  1D85  00F6               	movwf	___fleq@ff2+2
  7949  1D86  3000               	movlw	0
  7950  1D87  00F5               	movwf	___fleq@ff2+1
  7951  1D88  3000               	movlw	0
  7952  1D89  00F4               	movwf	___fleq@ff2
  7953  1D8A                     l487:	
  7954  1D8A  0877               	movf	___fleq@ff2+3,w
  7955  1D8B  0673               	xorwf	___fleq@ff1+3,w
  7956  1D8C  1D03               	skipz
  7957  1D8D  2D98               	goto	u5045
  7958  1D8E  0876               	movf	___fleq@ff2+2,w
  7959  1D8F  0672               	xorwf	___fleq@ff1+2,w
  7960  1D90  1D03               	skipz
  7961  1D91  2D98               	goto	u5045
  7962  1D92  0875               	movf	___fleq@ff2+1,w
  7963  1D93  0671               	xorwf	___fleq@ff1+1,w
  7964  1D94  1D03               	skipz
  7965  1D95  2D98               	goto	u5045
  7966  1D96  0874               	movf	___fleq@ff2,w
  7967  1D97  0670               	xorwf	___fleq@ff1,w
  7968  1D98                     u5045:	
  7969  1D98  1903               	skipnz
  7970  1D99  2D9C               	goto	l3049
  7971  1D9A  1003               	clrc
  7972  1D9B  0008               	return
  7973  1D9C                     l3049:	
  7974  1D9C  1403               	setc
  7975  1D9D  0008               	return
  7976  1D9E                     __end_of___fleq:	
  7977                           
  7978                           	psect	text22
  7979  1001                     __ptext22:	
  7980 ;; *************** function _readADC *****************
  7981 ;; Defined at:
  7982 ;;		line 95 in file "main.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;		None
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;		None
  7987 ;; Return value:  Size  Location     Type
  7988 ;;                  1    wreg      void 
  7989 ;; Registers used:
  7990 ;;		wreg, status,2, status,0, pclath, cstack
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7996 ;;      Params:         0       0       0       0       0
  7997 ;;      Locals:         0       0       0       0       0
  7998 ;;      Temps:          0       4       0       0       0
  7999 ;;      Totals:         0       4       0       0       0
  8000 ;;Total ram usage:        4 bytes
  8001 ;; Hardware stack levels used:    1
  8002 ;; Hardware stack levels required when called:    1
  8003 ;; This function calls:
  8004 ;;		___xxtofl
  8005 ;; This function is called by:
  8006 ;;		_main
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           
  8011                           ;psect for function _readADC
  8012  1001                     _readADC:	
  8013                           
  8014                           ;main.c: 96:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  8015                           
  8016                           ;incstack = 0
  8017                           ; Regs used in _readADC: [wreg+status,2+status,0+pclath+cstack]
  8018  1001  30C7               	movlw	199
  8019  1002  1283               	bcf	3,5	;RP0=0, select bank0
  8020  1003  1303               	bcf	3,6	;RP1=0, select bank0
  8021  1004  00A0               	movwf	??_readADC
  8022  1005                     u6327:	
  8023  1005  2806               	nop2
  8024  1006  0BA0               	decfsz	??_readADC,f
  8025  1007  2805               	goto	u6327
  8026  1008  2809               	nop2
  8027                           
  8028                           ;main.c: 97:     ADCON0bits.GO = 1;
  8029  1009  1283               	bcf	3,5	;RP0=0, select bank0
  8030  100A  1303               	bcf	3,6	;RP1=0, select bank0
  8031  100B  149F               	bsf	31,1	;volatile
  8032  100C                     l101:	
  8033                           ;main.c: 100:     }
  8034                           
  8035                           ;main.c: 98:     while(ADCON0bits.GO == 1){
  8036                           
  8037                           
  8038                           ;main.c: 98:     while(ADCON0bits.GO == 1){
  8039  100C  1283               	bcf	3,5	;RP0=0, select bank0
  8040  100D  1303               	bcf	3,6	;RP1=0, select bank0
  8041  100E  1C9F               	btfss	31,1	;volatile
  8042  100F  2812               	goto	l3253
  8043  1010  0000               	nop	;# 
  8044  1011  280C               	goto	l101
  8045  1012                     l3253:	
  8046                           
  8047                           ;main.c: 101:     ADC = ADRESH;
  8048  1012  081E               	movf	30,w	;volatile
  8049  1013  00A0               	movwf	??_readADC
  8050  1014  01A1               	clrf	??_readADC+1
  8051  1015  01A2               	clrf	??_readADC+2
  8052  1016  01A3               	clrf	??_readADC+3
  8053  1017  0823               	movf	??_readADC+3,w
  8054  1018  00F3               	movwf	___xxtofl@val+3
  8055  1019  0822               	movf	??_readADC+2,w
  8056  101A  00F2               	movwf	___xxtofl@val+2
  8057  101B  0821               	movf	??_readADC+1,w
  8058  101C  00F1               	movwf	___xxtofl@val+1
  8059  101D  0820               	movf	??_readADC,w
  8060  101E  00F0               	movwf	___xxtofl@val
  8061  101F  3000               	movlw	0
  8062  1020  160A  118A  2031   	fcall	___xxtofl
  8063  1023  0873               	movf	?___xxtofl+3,w
  8064  1024  1683               	bsf	3,5	;RP0=1, select bank1
  8065  1025  1303               	bcf	3,6	;RP1=0, select bank1
  8066  1026  00CB               	movwf	(_ADC+3)^(0+128)
  8067  1027  0872               	movf	?___xxtofl+2,w
  8068  1028  00CA               	movwf	(_ADC+2)^(0+128)
  8069  1029  0871               	movf	?___xxtofl+1,w
  8070  102A  00C9               	movwf	(_ADC+1)^(0+128)
  8071  102B  0870               	movf	?___xxtofl,w
  8072  102C  00C8               	movwf	_ADC^(0+128)
  8073                           
  8074                           ;main.c: 102:     PIR1bits.ADIF = 0;
  8075  102D  1283               	bcf	3,5	;RP0=0, select bank0
  8076  102E  1303               	bcf	3,6	;RP1=0, select bank0
  8077  102F  130C               	bcf	12,6	;volatile
  8078  1030  0008               	return
  8079  1031                     __end_of_readADC:	
  8080                           
  8081                           	psect	text23
  8082  1031                     __ptext23:	
  8083 ;; *************** function ___xxtofl *****************
  8084 ;; Defined at:
  8085 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  sign            1    wreg     unsigned char 
  8088 ;;  val             4    0[COMMON] long 
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;  sign            1    8[COMMON] unsigned char 
  8091 ;;  arg             4   10[COMMON] unsigned long 
  8092 ;;  exp             1    9[COMMON] unsigned char 
  8093 ;; Return value:  Size  Location     Type
  8094 ;;                  4    0[COMMON] unsigned char 
  8095 ;; Registers used:
  8096 ;;		wreg, status,2, status,0
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/0
  8099 ;;		On exit  : 0/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8102 ;;      Params:         4       0       0       0       0
  8103 ;;      Locals:         6       0       0       0       0
  8104 ;;      Temps:          4       0       0       0       0
  8105 ;;      Totals:        14       0       0       0       0
  8106 ;;Total ram usage:       14 bytes
  8107 ;; Hardware stack levels used:    1
  8108 ;; This function calls:
  8109 ;;		Nothing
  8110 ;; This function is called by:
  8111 ;;		_readADC
  8112 ;;		_sprintf
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           
  8117                           ;psect for function ___xxtofl
  8118  1031                     ___xxtofl:	
  8119                           
  8120                           ;incstack = 0
  8121                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8122                           ;___xxtofl@sign stored from wreg
  8123  1031  00F8               	movwf	___xxtofl@sign
  8124  1032  0878               	movf	___xxtofl@sign,w
  8125  1033  1D03               	btfss	3,2
  8126  1034  1FF3               	btfss	___xxtofl@val+3,7
  8127  1035  2846               	goto	l3149
  8128  1036  0970               	comf	___xxtofl@val,w
  8129  1037  00FA               	movwf	___xxtofl@arg
  8130  1038  0971               	comf	___xxtofl@val+1,w
  8131  1039  00FB               	movwf	___xxtofl@arg+1
  8132  103A  0972               	comf	___xxtofl@val+2,w
  8133  103B  00FC               	movwf	___xxtofl@arg+2
  8134  103C  0973               	comf	___xxtofl@val+3,w
  8135  103D  00FD               	movwf	___xxtofl@arg+3
  8136  103E  0AFA               	incf	___xxtofl@arg,f
  8137  103F  1903               	skipnz
  8138  1040  0AFB               	incf	___xxtofl@arg+1,f
  8139  1041  1903               	skipnz
  8140  1042  0AFC               	incf	___xxtofl@arg+2,f
  8141  1043  1903               	skipnz
  8142  1044  0AFD               	incf	___xxtofl@arg+3,f
  8143  1045  284E               	goto	l761
  8144  1046                     l3149:	
  8145  1046  0873               	movf	___xxtofl@val+3,w
  8146  1047  00FD               	movwf	___xxtofl@arg+3
  8147  1048  0872               	movf	___xxtofl@val+2,w
  8148  1049  00FC               	movwf	___xxtofl@arg+2
  8149  104A  0871               	movf	___xxtofl@val+1,w
  8150  104B  00FB               	movwf	___xxtofl@arg+1
  8151  104C  0870               	movf	___xxtofl@val,w
  8152  104D  00FA               	movwf	___xxtofl@arg
  8153  104E                     l761:	
  8154  104E  0873               	movf	___xxtofl@val+3,w
  8155  104F  0472               	iorwf	___xxtofl@val+2,w
  8156  1050  0471               	iorwf	___xxtofl@val+1,w
  8157  1051  0470               	iorwf	___xxtofl@val,w
  8158  1052  1D03               	skipz
  8159  1053  285D               	goto	l3155
  8160  1054  3000               	movlw	0
  8161  1055  00F3               	movwf	?___xxtofl+3
  8162  1056  3000               	movlw	0
  8163  1057  00F2               	movwf	?___xxtofl+2
  8164  1058  3000               	movlw	0
  8165  1059  00F1               	movwf	?___xxtofl+1
  8166  105A  3000               	movlw	0
  8167  105B  00F0               	movwf	?___xxtofl
  8168  105C  0008               	return
  8169  105D                     l3155:	
  8170  105D  3096               	movlw	150
  8171  105E  00F4               	movwf	??___xxtofl
  8172  105F  0874               	movf	??___xxtofl,w
  8173  1060  00F9               	movwf	___xxtofl@exp
  8174  1061                     l3159:	
  8175  1061  30FE               	movlw	254
  8176  1062  057D               	andwf	___xxtofl@arg+3,w
  8177  1063  1903               	btfsc	3,2
  8178  1064  288E               	goto	l767
  8179  1065  3001               	movlw	1
  8180  1066  00F4               	movwf	??___xxtofl
  8181  1067  0874               	movf	??___xxtofl,w
  8182  1068  07F9               	addwf	___xxtofl@exp,f
  8183  1069  3001               	movlw	1
  8184  106A                     u5325:	
  8185  106A  1003               	clrc
  8186  106B  0CFD               	rrf	___xxtofl@arg+3,f
  8187  106C  0CFC               	rrf	___xxtofl@arg+2,f
  8188  106D  0CFB               	rrf	___xxtofl@arg+1,f
  8189  106E  0CFA               	rrf	___xxtofl@arg,f
  8190  106F  3EFF               	addlw	-1
  8191  1070  1D03               	skipz
  8192  1071  286A               	goto	u5325
  8193  1072  2861               	goto	l3159
  8194  1073                     l3161:	
  8195  1073  3001               	movlw	1
  8196  1074  00F4               	movwf	??___xxtofl
  8197  1075  0874               	movf	??___xxtofl,w
  8198  1076  07F9               	addwf	___xxtofl@exp,f
  8199  1077  3001               	movlw	1
  8200  1078  07FA               	addwf	___xxtofl@arg,f
  8201  1079  3000               	movlw	0
  8202  107A  1803               	skipnc
  8203  107B  3001               	movlw	1
  8204  107C  07FB               	addwf	___xxtofl@arg+1,f
  8205  107D  3000               	movlw	0
  8206  107E  1803               	skipnc
  8207  107F  3001               	movlw	1
  8208  1080  07FC               	addwf	___xxtofl@arg+2,f
  8209  1081  3000               	movlw	0
  8210  1082  1803               	skipnc
  8211  1083  3001               	movlw	1
  8212  1084  07FD               	addwf	___xxtofl@arg+3,f
  8213  1085  3001               	movlw	1
  8214  1086                     u5345:	
  8215  1086  1003               	clrc
  8216  1087  0CFD               	rrf	___xxtofl@arg+3,f
  8217  1088  0CFC               	rrf	___xxtofl@arg+2,f
  8218  1089  0CFB               	rrf	___xxtofl@arg+1,f
  8219  108A  0CFA               	rrf	___xxtofl@arg,f
  8220  108B  3EFF               	addlw	-1
  8221  108C  1D03               	skipz
  8222  108D  2886               	goto	u5345
  8223  108E                     l767:	
  8224  108E  30FF               	movlw	255
  8225  108F  057D               	andwf	___xxtofl@arg+3,w
  8226  1090  1903               	btfsc	3,2
  8227  1091  28A2               	goto	l3169
  8228  1092  2873               	goto	l3161
  8229  1093                     l3171:	
  8230  1093  3002               	movlw	2
  8231  1094  0279               	subwf	___xxtofl@exp,w
  8232  1095  1C03               	btfss	3,0
  8233  1096  28A4               	goto	l774
  8234  1097  3001               	movlw	1
  8235  1098  02F9               	subwf	___xxtofl@exp,f
  8236  1099  3001               	movlw	1
  8237  109A  00F4               	movwf	??___xxtofl
  8238  109B                     u5365:	
  8239  109B  1003               	clrc
  8240  109C  0DFA               	rlf	___xxtofl@arg,f
  8241  109D  0DFB               	rlf	___xxtofl@arg+1,f
  8242  109E  0DFC               	rlf	___xxtofl@arg+2,f
  8243  109F  0DFD               	rlf	___xxtofl@arg+3,f
  8244  10A0  0BF4               	decfsz	??___xxtofl,f
  8245  10A1  289B               	goto	u5365
  8246  10A2                     l3169:	
  8247  10A2  1FFC               	btfss	___xxtofl@arg+2,7
  8248  10A3  2893               	goto	l3171
  8249  10A4                     l774:	
  8250  10A4  1879               	btfsc	___xxtofl@exp,0
  8251  10A5  28AE               	goto	l775
  8252  10A6  30FF               	movlw	255
  8253  10A7  05FA               	andwf	___xxtofl@arg,f
  8254  10A8  30FF               	movlw	255
  8255  10A9  05FB               	andwf	___xxtofl@arg+1,f
  8256  10AA  307F               	movlw	127
  8257  10AB  05FC               	andwf	___xxtofl@arg+2,f
  8258  10AC  30FF               	movlw	255
  8259  10AD  05FD               	andwf	___xxtofl@arg+3,f
  8260  10AE                     l775:	
  8261  10AE  1003               	clrc
  8262  10AF  0CF9               	rrf	___xxtofl@exp,f
  8263  10B0  0879               	movf	___xxtofl@exp,w
  8264  10B1  00F4               	movwf	??___xxtofl
  8265  10B2  01F5               	clrf	??___xxtofl+1
  8266  10B3  01F6               	clrf	??___xxtofl+2
  8267  10B4  01F7               	clrf	??___xxtofl+3
  8268  10B5  3018               	movlw	24
  8269  10B6                     u5405:	
  8270  10B6  1003               	clrc
  8271  10B7  0DF4               	rlf	??___xxtofl,f
  8272  10B8  0DF5               	rlf	??___xxtofl+1,f
  8273  10B9  0DF6               	rlf	??___xxtofl+2,f
  8274  10BA  0DF7               	rlf	??___xxtofl+3,f
  8275  10BB  3EFF               	addlw	-1
  8276  10BC  1D03               	skipz
  8277  10BD  28B6               	goto	u5405
  8278  10BE  0874               	movf	??___xxtofl,w
  8279  10BF  04FA               	iorwf	___xxtofl@arg,f
  8280  10C0  0875               	movf	??___xxtofl+1,w
  8281  10C1  04FB               	iorwf	___xxtofl@arg+1,f
  8282  10C2  0876               	movf	??___xxtofl+2,w
  8283  10C3  04FC               	iorwf	___xxtofl@arg+2,f
  8284  10C4  0877               	movf	??___xxtofl+3,w
  8285  10C5  04FD               	iorwf	___xxtofl@arg+3,f
  8286  10C6  0878               	movf	___xxtofl@sign,w
  8287  10C7  1D03               	btfss	3,2
  8288  10C8  1FF3               	btfss	___xxtofl@val+3,7
  8289  10C9  28CB               	goto	l3183
  8290  10CA  17FD               	bsf	___xxtofl@arg+3,7
  8291  10CB                     l3183:	
  8292  10CB  087D               	movf	___xxtofl@arg+3,w
  8293  10CC  00F3               	movwf	?___xxtofl+3
  8294  10CD  087C               	movf	___xxtofl@arg+2,w
  8295  10CE  00F2               	movwf	?___xxtofl+2
  8296  10CF  087B               	movf	___xxtofl@arg+1,w
  8297  10D0  00F1               	movwf	?___xxtofl+1
  8298  10D1  087A               	movf	___xxtofl@arg,w
  8299  10D2  00F0               	movwf	?___xxtofl
  8300  10D3  0008               	return
  8301  10D4                     __end_of___xxtofl:	
  8302                           
  8303                           	psect	text24
  8304  1227                     __ptext24:	
  8305 ;; *************** function ___fldiv *****************
  8306 ;; Defined at:
  8307 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;  a               4    0[COMMON] unsigned char 
  8310 ;;  b               4    4[COMMON] unsigned char 
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;  grs             4    7[BANK0 ] unsigned long 
  8313 ;;  rem             4    0[BANK0 ] unsigned long 
  8314 ;;  new_exp         2    5[BANK0 ] int 
  8315 ;;  aexp            1   12[BANK0 ] unsigned char 
  8316 ;;  bexp            1   11[BANK0 ] unsigned char 
  8317 ;;  sign            1    4[BANK0 ] unsigned char 
  8318 ;; Return value:  Size  Location     Type
  8319 ;;                  4    0[COMMON] unsigned char 
  8320 ;; Registers used:
  8321 ;;		wreg, status,2, status,0, btemp+1
  8322 ;; Tracked objects:
  8323 ;;		On entry : 0/0
  8324 ;;		On exit  : 0/0
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8327 ;;      Params:         8       0       0       0       0
  8328 ;;      Locals:         0      13       0       0       0
  8329 ;;      Temps:          5       0       0       0       0
  8330 ;;      Totals:        13      13       0       0       0
  8331 ;;Total ram usage:       26 bytes
  8332 ;; Hardware stack levels used:    1
  8333 ;; This function calls:
  8334 ;;		Nothing
  8335 ;; This function is called by:
  8336 ;;		_main
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           
  8341                           ;psect for function ___fldiv
  8342  1227                     ___fldiv:	
  8343                           
  8344                           ;incstack = 0
  8345                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8346  1227  0877               	movf	___fldiv@b+3,w
  8347  1228  3980               	andlw	128
  8348  1229  00F8               	movwf	??___fldiv
  8349  122A  0878               	movf	??___fldiv,w
  8350  122B  1283               	bcf	3,5	;RP0=0, select bank0
  8351  122C  1303               	bcf	3,6	;RP1=0, select bank0
  8352  122D  00A4               	movwf	___fldiv@sign
  8353  122E  0877               	movf	___fldiv@b+3,w
  8354  122F  00F8               	movwf	??___fldiv
  8355  1230  0778               	addwf	??___fldiv,w
  8356  1231  00F9               	movwf	??___fldiv+1
  8357  1232  0879               	movf	??___fldiv+1,w
  8358  1233  00AB               	movwf	___fldiv@bexp
  8359  1234  1BF6               	btfsc	___fldiv@b+2,7
  8360  1235  142B               	bsf	___fldiv@bexp,0
  8361  1236  082B               	movf	___fldiv@bexp,w
  8362  1237  1903               	btfsc	3,2
  8363  1238  2A47               	goto	l3535
  8364  1239  0A2B               	incf	___fldiv@bexp,w
  8365  123A  1D03               	btfss	3,2
  8366  123B  2A44               	goto	l3531
  8367  123C  3000               	movlw	0
  8368  123D  00F7               	movwf	___fldiv@b+3
  8369  123E  3000               	movlw	0
  8370  123F  00F6               	movwf	___fldiv@b+2
  8371  1240  3000               	movlw	0
  8372  1241  00F5               	movwf	___fldiv@b+1
  8373  1242  3000               	movlw	0
  8374  1243  00F4               	movwf	___fldiv@b
  8375  1244                     l3531:	
  8376  1244  17F6               	bsf	___fldiv@b+2,7
  8377  1245  01F7               	clrf	___fldiv@b+3
  8378  1246  2A4F               	goto	l3537
  8379  1247                     l3535:	
  8380  1247  3000               	movlw	0
  8381  1248  00F7               	movwf	___fldiv@b+3
  8382  1249  3000               	movlw	0
  8383  124A  00F6               	movwf	___fldiv@b+2
  8384  124B  3000               	movlw	0
  8385  124C  00F5               	movwf	___fldiv@b+1
  8386  124D  3000               	movlw	0
  8387  124E  00F4               	movwf	___fldiv@b
  8388  124F                     l3537:	
  8389  124F  0873               	movf	___fldiv@a+3,w
  8390  1250  3980               	andlw	128
  8391  1251  00F8               	movwf	??___fldiv
  8392  1252  0878               	movf	??___fldiv,w
  8393  1253  06A4               	xorwf	___fldiv@sign,f
  8394  1254  0873               	movf	___fldiv@a+3,w
  8395  1255  00F8               	movwf	??___fldiv
  8396  1256  0778               	addwf	??___fldiv,w
  8397  1257  00F9               	movwf	??___fldiv+1
  8398  1258  0879               	movf	??___fldiv+1,w
  8399  1259  00AC               	movwf	___fldiv@aexp
  8400  125A  1BF2               	btfsc	___fldiv@a+2,7
  8401  125B  142C               	bsf	___fldiv@aexp,0
  8402  125C  082C               	movf	___fldiv@aexp,w
  8403  125D  1903               	btfsc	3,2
  8404  125E  2A6D               	goto	l3555
  8405  125F  0A2C               	incf	___fldiv@aexp,w
  8406  1260  1D03               	btfss	3,2
  8407  1261  2A6A               	goto	l3551
  8408  1262  3000               	movlw	0
  8409  1263  00F3               	movwf	___fldiv@a+3
  8410  1264  3000               	movlw	0
  8411  1265  00F2               	movwf	___fldiv@a+2
  8412  1266  3000               	movlw	0
  8413  1267  00F1               	movwf	___fldiv@a+1
  8414  1268  3000               	movlw	0
  8415  1269  00F0               	movwf	___fldiv@a
  8416  126A                     l3551:	
  8417  126A  17F2               	bsf	___fldiv@a+2,7
  8418  126B  01F3               	clrf	___fldiv@a+3
  8419  126C  2A75               	goto	l683
  8420  126D                     l3555:	
  8421  126D  3000               	movlw	0
  8422  126E  00F3               	movwf	___fldiv@a+3
  8423  126F  3000               	movlw	0
  8424  1270  00F2               	movwf	___fldiv@a+2
  8425  1271  3000               	movlw	0
  8426  1272  00F1               	movwf	___fldiv@a+1
  8427  1273  3000               	movlw	0
  8428  1274  00F0               	movwf	___fldiv@a
  8429  1275                     l683:	
  8430  1275  0873               	movf	___fldiv@a+3,w
  8431  1276  0472               	iorwf	___fldiv@a+2,w
  8432  1277  0471               	iorwf	___fldiv@a+1,w
  8433  1278  0470               	iorwf	___fldiv@a,w
  8434  1279  1D03               	skipz
  8435  127A  2A94               	goto	l3565
  8436  127B  3000               	movlw	0
  8437  127C  00F7               	movwf	___fldiv@b+3
  8438  127D  3000               	movlw	0
  8439  127E  00F6               	movwf	___fldiv@b+2
  8440  127F  3000               	movlw	0
  8441  1280  00F5               	movwf	___fldiv@b+1
  8442  1281  3000               	movlw	0
  8443  1282  00F4               	movwf	___fldiv@b
  8444  1283  3080               	movlw	128
  8445  1284  04F6               	iorwf	___fldiv@b+2,f
  8446  1285  307F               	movlw	127
  8447  1286  04F7               	iorwf	___fldiv@b+3,f
  8448  1287                     L9:	
  8449  1287  0824               	movf	___fldiv@sign,w
  8450  1288  00F8               	movwf	??___fldiv
  8451  1289  0878               	movf	??___fldiv,w
  8452  128A  04F7               	iorwf	___fldiv@b+3,f
  8453  128B  0877               	movf	___fldiv@b+3,w
  8454  128C  00F3               	movwf	?___fldiv+3
  8455  128D  0876               	movf	___fldiv@b+2,w
  8456  128E  00F2               	movwf	?___fldiv+2
  8457  128F  0875               	movf	___fldiv@b+1,w
  8458  1290  00F1               	movwf	?___fldiv+1
  8459  1291  0874               	movf	___fldiv@b,w
  8460  1292  00F0               	movwf	?___fldiv
  8461  1293  0008               	return
  8462  1294                     l3565:	
  8463  1294  082B               	movf	___fldiv@bexp,w
  8464  1295  1D03               	btfss	3,2
  8465  1296  2AA0               	goto	l3571
  8466  1297  3000               	movlw	0
  8467  1298  00F3               	movwf	?___fldiv+3
  8468  1299  3000               	movlw	0
  8469  129A  00F2               	movwf	?___fldiv+2
  8470  129B  3000               	movlw	0
  8471  129C  00F1               	movwf	?___fldiv+1
  8472  129D  3000               	movlw	0
  8473  129E  00F0               	movwf	?___fldiv
  8474  129F  0008               	return
  8475  12A0                     l3571:	
  8476  12A0  082B               	movf	___fldiv@bexp,w
  8477  12A1  00F8               	movwf	??___fldiv
  8478  12A2  01F9               	clrf	??___fldiv+1
  8479  12A3  0879               	movf	??___fldiv+1,w
  8480  12A4  00FB               	movwf	??___fldiv+3
  8481  12A5  082C               	movf	___fldiv@aexp,w
  8482  12A6  0278               	subwf	??___fldiv,w
  8483  12A7  00FA               	movwf	??___fldiv+2
  8484  12A8  1C03               	skipc
  8485  12A9  03FB               	decf	??___fldiv+3,f
  8486  12AA  087A               	movf	??___fldiv+2,w
  8487  12AB  3E7F               	addlw	127
  8488  12AC  00A5               	movwf	___fldiv@new_exp
  8489  12AD  087B               	movf	??___fldiv+3,w
  8490  12AE  1803               	skipnc
  8491  12AF  3E01               	addlw	1
  8492  12B0  3E00               	addlw	0
  8493  12B1  00A6               	movwf	___fldiv@new_exp+1
  8494  12B2  0877               	movf	___fldiv@b+3,w
  8495  12B3  00A3               	movwf	___fldiv@rem+3
  8496  12B4  0876               	movf	___fldiv@b+2,w
  8497  12B5  00A2               	movwf	___fldiv@rem+2
  8498  12B6  0875               	movf	___fldiv@b+1,w
  8499  12B7  00A1               	movwf	___fldiv@rem+1
  8500  12B8  0874               	movf	___fldiv@b,w
  8501  12B9  00A0               	movwf	___fldiv@rem
  8502  12BA  3000               	movlw	0
  8503  12BB  00F7               	movwf	___fldiv@b+3
  8504  12BC  3000               	movlw	0
  8505  12BD  00F6               	movwf	___fldiv@b+2
  8506  12BE  3000               	movlw	0
  8507  12BF  00F5               	movwf	___fldiv@b+1
  8508  12C0  3000               	movlw	0
  8509  12C1  00F4               	movwf	___fldiv@b
  8510  12C2  3000               	movlw	0
  8511  12C3  00AA               	movwf	___fldiv@grs+3
  8512  12C4  3000               	movlw	0
  8513  12C5  00A9               	movwf	___fldiv@grs+2
  8514  12C6  3000               	movlw	0
  8515  12C7  00A8               	movwf	___fldiv@grs+1
  8516  12C8  3000               	movlw	0
  8517  12C9  00A7               	movwf	___fldiv@grs
  8518  12CA  01AC               	clrf	___fldiv@aexp
  8519  12CB                     l3599:	
  8520  12CB  301A               	movlw	26
  8521  12CC  022C               	subwf	___fldiv@aexp,w
  8522  12CD  1803               	btfsc	3,0
  8523  12CE  2B19               	goto	l3601
  8524  12CF  082C               	movf	___fldiv@aexp,w
  8525  12D0  1903               	btfsc	3,2
  8526  12D1  2AEF               	goto	l3591
  8527  12D2  3001               	movlw	1
  8528  12D3  00F8               	movwf	??___fldiv
  8529  12D4                     u6085:	
  8530  12D4  1003               	clrc
  8531  12D5  0DA0               	rlf	___fldiv@rem,f
  8532  12D6  0DA1               	rlf	___fldiv@rem+1,f
  8533  12D7  0DA2               	rlf	___fldiv@rem+2,f
  8534  12D8  0DA3               	rlf	___fldiv@rem+3,f
  8535  12D9  0BF8               	decfsz	??___fldiv,f
  8536  12DA  2AD4               	goto	u6085
  8537  12DB  3001               	movlw	1
  8538  12DC  00F8               	movwf	??___fldiv
  8539  12DD                     u6095:	
  8540  12DD  1003               	clrc
  8541  12DE  0DF4               	rlf	___fldiv@b,f
  8542  12DF  0DF5               	rlf	___fldiv@b+1,f
  8543  12E0  0DF6               	rlf	___fldiv@b+2,f
  8544  12E1  0DF7               	rlf	___fldiv@b+3,f
  8545  12E2  0BF8               	decfsz	??___fldiv,f
  8546  12E3  2ADD               	goto	u6095
  8547  12E4  1BAA               	btfsc	___fldiv@grs+3,7
  8548  12E5  1474               	bsf	___fldiv@b,0
  8549  12E6  3001               	movlw	1
  8550  12E7  00F8               	movwf	??___fldiv
  8551  12E8                     u6115:	
  8552  12E8  1003               	clrc
  8553  12E9  0DA7               	rlf	___fldiv@grs,f
  8554  12EA  0DA8               	rlf	___fldiv@grs+1,f
  8555  12EB  0DA9               	rlf	___fldiv@grs+2,f
  8556  12EC  0DAA               	rlf	___fldiv@grs+3,f
  8557  12ED  0BF8               	decfsz	??___fldiv,f
  8558  12EE  2AE8               	goto	u6115
  8559  12EF                     l3591:	
  8560  12EF  0873               	movf	___fldiv@a+3,w
  8561  12F0  0223               	subwf	___fldiv@rem+3,w
  8562  12F1  1D03               	skipz
  8563  12F2  2AFD               	goto	u6125
  8564  12F3  0872               	movf	___fldiv@a+2,w
  8565  12F4  0222               	subwf	___fldiv@rem+2,w
  8566  12F5  1D03               	skipz
  8567  12F6  2AFD               	goto	u6125
  8568  12F7  0871               	movf	___fldiv@a+1,w
  8569  12F8  0221               	subwf	___fldiv@rem+1,w
  8570  12F9  1D03               	skipz
  8571  12FA  2AFD               	goto	u6125
  8572  12FB  0870               	movf	___fldiv@a,w
  8573  12FC  0220               	subwf	___fldiv@rem,w
  8574  12FD                     u6125:	
  8575  12FD  1C03               	skipc
  8576  12FE  2B14               	goto	l3597
  8577  12FF  172A               	bsf	___fldiv@grs+3,6
  8578  1300  0870               	movf	___fldiv@a,w
  8579  1301  02A0               	subwf	___fldiv@rem,f
  8580  1302  0871               	movf	___fldiv@a+1,w
  8581  1303  1C03               	skipc
  8582  1304  0F71               	incfsz	___fldiv@a+1,w
  8583  1305  2B07               	goto	u6135
  8584  1306  2B08               	goto	u6136
  8585  1307                     u6135:	
  8586  1307  02A1               	subwf	___fldiv@rem+1,f
  8587  1308                     u6136:	
  8588  1308  0872               	movf	___fldiv@a+2,w
  8589  1309  1C03               	skipc
  8590  130A  0F72               	incfsz	___fldiv@a+2,w
  8591  130B  2B0D               	goto	u6137
  8592  130C  2B0E               	goto	u6138
  8593  130D                     u6137:	
  8594  130D  02A2               	subwf	___fldiv@rem+2,f
  8595  130E                     u6138:	
  8596  130E  0873               	movf	___fldiv@a+3,w
  8597  130F  1C03               	skipc
  8598  1310  0F73               	incfsz	___fldiv@a+3,w
  8599  1311  2B13               	goto	u6139
  8600  1312  2B14               	goto	l3597
  8601  1313                     u6139:	
  8602  1313  02A3               	subwf	___fldiv@rem+3,f
  8603  1314                     l3597:	
  8604  1314  3001               	movlw	1
  8605  1315  00F8               	movwf	??___fldiv
  8606  1316  0878               	movf	??___fldiv,w
  8607  1317  07AC               	addwf	___fldiv@aexp,f
  8608  1318  2ACB               	goto	l3599
  8609  1319                     l3601:	
  8610  1319  0823               	movf	___fldiv@rem+3,w
  8611  131A  0422               	iorwf	___fldiv@rem+2,w
  8612  131B  0421               	iorwf	___fldiv@rem+1,w
  8613  131C  0420               	iorwf	___fldiv@rem,w
  8614  131D  1D03               	btfss	3,2
  8615  131E  1427               	bsf	___fldiv@grs,0
  8616  131F                     l3615:	
  8617  131F  1BF6               	btfsc	___fldiv@b+2,7
  8618  1320  2B3C               	goto	l3617
  8619  1321  3001               	movlw	1
  8620  1322  00F8               	movwf	??___fldiv
  8621  1323                     u6165:	
  8622  1323  1003               	clrc
  8623  1324  0DF4               	rlf	___fldiv@b,f
  8624  1325  0DF5               	rlf	___fldiv@b+1,f
  8625  1326  0DF6               	rlf	___fldiv@b+2,f
  8626  1327  0DF7               	rlf	___fldiv@b+3,f
  8627  1328  0BF8               	decfsz	??___fldiv,f
  8628  1329  2B23               	goto	u6165
  8629  132A  1BAA               	btfsc	___fldiv@grs+3,7
  8630  132B  1474               	bsf	___fldiv@b,0
  8631  132C  3001               	movlw	1
  8632  132D  00F8               	movwf	??___fldiv
  8633  132E                     u6185:	
  8634  132E  1003               	clrc
  8635  132F  0DA7               	rlf	___fldiv@grs,f
  8636  1330  0DA8               	rlf	___fldiv@grs+1,f
  8637  1331  0DA9               	rlf	___fldiv@grs+2,f
  8638  1332  0DAA               	rlf	___fldiv@grs+3,f
  8639  1333  0BF8               	decfsz	??___fldiv,f
  8640  1334  2B2E               	goto	u6185
  8641  1335  30FF               	movlw	255
  8642  1336  07A5               	addwf	___fldiv@new_exp,f
  8643  1337  1803               	skipnc
  8644  1338  0AA6               	incf	___fldiv@new_exp+1,f
  8645  1339  30FF               	movlw	255
  8646  133A  07A6               	addwf	___fldiv@new_exp+1,f
  8647  133B  2B1F               	goto	l3615
  8648  133C                     l3617:	
  8649  133C  01AC               	clrf	___fldiv@aexp
  8650  133D  1FAA               	btfss	___fldiv@grs+3,7
  8651  133E  2B55               	goto	l3627
  8652  133F  30FF               	movlw	255
  8653  1340  0527               	andwf	___fldiv@grs,w
  8654  1341  00F8               	movwf	??___fldiv
  8655  1342  30FF               	movlw	255
  8656  1343  0528               	andwf	___fldiv@grs+1,w
  8657  1344  00F9               	movwf	??___fldiv+1
  8658  1345  30FF               	movlw	255
  8659  1346  0529               	andwf	___fldiv@grs+2,w
  8660  1347  00FA               	movwf	??___fldiv+2
  8661  1348  307F               	movlw	127
  8662  1349  052A               	andwf	___fldiv@grs+3,w
  8663  134A  00FB               	movwf	??___fldiv+3
  8664  134B  087B               	movf	??___fldiv+3,w
  8665  134C  047A               	iorwf	??___fldiv+2,w
  8666  134D  0479               	iorwf	??___fldiv+1,w
  8667  134E  0478               	iorwf	??___fldiv,w
  8668  134F  1903               	skipnz
  8669  1350  1874               	btfsc	___fldiv@b,0
  8670  1351  2B53               	goto	l3623
  8671  1352  2B55               	goto	l3627
  8672  1353                     l3623:	
  8673  1353  01AC               	clrf	___fldiv@aexp
  8674  1354  0AAC               	incf	___fldiv@aexp,f
  8675  1355                     l3627:	
  8676  1355  082C               	movf	___fldiv@aexp,w
  8677  1356  1903               	btfsc	3,2
  8678  1357  2B87               	goto	l3637
  8679  1358  3001               	movlw	1
  8680  1359  07F4               	addwf	___fldiv@b,f
  8681  135A  3000               	movlw	0
  8682  135B  1803               	skipnc
  8683  135C  3001               	movlw	1
  8684  135D  07F5               	addwf	___fldiv@b+1,f
  8685  135E  3000               	movlw	0
  8686  135F  1803               	skipnc
  8687  1360  3001               	movlw	1
  8688  1361  07F6               	addwf	___fldiv@b+2,f
  8689  1362  3000               	movlw	0
  8690  1363  1803               	skipnc
  8691  1364  3001               	movlw	1
  8692  1365  07F7               	addwf	___fldiv@b+3,f
  8693  1366  1C77               	btfss	___fldiv@b+3,0
  8694  1367  2B87               	goto	l3637
  8695  1368  0874               	movf	___fldiv@b,w
  8696  1369  00F8               	movwf	??___fldiv
  8697  136A  0875               	movf	___fldiv@b+1,w
  8698  136B  00F9               	movwf	??___fldiv+1
  8699  136C  0876               	movf	___fldiv@b+2,w
  8700  136D  00FA               	movwf	??___fldiv+2
  8701  136E  0877               	movf	___fldiv@b+3,w
  8702  136F  00FB               	movwf	??___fldiv+3
  8703  1370  3001               	movlw	1
  8704  1371  00FC               	movwf	??___fldiv+4
  8705  1372                     u6255:	
  8706  1372  0D7B               	rlf	??___fldiv+3,w
  8707  1373  0CFB               	rrf	??___fldiv+3,f
  8708  1374  0CFA               	rrf	??___fldiv+2,f
  8709  1375  0CF9               	rrf	??___fldiv+1,f
  8710  1376  0CF8               	rrf	??___fldiv,f
  8711  1377  0BFC               	decfsz	??___fldiv+4,f
  8712  1378  2B72               	goto	u6255
  8713  1379  087B               	movf	??___fldiv+3,w
  8714  137A  00F7               	movwf	___fldiv@b+3
  8715  137B  087A               	movf	??___fldiv+2,w
  8716  137C  00F6               	movwf	___fldiv@b+2
  8717  137D  0879               	movf	??___fldiv+1,w
  8718  137E  00F5               	movwf	___fldiv@b+1
  8719  137F  0878               	movf	??___fldiv,w
  8720  1380  00F4               	movwf	___fldiv@b
  8721  1381  3001               	movlw	1
  8722  1382  07A5               	addwf	___fldiv@new_exp,f
  8723  1383  1803               	skipnc
  8724  1384  0AA6               	incf	___fldiv@new_exp+1,f
  8725  1385  3000               	movlw	0
  8726  1386  07A6               	addwf	___fldiv@new_exp+1,f
  8727  1387                     l3637:	
  8728  1387  0826               	movf	___fldiv@new_exp+1,w
  8729  1388  3A80               	xorlw	128
  8730  1389  00FF               	movwf	127
  8731  138A  3080               	movlw	128
  8732  138B  027F               	subwf	127,w
  8733  138C  1D03               	skipz
  8734  138D  2B90               	goto	u6265
  8735  138E  30FF               	movlw	255
  8736  138F  0225               	subwf	___fldiv@new_exp,w
  8737  1390                     u6265:	
  8738  1390  1C03               	skipc
  8739  1391  2BA0               	goto	l3641
  8740  1392  30FF               	movlw	255
  8741  1393  1283               	bcf	3,5	;RP0=0, select bank0
  8742  1394  1303               	bcf	3,6	;RP1=0, select bank0
  8743  1395  00A5               	movwf	___fldiv@new_exp
  8744  1396  3000               	movlw	0
  8745  1397  00A6               	movwf	___fldiv@new_exp+1
  8746  1398  3000               	movlw	0
  8747  1399  00F7               	movwf	___fldiv@b+3
  8748  139A  3000               	movlw	0
  8749  139B  00F6               	movwf	___fldiv@b+2
  8750  139C  3000               	movlw	0
  8751  139D  00F5               	movwf	___fldiv@b+1
  8752  139E  3000               	movlw	0
  8753  139F  00F4               	movwf	___fldiv@b
  8754  13A0                     l3641:	
  8755  13A0  1283               	bcf	3,5	;RP0=0, select bank0
  8756  13A1  1303               	bcf	3,6	;RP1=0, select bank0
  8757  13A2  0826               	movf	___fldiv@new_exp+1,w
  8758  13A3  3A80               	xorlw	128
  8759  13A4  00FF               	movwf	127
  8760  13A5  3080               	movlw	128
  8761  13A6  027F               	subwf	127,w
  8762  13A7  1D03               	skipz
  8763  13A8  2BAB               	goto	u6275
  8764  13A9  3001               	movlw	1
  8765  13AA  0225               	subwf	___fldiv@new_exp,w
  8766  13AB                     u6275:	
  8767  13AB  1803               	skipnc
  8768  13AC  2BBA               	goto	l705
  8769  13AD  1283               	bcf	3,5	;RP0=0, select bank0
  8770  13AE  1303               	bcf	3,6	;RP1=0, select bank0
  8771  13AF  01A5               	clrf	___fldiv@new_exp
  8772  13B0  01A6               	clrf	___fldiv@new_exp+1
  8773  13B1  3000               	movlw	0
  8774  13B2  00F7               	movwf	___fldiv@b+3
  8775  13B3  3000               	movlw	0
  8776  13B4  00F6               	movwf	___fldiv@b+2
  8777  13B5  3000               	movlw	0
  8778  13B6  00F5               	movwf	___fldiv@b+1
  8779  13B7  3000               	movlw	0
  8780  13B8  00F4               	movwf	___fldiv@b
  8781  13B9  01A4               	clrf	___fldiv@sign
  8782  13BA                     l705:	
  8783  13BA  1283               	bcf	3,5	;RP0=0, select bank0
  8784  13BB  1303               	bcf	3,6	;RP1=0, select bank0
  8785  13BC  0825               	movf	___fldiv@new_exp,w
  8786  13BD  00F8               	movwf	??___fldiv
  8787  13BE  0878               	movf	??___fldiv,w
  8788  13BF  00AB               	movwf	___fldiv@bexp
  8789  13C0  1C2B               	btfss	___fldiv@bexp,0
  8790  13C1  2BC4               	goto	l3653
  8791  13C2  17F6               	bsf	___fldiv@b+2,7
  8792  13C3  2BC8               	goto	l707
  8793  13C4                     l3653:	
  8794  13C4  307F               	movlw	127
  8795  13C5  00F8               	movwf	??___fldiv
  8796  13C6  0878               	movf	??___fldiv,w
  8797  13C7  05F6               	andwf	___fldiv@b+2,f
  8798  13C8                     l707:	
  8799  13C8  082B               	movf	___fldiv@bexp,w
  8800  13C9  00F8               	movwf	??___fldiv
  8801  13CA  1003               	clrc
  8802  13CB  0C78               	rrf	??___fldiv,w
  8803  13CC  00F9               	movwf	??___fldiv+1
  8804  13CD  0879               	movf	??___fldiv+1,w
  8805  13CE  00F7               	movwf	___fldiv@b+3
  8806  13CF  2A87               	goto	L9
  8807  13D0                     __end_of___fldiv:	
  8808                           
  8809                           	psect	text25
  8810  1D19                     __ptext25:	
  8811 ;; *************** function _Lcd_Write_String *****************
  8812 ;; Defined at:
  8813 ;;		line 97 in file "./lcd.h"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;  a               2    5[COMMON] PTR unsigned char 
  8816 ;;		 -> buffer(3), STR_5(14), STR_4(6), STR_3(13), 
  8817 ;;		 -> STR_2(10), STR_1(16), 
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;  i               2   10[COMMON] int 
  8820 ;; Return value:  Size  Location     Type
  8821 ;;                  1    wreg      void 
  8822 ;; Registers used:
  8823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8824 ;; Tracked objects:
  8825 ;;		On entry : 0/0
  8826 ;;		On exit  : 0/0
  8827 ;;		Unchanged: 0/0
  8828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8829 ;;      Params:         2       0       0       0       0
  8830 ;;      Locals:         2       0       0       0       0
  8831 ;;      Temps:          3       0       0       0       0
  8832 ;;      Totals:         7       0       0       0       0
  8833 ;;Total ram usage:        7 bytes
  8834 ;; Hardware stack levels used:    1
  8835 ;; Hardware stack levels required when called:    2
  8836 ;; This function calls:
  8837 ;;		_Lcd_Write_Char
  8838 ;; This function is called by:
  8839 ;;		_main
  8840 ;; This function uses a non-reentrant model
  8841 ;;
  8842                           
  8843                           
  8844                           ;psect for function _Lcd_Write_String
  8845  1D19                     _Lcd_Write_String:	
  8846                           
  8847                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  8848                           
  8849                           ;incstack = 0
  8850                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8851  1D19  01FA               	clrf	Lcd_Write_String@i
  8852  1D1A  01FB               	clrf	Lcd_Write_String@i+1
  8853  1D1B                     l3225:	
  8854  1D1B  087A               	movf	Lcd_Write_String@i,w
  8855  1D1C  0775               	addwf	Lcd_Write_String@a,w
  8856  1D1D  00F8               	movwf	??_Lcd_Write_String+1
  8857  1D1E  0876               	movf	Lcd_Write_String@a+1,w
  8858  1D1F  00F7               	movwf	??_Lcd_Write_String
  8859  1D20  1803               	skipnc
  8860  1D21  0AF7               	incf	??_Lcd_Write_String,f
  8861  1D22  1BFA               	btfsc	Lcd_Write_String@i,7
  8862  1D23  03F7               	decf	??_Lcd_Write_String,f
  8863  1D24  0877               	movf	??_Lcd_Write_String,w
  8864  1D25  00F9               	movwf	??_Lcd_Write_String+2
  8865  1D26  0879               	movf	??_Lcd_Write_String+2,w
  8866  1D27  1283               	bcf	3,5	;RP0=0, select bank0
  8867  1D28  1303               	bcf	3,6	;RP1=0, select bank0
  8868  1D29  00FF               	movwf	127
  8869  1D2A  0878               	movf	??_Lcd_Write_String+1,w
  8870  1D2B  0084               	movwf	4
  8871  1D2C  120A  118A  2003  160A  158A  	fcall	stringtab
  8872  1D31  3A00               	xorlw	0
  8873  1D32  1903               	btfsc	3,2
  8874  1D33  0008               	return
  8875                           
  8876                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  8877  1D34  087A               	movf	Lcd_Write_String@i,w
  8878  1D35  0775               	addwf	Lcd_Write_String@a,w
  8879  1D36  00F8               	movwf	??_Lcd_Write_String+1
  8880  1D37  0876               	movf	Lcd_Write_String@a+1,w
  8881  1D38  00F7               	movwf	??_Lcd_Write_String
  8882  1D39  1803               	skipnc
  8883  1D3A  0AF7               	incf	??_Lcd_Write_String,f
  8884  1D3B  1BFA               	btfsc	Lcd_Write_String@i,7
  8885  1D3C  03F7               	decf	??_Lcd_Write_String,f
  8886  1D3D  0877               	movf	??_Lcd_Write_String,w
  8887  1D3E  00F9               	movwf	??_Lcd_Write_String+2
  8888  1D3F  0879               	movf	??_Lcd_Write_String+2,w
  8889  1D40  1283               	bcf	3,5	;RP0=0, select bank0
  8890  1D41  1303               	bcf	3,6	;RP1=0, select bank0
  8891  1D42  00FF               	movwf	127
  8892  1D43  0878               	movf	??_Lcd_Write_String+1,w
  8893  1D44  0084               	movwf	4
  8894  1D45  120A  118A  2003  160A  158A  	fcall	stringtab
  8895  1D4A  160A  158A  24A4  160A  158A  	fcall	_Lcd_Write_Char
  8896  1D4F  3001               	movlw	1
  8897  1D50  07FA               	addwf	Lcd_Write_String@i,f
  8898  1D51  1803               	skipnc
  8899  1D52  0AFB               	incf	Lcd_Write_String@i+1,f
  8900  1D53  3000               	movlw	0
  8901  1D54  07FB               	addwf	Lcd_Write_String@i+1,f
  8902  1D55  2D1B               	goto	l3225
  8903  1D56                     __end_of_Lcd_Write_String:	
  8904                           
  8905                           	psect	text26
  8906  1CA4                     __ptext26:	
  8907 ;; *************** function _Lcd_Write_Char *****************
  8908 ;; Defined at:
  8909 ;;		line 81 in file "./lcd.h"
  8910 ;; Parameters:    Size  Location     Type
  8911 ;;  a               1    wreg     unsigned char 
  8912 ;; Auto vars:     Size  Location     Type
  8913 ;;  a               1    4[COMMON] unsigned char 
  8914 ;;  y               1    3[COMMON] unsigned char 
  8915 ;;  temp            1    2[COMMON] unsigned char 
  8916 ;; Return value:  Size  Location     Type
  8917 ;;                  1    wreg      void 
  8918 ;; Registers used:
  8919 ;;		wreg, status,2, status,0, pclath, cstack
  8920 ;; Tracked objects:
  8921 ;;		On entry : 0/0
  8922 ;;		On exit  : 0/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8925 ;;      Params:         0       0       0       0       0
  8926 ;;      Locals:         3       0       0       0       0
  8927 ;;      Temps:          1       0       0       0       0
  8928 ;;      Totals:         4       0       0       0       0
  8929 ;;Total ram usage:        4 bytes
  8930 ;; Hardware stack levels used:    1
  8931 ;; Hardware stack levels required when called:    1
  8932 ;; This function calls:
  8933 ;;		_Lcd_Port
  8934 ;; This function is called by:
  8935 ;;		_Lcd_Write_String
  8936 ;;		_main
  8937 ;; This function uses a non-reentrant model
  8938 ;;
  8939                           
  8940                           
  8941                           ;psect for function _Lcd_Write_Char
  8942  1CA4                     _Lcd_Write_Char:	
  8943                           
  8944                           ;incstack = 0
  8945                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  8946                           ;Lcd_Write_Char@a stored from wreg
  8947  1CA4  00F4               	movwf	Lcd_Write_Char@a
  8948                           
  8949                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  8950  1CA5  0874               	movf	Lcd_Write_Char@a,w
  8951  1CA6  390F               	andlw	15
  8952  1CA7  00F1               	movwf	??_Lcd_Write_Char
  8953  1CA8  0871               	movf	??_Lcd_Write_Char,w
  8954  1CA9  00F2               	movwf	Lcd_Write_Char@temp
  8955                           
  8956                           ;./lcd.h: 85:    y = a&0xF0;
  8957  1CAA  0874               	movf	Lcd_Write_Char@a,w
  8958  1CAB  39F0               	andlw	240
  8959  1CAC  00F1               	movwf	??_Lcd_Write_Char
  8960  1CAD  0871               	movf	??_Lcd_Write_Char,w
  8961  1CAE  00F3               	movwf	Lcd_Write_Char@y
  8962                           
  8963                           ;./lcd.h: 86:    RB4 = 1;
  8964  1CAF  1283               	bcf	3,5	;RP0=0, select bank0
  8965  1CB0  1303               	bcf	3,6	;RP1=0, select bank0
  8966  1CB1  1606               	bsf	6,4	;volatile
  8967                           
  8968                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  8969  1CB2  0873               	movf	Lcd_Write_Char@y,w
  8970  1CB3  00F1               	movwf	??_Lcd_Write_Char
  8971  1CB4  3004               	movlw	4
  8972  1CB5                     u4375:	
  8973  1CB5  1003               	clrc
  8974  1CB6  0CF1               	rrf	??_Lcd_Write_Char,f
  8975  1CB7  3EFF               	addlw	-1
  8976  1CB8  1D03               	skipz
  8977  1CB9  2CB5               	goto	u4375
  8978  1CBA  0871               	movf	??_Lcd_Write_Char,w
  8979  1CBB  160A  158A  23D8  160A  158A  	fcall	_Lcd_Port
  8980                           
  8981                           ;./lcd.h: 88:    RB5 = 1;
  8982  1CC0  1283               	bcf	3,5	;RP0=0, select bank0
  8983  1CC1  1303               	bcf	3,6	;RP1=0, select bank0
  8984  1CC2  1686               	bsf	6,5	;volatile
  8985                           
  8986                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  8987  1CC3  301A               	movlw	26
  8988  1CC4  00F1               	movwf	??_Lcd_Write_Char
  8989  1CC5                     u6337:	
  8990  1CC5  0BF1               	decfsz	??_Lcd_Write_Char,f
  8991  1CC6  2CC5               	goto	u6337
  8992  1CC7  0000               	nop
  8993                           
  8994                           ;./lcd.h: 90:    RB5 = 0;
  8995  1CC8  1283               	bcf	3,5	;RP0=0, select bank0
  8996  1CC9  1303               	bcf	3,6	;RP1=0, select bank0
  8997  1CCA  1286               	bcf	6,5	;volatile
  8998                           
  8999                           ;./lcd.h: 91:    Lcd_Port(temp);
  9000  1CCB  0872               	movf	Lcd_Write_Char@temp,w
  9001  1CCC  160A  158A  23D8  160A  158A  	fcall	_Lcd_Port
  9002                           
  9003                           ;./lcd.h: 92:    RB5 = 1;
  9004  1CD1  1283               	bcf	3,5	;RP0=0, select bank0
  9005  1CD2  1303               	bcf	3,6	;RP1=0, select bank0
  9006  1CD3  1686               	bsf	6,5	;volatile
  9007                           
  9008                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  9009  1CD4  301A               	movlw	26
  9010  1CD5  00F1               	movwf	??_Lcd_Write_Char
  9011  1CD6                     u6347:	
  9012  1CD6  0BF1               	decfsz	??_Lcd_Write_Char,f
  9013  1CD7  2CD6               	goto	u6347
  9014  1CD8  0000               	nop
  9015                           
  9016                           ;./lcd.h: 94:    RB5 = 0;
  9017  1CD9  1283               	bcf	3,5	;RP0=0, select bank0
  9018  1CDA  1303               	bcf	3,6	;RP1=0, select bank0
  9019  1CDB  1286               	bcf	6,5	;volatile
  9020  1CDC  0008               	return
  9021  1CDD                     __end_of_Lcd_Write_Char:	
  9022                           
  9023                           	psect	text27
  9024  1D9E                     __ptext27:	
  9025 ;; *************** function _Lcd_Set_Cursor *****************
  9026 ;; Defined at:
  9027 ;;		line 41 in file "./lcd.h"
  9028 ;; Parameters:    Size  Location     Type
  9029 ;;  a               1    wreg     unsigned char 
  9030 ;;  b               1    4[COMMON] unsigned char 
  9031 ;; Auto vars:     Size  Location     Type
  9032 ;;  a               1    7[COMMON] unsigned char 
  9033 ;;  temp            1   10[COMMON] unsigned char 
  9034 ;;  y               1    9[COMMON] unsigned char 
  9035 ;;  z               1    8[COMMON] unsigned char 
  9036 ;; Return value:  Size  Location     Type
  9037 ;;                  1    wreg      void 
  9038 ;; Registers used:
  9039 ;;		wreg, status,2, status,0, pclath, cstack
  9040 ;; Tracked objects:
  9041 ;;		On entry : 0/0
  9042 ;;		On exit  : 0/0
  9043 ;;		Unchanged: 0/0
  9044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9045 ;;      Params:         1       0       0       0       0
  9046 ;;      Locals:         4       0       0       0       0
  9047 ;;      Temps:          2       0       0       0       0
  9048 ;;      Totals:         7       0       0       0       0
  9049 ;;Total ram usage:        7 bytes
  9050 ;; Hardware stack levels used:    1
  9051 ;; Hardware stack levels required when called:    2
  9052 ;; This function calls:
  9053 ;;		_Lcd_Cmd
  9054 ;; This function is called by:
  9055 ;;		_main
  9056 ;; This function uses a non-reentrant model
  9057 ;;
  9058                           
  9059                           
  9060                           ;psect for function _Lcd_Set_Cursor
  9061  1D9E                     _Lcd_Set_Cursor:	
  9062                           
  9063                           ;incstack = 0
  9064                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9065                           ;Lcd_Set_Cursor@a stored from wreg
  9066  1D9E  00F7               	movwf	Lcd_Set_Cursor@a
  9067                           
  9068                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  9069  1D9F  0377               	decf	Lcd_Set_Cursor@a,w
  9070  1DA0  1D03               	btfss	3,2
  9071  1DA1  2DC3               	goto	l3199
  9072                           
  9073                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  9074  1DA2  0874               	movf	Lcd_Set_Cursor@b,w
  9075  1DA3  3E7F               	addlw	127
  9076  1DA4  00F5               	movwf	??_Lcd_Set_Cursor
  9077  1DA5  0875               	movf	??_Lcd_Set_Cursor,w
  9078  1DA6  00FA               	movwf	Lcd_Set_Cursor@temp
  9079                           
  9080                           ;./lcd.h: 47:   z = temp>>4;
  9081  1DA7  087A               	movf	Lcd_Set_Cursor@temp,w
  9082  1DA8  00F5               	movwf	??_Lcd_Set_Cursor
  9083  1DA9  3004               	movlw	4
  9084  1DAA                     u5445:	
  9085  1DAA  1003               	clrc
  9086  1DAB  0CF5               	rrf	??_Lcd_Set_Cursor,f
  9087  1DAC  3EFF               	addlw	-1
  9088  1DAD  1D03               	skipz
  9089  1DAE  2DAA               	goto	u5445
  9090  1DAF  0875               	movf	??_Lcd_Set_Cursor,w
  9091  1DB0  00F6               	movwf	??_Lcd_Set_Cursor+1
  9092  1DB1  0876               	movf	??_Lcd_Set_Cursor+1,w
  9093  1DB2  00F8               	movwf	Lcd_Set_Cursor@z
  9094                           
  9095                           ;./lcd.h: 48:   y = temp & 0x0F;
  9096  1DB3  087A               	movf	Lcd_Set_Cursor@temp,w
  9097  1DB4  390F               	andlw	15
  9098  1DB5  00F5               	movwf	??_Lcd_Set_Cursor
  9099  1DB6  0875               	movf	??_Lcd_Set_Cursor,w
  9100  1DB7  00F9               	movwf	Lcd_Set_Cursor@y
  9101                           
  9102                           ;./lcd.h: 49:   Lcd_Cmd(z);
  9103  1DB8  0878               	movf	Lcd_Set_Cursor@z,w
  9104  1DB9  160A  158A  23F2  160A  158A  	fcall	_Lcd_Cmd
  9105                           
  9106                           ;./lcd.h: 50:   Lcd_Cmd(y);
  9107  1DBE  0879               	movf	Lcd_Set_Cursor@y,w
  9108  1DBF  160A  158A  23F2   	fcall	_Lcd_Cmd
  9109                           
  9110                           ;./lcd.h: 51:  }
  9111  1DC2  0008               	return
  9112  1DC3                     l3199:	
  9113  1DC3  3002               	movlw	2
  9114  1DC4  0677               	xorwf	Lcd_Set_Cursor@a,w
  9115  1DC5  1D03               	btfss	3,2
  9116  1DC6  0008               	return
  9117                           
  9118                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  9119  1DC7  0874               	movf	Lcd_Set_Cursor@b,w
  9120  1DC8  3EBF               	addlw	191
  9121  1DC9  00F5               	movwf	??_Lcd_Set_Cursor
  9122  1DCA  0875               	movf	??_Lcd_Set_Cursor,w
  9123  1DCB  00FA               	movwf	Lcd_Set_Cursor@temp
  9124                           
  9125                           ;./lcd.h: 55:   z = temp>>4;
  9126  1DCC  087A               	movf	Lcd_Set_Cursor@temp,w
  9127  1DCD  00F5               	movwf	??_Lcd_Set_Cursor
  9128  1DCE  3004               	movlw	4
  9129  1DCF                     u5465:	
  9130  1DCF  1003               	clrc
  9131  1DD0  0CF5               	rrf	??_Lcd_Set_Cursor,f
  9132  1DD1  3EFF               	addlw	-1
  9133  1DD2  1D03               	skipz
  9134  1DD3  2DCF               	goto	u5465
  9135  1DD4  0875               	movf	??_Lcd_Set_Cursor,w
  9136  1DD5  00F6               	movwf	??_Lcd_Set_Cursor+1
  9137  1DD6  0876               	movf	??_Lcd_Set_Cursor+1,w
  9138  1DD7  00F8               	movwf	Lcd_Set_Cursor@z
  9139                           
  9140                           ;./lcd.h: 56:   y = temp & 0x0F;
  9141  1DD8  087A               	movf	Lcd_Set_Cursor@temp,w
  9142  1DD9  390F               	andlw	15
  9143  1DDA  00F5               	movwf	??_Lcd_Set_Cursor
  9144  1DDB  0875               	movf	??_Lcd_Set_Cursor,w
  9145  1DDC  00F9               	movwf	Lcd_Set_Cursor@y
  9146                           
  9147                           ;./lcd.h: 57:   Lcd_Cmd(z);
  9148  1DDD  0878               	movf	Lcd_Set_Cursor@z,w
  9149  1DDE  160A  158A  23F2  160A  158A  	fcall	_Lcd_Cmd
  9150                           
  9151                           ;./lcd.h: 58:   Lcd_Cmd(y);
  9152  1DE3  0879               	movf	Lcd_Set_Cursor@y,w
  9153  1DE4  160A  158A  23F2   	fcall	_Lcd_Cmd
  9154  1DE7  0008               	return
  9155  1DE8                     __end_of_Lcd_Set_Cursor:	
  9156                           
  9157                           	psect	text28
  9158  1E7F                     __ptext28:	
  9159 ;; *************** function _Lcd_Init *****************
  9160 ;; Defined at:
  9161 ;;		line 62 in file "./lcd.h"
  9162 ;; Parameters:    Size  Location     Type
  9163 ;;		None
  9164 ;; Auto vars:     Size  Location     Type
  9165 ;;		None
  9166 ;; Return value:  Size  Location     Type
  9167 ;;                  1    wreg      void 
  9168 ;; Registers used:
  9169 ;;		wreg, status,2, status,0, pclath, cstack
  9170 ;; Tracked objects:
  9171 ;;		On entry : 0/0
  9172 ;;		On exit  : 0/0
  9173 ;;		Unchanged: 0/0
  9174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9175 ;;      Params:         0       0       0       0       0
  9176 ;;      Locals:         0       0       0       0       0
  9177 ;;      Temps:          2       0       0       0       0
  9178 ;;      Totals:         2       0       0       0       0
  9179 ;;Total ram usage:        2 bytes
  9180 ;; Hardware stack levels used:    1
  9181 ;; Hardware stack levels required when called:    2
  9182 ;; This function calls:
  9183 ;;		_Lcd_Cmd
  9184 ;;		_Lcd_Port
  9185 ;; This function is called by:
  9186 ;;		_main
  9187 ;; This function uses a non-reentrant model
  9188 ;;
  9189                           
  9190                           
  9191                           ;psect for function _Lcd_Init
  9192  1E7F                     _Lcd_Init:	
  9193                           
  9194                           ;./lcd.h: 64:   Lcd_Port(0x00);
  9195                           
  9196                           ;incstack = 0
  9197                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9198  1E7F  3000               	movlw	0
  9199  1E80  160A  158A  23D8  160A  158A  	fcall	_Lcd_Port
  9200                           
  9201                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(8000000/4000.0)));
  9202  1E85  3034               	movlw	52
  9203  1E86  00F5               	movwf	??_Lcd_Init+1
  9204  1E87  30F1               	movlw	241
  9205  1E88  00F4               	movwf	??_Lcd_Init
  9206  1E89                     u6357:	
  9207  1E89  0BF4               	decfsz	??_Lcd_Init,f
  9208  1E8A  2E89               	goto	u6357
  9209  1E8B  0BF5               	decfsz	??_Lcd_Init+1,f
  9210  1E8C  2E89               	goto	u6357
  9211  1E8D  2E8E               	nop2
  9212                           
  9213                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  9214  1E8E  3003               	movlw	3
  9215  1E8F  160A  158A  23F2  160A  158A  	fcall	_Lcd_Cmd
  9216                           
  9217                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(8000000/4000.0)));
  9218  1E94  300D               	movlw	13
  9219  1E95  00F5               	movwf	??_Lcd_Init+1
  9220  1E96  30FB               	movlw	251
  9221  1E97  00F4               	movwf	??_Lcd_Init
  9222  1E98                     u6367:	
  9223  1E98  0BF4               	decfsz	??_Lcd_Init,f
  9224  1E99  2E98               	goto	u6367
  9225  1E9A  0BF5               	decfsz	??_Lcd_Init+1,f
  9226  1E9B  2E98               	goto	u6367
  9227  1E9C  2E9D               	nop2
  9228                           
  9229                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  9230  1E9D  3003               	movlw	3
  9231  1E9E  160A  158A  23F2  160A  158A  	fcall	_Lcd_Cmd
  9232                           
  9233                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(8000000/4000.0)));
  9234  1EA3  301D               	movlw	29
  9235  1EA4  00F5               	movwf	??_Lcd_Init+1
  9236  1EA5  3091               	movlw	145
  9237  1EA6  00F4               	movwf	??_Lcd_Init
  9238  1EA7                     u6377:	
  9239  1EA7  0BF4               	decfsz	??_Lcd_Init,f
  9240  1EA8  2EA7               	goto	u6377
  9241  1EA9  0BF5               	decfsz	??_Lcd_Init+1,f
  9242  1EAA  2EA7               	goto	u6377
  9243                           
  9244                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  9245  1EAB  3003               	movlw	3
  9246  1EAC  160A  158A  23F2  160A  158A  	fcall	_Lcd_Cmd
  9247                           
  9248                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  9249  1EB1  3002               	movlw	2
  9250  1EB2  160A  158A  23F2  160A  158A  	fcall	_Lcd_Cmd
  9251                           
  9252                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  9253  1EB7  3002               	movlw	2
  9254  1EB8  160A  158A  23F2  160A  158A  	fcall	_Lcd_Cmd
  9255                           
  9256                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  9257  1EBD  3008               	movlw	8
  9258  1EBE  160A  158A  23F2  160A  158A  	fcall	_Lcd_Cmd
  9259                           
  9260                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  9261  1EC3  3000               	movlw	0
  9262  1EC4  160A  158A  23F2  160A  158A  	fcall	_Lcd_Cmd
  9263                           
  9264                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  9265  1EC9  300C               	movlw	12
  9266  1ECA  160A  158A  23F2  160A  158A  	fcall	_Lcd_Cmd
  9267                           
  9268                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  9269  1ECF  3000               	movlw	0
  9270  1ED0  160A  158A  23F2  160A  158A  	fcall	_Lcd_Cmd
  9271                           
  9272                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  9273  1ED5  3006               	movlw	6
  9274  1ED6  160A  158A  23F2   	fcall	_Lcd_Cmd
  9275  1ED9  0008               	return
  9276  1EDA                     __end_of_Lcd_Init:	
  9277                           
  9278                           	psect	text29
  9279  00E6                     __ptext29:	
  9280 ;; *************** function _Lcd_Clear *****************
  9281 ;; Defined at:
  9282 ;;		line 35 in file "./lcd.h"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;		None
  9285 ;; Auto vars:     Size  Location     Type
  9286 ;;		None
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  1    wreg      void 
  9289 ;; Registers used:
  9290 ;;		wreg, status,2, status,0, pclath, cstack
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9296 ;;      Params:         0       0       0       0       0
  9297 ;;      Locals:         0       0       0       0       0
  9298 ;;      Temps:          0       0       0       0       0
  9299 ;;      Totals:         0       0       0       0       0
  9300 ;;Total ram usage:        0 bytes
  9301 ;; Hardware stack levels used:    1
  9302 ;; Hardware stack levels required when called:    2
  9303 ;; This function calls:
  9304 ;;		_Lcd_Cmd
  9305 ;; This function is called by:
  9306 ;;		_main
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           
  9311                           ;psect for function _Lcd_Clear
  9312  00E6                     _Lcd_Clear:	
  9313                           
  9314                           ;./lcd.h: 37:  Lcd_Cmd(0);
  9315                           
  9316                           ;incstack = 0
  9317                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9318  00E6  3000               	movlw	0
  9319  00E7  160A  158A  23F2  120A  118A  	fcall	_Lcd_Cmd
  9320                           
  9321                           ;./lcd.h: 38:  Lcd_Cmd(1);
  9322  00EC  3001               	movlw	1
  9323  00ED  160A  158A  23F2   	fcall	_Lcd_Cmd
  9324  00F0  0008               	return
  9325  00F1                     __end_of_Lcd_Clear:	
  9326                           
  9327                           	psect	text30
  9328  1BF2                     __ptext30:	
  9329 ;; *************** function _Lcd_Cmd *****************
  9330 ;; Defined at:
  9331 ;;		line 26 in file "./lcd.h"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;  a               1    wreg     unsigned char 
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;  a               1    3[COMMON] unsigned char 
  9336 ;; Return value:  Size  Location     Type
  9337 ;;                  1    wreg      void 
  9338 ;; Registers used:
  9339 ;;		wreg, status,2, status,0, pclath, cstack
  9340 ;; Tracked objects:
  9341 ;;		On entry : 0/0
  9342 ;;		On exit  : 0/0
  9343 ;;		Unchanged: 0/0
  9344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9345 ;;      Params:         0       0       0       0       0
  9346 ;;      Locals:         1       0       0       0       0
  9347 ;;      Temps:          2       0       0       0       0
  9348 ;;      Totals:         3       0       0       0       0
  9349 ;;Total ram usage:        3 bytes
  9350 ;; Hardware stack levels used:    1
  9351 ;; Hardware stack levels required when called:    1
  9352 ;; This function calls:
  9353 ;;		_Lcd_Port
  9354 ;; This function is called by:
  9355 ;;		_Lcd_Clear
  9356 ;;		_Lcd_Set_Cursor
  9357 ;;		_Lcd_Init
  9358 ;;		_Lcd_Shift_Right
  9359 ;;		_Lcd_Shift_Left
  9360 ;; This function uses a non-reentrant model
  9361 ;;
  9362                           
  9363                           
  9364                           ;psect for function _Lcd_Cmd
  9365  1BF2                     _Lcd_Cmd:	
  9366                           
  9367                           ;incstack = 0
  9368                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9369                           ;Lcd_Cmd@a stored from wreg
  9370  1BF2  00F3               	movwf	Lcd_Cmd@a
  9371                           
  9372                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RB4 = 0;
  9373  1BF3  1283               	bcf	3,5	;RP0=0, select bank0
  9374  1BF4  1303               	bcf	3,6	;RP1=0, select bank0
  9375  1BF5  1206               	bcf	6,4	;volatile
  9376                           
  9377                           ;./lcd.h: 29:  Lcd_Port(a);
  9378  1BF6  0873               	movf	Lcd_Cmd@a,w
  9379  1BF7  160A  158A  23D8  160A  158A  	fcall	_Lcd_Port
  9380                           
  9381                           ;./lcd.h: 30:  RB5 = 1;
  9382  1BFC  1283               	bcf	3,5	;RP0=0, select bank0
  9383  1BFD  1303               	bcf	3,6	;RP1=0, select bank0
  9384  1BFE  1686               	bsf	6,5	;volatile
  9385                           
  9386                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(8000000/4000.0)));
  9387  1BFF  300B               	movlw	11
  9388  1C00  00F2               	movwf	??_Lcd_Cmd+1
  9389  1C01  3062               	movlw	98
  9390  1C02  00F1               	movwf	??_Lcd_Cmd
  9391  1C03                     u6387:	
  9392  1C03  0BF1               	decfsz	??_Lcd_Cmd,f
  9393  1C04  2C03               	goto	u6387
  9394  1C05  0BF2               	decfsz	??_Lcd_Cmd+1,f
  9395  1C06  2C03               	goto	u6387
  9396  1C07  0000               	nop
  9397                           
  9398                           ;./lcd.h: 32:         RB5 = 0;
  9399  1C08  1283               	bcf	3,5	;RP0=0, select bank0
  9400  1C09  1303               	bcf	3,6	;RP1=0, select bank0
  9401  1C0A  1286               	bcf	6,5	;volatile
  9402  1C0B  0008               	return
  9403  1C0C                     __end_of_Lcd_Cmd:	
  9404                           
  9405                           	psect	text31
  9406  1BD8                     __ptext31:	
  9407 ;; *************** function _Lcd_Port *****************
  9408 ;; Defined at:
  9409 ;;		line 4 in file "./lcd.h"
  9410 ;; Parameters:    Size  Location     Type
  9411 ;;  a               1    wreg     unsigned char 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;  a               1    0[COMMON] unsigned char 
  9414 ;; Return value:  Size  Location     Type
  9415 ;;                  1    wreg      void 
  9416 ;; Registers used:
  9417 ;;		wreg
  9418 ;; Tracked objects:
  9419 ;;		On entry : 0/0
  9420 ;;		On exit  : 0/0
  9421 ;;		Unchanged: 0/0
  9422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9423 ;;      Params:         0       0       0       0       0
  9424 ;;      Locals:         1       0       0       0       0
  9425 ;;      Temps:          0       0       0       0       0
  9426 ;;      Totals:         1       0       0       0       0
  9427 ;;Total ram usage:        1 bytes
  9428 ;; Hardware stack levels used:    1
  9429 ;; This function calls:
  9430 ;;		Nothing
  9431 ;; This function is called by:
  9432 ;;		_Lcd_Cmd
  9433 ;;		_Lcd_Init
  9434 ;;		_Lcd_Write_Char
  9435 ;; This function uses a non-reentrant model
  9436 ;;
  9437                           
  9438                           
  9439                           ;psect for function _Lcd_Port
  9440  1BD8                     _Lcd_Port:	
  9441                           
  9442                           ;incstack = 0
  9443                           ; Regs used in _Lcd_Port: [wreg]
  9444                           ;Lcd_Port@a stored from wreg
  9445  1BD8  00F0               	movwf	Lcd_Port@a
  9446                           
  9447                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  9448  1BD9  1C70               	btfss	Lcd_Port@a,0
  9449  1BDA  2BDF               	goto	l43
  9450                           
  9451                           ;./lcd.h: 7:   RB0 = 1;
  9452  1BDB  1283               	bcf	3,5	;RP0=0, select bank0
  9453  1BDC  1303               	bcf	3,6	;RP1=0, select bank0
  9454  1BDD  1406               	bsf	6,0	;volatile
  9455  1BDE  2BE2               	goto	l44
  9456  1BDF                     l43:	
  9457                           ;./lcd.h: 8:  else
  9458                           
  9459                           
  9460                           ;./lcd.h: 9:   RB0 = 0;
  9461  1BDF  1283               	bcf	3,5	;RP0=0, select bank0
  9462  1BE0  1303               	bcf	3,6	;RP1=0, select bank0
  9463  1BE1  1006               	bcf	6,0	;volatile
  9464  1BE2                     l44:	
  9465                           
  9466                           ;./lcd.h: 11:  if(a & 2)
  9467  1BE2  1CF0               	btfss	Lcd_Port@a,1
  9468  1BE3  2BE6               	goto	l45
  9469                           
  9470                           ;./lcd.h: 12:   RB1 = 1;
  9471  1BE4  1486               	bsf	6,1	;volatile
  9472  1BE5  2BE7               	goto	l46
  9473  1BE6                     l45:	
  9474                           ;./lcd.h: 13:  else
  9475                           
  9476                           
  9477                           ;./lcd.h: 14:   RB1 = 0;
  9478  1BE6  1086               	bcf	6,1	;volatile
  9479  1BE7                     l46:	
  9480                           
  9481                           ;./lcd.h: 16:  if(a & 4)
  9482  1BE7  1D70               	btfss	Lcd_Port@a,2
  9483  1BE8  2BEB               	goto	l47
  9484                           
  9485                           ;./lcd.h: 17:   RB2 = 1;
  9486  1BE9  1506               	bsf	6,2	;volatile
  9487  1BEA  2BEC               	goto	l48
  9488  1BEB                     l47:	
  9489                           ;./lcd.h: 18:  else
  9490                           
  9491                           
  9492                           ;./lcd.h: 19:   RB2 = 0;
  9493  1BEB  1106               	bcf	6,2	;volatile
  9494  1BEC                     l48:	
  9495                           
  9496                           ;./lcd.h: 21:  if(a & 8)
  9497  1BEC  1DF0               	btfss	Lcd_Port@a,3
  9498  1BED  2BF0               	goto	l49
  9499                           
  9500                           ;./lcd.h: 22:   RB3 = 1;
  9501  1BEE  1586               	bsf	6,3	;volatile
  9502  1BEF  0008               	return
  9503  1BF0                     l49:	
  9504                           ;./lcd.h: 23:  else
  9505                           
  9506                           
  9507                           ;./lcd.h: 24:   RB3 = 0;
  9508  1BF0  1186               	bcf	6,3	;volatile
  9509  1BF1  0008               	return
  9510  1BF2                     __end_of_Lcd_Port:	
  9511                           
  9512                           	psect	text32
  9513  1BC0                     __ptext32:	
  9514 ;; *************** function _ADC_init *****************
  9515 ;; Defined at:
  9516 ;;		line 18 in file "./ADC.h"
  9517 ;; Parameters:    Size  Location     Type
  9518 ;;  ADCS            1    wreg     unsigned char 
  9519 ;;  CHS             1    0[COMMON] unsigned char 
  9520 ;; Auto vars:     Size  Location     Type
  9521 ;;  ADCS            1    3[COMMON] unsigned char 
  9522 ;;  ADON_select     1    0        unsigned char 
  9523 ;;  CHS_select      1    6[COMMON] unsigned char 
  9524 ;;  ADCS_select     1    0        unsigned char 
  9525 ;;  temp            1    0        unsigned char 
  9526 ;; Return value:  Size  Location     Type
  9527 ;;                  1    wreg      void 
  9528 ;; Registers used:
  9529 ;;		wreg, status,2, status,0
  9530 ;; Tracked objects:
  9531 ;;		On entry : 0/0
  9532 ;;		On exit  : 0/0
  9533 ;;		Unchanged: 0/0
  9534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9535 ;;      Params:         1       0       0       0       0
  9536 ;;      Locals:         6       0       0       0       0
  9537 ;;      Temps:          2       0       0       0       0
  9538 ;;      Totals:         9       0       0       0       0
  9539 ;;Total ram usage:        9 bytes
  9540 ;; Hardware stack levels used:    1
  9541 ;; This function calls:
  9542 ;;		Nothing
  9543 ;; This function is called by:
  9544 ;;		_main
  9545 ;; This function uses a non-reentrant model
  9546 ;;
  9547                           
  9548                           
  9549                           ;psect for function _ADC_init
  9550  1BC0                     _ADC_init:	
  9551                           
  9552                           ;incstack = 0
  9553                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
  9554                           ;ADC_init@ADCS stored from wreg
  9555  1BC0  00F3               	movwf	ADC_init@ADCS
  9556                           
  9557                           ;./ADC.h: 21:  CHS_select = CHS << 2;
  9558  1BC1  0870               	movf	ADC_init@CHS,w
  9559  1BC2  00F1               	movwf	??_ADC_init
  9560  1BC3  3001               	movlw	1
  9561  1BC4                     u5505:	
  9562  1BC4  1003               	clrc
  9563  1BC5  0DF1               	rlf	??_ADC_init,f
  9564  1BC6  3EFF               	addlw	-1
  9565  1BC7  1D03               	skipz
  9566  1BC8  2BC4               	goto	u5505
  9567  1BC9  1003               	clrc
  9568  1BCA  0D71               	rlf	??_ADC_init,w
  9569  1BCB  00F2               	movwf	??_ADC_init+1
  9570  1BCC  0872               	movf	??_ADC_init+1,w
  9571  1BCD  00F6               	movwf	ADC_init@CHS_select
  9572                           
  9573                           ;./ADC.h: 24:  ADCON1bits.ADFM = 0;
  9574  1BCE  1683               	bsf	3,5	;RP0=1, select bank1
  9575  1BCF  1303               	bcf	3,6	;RP1=0, select bank1
  9576  1BD0  139F               	bcf	31,7	;volatile
  9577                           
  9578                           ;./ADC.h: 25:  ADCON1bits.VCFG0 = 0;
  9579  1BD1  121F               	bcf	31,4	;volatile
  9580                           
  9581                           ;./ADC.h: 26:  ADCON1bits.VCFG1 = 0;
  9582  1BD2  129F               	bcf	31,5	;volatile
  9583                           
  9584                           ;./ADC.h: 27:  ADCON0 = temp;
  9585  1BD3  3001               	movlw	1
  9586  1BD4  1283               	bcf	3,5	;RP0=0, select bank0
  9587  1BD5  1303               	bcf	3,6	;RP1=0, select bank0
  9588  1BD6  009F               	movwf	31	;volatile
  9589  1BD7  0008               	return
  9590  1BD8                     __end_of_ADC_init:	
  9591  007E                     btemp	set	126	;btemp
  9592  007E                     wtemp0	set	126


Data Sizes:
    Strings     65
    Constant    144
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     40      47
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_6(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 3
		 -> buffer(BANK1[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> buffer(BANK1[3]), STR_5(CODE[14]), STR_4(CODE[6]), STR_3(CODE[13]), 
		 -> STR_2(CODE[10]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flsub->___xxtofl
    _readADC->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   35276
                                             37 BANK1      3     3      0
                           _ADC_init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___fldiv
                            _readADC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31171
                                              0 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _readADC                                              4     4      0     474
                                              0 BANK0      4     4      0
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     724
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     912
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             9     8      1     236
                                              0 COMMON     9     8      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fldiv
   _readADC
     ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     28      2F       7       58.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      8B      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Feb 21 16:08:22 2019

             ___fldiv@aexp 002C               ___fldiv@bexp 002B                          pc 0002  
             ___fldiv@sign 0024                __CFG_CP$OFF 0000                         l43 1BDF  
                       l44 1BE2                         l45 1BE6                         l46 1BE7  
                       l47 1BEB                         l48 1BEC                         l49 1BF0  
             ___awdiv@sign 0021                         fsr 0004        ___wmul@multiplicand 0072  
      __Umul8_16@word_mpld 0076                        l101 100C                        l300 1C16  
                      l235 01AF                        l510 1FE2                        _ADC 00C8  
                      l281 074F                        l266 055D                        l631 16BC  
                      l528 1165                        l705 13BA                        l633 169A  
                      l481 120F                        l707 13C8                        l491 081A  
                      l627 1623                        l661 17DD                        l486 1D70  
                      l494 0880                        l487 1D8A                        l735 0CAA  
                      l648 1775                        l761 104E                        l683 1275  
                      l669 17F5                        l774 10A4                        l775 10AE  
                      l767 108E                        l789 1C61                        _RB0 0030  
                      _RB1 0031                        _RB2 0032                        _RB3 0033  
                      _RB4 0034                        _RB5 0035               __CFG_CPD$OFF 0000  
                      fsr0 0004                        indf 0000               ___awmod@sign 0076  
             ___flmul@aexp 0036               ___flmul@bexp 0037                _sprintf$939 00AA  
             ___flmul@sign 0031               ___flmul@temp 003C               ___flmul@prod 0038  
             __CFG_LVP$OFF 0000               ___fltol@exp1 005B                       l3005 1C0E  
                     l3103 1FCE                       l3023 1F45                       l3113 1FF1  
                     l3105 1FDE                       l3033 1F7D                       l3025 1F55  
                     l2401 1E0D                       l3123 1E3B                       l2315 1C59  
                     l3037 1F8A                       l3125 1E4B                       l3133 1E76  
                     l2413 1E2E                       l2405 1E1B                       l3301 01CD  
                     l3063 085A                       l2503 1618                       l2343 1EE6  
                     l3225 1D1B                       l3161 1073                       l3049 1D9C  
                     l2513 162D                       l3129 1E69                       l2361 1F07  
                     l2409 1E26                       l3171 1093                       l3155 105D  
                     l3059 0834                       l2507 161B                       l3083 1F9E  
                     l2435 1D09                       l2427 1CE5                       l2451 1C78  
                     l2371 1F28                       l3403 0527                       l3307 01DD  
                     l3149 1046                       l3253 1012                       l2613 1796  
                     l2605 1787                       l2621 179F                       l2429 1CF3  
                     l2453 1C86                       l2461 1C9F                       l2349 1EF1  
                     l3405 0546                       l3341 0306                       l3333 027D  
                     l3317 0223                       l3183 10CB                       l3159 1061  
                     l2631 17AA                       l2551 16A5                       l2543 1669  
                     l3087 1FA7                       l2703 09FC                       l2439 1D14  
                     l2375 1F30                       l2367 1F1D                       l2359 1EF9  
                     l2391 1DF9                       l3423 05D2                       l3271 0124  
                     l3601 1319                       l3169 10A2                       l2553 16A7  
                     l2561 16B6                       l2457 1C94                       l3417 05BF  
                     l3361 03EE                       l3345 0327                       l3265 010E  
                     l3505 00F8                       l3531 1244                       l2627 17A8  
                     l2619 179D                       l2483 15F1                       l2387 1DF2  
                     l3451 0729                       l3371 043C                       l3507 07EE  
                     l3291 0171                       l2653 17F1                       l2485 15F9  
                     l2901 10E5                       l3437 060B                       l3429 05EE  
                     l3357 03D3                       l3349 037B                       l3293 01AB  
                     l3199 1DC3                       l3623 1353                       l3615 131F  
                     l3551 126A                       l3535 1247                       l2479 15EE  
                     l2399 1DFF                       l3471 0775                       l3383 04C2  
                     l3279 015E                       l3641 13A0                       l3617 133C  
                     l3537 124F                       l2649 17ED                       l2577 16EB  
                     l2569 16CA                       l2905 10EE                       l2673 09BF  
                     l3457 073A                       l3393 051D                       l3377 04C0  
                     l3627 1355                       l3571 12A0                       l3555 126D  
                     l2579 16ED                       l2587 16FD                       l2763 0C30  
                     l2755 0BFC                       l2691 09E4                       l2675 09C1  
                     l2843 158F                       l3491 07BF                       l3483 07A2  
                     l3467 075F                       l3395 053F                       l3459 073F  
                     l3299 01B1                       l3653 13C4                       l3637 1387  
                     l3565 1294                       l2597 1767                       l2781 0C7A  
                     l2757 0C19                       l2693 09E6                       l2677 09C9  
                     l2837 14E2                       l3493 07C3                       l3485 07A6  
                     l3477 078B                       l3389 04FE                       l3709 0946  
                     l3591 12EF                       l2927 113E                       l2919 111E  
                     l2767 0C32                       l2695 09EE                       l2953 1188  
                     l2937 1151                       l2777 0C64                       l2865 0E34  
                     l3489 07BB                       l3753 01C5                       l2971 11BF  
                     l2947 1174                       l2939 1161                       l2787 0C93  
                     l2883 0FD5                       l2859 0DA9                       l3499 07D8  
                     l3597 1314                       l2957 1191                       l2877 0F4A  
                     l2869 0E5F                       l3599 12CB                       l2991 120B  
                     l2895 1BBE                       l2979 11E7                       l2989 11FB  
                     l2999 121E                       STR_1 00A3                       STR_2 00CE  
                     STR_3 00C1                       STR_4 00D8                       STR_5 00B3  
                     STR_6 00DE                       u5101 086B                       u5005 1F7E  
                     u3165 1C62                       u4125 0AAC                       u5102 086C  
                     u5103 0871                       u4215 0BCA                       u3255 1EFC  
                     u5104 0872                       u5105 0877                       u3425 1CE8  
                     u5106 0878                       u4235 0BE8                       u4155 0B09  
                     u3515 1C8C                       u3275 1F08                       u3355 1E02  
                     u5045 1D98                       u5205 1FE7                       u4245 0C00  
                     u3445 1CF4                       u3525 1C95                       u4405 144E  
                     u3285 1F14                       u4335 0C4F                       u3455 1D00  
                     u4415 14A3                       u3295 1F1E                       u3375 1E13  
                     u3640 1689                       u5081 0845                       u5145 1FB0  
                     u4345 0C6D                       u4265 0C0B                       u3465 1D0A  
                     u3385 1E1C                       u4505 0D6A                       u5082 0846  
                     u3650 168A                       u6115 12E8                       u5083 084B  
                     u3635 167D                       u4355 0C85                       u4195 0BA5  
                     u4435 1503                       u5084 084C                       u6125 12FD  
                     u5405 10B6                       u5325 106A                       u5085 0851  
                     u5245 1E3F                       u4445 1550                       u4605 0F62  
                     u4525 0DC1                       u5086 0852                       u4375 1CB5  
                     u6135 1307                       u5175 1FCF                       u3495 1C7B  
                     u4455 159A                       u4615 0F9E                       u4535 0DFD  
                     u6136 1308                       u5505 1BC4                       u6137 130D  
                     u5345 1086                       u5265 1E59                       u4625 0FD8  
                     u4545 0E37                       u6138 130E                       u6139 1313  
                     u3835 1789                       u5275 1E6A                       u4395 13F4  
                     u6307 0915                       u5445 1DAA                       u6165 1323  
                     u6085 12D4                       u5365 109B                       u3781 1728  
                     u3773 170F                       u3765 16F1                       u3685 16AB  
                     u4805 11C1                       u4565 0E84                       u4485 0CE3  
                     u6317 093A                       u3790 173C                       u3782 1729  
                     u6255 1372                       u6095 12DD                       u6327 1005  
                     u3935 17C7                       u3791 173D                       u3783 172E  
                     u4815 11D6                       u4735 1152                       u4575 0EC0  
                     u4495 0D1F                       u3792 1742                       u3784 172F  
                     u5465 1DCF                       u6337 1CC5                       u6265 1390  
                     u6185 132E                       u3793 1743                       u3785 1734  
                     u4825 11E9                       u4585 0F0B                       u5705 04C5  
                     u3786 1735                       u6347 1CD6                       u6275 13AB  
                     u4675 1120                       u5715 04F4                       u6357 1E89  
                     u4925 1C17                       u4765 116A                       u4685 1131  
                     u5805 05E8                       u5645 0332                       u6367 1E98  
                     u4935 1C1E                       u4695 113F                       u5655 0386  
                     u6377 1EA7                       u4865 11FC                       u5825 068B  
                     u6297 08DF                       u6387 1C03                       u5835 06F1  
                     u5755 0530                       u4965 1F49                       u5685 03D1  
                     u4895 1214                       u5935 0797                       u5775 0565  
                     u4985 1F57                       u5945 07AD                       u4995 1F6C  
                     u5795 05DB                       u5885 0756                       u5895 076A  
             __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0075                       _main 0893  
                     btemp 007E                       start 0000         ??_Lcd_Write_String 0077  
         __end_of_ADC_init 1BD8              __CFG_IESO$OFF 0000            ___fldiv@new_exp 0025  
          __end_of_Lcd_Cmd 1C0C              __CFG_MCLRE$ON 0000              ___fltol@sign1 005A  
          __end_of___fladd 1800                      ?_main 0070            __end_of___fldiv 13D0  
          __end_of___awdiv 1F35            __end_of___flneg 1BB2              __CFG_WDTE$OFF 0000  
          __end_of___awmod 1E33            __end_of___flmul 0CB7            __end_of___flsub 1C4F  
          __end_of___fltol 2000                      _ANSEL 0188            __end_of___lldiv 1F93  
          ___awdiv@divisor 0077            __end_of___llmod 1E7F            __end_of___lwdiv 1D19  
          __end_of___lwmod 1CA4            ___awdiv@counter 0020    __size_of_Lcd_Set_Cursor 004A  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
           __CFG_FCMEN$OFF 0000            __end_of_readADC 1031            __end_of_dpowers 00A3  
                    _scale 0CB7            __end_of_isdigit 1BC0             __CFG_BOREN$OFF 0000  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 07F3           __end_of_Lcd_Init 1EDA           __end_of_Lcd_Port 1BF2  
          __initialization 07F3               __end_of_main 09A2                     ??_main 00C5  
       __size_of_Lcd_Clear 000B       __size_of__tdiv_to_l_ 00A9                     _ADCON0 001F  
         ___llmod@dividend 0074                     ?_scale 003E                     _ADRESH 001E  
         ___awdiv@dividend 0079                     _ANSELH 0189                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 0039           __end_of___xxtofl 10D4             __CFG_PWRTE$OFF 0000  
         __end_of__powers_ 0047                     ___flge 0800                     ___fleq 1D56  
                ??___fladd 005A                     ___wmul 1C0C                  ??___fldiv 0078  
                ??___awdiv 007B                  ??___flneg 0074                  ??___awmod 0074  
                ??___flmul 002C                  ??___flsub 007E                  ??___fltol 0055  
                ??___lldiv 0078                  ??___llmod 0078                  ??___lwdiv 007A  
                ??___lwmod 0074                     _buffer 00CC                     _fround 13D0  
         ___awdiv@quotient 0022            ___awmod@divisor 0070            ___awmod@counter 0075  
                ??_readADC 0020                  ??_isdigit 0070         __size_of__Umul8_16 0023  
                ?_ADC_init 0070                  ??_sprintf 00A5            Lcd_Set_Cursor@a 0077  
          Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078  
               ___flge@ff1 0070                 ___flge@ff2 0074               ___xxtofl@arg 007A  
             ___xxtofl@exp 0079               ___xxtofl@val 0070                 ___fleq@ff1 0070  
               ___fleq@ff2 0074    __end_of__initialization 07FC                 ___flneg@f1 0070  
        __end_of_Lcd_Clear 00F1                 ___fltol@f1 0051             __pcstackCOMMON 0070  
            __end_of_scale 1000             _Lcd_Set_Cursor 1D9E                 __div_to_l_ 117D  
               ??_ADC_init 0071                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
          __div_to_l_@exp1 0025            __div_to_l_@cntr 0024                    ??_scale 0042  
          __div_to_l_@quot 0020               sprintf@width 00B5                 __pbssBANK1 00C8  
            __div_to_l_@f1 0070              __div_to_l_@f2 0074          __end_of__Umul8_16 1C72  
               __pmaintext 0893                    ?___flge 0070                    ?___fleq 0070  
                  ?___wmul 0070                    ?_fround 003E  __size_of_Lcd_Write_String 003D  
   __end_of_Lcd_Set_Cursor 1DE8                  ?___xxtofl 0070                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                 __stringtab 0003             _Lcd_Write_Char 1CA4  
                  _Lcd_Cmd 1BF2          __end_of__npowers_ 007B            __size_of___flge 0093  
          __size_of___fleq 0048                    ___fladd 15D1                    ___fldiv 1227  
                  ___awdiv 1EDA                    ___flneg 1BA9                    ___awmod 1DE8  
                  ___flmul 09A2                    ___flsub 1C2D                    ___fltol 1F93  
                  ___lldiv 1F35            __size_of___wmul 0021                    ___llmod 1E33  
                  ___lwdiv 1CDD                 _fround$936 004D                 _fround$937 0049  
                  ___lwmod 1C72            __size_of_fround 0201            ?_Lcd_Set_Cursor 0074  
                  __ptext1 00F1                    __ptext2 0CB7                    __ptext3 1DE8  
                  __ptext4 1EDA                    __ptext5 1BB2                    __ptext6 13D0  
                  __ptext7 1C72                    __ptext8 1CDD                    __ptext9 09A2  
                  _readADC 1001                ?__div_to_l_ 0070                    _dpowers 007B  
                  _isdigit 1BB2                 ??___xxtofl 0074           ___awmod@dividend 0072  
                  _sprintf 00F1     __end_of_Lcd_Write_Char 1CDD       end_of_initialization 07FC  
          ___lldiv@divisor 0070            ___lldiv@counter 007D                  Lcd_Port@a 0070  
           __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074              ??__tdiv_to_l_ 0078  
              ___fladd@grs 0065              ___xxtofl@sign 0078                ___fldiv@grs 0027  
              ___fldiv@rem 0020            ?_Lcd_Write_Char 0070          __size_of_ADC_init 0018  
        Lcd_Write_String@a 0075          Lcd_Write_String@i 007A                ___flmul@grs 0032  
             ADC_init@ADCS 0073        __size_of__div_to_l_ 00AA                  _Lcd_Clear 00E6  
           __end_of___flge 0893             __end_of___fleq 1D9E             __end_of___wmul 1C2D  
         _Lcd_Write_String 1D19             __end_of_fround 15D1        start_initialization 07F3  
      __end_of__tdiv_to_l_ 117D          __size_of_Lcd_Init 005B          __size_of_Lcd_Port 001A  
          ___llmod@divisor 0070            ___llmod@counter 0079   __CFG_FOSC$INTRC_NOCLKOUT 0000  
               ?_Lcd_Clear 0070                   ??___flge 0078                   ??___fleq 0078  
                 ??___wmul 0074                  __Umul8_16 1C4F            Lcd_Write_Char@a 0074  
          Lcd_Write_Char@y 0073                   ??_fround 0042              sprintf@tmpval 00B7  
                ___fladd@a 0056                  ___fladd@b 0052                 fround@prec 0051  
                ___fldiv@a 0070                  ___fldiv@b 0074                  ___flmul@a 0028  
                ___flmul@b 0024                  ___flsub@a 0066                  ___flsub@b 006A  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00A3                   ?_Lcd_Cmd 0070                sprintf@flag 00B3  
              sprintf@eexp 00BB                sprintf@fval 00BD                sprintf@prec 00C2  
         ___lwdiv@dividend 0078           ??_Lcd_Set_Cursor 0075                   ?___fladd 0052  
                 ?___fldiv 0070                   ?___awdiv 0077                   ?___flneg 0070  
                 ?___awmod 0070                   ?___flmul 0024                   ?___flsub 0066  
                 ?___fltol 0051                   ?___lldiv 0070                   ?___llmod 0070  
                __npowers_ 0047                 ?__Umul8_16 0070                   ?___lwdiv 0076  
                 ?___lwmod 0070                  __pstrings 0003                __tdiv_to_l_ 10D4  
             ??__div_to_l_ 0078                   ?_readADC 0070                   ?_isdigit 0070  
                _scale$938 004C                   _ADC_init 1BC0           ___lwdiv@quotient 007B  
                 ?_sprintf 00A0             __size_of_scale 0349             ___wmul@product 0074  
                 Lcd_Cmd@a 0073                   _PIR1bits 000C         __end_of__div_to_l_ 1227  
              ??_Lcd_Clear 0074                 _ADCON0bits 001F                __stringbase 0012  
               _ADCON1bits 009F          ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071  
              ADC_init@CHS 0070                   _Lcd_Init 1E7F                   _Lcd_Port 1BD8  
       ADC_init@CHS_select 0076   __end_of_Lcd_Write_String 1D56           __size_of_Lcd_Cmd 001A  
              ??__Umul8_16 0072           __size_of___fladd 022F           __size_of___fldiv 01A9  
         __size_of___awdiv 005B           __size_of___flneg 0009           __size_of___awmod 004B  
         __size_of___flmul 0315           __size_of___flsub 0022           __size_of___fltol 006D  
         __size_of___lldiv 005E           __size_of___llmod 004C           __size_of___lwdiv 003C  
         __size_of___lwmod 0032         __end_of__stringtab 0013                _isdigit$743 0070  
               sprintf@val 00AF           __size_of_readADC 0030                   ___xxtofl 1031  
         __size_of_isdigit 000E            ___lwdiv@divisor 0076            ___lwdiv@counter 007D  
                 __ptext10 1C4F                   __ptext11 10D4                   __ptext20 0800  
                 __ptext12 117D                   __ptext21 1D56                   __ptext13 1C0C  
                 __ptext30 1BF2                   __ptext22 1001                   __ptext14 1E33  
                 __ptext31 1BD8                   __ptext23 1031                   __ptext15 1F35  
                 __ptext32 1BC0                   __ptext24 1227                   __ptext16 1F93  
                 __ptext25 1D19                   __ptext17 1C2D                   __ptext26 1CA4  
                 __ptext18 15D1                   __ptext27 1D9E                   __ptext19 1BA9  
                 __ptext28 1E7F                   __ptext29 00E6          __CFG_BOR4V$BOR40V 0000  
                 __powers_ 0013           __size_of_sprintf 0702              __size_of_main 010F  
                 isdigit@c 0071                   scale@scl 0050         Lcd_Write_Char@temp 0072  
                sprintf@ap 00AE           __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024  
                sprintf@sp 00C1           __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072  
         ___lldiv@dividend 0074                  stringcode 000D                 _OSCCONbits 008F  
       Lcd_Set_Cursor@temp 007A               ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070  
                 sprintf@c 00C4                   sprintf@f 00A0           ___lldiv@quotient 0079  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 000D  
                 stringtab 0003              ___fladd@signs 0062               ___fladd@aexp 0063  
             ___fladd@bexp 0064       __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
